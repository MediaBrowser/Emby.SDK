{
  "doc/index.html": {
    "href": "doc/index.html",
    "title": "Home",
    "keywords": "Emby Developer Documentation There are currently two ways to develop for Emby Server: Accessing Emby Server via REST API REST API Documentation Creating Server PlugIns Plugin Documentation"
  },
  "doc/plugins/Automatic-Type-Discovery.html": {
    "href": "doc/plugins/Automatic-Type-Discovery.html",
    "title": "Automatic Type Discovery",
    "keywords": "Automatic Type Discovery Emby will discover a number of Types in your plugin project automatically, without you having to do anything to wire them up. All you need to do is implement the appropriate interface and it will become part of the system. The following interfaces are available for implementation: IServerEntryPoint If you need to run initialization code at server start-up, implement this interface. The class will remain in memory for the lifetime of the server, so if you need to keep state, this is the place to put it. Keep in mind you can have as many of these as you need, allowing you to break larger plugins into smaller pieces. See also: IServerEntryPoint IService Implement this interface to define your own API endpoint. See Creating Api Endpoints . See also: IService IScheduledTask Implement this interface to create a scheduled task that will appear in the Dashboard's Scheduled Tasks area. You'll define the default triggers that cause the task to run. The user will then be able to re-configure as desired, as well as run the task on demand. See also: IScheduledTask IIntroProvider Intros are played before video files. Implement this interface to define your own provider for intro files. See also: IIntroProvider IPluginConfigurationPage If your plugin requires an html configuration page within the Dashboard, implement this interface. A full guide for this is coming soon. See also: IPluginConfigurationPage IImageEnhancer This interface will allow you to intercept image delivery through the api, if you wish to draw content over or otherwise enhance an image before it's written to the response stream. See also: IImageEnhancer IItemResolver Implement IItemResolver to define your own custom media types. See also: IItemResolver IMetadataSaver Implement this interface to add new metadata saving formats (xbmc, plex, etc). See also: IMetadataSaver ILibraryPostScanTask Implement this interface to add operations that execute before and after library scans. See also: ILibraryPostScanTask"
  },
  "doc/plugins/Creating-Api-Endpoints.html": {
    "href": "doc/plugins/Creating-Api-Endpoints.html",
    "title": "Creating Api Endpoints",
    "keywords": "Creating Api Endpoints Plugins are able to create their own api endpoints, whether it be for their own consumption, or for the purposes of publishing them to UI developers. This will demonstrate how to build an api endpoint. Create the Service Create a class that implements MediaBrowser.Model.Services.IService . You will then have to create request dto classes that describe the request. The following is a complete service example: [Route(\"/Weather\", \"GET\")] [Api(Description = \"Gets weather information for a given location\")] public class GetWeather : IReturn<WeatherInfo> { public string Location { get; set; } } public class WeatherService : IService { public object Get(GetWeather request) { var result = GetWeatherInfo(); return result; } } WeatherService is the service that processes the request. WeatherInfo is the dto that describes the parameters. The route attribute describes the url and http method. The Get method should return an object that is one of the following: object to be serialized string (plain text) byte array (to be written to the response stream) stream (to be copied to the response stream) Other http methods are supported - Post, Put, Delete, etc. The Api and ApiMember attributes, as well as IReturn are all optional. They only serve to improve documentation. Advanced Options If you need http compression, response caching, or the ability to set custom response headers, extend your Service to implement IHasResultFactory . This will add a ResultFactory property of type IHttpResultFactory to your service. The following are some of the methods available: GetResult Gets a result object with the ability to specify a content type and response headers. GetStaticFileResult Use this so serve a file statically from the file system."
  },
  "doc/plugins/Dependency-Injection.html": {
    "href": "doc/plugins/Dependency-Injection.html",
    "title": "Dependency Injection",
    "keywords": "Dependency Injection While you're building your classes for automatic discovery , many of these classes will require access to the core's internal services. If your class depends on one of our services, all you have to do is add it to your constructor and an instance will be passed in that you can work with. The following services are available for insertion into your constructors: ILogManager Create your own named logger. Log entries will appear in the application log file and will be prefixed with the name of the logger for ease of reading. IServerApplicationPaths Contains a list of various application data paths IServerConfigurationManager Read and write server configuration data (and the above app paths) IJsonSerializer Get access to the core's json serializer. IXmlSerializer Get access to the core's xml serializer. ITaskManager Queue, execute and cancel scheduled tasks ILibraryManager Get information about the media library in a user-less fashion IUserManager Get information about each user as well as their customized media libraries ILocalizationManager Get lists of countries, localized display strings, parental ratings, etc. INetworkManager Get information about the user's computer network IZipClient Unzip files and streams IDtoService Create dto's from domain objects INotificationManager Add entries to a user's notifications inbox"
  },
  "doc/plugins/Development-Policy.html": {
    "href": "doc/plugins/Development-Policy.html",
    "title": "Development Policy",
    "keywords": "Development Policy Before beginning any development please be aware of the following policy for any code included in any plug-ins presented in our plug-in catalog. We hope to provide an open environment (via plug-ins) for contributing valuable functionality to the Emby universe and encourage all plug-in developers as long as they follow one simple rule: Warning No plug-in shall directly violate or otherwise circumvent or cause the Emby product as a whole to violate or circumvent any laws as governed by the United States of America. This includes but is not limited to: Directly violating the Terms of Use or Terms of Service of any source of data Using 'web scraping' techniques to obtain data from a web site unless that site grants consent to use that method of data gathering or the site contains public-domain information only. Including or otherwise distributing code or libraries in a manner that violates the license terms of those particular libraries or the license terms of Emby. Any plug-in that violates this rule will be removed from the plug-in catalog without notice. We appreciate your cooperation and, as a software developer, you should fully embrace this policy as it also protects you against others freely distributing the results of your hard work. Examples of prohibited content The following are some examples of practices that we know would violate this policy. Scraping data from a site such as IMDb.com. This data is considered a valuable asset to IMDb and they charge handsomely for it. It is against the law to obtain and re-distribute it without their consent. Downloading videos directly from YouTube. YouTube does have a public API that will allow 3rd parties to present their data. However, it is expressly against their Terms of Service for you to directly download and store their videos or play them via any means other than a sanctioned YouTube player. Thank you for adhering to this policy and thank you for your contribution to Emby!"
  },
  "doc/plugins/Getting-your-plug-in-in-the-catalog.html": {
    "href": "doc/plugins/Getting-your-plug-in-in-the-catalog.html",
    "title": "Getting your Plugin in the catalog",
    "keywords": "Getting your Plugin in the catalog After you have developed a plug-in for Emby, the next step is to get it into the catalog so users can install it. Please be sure your plug-in adheres to our Development Policy before placing it in the catalog. It will be removed by an administrator if it violates this policy. First, request a developer id from the Emby team by sending a PM to ebr or posting in the dev forum that you are ready to publish. Once you have your credentials you'll need to go to: https://plugins.emby.tv/admin/packages.html and login with the user and password you were provided. Then go to the \"Packages\" area. This is where you will define your plug-ins (as a user-installed package) and upload versions of them. Create a New Package to define your plug-in and fill in the fields appropriately. Name - The name that will appear for this plug-in in the catalog GUID - The Assembly unique id. Paste this from your assemblyinfo.cs file. It is used to identify this item for updates Short Description - A one line description of the plug-in Overview - A full description of the plug-in and its features. This can be html. Website - A link to a developer website for more information. Thumb Image - This is the image that will be shown in the main catalog page. It should be a 16x9 tile. Preview Image - This is the image that will show at the top of the catalog detail page for this item. It can be a screen shot or other graphic. Target System - Select which system this plug-in is installed on (Server, MB Classic or MB Theater). Package Type - For plug-ins this should be \"Userinstalled\". Cagegory - Select the category of plug-in this is. Tile Color - This is the color for the background of the tile on the catalog page (behind the text). Target File Name - This is the name of the file that will be placed in the plugins folder on the target system when it is installed by the user. It should be the name of your dll assembly including .dll. Premium Plug-in - Check this if users will be required to register this plug-in (pay for it). All premium plug-ins will automatically have a 14-day free trial after first install. Feature ID - Enter the string that you will use to validate against for registration. Price - The price for registering this plug-in. This full amount will be directed to your PayPal account. Registration Information - Optionally enter any additional information you would like to appear in the registration section on the plug-in detail page. Once your package is defined, you can create and upload versions for them. Expand the package by clicking the '>' next to it and click New Version. Fill out the fields in this for with the appropriate information: Version - This is the full version number of this version of the plug-in. Enter the exact version that will be reported from your dll via AssemblyInfo. Version Class - This is the update class of this version. You can release different versions of your plug-ins as Dev, Beta or release classes. Users will only see the ones for the level which they have set for this plug-in. Description - Enter details about this particular version. Short bullets on what has changed or been fixed. This information will display in the change log area of the catalog page. Required Version - Optionally enter a version number for the minimum supported version of the target system. If this is a server plug-in, enter the server version, if for MBC, then the MBC version, etc. The system will fill this in automatically with the latest version of the target system but you can change it. It can also be a partial version to allow matches for anything above that partial. e.g. 3.0.4890. Then select the dll file from your local computer and save. This will upload the dll and make it available in the plug-in catalog."
  },
  "doc/plugins/index.html": {
    "href": "doc/plugins/index.html",
    "title": "How to build a Server Plugin",
    "keywords": "How to build a Server Plugin Note Please see our Development Policy before beginning development. First install Emby Server, and get it up and running. Install Visual Studio 2017 or later along with the .NET Core SDK. Overview Emby Server runs on two different runtimes: .NET Core 2.0+, and Mono. The following instructions will show you how to build one plugin that will run on all platforms supported by Emby Server. Getting Started The easiest and recommened way is to use one of the Plugin Templates which are provided in the Emby SDK . For example, with the Simple Plugin ) template, follow these steps: Open the EmbySimplePlugin.sln solution in Visual Studio In the Plugin class, replace all the indicated values with your own Rename the EmbySimplePlugin project in Visual Studio to a name of your choosing. This will also change the file name Adjust the namespace in the Plugin class accordingl Create a Post-Build Event Right click the project -> Properties. Create a post-build event that will copy the assembly to the server's plugins directory. For example: xcopy \"$(TargetPath)\" \"%AppData%\\Emby-Server\\Plugins\\\" /y Test the Plugin Shutdown the server, rebuild your solution, and restart the server. At this point you should see your plugin in the Dashboard's Plugins menu. Add Functionality To add real functionality to your plugin, you will need an entrypoint that can initialize and accept the various dependencies you may need in order to interact with the Emby environment. This is done by creating a class that implements the IServerEntryPoint interface. See Automatic Type Discovery for this and other types you can include in your plug-in. Its constructor can accept any number of injected dependencies - depending on what your plugin needs to access. See also: Dependency Injection . If your plugin will be a premium plugin, see IRequiresRegistration in Other Interfaces . In addition, use these Emby interfaces when applicable: IFileSystem IHttpClient INetworkManager IProcessFactory IZipClient Debugging The quickest way to test code changes is to work without the debugger. If you do this, you can leave the server running at all times. Simply use the Rebuild command on your plugin project, and right click the server tray -> Restart Server. If that option is not visible you'll need to enable developer tools in the Dashboard under Advanced."
  },
  "doc/plugins/Other-Interfaces.html": {
    "href": "doc/plugins/Other-Interfaces.html",
    "title": "Other Interfaces",
    "keywords": "Other Interfaces These are other interfaces that you can implement in your plug-in classes to implement their respective functionality. IRequiresRegistration Implement this interface on your server entry point or any other class that needs to validate registration information. There is one method in this interface: Task LoadRegistrationInfoAsync() See also: IRequiresRegistration This method should be implemented to load a MBRegistrationRecord by using the PluginSecurityManager.GetRegistrationStatus call with the feature id that is to be validated. You should always re-load the registration record whenever this method is invoked - even if the information was previously loaded - as this method will be called whenever the environment has changed such that registration should be re-evaluated. Example public async Task LoadRegistrationInfoAsync() { var reg = await PluginSecurityManager.GetRegistrationStatus(\"CoverArt4\", \"CoverArt3\"); }"
  },
  "doc/restapi/API-Key-Authentication.html": {
    "href": "doc/restapi/API-Key-Authentication.html",
    "title": "API-Key Authentication",
    "keywords": "API-Key Authentication Note This page describes API Key Authentication. Please also see User Authentication Managing API Keys API Key Authentication allows accessing the Emby Server API by using a static token. Authentication via API key is the right choice for integration scenarios with other applications, servers or services that are not tied to a certain user's context. To grant access to an external service or server application you will need to create an API Key first. Warning It is highly recommended to create separate API keys for each systemn you are granting access to your server. This will allow you to revoke a single access permissions without affecting the others. Creating an API Key To create an API key please follow these steps: You need to have access to a running installation of Emby Server as an administrator Open the Server Dashboard This is the web UI where you have performed all configuration of Emby Server On the main dashboard page scroll down to the bottom of menu pane on the left Under Expert click Advanced On the top bar click Security Click Add and in the following dialog, enter a name for the API key for easy identification Authenticating via API Key The API key must be included in every request made that requires authentication. There are two different ways for specifying the API in an http request Http Request Header Send the API key string in an http request heaser named X-Emby-Token . Query Parameter An even easier method is to transmit the API key as a query string parameter name api_key . Example: http://localhost:8096/emby/System/Info?api_key=123456789987654321"
  },
  "doc/restapi/Audio-Streaming.html": {
    "href": "doc/restapi/Audio-Streaming.html",
    "title": "Audio Streaming",
    "keywords": "Audio Streaming Emby has a single Universal Audio API Endpoint that supports both direct play as well as transcoding. You specify your supported formats as part of the URL, and the server will decide between direct play and transcoding. The following are the available params: UserId (required) DeviceId (required) api_key (required) MaxStreamingBitrate (required) Container = comma delimited list of supported audio containers MaxSampleRate = max supported audio sample rate, e.g. 48000 PlaySessionId (required) this should be generated client-side and is intended to be a unique value per stream URL TranscodingProtocol = hls or omit this for progressive (see notes below). TranscodingContainer = hls audio transcoding supports ts, aac or mp3. AudioCodec = The audio codec to use when transcoding. EnableRedirection = true/false. Allow redirects to external stream URL's EnableRemoteMedia = true/false. If true, all external domains will be allowed with the EnableRedirection option. If false, only cloud synced domains will be allowed. Below is a sample URL: /Audio/{Id}/universal?UserId=xxx&DeviceId=xxx&MaxStreamingBitrate=140000000&Container=opus,mp3,aac,m4a,flac,webma,webm,wav,ogg,aac,mp3,mpa,wav,wma,mp2,ogg,oga,webma,ape,opus,flac,m4a&TranscodingContainer=ts&TranscodingProtocol=hls&AudioCodec=aac&MaxSampleRate=48000&PlaySessionId=1496213367201 Notes On Transcoding It is highly recommended that client players support HLS audio. HLS audio will guarantee that seeking is always client-side. Using progressive transcoding will result in much more complicated seeking. Remote Media You can indicate support for redirects using the EnableRedirection param. Additionally you can indicate support for remote media using EnableRemoteMedia . Here is how they work: If EnableRedirection = true and EnableRemoteMedia = true, then both remote media (IPTV) and cloud synced media will be allowed for http redirects. If EnableRedirection = true and EnableRemoteMedia = false, then remote media (IPTV) will not be allowed but cloud synced media will be allowed for http redirects. If EnableRedirection = false then neither will be allowed. Legacy API The base audio url is /Audio/{Id}/stream . Some players will have better results when the url has an audio file extension, so we also provide several aliases to account for that: /Audio/{Id}/stream /Audio/{Id}/stream.{Container} Examples: /Audio/{Id}/stream.mp3 /Audio/{Id}/stream.aac /Audio/{Id}/stream.ogg /Audio/{Id}/stream.oga /Audio/{Id}/stream.webma /Audio/{Id}/stream.wma /Audio/{Id}/stream.flac If using a url with an extension, the extension should be based upon the output format , rather than the input. Generally, it is recommend to use a url with a file extension that matches the format you wish to encode to as many players will perform better seeing the file extension in the url. Item Id and MediaSourceId are the only required parameters. All of the optional parameters can be viewed using the swagger documentation. Generally, you will also want to supply: AudioCodec AudioBitrate MaxAudioChannels AudioSampleRate Direct Stream To direct stream an audio file, simply use the static=true parameter. Seeking When direct streaming, the file will be served statically and client-side seeking will be possible. When transcoding, this will not be possible. In order to seek you'll have to stop the stream and start a new one using the StartTimeTicks parameter."
  },
  "doc/restapi/Browsing-the-Library.html": {
    "href": "doc/restapi/Browsing-the-Library.html",
    "title": "Browsing the Library",
    "keywords": "Browsing the Library This page will detail how to retrieve items for display and browsing purposes. Displaying a Folder After authentication, the next step is generally to start displaying the user's library. User Views User views represent the user's top level categories, and can be retrieved from: /Users/{UserId}/Views The items from a view can then be retrieved generically using: /Users/{UserId}/Items?parentId={ViewId} All views support this style of generic navigation. Each item will have several properties to determine how to display it, e.g. IsFolder (true/false), MediaType (Audio/Video/Photo/Book/Game) and Type . See Item-Information Customized Presentations While it's possible to display user views using generic navigation, often you'll want to customize based on the view type. Each view has a CollectionType property to indicate the view type. Available values are: movies tvshows music games books musicvideos homevideos livetv channels If CollectionType is null, it indicates a mixed movie/tv folder that should be displayed generically. A customized view can then be built by retrieving data pertaining to that view, e.g. latest movies, all movies, upcoming episodes, etc. Displaying a customized view of live tv or channels will require use of the specific api's for those features. Sorting Use the SortBy param to supply the fields to sort on. This supports multiple sort orders using a comma delimited list. Use SortOrder to specify ascending or descending order. The following example sorts by Artist, and then Album, in Ascending order: http://localhost:8096/emby/Users/e8837bc1ad67520e8cd2f629e3155721/Items?ParentId=20aef3be-ebda-f0d4-0096-8d179783e918&SortBy=Artist,Album&SortOrder=Ascending Multiple sort orders are supported. For example, let's say you'd like to sort albums by release date descending, then by sort name ascending. Your params would look like: SortBy=ProductionYear,PremiereDate,SortName&SortOrder=Descending,Descending,Ascending Fields When you request a single item using the /Users/{UserId}/Items/{Id} api, you will get back the entire item. When requesting lists of items, the data coming back will be much smaller in order to make it easier to retrieve large result sets. If you want to add additional fields to the items, use the fields param, which is a comma-delimited list of fields to include in the output. See the swagger documentation for a full listing of available fields. Here is an example which adds SortName and PrimaryImageAspectRatio: GET http://localhost:8096/emby/Users/e8837bc1ad67520e8cd2f629e3155721/Items?ParentId=20aef3be-ebda-f0d4-0096-8d179783e918&Fields=PrimaryImageAspectRatio,SortName Query-based views If you would like to present virtual views based on queries, the api will allow you to do that. Use the Recursive=true param to search recursively. Here are a few examples: Display resumeable items, limit to 20 results and sort by date played http://localhost:8096/emby/Users/e8837bc1ad67520e8cd2f629e3155721/Items?Limit=20&Recursive=true&SortBy=DatePlayed&SortOrder=Descending&Filters=IsResumable Display all Movies http://localhost:8096/emby/Users/e8837bc1ad67520e8cd2f629e3155721/Items?Recursive=true&IncludeItemTypes=Movie Display all Episodes http://localhost:8096/emby/Users/e8837bc1ad67520e8cd2f629e3155721/Items?Recursive=true&IncludeItemTypes=Episode"
  },
  "doc/restapi/Emby-Connect.html": {
    "href": "doc/restapi/Emby-Connect.html",
    "title": "Emby Connect",
    "keywords": "Emby Connect Emby Connect is an optional service designed to make multi-server connectivity easier. For this reason, we recommend that you first implement multi-server switching in your app via manual address entry, and then later supplement that with Emby Connect. The best way to manage multi-server connectivity is to always have a ServerId in context, from which you can use to retrieve your saved server information. In other words, avoid a single global value related to a logged in server, because a user can login to multiple servers simultaneously. Login Emby Connect has two login methods: Pin code sign in (designed for TV apps) Traditional username/password sign in (designed for mobile, tablet and desktop apps) Login with username & password Send a POST to https://connect.emby.media/service/user/authenticate The content type should be application/json, and here is an example structure: { nameOrEmail: username, rawpw: password } The request headers should contain the following: X-Application header, formatted as AppName/AppVersion A successful response will contain application/json content, and include the following properties: ConnectAccessToken ConnectUserId Get a list of servers for a user Send a GET to https://connect.emby.media/service/servers?userId={ConnectUserId} The request headers should contain the following: X-Application (discussed above) X-Connect-UserToken (the ConnectUserToken value) You'll receive a json response of an array of servers, with each containing the following: AccessKey SystemId Name Url (Remote access url) LocalAddress (local access url) When using this information to connect to a server, you'll need to send a GET to the Emby Server to exchange the AccessKey for a local AccessToken that can be used for other api endpoints on that Emby Server. This process must be done each time you connect to the Emby Server. In other words, you'll need to persists the original AccessKey sent back by Emby Connect. To perform the exchange, send a GET to the Emby Server: GET /Connect/Exchange?format=json&ConnectUserId={ConnectUserId} The headers should contain: X-Emby-Token - the AccessKey from EmbyConnect X-Emby-Authorization - See Authorization Request Header You'll receive a json response containing credentials local to the particular Emby Server: LocalUserId AccessToken These credentials can then be used to make requests to other endpoints on that server."
  },
  "doc/restapi/Filtering.html": {
    "href": "doc/restapi/Filtering.html",
    "title": "Filtering",
    "keywords": "Filtering There is an api endpoint that you can use to return a fitler object containing the list of available filters. GET /Items/Filters Returns an object with: Genres Tags OfficialRatings Years It accepts as params: UserId ParentId IncludeItemTypes MediaTypes So for example, if you're showing a movie list, you can pass in the same params that you're using to retrieve the movies, and it will return a filter object containing lists of filters that can be displayed."
  },
  "doc/restapi/GPU-Transcoding.html": {
    "href": "doc/restapi/GPU-Transcoding.html",
    "title": "GPU Transcoding",
    "keywords": "GPU Transcoding See Transcoding KB Article ."
  },
  "doc/restapi/Http-Live-Streaming.html": {
    "href": "doc/restapi/Http-Live-Streaming.html",
    "title": "Http Live Streaming",
    "keywords": "Http Live Streaming Emby supports the HTTP Live Streaming protocol, also known as HLS. The url is: /Videos/{Id}/master.m3u8 The required paramaters are: Id (in path) MediaSourceId DeviceId For a complete list of parameters, see getVideosByIdMasterM3u8 All of the optional parameters can be viewed using the swagger documentation. AudioCodec AudioBitrate MaxAudioChannels AudioSampleRate VideoCodec VideoBitrate MaxWidth MaxHeight Profile (h264 profile) Level AudioStreamIndex SubtitleStreamIndex (if burning into the video) Post Playback After playback is complete, it is necessary to inform the server to stop any related HLS transcoding. This is accomplished via an HTTP DELETE to: /Videos/ActiveEncodings?DeviceId=xxx External Documentation HLS Documentation and Guides at Apple IETF Internet Draft for HTTP Live Streaming"
  },
  "doc/restapi/Images.html": {
    "href": "doc/restapi/Images.html",
    "title": "Images",
    "keywords": "Images Image values are added to response objects to indicate what images an item has. For example, on the User object, there is a property called PrimaryImageTag. If this has a value, it means the user has a primary image. An image should only downloaded if the object indicates the presence of an image. For example, you will receive a 404 error if you attempt to download a logo image for an item that doesn't have one. Downloading images The url required to download images will vary depending on what kind of item you're downloading for. For example, for users, the url's are /Users/{Id}/Images/{Type} and /Users/{Id}/Images/{Type}/{Index} For media items, it's /Items/{Id}/Images/{Type} as well as /Items/{Id}/Images/{Type}/{Index} Below are the required image parameters: Type This is the type of image. These are the available types: Primary Art Backdrop Banner Logo Thumb Disc Box Screenshot Menu Chapter Index If downloading a backdrop, screenshot, or chapter image, you will need to specify the index because the item could contain more than one. The item object will contain count properties indicating how many of each are available. Aside from item Id, the image type is the only other required parameter. Index is required depending on the type of image requested. Below are the available optional parameters: Width, Height, MaxWidth, MaxHeight Users will often download high resolution images. Steps should be taken to ensure that you are not retrieving these at full size. You can use any combination of these values. For example, if you specify a width of 80, you'll get the image at a fixed width of 80 and allow the height to vary, preserving aspect ratio. Specify both width and height to force an exact size. Specify MaxWidth and/or MaxHeight to create a size limit. Most image types generally have a predictable aspect ratio. Primary is the one exception where it can vary. In order to combat this, we include a PrimaryImageAspectRatio property on items. A typical scenario might be to create an average AR for all the items in the list, and then force all images to that value. Tag The image tag on the item object also doubles as a caching value. If you add this parameter back onto your image url, you will receive strong http caching headers. This allows you to cache the image forever, unconditionally, based on the url. If the image changes, the tag will also change, thus creating a whole new url. Note: It is recommended to cache based on the url after the hostname and port . This will allow the same cache to be utilized whether connected internally (lan/wifi) or externally (mobile). This is an optional parameter. You do not have to specify the tag, but without it you will only receive conditional http response caching. Image Inheritance We allow some images to be inherited from parent items, namely backdrops and logos. If an item does not have backdrops or logos, there are properties that will indicate what parent images are available for inheritance: ParentLogoItemId - The id of an ancestor item with a logo ParentLogoImageTag - The cache tag of the ancestor logo image ParentArtItemId - The id of an ancestor item with an art image ParentArtImageTag - The cache tag of the ancestor art image ParentBackdropItemId - The id of an ancestor item with backdrop images ParentBackdropImageTags - The cache tags of the ancestor backdrop images ParentThumbItemId - The id of an ancestor item with a thumb image ParentThumbImageTag - The cache tags of the ancestor thumb image Image Format By default, images are returned in the original format, which generally will be either png or jpg. If the user has image enhancer plugins installed such as Cover Art, the default output format will be forced to png. If a specific output format is needed, this can be controlled using the format param . Available values are: bmp gif jpp png If forcing to jpg it's possible that some transparency will be lost. It's recommended to apply a background color of your choosing using the backgroundColor param , which accepts html color values, such as #000000 or red. Adding a Played Indicator A played indicator overlay can be added onto the image using AddPlayedIndicator=true Adding a Percent Played Indicator A percent played overlay can be added onto the image using PercentPlayed=47"
  },
  "doc/restapi/index.html": {
    "href": "doc/restapi/index.html",
    "title": "Home",
    "keywords": "REST API Documentation Accessing the API The Emby Server API can be reached via: http[s]://hostname:port/emby/{apipath} Request and Respose Types The Emby Server API supports both JSON and XML formatted http requests and responses. The format type can be controller via the http \"Content-Type\" header. Appropriate values are \"application/json\" or \"application/xml\" Authentication There are two different ways to authenticate with Emby Server: User Authentication With user authentication, you can log in to Emby Server by transmitting a username and a password. Typical use of this method is the development of client applications that will be interactively operated by an Emby user. API Key Authentication This authentication method allows accessing the Emby Server API by using a static token. Authentication via API key is the right choice for integration scenarios with other applications, servers or services that are not tied to a certain user's context. Emby API Browser Our developer wiki should be your first stop for information about developing with Emby server and is primarily aimed at getting your started. For all the details about operations that can be performed, their parameters, request and return types, you need to visit the Emby API Browser . Depending on whether you have access to a running Emby server or not, you can choose between two variants. Emby API Browser (Static Version) Explore the Emby API when you don't have access to a running Emby server. Allows browsing through all details but without interaction. Emby API Browser (Interactive Tryout) With this variant you can not only view all API definitions - you will also be able to interactively perform calls against the API and view the results. This variant must be launched from the Server Dashboard of a running Emby Server installation. Launching the Interactive API Browser To launch the interactive version of the API Browser please follow these steps: You need to have access to a running installation of Emby Server as an administrator Open the Server Dashboard This is the web UI where you have performed all configuration of Emby Server On the main dashboard page scroll down to the bottom of the right area (you hit the right page when the URL is ending with '.../web/dashboard.html' ) On the bottom you will see a number of links Click on Api , and the API Browser will open in a new window. API Client Libraries The Emby SDK includes a number of API clients in various programming languages: REST API Clients Sample implementations with source codes for C#, Java, JavaScript, Python and other languaes"
  },
  "doc/restapi/Item-Information.html": {
    "href": "doc/restapi/Item-Information.html",
    "title": "Item Information",
    "keywords": "Item Information Library items have a number of interesting properties. Among these are, but not limited to: Name Id CriticRating CriticRatingSummary DateCreated GameSystem GenreItems - Request this field via Genres HomePageUrl IsHD Language Overview ParentId Path People Players ProductionYear RunTimeTicks SeasonCount SortName Studios Taglines Tags Type See also: BaseItemDto When retrieving a single item, the entire object is returned. When querying for items, the return data will be stripped to include only a minimal amount of information. When querying, you can configure the fields that are returned in the output. See browsing the Library. Here are some other properties along with their descriptions: AirDays, AirTime, Status These are applicable to Series only and will give you information about when episodes air. Album, AlbumArtist, Artists, AlbumId, AlbumPrimaryImageTag These are applicable to audio files and music albums only. AspectRatio This is generally the original aspect ratio that the video was filmed in. The actual aspect ratio of the user's video can be found in the MediaStreams property. BackdropImageTags This will tell you how many backdrop images are available for an item. See images . Chapters This is applicable to videos only. This will give you the list of chapter markers contained within the video. ChildCount For folders, this indicates the number of child items available. CommunityRating This is the Imdb, Tmdb, or Tvdb rating of the item. At this time we do not have the ability to identify the source. CumulativeRunTimeTicks For folders, this represents the cumulative runtime. EndDate This is the date an item ended. For Persons this represents death date. For series that have ended, this is the air date of the final episode. GenreItems This is a list of Name/Id pairs of genres. To request this field, request Genres. ImageTags This will tell you what images are available for an item. See images . IndexNumber This serves different purposes depending on the type of item. For episodes this is the episode number. For seasons, this is the season number. For audio files, this is the track number. IndexNumberEnd Denotes the ending index number, in case a file spans multiple episodes. IsFolder This will tell you if the item is a media item, or if it's a folder containing other items. When navigating to an item, this will allow you to determine what type of display to present. MediaType If an item is a media item, this will tell you what kind of media it is so that you can customize your display. The core has three known media types: Audio, Video, Game. Plugins may provide others. Type This will tell you the exact object type of the item, in case you would like to customize further. For example, the Video media type has several implementations - Movie, Episode, Trailer, etc. Folder also has several - Series, Season, BoxSet, MusicArtist, MusicAlbum, etc. IsoType This setting is applicable to videos only. If a video is an Iso this will give you the type - Dvd or BluRay. LocalTrailerCount, RemoteTrailers LocalTrailerCount is the number of downloaded local trailers that are available for an item. The actual trailer items can be retrieved separately using /Users/{UserId}/Items/{Id}/LocalTrailers. RemoteTrailers are a list of known online trailers. When supporting trailers, precedence should be given to downloaded trailers. It is up the client developer as to whether or not they just want to pick one, or present all of them in a list. The most common scenario is that the user will have just one local trailer. LocationType This indicates if the item is a file system item, remote, or virtual. FileSystem items are items the user has physical copies of on their file system. Remote items point to a url address. Virtual items entirely virtual and are not playable (e.g. missing episodes). MediaSources Contains raw media information about the available media sources for this library item. MediaStreams This is applicable to Audio and Video only. This will provide detailed information about the audio, video and subtitle tracks embedded within the file. Note: This has now been superseded by MediaSources. Going forward MediaStreams should only be used for display purposes. OfficialRating G, PG-13, R, TV-MA, etc. OverviewHtml An html version of the overview, possibly with links embedded. ParentIndexNumber Similiar to IndexNumber, this serves different purposes depending on the type of item. For episodes this is the season number. For audio files, this is the disc number. ParentArtItemId, ParentArtImageTag, ParentLogoItemId, ParentLogoImageTag, ParentBackdropItemId, ParentBackdropImageTags See Images If an item does not have it's own art, backdrop or logo, these properties will contain information about parent items with those images in order to allow inheritance. PartCount For multi-file videos this will indicate the number of parts. People These are the people involved in the item. Each person has Name, Role, Type and PrimaryImageTag properties. PlayedPercentage This is populated for folders to indicate the user's cumulative progress through all items in the folder. PremiereDate This serves different purposes depending on the type of item. For episodes and series, this is the first air date. For movies, albums and songs, this is the release date. For persons this is date of birth. For artists, this is their formation date. OriginalPrimaryImageAspectRatio, PrimaryImageAspectRatio This is the aspect ratio of the primary image. Most image types have a predictable aspect ratio, but primary is the one exception. A typical use case when rendering a list of items is to determine the average AR, and then display them all using that value. OriginalPrimaryImageAspectRatio ratio is the AR of the original image file. PrimaryImageAspectRatio is the AR after image enhancers have been applied (e.g. Cover Art). See Images ProductionLocations This is a list of strings indicating filming locations. For Persons, this will have one entry and will contain their place of birth. ProviderIds This is a dictionary of provider id's for an item - Tmdb, Tvdb, TvCom, etc. A list of known provider id's can be found here , although plugins can inject additional ones. RecursiveItemCount For folders, this indicates the number of items available, recursively. RecursiveUnplayedItemCount For folders, this indicates the number of unplayed items available, recursively. SeriesId, SeriesName These properties are applicable only to Episodes and Seasons. This will give you some basic information about the TV Series. SpecialFeatureCount This is applicable to Movies and Series only. This will tell you how many special features are available. The actual special feature items can then be retrieved using /Users/{UserId}/Items/{Id}/SpecialFeatures. UserData Contains user state for an item, such as personal rating and playstate. Video3DFormat The 3D format, if applicable. VideoType This is applicable to Videos only. This will give you the type of video - VideoFile, Bluray, Dvd, HdDvd, Iso."
  },
  "doc/restapi/Items-by-Name.html": {
    "href": "doc/restapi/Items-by-Name.html",
    "title": "Items by Name",
    "keywords": "Items by Name Media items will contain lists of related items, such as Artists, Genres, Persons and Studios. These related items are referred to as \"items by name\" and can be retrieved by their name. The endpoints to retrieve a single item by name are: /Artists/{Name} /Genres/{Name} /GameGenres/{Name} /MusicGenres/{Name} Note All '?', '&' and '/' characters must be replaced by dashes '-' For example, you have an audio file with Akon as the artist. You want to allow the user to click on Akon and see artist information. To do this, use the following: /Artists/Akon?userId=xxx This will return an item with identical structure to normal library items. UserId is optional, and if included, will include user data such as like/dislike/favorite statuses. These item can also have images. Images Images can be retrieved in the same fashion as media items using the object Id's. Querying for items by name In addition to individual retrieval, there are querying endpoints that will return lists of these items. /Artists /Artists/AlbumArtists /GameGenres /Genres /MusicGenres /Persons /Studios These can be retrieved from the entire library, or limited to a specific folder, or limited to specific item types. For example, the following query will return all movie genres within a user's library: /Genres?IncludeItemTypes=Movie&Recursive=true&userId=xxx As with media item querying, these endpoints also support paging , filtering , sorting and configurable output fields . See the build-in documentation for details. Item Counts Each artist, genre, studio, person, etc, will have the following additional properties available, to indicate how many items in the library they apply to: TotalCount AdultVideoCount MovieCount SeriesCount EpisodeCount GameCount TrailerCount SongCount AlbumCount MusicVideoCount"
  },
  "doc/restapi/Item-Types.html": {
    "href": "doc/restapi/Item-Types.html",
    "title": "Item Types",
    "keywords": "Item Types Emby has a number of core library item types. The type can be determined by examining the Type property of a Dto. Api consumers can detect these types to customize their displays and/or query for these types individually to create virtual views. The following core types are available: Audio This is an audio file. Video This is a generic video file. Folder This is a generic folder. Episode, Movie, Trailer, AdultVideo, MusicVideo These are specialized representations of Video. BoxSet, MusicAlbum, MusicArtist, Season, Series These are specialized representations of Folder. Game,GameSystem Game is a media item and GameSystem is folder containing games. Book A media item that represents a book. Type Detection Try to avoid this as much as possible and instead look at the properties of the item to determine your courses of action. This will allow your code to continue to function as new types are added. Basic media types are Audio, Video, Game, Book and Photo. Checking item.MediaType is preferred over item.Type when basic media information is all that's needed."
  },
  "doc/restapi/Latest-Items.html": {
    "href": "doc/restapi/Latest-Items.html",
    "title": "Latest Items",
    "keywords": "Latest Items Lists of latest items can be retrieved using /Users/{UserId}/Items/Latest It supports many of the usual querying parameters: StartIndex Limit Fields ParentId IsPlayed IncludeItemTypes It also has an additional param, GroupItems (default true) . If true, items from the same container will be grouped into one and the container will be returned. The ChildCount property will be used to hold the group count. Example - Show latest movies This will display the latest 20 unplayed movies: /Users/{UserId}/Items/Latest?IncludeItemTypes=Movie&Limit=20&IsPlayed=false Example - Show latest episodes (with grouping) This will display the latest 20 unplayed episodes: /Users/{UserId}/Items/Latest?IncludeItemTypes=Episode&Limit=20&IsPlayed=false&GroupItems=true The result will then be a list of Series groupings. Now suppose the user clicks a Series in order to see the 4 episodes behind the grouping. This is achieved via: /Users/{UserId}/Items/Latest?Limit=4&IsPlayed=false&GroupItems=false&ParentId={SeriesId}"
  },
  "doc/restapi/Library-Structure.html": {
    "href": "doc/restapi/Library-Structure.html",
    "title": "Library Structure",
    "keywords": "Library Structure Please see http://emby.media/community/index.php?/topic/674-media-files-folders-structure/"
  },
  "doc/restapi/Live-TV.html": {
    "href": "doc/restapi/Live-TV.html",
    "title": "Live TV",
    "keywords": "Live TV This document will cover the core concepts of the Live Tv api but will not rehash each individual parameter. Developers should read this documentation along with testing it out in Swagger. Begin live tv support by making a call to /LiveTv/Info . The IsEnabled property will tell you if Live Tv is installed and enabled on the server. The EnabledUsers property contains a list of user id's that have access to live tv. Channels Query for tv channels using /LiveTv/Channels . The most interesting channel properties are: Name Number ChannelType CurrentProgram (must be specified via optional field) Additionally, channels share many of the same properties that are documented in Item Information Channel images use the same api endpoints as regular library items, e.g. /Items/{Id}/Images/Primary . Channels also can have user data allowing users to like or favorite them which will help influence suggested programs. Programs (EPG data) Query for programs using /LiveTv/Programs . The most interesting program properties are: Name EpisodeTitle OfficialRating RunTimeTicks StartDate EndDate IsMovie IsSports IsNews IsKids IsSeries ChannelId Name & EpisodeTitle For programs and timers that are part of a series, Name will always equal the series name , while EpisodeTitle is the title of the episode. Please note that EpisodeTitle will not always be available . Recording Playback Playback should be nearly identical to library items. Clients can use the Path property to play directly, if possible, and/or examine MediaStreams to determine the ideal streaming method. Timers A timer represents a single scheduled recording in the future. Timers can be queried using /LiveTv/Timers . If desired they can be filtered based on ChannelId or SeriesTimerId . A single timer can be retrieved by Id using /LiveTv/Timers/{Id} . When displaying timers, use the ProgramInfo property to display information about the event, including an image. Be sure to handle the situation where this property is null though. (e.g. manual timer or program info not available yet). To schedule a new timer, first make a call to /LiveTv/Timers/Defaults . This will return a default timer object. If the timer is based on a program, pass ProgramId on the query string. The default timer will be populated with default times and padding values based on configuration. To create or update a timer, POST the object to /LiveTv/Timers or /LiveTv/Timers/{Id} . Series Timers A series timer represents a scheduled sequence of recordings. SeriesTimers can be queried using /LiveTv/SeriesTimers . They can be sorted by Name or Priority. To schedule a new series timer, first make a call to /LiveTv/Timers/Defaults . This will return a default timer object. If the timer is based on a program, pass ProgramId on the query string. The default timer will be populated with default times and padding values based on configuration. To create or update a timer, POST the object to /LiveTv/SeriesTimers or /LiveTv/SeriesTimers/{Id} ."
  },
  "doc/restapi/Locating-the-Server.html": {
    "href": "doc/restapi/Locating-the-Server.html",
    "title": "Locating the Server",
    "keywords": "Locating the Server Emby features a built-in Udp server, which allows clients to discover it automatically. Simply send a udp broadcast message on port 7359 , with the text \"who is EmbyServer?\". You'll receive a message that is a Json structure containing three properties: Address Id Name"
  },
  "doc/restapi/Movie-Library.html": {
    "href": "doc/restapi/Movie-Library.html",
    "title": "Movie Library",
    "keywords": "Movie Library The recommended structure is to put each movie in it's own folder. /Movies /Home Alone (1990) Home Alone.avi /The Dark Knight (2008) The Dark Side.mkv It is also possible to store movies together in one folder. /Movies Home Alone (1990).avi Casino Royale (2006).mkv ISO's, Dvd's and Blu-ray rips Examples: /Movies /Home Alone (1990) Home Alone.iso /The Dark Knight (2008) The Dark Side.img /Movies /Home Alone (1990) /VIDEO_TS /The Dark Knight (2008) /BDMV Multi-file and multi-disc movies Multi-file and multi-disc movies are supported. The movie must have it's own folder containing all parts of the movie. Additionally, each video file or folder must be suffixed using one of the following conventions: cdX discX diskX dvdX partX ptX Where X is the part number. Spaces are allowed before the number, for example, \"part 7\" is accepted. Here is a complete example of a multi-file movie: /Movies /Home Alone (1990) Home Alone - part1.mkv Home Alone - part2.mkv Home Alone - part3.mkv Multi-disc movie: /Movies /Home Alone (1990) /Home Alone Disc 1 /VIDEO_TS /Home Alone Disc 2 /VIDEO_TS /Rocky (1976) /Rocky Disc 1 /BDMV /Rocky Disc 2 /BDMV Please note that at this time, each part will have to be played individually. Displayed metadata will be based on information from the first part, and the additional parts will be made playable through a menu. Box Sets Movies can be grouped together into box sets. /Movies /Lord of the Rings[boxset] /The Lord of the Rings - The Fellowship of The Ring /The Lord of the Rings - The Two Towers /The Lord of the Rings - The Return of The King In order to be detected as a boxset, the folder must have [boxset] within the name, or a collection.xml metadata file within it. In addition to movies within the boxset folder, movies can also be added from elsewhere in the library using shortcut files (.lnk). Simply place a shortcut file that points to the movie folder within the boxset folder. The path being pointed to from the shortcut must also exist in the library, using exactly the same path . It is simply a link to a pre-existing library item. Shortcut example : /Movies /Home Alone (1990) /Home Alone (1990).mkv /Boxsets /Home Alone Collection [boxset] /homealone.lnk (points to /Home Alone (1990) folder) If Home Alone was added to the library as \\my-server\\movies\\Home Alone (1990), then the path contained in the shortcut must point to \\my-server\\movies\\Home Alone (1990), and not D:\\Movies\\Home Alone (1990) Special Features Special features for movies can be stored in a specials folder under movie folders. Nested folders are not supported . /Movies /Home Alone (1990) /Home Alone (1990).mkv /specials deleted-scenes.mkv 3D Videos Any video can be marked as 3D by placing one of the following tags within the filename: [fsbs] - Full side by side [ftab] - Full top and bottom [hsbs] - Half side by side [htab] - Half top and bottom This will indicate the 3D format, which will be needed when streaming video and extracting images. The MB2 conventions of [3d] and [sbs3d] are still supported and will default to HSBS. Alternatively this can be done by editing metadata within the server dashboard."
  },
  "doc/restapi/Music-Library.html": {
    "href": "doc/restapi/Music-Library.html",
    "title": "Music Library",
    "keywords": "Music Library The recommended folder structure for music is Artist\\Album\\Song \\Music \\Artist Name \\Album Name 1- Song.mp3 2- Song.mp3 Any naming convention for audio files is acceptable. Track numbers are retrieved using ID3 tags. Music Videos These are setup using the same conventions as movies. When setting up the media collection, make sure to choose \"Music Videos\" as the type. Once setup, you can optionally edit music videos and fill in their artist and album information. If you do, the music videos will appear on the artist's detail page. Album soundtrack links If you edit an album and fill a tmdb id, tvdb id, and/or gamesdb id, we'll be able to link soundtrack albums in your library to their corresponding movie, tv series or game. We'll then display this on the detail page for each item."
  },
  "doc/restapi/Parental-Control.html": {
    "href": "doc/restapi/Parental-Control.html",
    "title": "Parental Control",
    "keywords": "Parental Control If user access is disabled due to parental controls, responses will contain 401 status codes and should be handled with the authentication workflow described at: Authentication A response header of X-Application-Error-Code will contain ParentalControl . This will allow applications to display message if they choose to."
  },
  "doc/restapi/Playback-Check-ins.html": {
    "href": "doc/restapi/Playback-Check-ins.html",
    "title": "Playback Check-ins",
    "keywords": "Playback Check-ins When a client is ready to start media playback, there are three API methods that are used to keep the server up to date with the users activity, and record the users current playback position. Playback Started To let the server know playback started, make an HTTP POST call to /Sessions/Playing The body of the request should be a JSON object with the following properties: QueueableMediaTypes (Array[string] - Audio,Video), CanSeek (boolean), ItemId (string) or Item {object}, MediaSourceId (string), AudioStreamIndex (int, optional), SubtitleStreamIndex (int, optional), IsPaused (boolean), IsMuted (boolean), PositionTicks (long, optional), VolumeLevel (int, optional 0-100), PlayMethod (string) = ['Transcode' or 'DirectStream' or 'DirectPlay'] PlaySessionId LiveStreamId PlaylistIndex (current index in the play queue) PlaylistLength (current length of the play queue) SubtitleOffset (floating point value) PlaybackRate (floating point value) The content type of the request should be application/json . Once this API call is made, the server dashboard will show the current item that the user is watching. ItemId vs Item If the user is playing a server library item, simply supply the ItemId property and omit Item. If the user is playing content that is not part of the server library, it can still be reported by supplying an object containing information describing the media. Item Properties Name (string), MediaType (string - Audio, Video, Book, Game), Type (string - Movie, Episode, Trailer, Video, Audio, Book, Game), RunTimeTicks (long, optional), PremiereDate (Date, optional), ProductionYear (int, optional), IndexNumber (int, optional), IndexNumberEnd (int, optional), ParentIndexNumber (int, optional), SeriesName (string), Album (string), Artists (Array[string]) Playback Progress To report progress make an HTTP POST call to /Sessions/Playing/Progress The contents of the request are identical to the playback start message, except with an additional EventName property. Playback progress should be reported at the following times: Automatically every 10 seconds Immediately following any user interaction with the player, for example, pause, un-pause, etc. The EventName property tells the server why you're reporting progress. It accepts the following values: TimeUpdate Pause Unpause VolumeChange RepeatModeChange AudioTrackChange SubtitleTrackChange PlaylistItemMove PlaylistItemRemove PlaylistItemAdd QualityChange SubtitleOffsetChange PlaybackRateChange The server will automatically increment playback progress every second, so it is not necessary to automatically report more often than at 10 second intervals. The progress reports coming from the app will be used to re-calibrate the automatic progress increment on the server. Playback Stopped Once playback is stopped, make an HTTP POST call to /Sessions/Playing/Stopped The contents of the request are identical to the playback start message. Web Socket For improved performance, the progress messages can also be sent to the server via the web socket connection. The structure of the messages are as follows: {MessageType: \"ReportPlaybackProgress\", Data: {...}} Where Data is an identical object to the HTTP request objects. Manually marking watched/unwatched An Item can be marked watched manually by sending a POST to /Users/{UserId}/PlayedItems/{Id} To mark an item unwatched, send a DELETE to /Users/{UserId}/PlayedItems/{Id} More Info For more information on these three methods, consult the Swagger API documentation. The Emby.ApiClient repository also has examples of these methods."
  },
  "doc/restapi/Playback-Guidelines.html": {
    "href": "doc/restapi/Playback-Guidelines.html",
    "title": "Playback Guidelines",
    "keywords": "Playback Guidelines This info applies to both audio and video playback. MediaSources The first step towards playing content is to examine the MediaSources property. The server allows multiple sources for a single content item. It is up to the client to choose the optimal source based on it's own requirements. Each MediaSource has the following properties that can be examined: Bitrate (represents the total file bitrate) Container (mkv, mp4, etc) Id LocationType (FileSystem, Remote, etc) MediaStreams Name Path RunTimeTicks Size (in bytes) VideoType (VideoFile, Dvd, Iso, Bluray) DefaultAudioStreamIndex DefaultSubtitleStreamIndex Before we discuss the algorithm to examine MediaSources, let us first define a few terms: Direct Play - The client plays the file by accessing the file system directly using the Path property. The server is bypassed with this mechanism. Whenever possible this is the most desirable form of playback. Direct Stream - The client streams the file from the server as-is , in it's original format, without any encoding or remuxing applied. Aside from Direct Play, this is the next most desirable playback method. Transcode - The client streams the file from the server with encoding applied in order to convert it to a format that it can understand. MediaSource choice: The following is the algorithm to determine the optimal MediaSource: Step 1: Direct Play Clients that never direct play may skip this step. Using the above information, determine the number of MediaSources that can be direct played . If none, proceed to step 2 If one, play that source If multiple, present a selection screen, using MediaSource.Name as the display name. Step 2: Direct Stream Given the following criteria: User defined max bitrate (quality setting) Find the first MediaSource that can the client is capable of direct streaming that falls within the bitrate setting. All MediaSource properties will need to be examined in order to make this determination based on client capabilities. If any are found, play the first matching source. If none, proceed to step 3. Step 2: Transcoding If transcoding is needed, the first step is to determine the optimal source. For Audio : Simply take the first MediaSource For Video : Choose the first MediaSource containing a VideoCodec the client natively understands (usually h264). This will make the transcoding process more efficient. If none are found, simply take the first MediaSource. Once the MediaSource is chosen, it is time to proceed to the streaming phase. See the articles on Audio streaming, Video streaming and Http Live streaming. MediaSource Runtime If using the metadata runtime within the application's media player, make sure to use the runtime value from the MediaSource and not the containing item. Each MediaSource may have slightly different runtimes."
  },
  "doc/restapi/Playlists.html": {
    "href": "doc/restapi/Playlists.html",
    "title": "Playlists",
    "keywords": "Playlists Creating Playlists Send a POST to /Playlists ?UserId=xxx&Name=xxx There are two additional params, one of which must be specified: MediaType (Audio/Video) Ids - A comma delimited list of item id's to add to the playlist. MediaType can be omitted if this is supplied. Retrieving Playlists Playlists for a user can be queried like any other type. The item type is Playlist. The MediaType property of the playlist will indicate either Audio or Video. Playlist Items There is a dedicated endpoint to retrieve the list of playlist items: /Playlists/{Id}/Items The following params are accepted: Id UserId StartIndex Limit Fields Each playlist item will have a PlaylistItemId property. This property is required in order to remove the item from the playlist. Adding to Playlists Send a POST to /Playlists/{Id}/Items In addition, supply: Ids - A comma delimited list of item id's to add to the playlist. UserId Removing from Playlists Send a DELETE to /Playlists/{Id}/Items In addition, supply: EntryIds - A comma delimited list of the PlaylistItemId property of each item to remove from the playlist."
  },
  "doc/restapi/Remote-Control.html": {
    "href": "doc/restapi/Remote-Control.html",
    "title": "Remote Control",
    "keywords": "Remote Control Clients can easily remote control other clients. The first step is to make a call to /Sessions Add the ControllableByUserId param to only receive sessions that are controllable by a given user. An example session is: { \"SupportedCommands\": [ \"MoveUp\", \"MoveDown\", \"MoveLeft\", \"MoveRight\", \"PageUp\", \"PageDown\", \"PreviousLetter\", \"NextLetter\", \"ToggleOsdMenu\", \"ToggleContextMenu\", \"Select\", \"Back\", \"TakeScreenshot\", \"SendKey\", \"SendString\", \"GoHome\", \"GoToSettings\", \"VolumeUp\", \"VolumeDown\", \"Mute\", \"Unmute\", \"ToggleMute\", \"SetVolume\", \"SetAudioStreamIndex\", \"SetSubtitleStreamIndex\", \"ToggleFullscreen\", \"DisplayContent\", \"GoToSearch\", \"DisplayMessage\", \"Guide\" ], \"RemoteEndPoint\": \"192.168.1.4\", \"QueueableMediaTypes\": [ \"Video\" ], \"PlayableMediaTypes\": [ \"Audio\", \"Video\", \"Game\", \"Photo\", \"Book\" ], \"Id\": \"4de66e1e6b8a4cae89542dc6f7ee7623\", \"UserId\": \"e8837bc1ad67520e8cd2f629e3155721\", \"UserPrimaryImageTag\": \"605eed331af1e1a8770643ee6fd1c2b9\", \"UserName\": \"John\", \"AdditionalUsers\": [], \"ApplicationVersion\": \"3.0.5243.22734\", \"Client\": \"Emby Theater\", \"LastActivityDate\": \"2014-05-15T09:52:52.5898360Z\", \"NowViewingItem\": { \"Name\": \"Partridge\", \"Id\": \"0f8d0805a66f7ed429ecd8890146c7c3\", \"Type\": \"Episode\", \"MediaType\": \"Video\", \"RunTimeTicks\": 12882240000, \"PrimaryImageTag\": \"d7c02f11a99ba4b7381e86bb602596c1\", \"PrimaryImageItemId\": \"0f8d0805a66f7ed429ecd8890146c7c3\", \"LogoImageTag\": \"108e85fbb573fc406652374b785ec6be\", \"LogoItemId\": \"09bed955402d0bf2d59c2e9cee67beed\", \"ThumbImageTag\": \"01760cf565aaba7cd9ac5350bb46383b\", \"ThumbItemId\": \"09bed955402d0bf2d59c2e9cee67beed\", \"BackdropImageTag\": \"a6aeacb6a86f13e8c6a582ebf03b3f2a\", \"BackdropItemId\": \"09bed955402d0bf2d59c2e9cee67beed\", \"PremiereDate\": \"2013-04-04T04:00:00.0000000Z\", \"ProductionYear\": 2013, \"IndexNumber\": 17, \"ParentIndexNumber\": 5, \"SeriesName\": \"Parks and Recreation\", \"Artists\": [], \"MediaStreams\": [], \"Chapters\": [] }, \"DeviceName\": \"LIVINGROOM-PC\", \"DeviceId\": \"LIVINGROOM-PC\", \"PlayState\": { \"CanSeek\": false, \"IsPaused\": false, \"IsMuted\": false } } Sending a play command You can instruct a client to play something by posting to the following url: /Sessions/{Id}/Playing The following values should be included within post data: ItemIds - A comma-delimited list of item id's PlayCommand - PlayNow, PlayNext or PlayLast StartPositionTicks - If supplied, this is the position in which the first title should start at. MediaSourceId - If supplied, this is the media source that should be used for the first item AudioStreamIndex - If supplied, this is the audio stream that should be used for the first item SubtitleStreamIndex - If supplied, this is the subtitle stream that should be used for the first item StartIndex - If supplied, and if playing a list of items, this is the index of the first item that should be played. Note: StartPositionTicks is ignored when PlayCommand is PlayNext or PlayLast. Sending a playstate command The following commands are available: /Sessions/{Id}/Playing/{Command} Examples /Sessions/{Id}/Playing/Stop /Sessions/{Id}/Playing/Pause /Sessions/{Id}/Playing/Unpause /Sessions/{Id}/Playing/PlayPause /Sessions/{Id}/Playing/NextTrack /Sessions/{Id}/Playing/PreviousTrack /Sessions/{Id}/Playing/Seek?SeekPositionTicks=xxx Sending a general command General commands are sent using /Sessions/{Id}/Command/{Command} If arguments are required, the body of the request should be of contentType application/json and have the following structure: { Arguments:{ \"Name\": \"Value\" } } Below are the list of known core command names , along with the list of properties available in Arguments. MoveUp, MoveDown, MoveLeft, MoveRight, PageUp, PageDown, PreviousLetter (scroll list to previous letter), NextLetter (scroll list to next letter), ToggleOsdMenu (show or hide video player OSD), ToggleContextMenu (show or hide information relating to selected list item), Select (enter), Back, TakeScreenshot, SendKey (tbd), SendString (Enter text into application - Arguments: String), GoHome, GoToSettings, VolumeUp, VolumeDown, Mute, Unmute, ToggleMute, SetVolume (Arguments: Volume 0-100 scale), SetAudioStreamIndex = (Arguments: Index), SetSubtitleStreamIndex = (Arguments: Index. If -1 turn off subtitles), ToggleFullscreen , DisplayContent (Arguments: ItemName, ItemId, ItemType), GoToSearch, PlayMediaSource - used to indicate support for media source selection for an item, PlayTrailers (Arguments: ItemId), DisplayMessage (Arguments: Header, Text, TimeoutMs - if timeout is omitted, message should be modal) SetPlaybackRate (Arguments: PlaybackRate - floating point playback rate value) SetSubtitleOffset (Arguments: SubtitleOffset - floating point subtitle offset value) IncrementSubtitleOffset (Arguments: Increment - floating point subtitle offset increment value)"
  },
  "doc/restapi/Subtitles.html": {
    "href": "doc/restapi/Subtitles.html",
    "title": "Subtitles",
    "keywords": "Subtitles Text subtitles can be downloaded separately for an item using: /Videos/{Id}/{MediaSourceId}/Subtitles/{Index}/Stream.{Format} Examples: /Videos/{Id}/{MediaSourceId}/Subtitles/{Index}/Stream.srt /Videos/{Id}/{MediaSourceId}/Subtitles/{Index}/Stream.vtt Subtitle media streams have an IsTextSubtitleStream property. If this is true, they can be downloaded in any of the formats listed above. If starting from an offset, simply supply the StartPositionTicks query string parameter."
  },
  "doc/restapi/Sync.html": {
    "href": "doc/restapi/Sync.html",
    "title": "Sync",
    "keywords": "Sync Any client can report that it supports sync with two additions to their ClientCapabilities: Specify SupportsSync = true Specify DeviceProfile object A DeviceProfile is the same structure that is used by Dlna Profiles. The default profile can be found here: https://github.com/MediaBrowser/MediaBrowser/blob/master/MediaBrowser.Model/Dlna/Profiles/DefaultProfile.cs For brevity, all Dlna-specific properties such as ProtocolInfo, Manufacturer/Model, etc. can be omitted. To verify the server acknowledges your sync support, create a sync job using the web interface and test to make sure the device shows up as a selectable sync target. Determining user sync privileges To determine if a user has sync privileges, check user.Policy.EnableSync. Sync Selections Clients should make sync available from as many contexts as possible. This includes, but is not limited to: Detail screens List screens (single selection) List screens (multi-selection) Home screen (single selection) Home screen (category selection, e.g. Next Up, Latest Movies, etc). All library items are eligible for sync and clients should not artificially filter them. Instead, simply check the SupportsSync property to determine if an item supports syncing. You will need to include SyncInfo as part of your requested fields in order to make this property available. Sync Dialog This will discuss the menu that should be presented after a user has chosen to sync something. Note: If using our api libraries, simply call SyncHelper.GetSyncOptions and it will return a list of all the choices that should be presented based on what the user has selected. Name - Display only if multiple items have been selected. If a single item or category, omit and the server will automatically assign a name. Quality - Only if syncing video content. See SyncHelper for examples. Unwatched - Only if syncing video content. See SyncHelper for examples. SyncNewContent - Only if syncing a folder or category. See SyncHelper for examples. ItemLimit - Only if syncing a folder or category. See SyncHelper for examples. Creating Sync Jobs To create a sync job, send a Post to /Sync/Jobs . The TargetId property should be the client's reported DeviceId . Notes : If the user chooses to sync a Genre, MusicGenre, GameGenre, Studio, or Person, then the ParentId property should also be supplied, in order to limit the scope of the sync to the section of the library they're currently browsing. The ParentId is the Id of the top level user view. If the user chooses to sync a special category (e.g. Latest, Resume, Next Up), then a ParentId should also be supplied (see above note). A complete example is available in our ApiClient libraries. See CreateSyncJob. Running sync jobs All of the client-side code needed to run sync jobs is provided in our Api libraries. The MultiServerSync operation will handle both sync and camera upload for all authenticated servers. It is available in both .NET and Java: https://github.com/MediaBrowser/MediaBrowser.ApiClient https://github.com/MediaBrowser/MediaBrowser.ApiClient.Java If using another language it will need to be ported. Client-side sync management Coming soon. Online access Coming soon. Offline access Coming soon."
  },
  "doc/restapi/TV-Library.html": {
    "href": "doc/restapi/TV-Library.html",
    "title": "TV Library",
    "keywords": "TV Library The recommended folder structure is series/season/episode. /TV Series /Seinfeld /Season 1 S01E01 Seinfeld The Seinfeld Chronicles.mkv S01E02 Seinfeld The Stake Out.mkv /Season 2 S02E05 Seinfeld The Apartment.mkv S02E06 Seinfeld Number Six.iso Episode file naming (Multi-episode supported) Some of the supported naming conventions for episode files are: 01x02x03 episode name.avi S01x02x03 episode name.avi S01E02E03 episode name.avi S01xE02xE03 episode name.avi S01E02-E03 episode name.avi S01E02-X03 episode name.avi 01x02 01x03 episode name.avi 01x02 - 01x03 episode name.avi 01x02 - x03 episode name.avi S01x02.S01x03 episode name.avi S01x02 - S01x03 episode name.avi show name 01x02x03 episode name.avi show name S01x02x03 episode name.avi show name S01E02E03 episode name.avi show name S01xE02xE03 episode name.avi show name S01E02-E03 episode name.avi show name S01E02-X03 episode name.avi show name 01x02 01x03 episode name.avi show name 01x02 - 01x03 episode name.avi show name 01x02 - x03 episode name.avi show name S01x02.S01x03 episode name.avi show name S01x02 - S01x03 episode name.avi For all these examples the episode is detected as episode #2 and episode #3"
  },
  "doc/restapi/User-Authentication.html": {
    "href": "doc/restapi/User-Authentication.html",
    "title": "User Authentication",
    "keywords": "User Authentication Note This page describes User Authentication. Please also see API Key Authentication Authorization Request Header Add the following request header on every request: Authorization=Emby UserId=\"e8837bc1-ad67-520e-8cd2-f629e3155721\", Client=\"Android\", Device=\"Samsung Galaxy SIII\", DeviceId=\"xxx\", Version=\"1.0.0.0\" Parameter Value UserId The Id of the current logged in user (if there is one) Client The type of client (Android, Dashboard, Dlna, iOS, PC, WindowsPhone, WindowsRT, other) Device The product name of the device DeviceId The device's unique id Version The client application version The dashboard currently displays customized icons for the following clients: Android, Chromecast, Dashboard, Dlna, iOS, Emby Theater, Emby Classic, Roku, Windows Phone, Windows RT, Kodi (Formerly known as Xbmc) User Login Make a call to /Users/Public to get all public users. Public users are users that the server admin has allowed to be displayed visually on the login screen. This can be managed by the server administrator by editing user permissions for each user. If there are records returned, the app has the option of displaying the users in a visual login screen. This is up to the application developer to decide. If there are no records returned then present a username/password text entry form. For each user, if PrimaryImageTag has a value, that indicates the user has an image. The image can then be downloaded using /Users/{Id}/Images/{Type} . See also: Images . Each user has a HasPassword property. This is used to determine if the user should be prompted to input a password. The application must authenticate regardless of this value. Authenticating a user Authenticate using /Users/AuthenticateByName . A 200 status code indicates success, while anything in the 400 or 500 range indicates failure. The password must be sent in the body: pw - password in plain text The return result object will have an AccessToken property. This should be included in all subsequent Http requests using the header X-Emby-Token . If the user explicitly logs out, send a POST to /Sessions/Logout . This will revoke your access token. If the user closes the app without logging out, you can skip this and save the token for future use. During normal application usage, if any http requests fail with a 401 response status code, this is generally an indication that the access token has been revoked. The user should be redirected back to the login screen. For applications that support connectivity to multiple servers, the token should be saved along with the server's Id in order to avoid sending the wrong token to a particular server. The server Id is part of the SystemInfo object which can be retrieved from /System/Info . Parental Control See Parental-Control"
  },
  "doc/restapi/Video-Streaming.html": {
    "href": "doc/restapi/Video-Streaming.html",
    "title": "Video Streaming",
    "keywords": "Video Streaming The base video url is /Video/{Id}/stream . Some players will have better results when the url has a video file extension, so we also provide several aliases to account for that: /Videos/{Id}/stream /Videos/{Id}/stream.{Container} Examples: /Videos/{Id}/stream.mp4 /Videos/{Id}/stream.asf /Videos/{Id}/stream.ogv /Videos/{Id}/stream.ts /Videos/{Id}/stream.webm /Videos/{Id}/stream.wmv /Videos/{Id}/stream.mp4 /Videos/{Id}/stream.m4v /Videos/{Id}/stream.mkv /Videos/{Id}/stream.mpeg /Videos/{Id}/stream.avi /Videos/{Id}/stream.m2ts If using a url with an extension, the extension should be based upon the output format , rather than the input. Generally, it is recommend to use a url with a file extension that matches the format you wish to encode to as many players will perform better seeing the file extension in the url. The following parameters are required: Id MediaSourceId PlaySessionId - comes from the PlaybackInfo response as part of our MediaSource api. If you are not using the MediaSource api, then generate a random alpha-numeric string. All of the optional parameters can be viewed using the swagger documentation. AudioCodec AudioBitrate MaxAudioChannels AudioSampleRate VideoCodec VideoBitrate MaxWidth MaxHeight Profile (h264 profile) Level AudioStreamIndex SubtitleStreamIndex (if burning into the video) Direct Stream To direct stream a video file, simply use the static=true parameter. Seeking When direct streaming, the file will be served statically and client-side seeking will be possible. When transcoding, this will not be possible. In order to seek you'll have to stop the stream and start a new one using the StartTimeTicks parameter."
  },
  "doc/restapi/Web-Socket.html": {
    "href": "doc/restapi/Web-Socket.html",
    "title": "Web Socket",
    "keywords": "Web Socket Clients are recommended to connect to the server's web socket in order to receive notifications of various system events, which can help reduce the need to repeatedly poll for data through the http api. The web socket is also the preferred protocol from which to receive remote control commands. Connecting to the web socket Once connected to the server, simply take the server's http address, and change the protocol to ws:// or wss://. ws://{host}?api_key={authenticationtoken}&deviceId={deviceId} To construct the url, perform a string replacement on the http url rather than building it manually. This will allow your app to support addresses without ports, as well as http/https. Replace the following: http: -> ws: https: -> wss: Message format All messages sent and received over the web socket are in the format of a json structure: { MessageType: \"RestartRequired\", Data: \"\" } MessageType is the name of the event or action, Data is any related data. Data can be plain text, or a json structure itself, depending on MessageType. Messages Once connected and identified, you'll be able to receive the following MessageTypes from the web socket: GeneralCommand See below section on commands. UserDataChanged A user changed their personal rating for an item, or their playstate was updated. Data = a json object with the following properties: UserId UserDataList - a list of updated user data objects UserDeleted Data = the user id that has been deleted UserUpdated Data = the user object that has been updated NotificationAdded A user has new notifications. Presentations should refresh their notification list. NotificationsMarkedRead A user has marked notifications read. Presentations should refresh their notification list. RestartRequired This indicates the server needs to be restarted. There is no data associated with this. ServerRestarting, ServerShuttingDown This will tell you when the server is restarting or shutting down. Play A remote control play command has been sent from the server. Data = a json object with the following properties: ItemIds - an array of item id's to play PlayCommand - PlayNow, PlayNext or PlayLast StartPositionTicks - If supplied, this is the position in which the first title should start at. MediaSourceId - If supplied, this is the media source that should be used for the first item AudioStreamIndex - If supplied, this is the audio stream that should be used for the first item SubtitleStreamIndex - If supplied, this is the subtitle stream that should be used for the first item StartIndex - If supplied, and if playing a list of items, this is the index of the first item that should be played. Playstate A remote control update playstate command has been sent from the server. Data = a json object with the following properties: Command - Stop, Pause, Unpause, NextTrack, PreviousTrack, Seek SeekPositionTicks - Used with the seek command. General Commands Most remote control commands are implemented in a pass-through fashion. That is the server simply takes the command and passes it directly to the client without modification. The standard web socket message format is utilized. The Data property is an object describing the remote control command. The command will have two properties: Name Arguments. Below are the list of known core command names , along with the list of properties available in Arguments. MoveUp, MoveDown, MoveLeft, MoveRight, PageUp, PageDown, PreviousLetter (scroll list to previous letter), NextLetter (scroll list to next letter), ToggleOsd (show or hide video player OSD), ToggleContextMenu (show or hide information relating to selected list item), Select (enter), Back, TakeScreenshot, SendKey (tbd), SendString (Enter text into application - Arguments: String), GoHome, GoToSettings, VolumeUp, VolumeDown, Mute, Unmute, ToggleMute, SetVolume (Arguments: Volume 0-100 scale), SetAudioStreamIndex = (Arguments: Index), SetSubtitleStreamIndex = (Arguments: Index. If -1 turn off subtitles), ToggleFullscreen , DisplayContent (Arguments: ItemName, ItemId, ItemType), GoToSearch, DisplayMessage (Arguments: Header, Text, TimeoutMs - if timeout is omitted, message should be modal) PlayTrailers (Arguments: ItemId), PlayMediaSource - used to indicate support for receiving the play command along with a specified MediaSourceId, AudioStreamIndex and SubtitleStreamIndex SetPlaybackRate (Arguments: PlaybackRate - floating point playback rate value) SetSubtitleOffset (Arguments: SubtitleOffset - floating point subtitle offset value) IncrementSubtitleOffset (Arguments: Increment - floating point subtitle offset increment value) Examples Sample code that parses web server messages can be found here: https://github.com/MediaBrowser/Emby.ApiClient/blob/master/MediaBrowser.ApiInteraction/ApiWebSocket.cs#L399"
  },
  "download/index.html": {
    "href": "download/index.html",
    "title": "Download",
    "keywords": "Download We are setting things up.. Note While we are setting up our automated release process, download links are not yet ready to be shown here. Please download directly from the Releases Section of the Emby.Sdk repository on GitHub."
  },
  "home/resources.html": {
    "href": "home/resources.html",
    "title": "Help and Resources",
    "keywords": "Help and Resources Emby Sites Emby Main Emby Downloads Emby Knowledge Base Community Forums Developer API (open for everybody) Developer Area The access to the developer area is restricted in order to avoid noise from non-developers. To request access, please PM the forum moderators and ask for instructions Server Plug-Ins GitHub Repositories Emby.Sdk The source and distribution point of the Emby SDK Emby.ApiClients The client code is distributed as part of the Emby SDK , but it might sometimes be useful to track changes over time when having built a solution based on our ApiClient code. Emby.Releases All stable and beta releases of Emby Server are published there Emby.Resources Contains static, shared resources which may be useful for developers"
  },
  "home/sdk/apiclients/bottominfo.html": {
    "href": "home/sdk/apiclients/bottominfo.html",
    "title": "Documentation Links",
    "keywords": "Documentation Links For general documentation, please refer to Accessing Emby Server via REST API . The available API endpoints are documented in the REST API Reference section."
  },
  "home/sdk/apiclients/Go/README.html": {
    "href": "home/sdk/apiclients/Go/README.html",
    "title": "Go Client",
    "keywords": "Go Client Name embyclient-rest-go Language Go SDK Folder SampleCode/RestApi/Clients/Go Installation Put the package under your project folder and add the following in import: import \"./embyclient-rest-go\" Documentation Links For general documentation, please refer to Accessing Emby Server via REST API . The available API endpoints are documented in the REST API Reference section."
  },
  "home/sdk/apiclients/index.html": {
    "href": "home/sdk/apiclients/index.html",
    "title": "REST API Clients",
    "keywords": "REST API Clients The SDK includes a number of auto-generated client libraries for accessing Emby Server via REST API. Important Those clients are provided AS-IS. We don't provide support or any of those clients, and these are are not guaranteed o work at all in the provided form. It is rather expected that there are issues with each of hose clients. We still provide them because we think that hese might be helpful as a starting point and as an accelerator for developing applications accessing Emby Server. For those reasons, the clients are provided als source code only rather than as compiled libraries. Licensing There are no licenses attached to the code and developers are absolutely free to decide how to make use of the provided code. Note While developers are free to do with the code whatever they like to do, we would like to ask you not to create any packages from the provided code and publish those to any package store in a way that they would appear to be official Emby packages. Not OK: emby-javaclient, js.restclient.emby, Emby.Server.ApiClient OK: franks-embyclient-java, js.acme.foo.embyclient, SoftLib.Core.EmbyClient Usage In general, we do not recommend to use the code, compile a library from it, and then try to use such compiled library. Over time, too many adjustments will be required to get it working according to your requirements. It is a better approach to include the provided source code files in your development directly and use these as your own code, just as when you would have to build this all from scratch. Of course you are free to take just the parts you need - like model classes or just the code for those APIs that you actually need. We hope this will be useful for your project! Available Implementations Client Language SDK Folder Net.RestSharp Client C# SampleCode/RestApi/Clients/Net.RestSharp Net.AutoRest Client C# SampleCode/RestApi/Clients/Net.AutoRest Java Client Java SampleCode/RestApi/Clients/Java JavaScript Client JavaScript SampleCode/RestApi/Clients/JavaScript TypeScript Client TypeScript SampleCode/RestApi/Clients/TypeScript Python Client Python SampleCode/RestApi/Clients/Python Swift Client Swift SampleCode/RestApi/Clients/Swift5 Go Client Go SampleCode/RestApi/Clients/Go Documentation Links For general documentation, please refer to Accessing Emby Server via REST API . The available API endpoints are documented in the REST API Reference section."
  },
  "home/sdk/apiclients/Java/README.html": {
    "href": "home/sdk/apiclients/Java/README.html",
    "title": "Java Client",
    "keywords": "Java Client Name embyclient-rest-java Language Java SDK Folder SampleCode/RestApi/Clients/Java Requirements Building the API client library requires: Java 1.7+ Maven/Gradle Installation To install the API client library to your local Maven repository, simply execute: mvn clean install To deploy it to a remote Maven repository instead, configure the settings of the repository and execute: mvn clean deploy Refer to the OSSRH Guide for more information. Maven users Add this dependency to your project's POM: <dependency> <groupId>media.emby</groupId> <artifactId>embyclient-rest-java</artifactId> <version>0.0.0.0</version> <scope>compile</scope> </dependency> Gradle users Add this dependency to your project's build file: compile \"media.emby:embyclient-rest-java:0.0.0.0\" Others At first generate the JAR by executing: mvn clean package Then manually install the following JARs: target/embyclient-rest-java-0.0.0.0.jar target/lib/*.jar Getting Started Please follow the installation instruction and execute the following Java code: import EmbyClient.*; import EmbyClient.auth.*; import io.swagger.client.model.*; import EmbyClient.Java.ActivityLogServiceApi; import java.io.File; import java.util.*; public class ActivityLogServiceApiExample { public static void main(String[] args) { ApiClient defaultClient = Configuration.getDefaultApiClient(); // Configure API key authorization: apikeyauth ApiKeyAuth apikeyauth = (ApiKeyAuth) defaultClient.getAuthentication(\"apikeyauth\"); apikeyauth.setApiKey(\"YOUR API KEY\"); // Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null) //apikeyauth.setApiKeyPrefix(\"Token\"); ActivityLogServiceApi apiInstance = new ActivityLogServiceApi(); Integer startIndex = 56; // Integer | Optional. The record index to start at. All items with a lower index will be dropped from the results. Integer limit = 56; // Integer | Optional. The maximum number of records to return String minDate = \"minDate_example\"; // String | Optional. The minimum date. Format = ISO try { QueryResultActivityLogEntry result = apiInstance.getSystemActivitylogEntries(startIndex, limit, minDate); System.out.println(result); } catch (ApiException e) { System.err.println(\"Exception when calling ActivityLogServiceApi#getSystemActivitylogEntries\"); e.printStackTrace(); } } } Documentation Links For general documentation, please refer to Accessing Emby Server via REST API . The available API endpoints are documented in the REST API Reference section."
  },
  "home/sdk/apiclients/JavaScript/README.html": {
    "href": "home/sdk/apiclients/JavaScript/README.html",
    "title": "JavaScript Client",
    "keywords": "JavaScript Client Name EmbyClient.JavaScript Language JavaScript SDK Folder SampleCode/RestApi/Clients/JavaScript Installation Important We do not recommend to use and install this code as a package. Probably too many adjustments will be required to get it working according to your requirements. A better approach is to use the code files directly in your project! For Node.js npm To publish the library as a npm , please follow the procedure in \"Publishing npm packages\" . Note Please edit the package name to a custom name of yours before publishing anywhere! Then install it via: npm install EmbyClient.JavaScript --save git If the library is hosted at a git repository, e.g. https://github.com/GIT_USER_ID/GIT_REPO_ID then install it via: npm install GIT_USER_ID/GIT_REPO_ID --save For browser The library also works in the browser environment via npm and browserify . After following the above steps with Node.js and installing browserify with npm install -g browserify , perform the following (assuming main.js is your entry file): browserify main.js > bundle.js Then include bundle.js in the HTML pages. Webpack Configuration Using Webpack you may encounter the following error: \"Module not found: Error: Cannot resolve module\", most certainly you should disable AMD loader. Add/merge the following section to your webpack config: module: { rules: [ { parser: { amd: false } } ] } Getting Started Please follow the installation instruction and execute the following JS code: var EmbyClientJavaScript = require('EmbyClient.JavaScript'); var defaultClient = EmbyClientJavaScript.ApiClient.instance; // Configure API key authorization: apikeyauth var apikeyauth = defaultClient.authentications['apikeyauth']; apikeyauth.apiKey = \"YOUR API KEY\" // Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null) //apikeyauth.apiKeyPrefix['api_key'] = \"Token\" var api = new EmbyClientJavaScript.ActivityLogServiceApi() var opts = { 'startIndex': 56, // {Number} Optional. The record index to start at. All items with a lower index will be dropped from the results. 'limit': 56, // {Number} Optional. The maximum number of records to return 'minDate': \"minDate_example\" // {String} Optional. The minimum date. Format = ISO }; var callback = function(error, data, response) { if (error) { console.error(error); } else { console.log('API called successfully. Returned data: ' + data); } }; api.getSystemActivitylogEntries(opts, callback); Documentation Links For general documentation, please refer to Accessing Emby Server via REST API . The available API endpoints are documented in the REST API Reference section."
  },
  "home/sdk/apiclients/Net.AutoRest/README.html": {
    "href": "home/sdk/apiclients/Net.AutoRest/README.html",
    "title": "Net.AutoRest",
    "keywords": "Net.AutoRest Name EmbyClient.MsRest Language C# SDK Folder SampleCode/RestApi/Clients/Net.AutoRest Prerequisites Frameworks supported .NET >=5.0 .NET Core >=2.0 .NetStandard 2.0 .NET Framework >=4.6 Mono/Xamarin UWP >=10.0 Dependencies Microsoft.Rest.ClientRuntime - 2.3.24 or later Getting Started Using the Client Code The Net.AutoRest\\EmbyClient.Dotnet folder includes the C# project EmbyClient.Dotnet.csproj and all code that is required. You can copy the whole folder directly into your own project. Visal Studio Sample Application The folder includes a Visual Studio solution which you can open directly in Visual Studio 2019 (or later). The sample application is a simple Windows Forms application which demonstrates how to authenticate with Emby Server and make basic API calls: Documentation Links For general documentation, please refer to Accessing Emby Server via REST API . The available API endpoints are documented in the REST API Reference section."
  },
  "home/sdk/apiclients/Net.RestSharp/README.html": {
    "href": "home/sdk/apiclients/Net.RestSharp/README.html",
    "title": "Net.RestSharp",
    "keywords": "Net.RestSharp Name EmbyClient.Dotnet Language C# SDK Folder SampleCode/RestApi/Clients/Net.RestSharp Prerequisites Frameworks supported .NET >=5.0 .NET Core >=2.0 .NetStandard 2.0 .NET Framework >=4.6 Mono/Xamarin UWP >=10.0 Dependencies RestSharp - 106.2.2 or later Json.NET - 10.0.3 or later Note RestSharp has introduced breaking changes in v107.x. Updating RestSharp to those version will require a huge amount of changes to the code. Getting Started Using the Client Code The Net.RestSharp\\EmbyClient.Dotnet folder includes the C# project EmbyClient.Dotnet.csproj and all code that is required. You can copy the whole folder directly into your own project. Visal Studio Sample Application The folder includes a Visual Studio solution which you can open directly in Visual Studio 2019 (or later). The sample application is a simple Windows Forms application which demonstrates how to authenticate with Emby Server and make basic API calls: Basic Code Example using System; using System.Diagnostics; using EmbyClient.Dotnet.Api; using EmbyClient.Dotnet.Client; using EmbyClient.Dotnet.Model; namespace Example { public class Example { public void main() { // Configure API key authorization: apikeyauth Configuration.Default.ApiKey.Add(\"api_key\", \"YOUR_API_KEY\"); // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed // Configuration.Default.ApiKeyPrefix.Add(\"api_key\", \"Bearer\"); var apiInstance = new ActivityLogServiceApi(); var startIndex = 56; // int? | Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional) var limit = 56; // int? | Optional. The maximum number of records to return (optional) var minDate = minDate_example; // string | Optional. The minimum date. Format = ISO (optional) try { // Gets activity log entries QueryResultActivityLogEntry result = apiInstance.GetSystemActivitylogEntries(startIndex, limit, minDate); Debug.WriteLine(result); } catch (Exception e) { Debug.Print(\"Exception when calling ActivityLogServiceApi.GetSystemActivitylogEntries: \" + e.Message ); } } } } Documentation Links For general documentation, please refer to Accessing Emby Server via REST API . The available API endpoints are documented in the REST API Reference section."
  },
  "home/sdk/apiclients/Python/README.html": {
    "href": "home/sdk/apiclients/Python/README.html",
    "title": "Python Client",
    "keywords": "Python Client Name embyclient-python Language Python SDK Folder SampleCode/RestApi/Clients/Python Requirements. Python 2.7 and 3.4+ Installation & Usage Setuptools Install via Setuptools . python setup.py install --user (or sudo python setup.py install to install the package for all users) Then import the package: import embyclient-python Getting Started Please follow the installation procedure and then run the following: from __future__ import print_function import time import embyclient-python from embyclient-python.rest import ApiException from pprint import pprint # Configure API key authorization: apikeyauth configuration = embyclient-python.Configuration() configuration.api_key['api_key'] = 'YOUR_API_KEY' # Uncomment below to setup prefix (e.g. Bearer) for API key, if needed # configuration.api_key_prefix['api_key'] = 'Bearer' # create an instance of the API class api_instance = embyclient-python.ActivityLogServiceApi(embyclient-python.ApiClient(configuration)) start_index = 56 # int | Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional) limit = 56 # int | Optional. The maximum number of records to return (optional) min_date = 'min_date_example' # str | Optional. The minimum date. Format = ISO (optional) try: # Gets activity log entries api_response = api_instance.get_system_activitylog_entries(start_index=start_index, limit=limit, min_date=min_date) pprint(api_response) except ApiException as e: print(\"Exception when calling ActivityLogServiceApi->get_system_activitylog_entries: %s\\n\" % e) Documentation Links For general documentation, please refer to Accessing Emby Server via REST API . The available API endpoints are documented in the REST API Reference section."
  },
  "home/sdk/apiclients/Swift5/README.html": {
    "href": "home/sdk/apiclients/Swift5/README.html",
    "title": "Swift Client",
    "keywords": "Swift Client Name embyclient-rest-swift Language Swift SDK Folder SampleCode/RestApi/Clients/Swift5 Installation Put the package under your project folder and add the following in import: import \"./embyclient-rest-swift\" Documentation Links For general documentation, please refer to Accessing Emby Server via REST API . The available API endpoints are documented in the REST API Reference section."
  },
  "home/sdk/apiclients/TypeScript/README.html": {
    "href": "home/sdk/apiclients/TypeScript/README.html",
    "title": "TypeScript Client",
    "keywords": "TypeScript Client Name EmbyClient.TypeScript Language TypeScript SDK Folder SampleCode/RestApi/Clients/TypeScript Prerequisites This TypeScript client utilizes the Fetch API . The generated Node module can be used in the following environments: Environment Node.js Webpack Browserify Language level ES5 - you must have a Promises/A+ library installed ES6 Module system CommonJS ES6 module system It can be used in both TypeScript and JavaScript. In TypeScript, the definition should be automatically resolved via package.json . ( Reference ) Building To build and compile the typescript sources to javascript use: npm install npm run build Publishing Important We do not recommend to use and install this code as a package. Probably too many adjustments will be required to get it working according to your requirements. A better approach is to use the code files directly in your project! First build the package then run npm publish Note Please edit the package name to a custom name of yours before publishing anywhere! Consuming Navigate to the folder of your consuming project and run one of the following commands. Published npm install {{npmName}}@{{npmVersion}} --save UnPublished npm install PATH_TO_GENERATED_PACKAGE --save Documentation Links For general documentation, please refer to Accessing Emby Server via REST API . The available API endpoints are documented in the REST API Reference section."
  },
  "home/sdk/index.html": {
    "href": "home/sdk/index.html",
    "title": "Emby SDK",
    "keywords": "Emby SDK The Emby SDK provides, information, tools and sample code to assist in software development of solutions around Emby Server . The SDK be downloaded from from the links on the Download Page . SDK Contents Here's a list of what is included in the current SDK package: /docs An offline version of this documentation with full-text search /Resources /Resources/OpenApi Contains the OpenApi v2 and v3 specifications of the Emby Server REST Api for the current SDK version /SampleCode /SampleCode/RestApi /SampleCode/RestApi/Clients API Client code samples for various programming languages /SampleCode/Plugins Templates and examples of server plugins"
  },
  "home/sdk/plugins/index.html": {
    "href": "home/sdk/plugins/index.html",
    "title": "Plugin Sample Code",
    "keywords": "Plugin Sample Code The SDK includes sample code for creating server plugins, for demonstrating various aspects of plugin development and for use as a starting point for your own project. Licensing There are no licenses attached to the code and developers are free to decide how to make use of the provided code examples. Available Samples Simple Plugin Template Use this as a starting point for creating new plugins Note Expect more samples to be added soon!"
  },
  "home/sdk/plugins/template_simple.html": {
    "href": "home/sdk/plugins/template_simple.html",
    "title": "Simple Plugin Template",
    "keywords": "Simple Plugin Template Name EmbySimplePlugin Language C# SDK Folder SampleCode/Plugins/Template/EmbySimplePlugin Prerequisites Windows 10 or later Visual Studio 2019 or later A local Emby Server installation for testing Emby Server Download Development on other platforms is possible, but too inconvenient as that it would be considering. Note Your Plugin will be able to run on ALL Emby target platforms! Usage Open the EmbySimplePlugin.sln solution in Visual Studio In the Plugin class, replace all the indicated values with your own Rename the EmbySimplePlugin project in Visual Studio This will also change the file name Adjust the namespace in the Plugin class accordingly Next Steps Follow the documentation about building server plugins: Server Plugin Development"
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to Emby DEV",
    "keywords": "Welcome to Emby DEV This is the one-stop location for all information around software development within the Emby ecosystem. What's new? Conceptual Documentation This part is familiar stuff in a new shape: The documentation from the GitHub Wiki has been migrated to Emby DEV All articels have been revised and updated The content is fully searchable now (even in the offline version of the docs) All mentioned types and REST Api calls are linked to the reference documentation sections Just take a look and see Reference Documentation For REST API Previously there was only that swagger link on the server dashboard from which you could browse the API endpoints via the Swagger web app. This is tedious in handling and doesn't allow searching through API endpoints The REST API reference documentation has been moved to this site now It gets automatically updated with each new Emby Server release - when changes were introduced to the REST API surface It is fully searchable All related schema types are included on each endpoint documentation page REST API schema types have cross-references to the native .NET API types Go for it and Start Here ! For Emby Server .NET API Totally new: We have a complete reference documentation for all types which are available to Plugin developers. Structured browsing via tree TOC Fully searchable Might help you to find out things you weren't able to before Surely not that much exciting for reading from top to bottom, but it's still Worth a Look . The real value will become apparent once you are looking for something specific. The Emby SDK At the core of all this, we have the new Emby SDK . Previously, all information has been spread over many places => Now it's all in a single download package Previously, all code, information and tools were permanently outdated => Not anymore: The new Emby SDK is getting updated and released automatically whenever a change is made to either the REST API or the Plugin API. Previously, it wasn't always clear which APIs are new and specific to the current beta version or where these are available with the Release version => All concerns clear: The Emby SDK releases will be dual branched. This means that we have to release channels for the SDK (Release/Beta), just like the server itself SDK Content Besides two plugin sample projects, another highlight are the new Emby Server REST API client implementations in more than 6 different programming languages - of course including source code. Check these out in the SDK Content section."
  },
  "reference/index.html": {
    "href": "reference/index.html",
    "title": "Reference Documentation",
    "keywords": "Reference Documentation Emby Server Rest API A complete list of all REST API Endpoints. Please refer to Accessing Emby Server vie REST API for general documentation about using the API. Emby Server Plugin API More information about creating Emby Server PlugIns can be found in the documentatoin section: Creating Server PlugIns for general documentation about using the API. Namespaces: Emby.Model.ProcessRun Emby.Web.GenericEdit MediaBrowser.Common MediaBrowser.Controller MediaBrowser.Model"
  },
  "reference/pluginapi/Emby.Model.ProcessRun.html": {
    "href": "reference/pluginapi/Emby.Model.ProcessRun.html",
    "title": "Namespace Emby.Model.ProcessRun",
    "keywords": "Namespace Emby.Model.ProcessRun Classes RunningProcessesChangedEventArgs EventArgs for the RunningProcessesChanged event. Interfaces IProcessManager IProcessRunner IProcessRunnerWithOutput Enums RunningProcessesChangedEventArgs.ProcessChangeType"
  },
  "reference/pluginapi/Emby.Model.ProcessRun.IProcessManager.html": {
    "href": "reference/pluginapi/Emby.Model.ProcessRun.IProcessManager.html",
    "title": "Interface IProcessManager",
    "keywords": "Interface IProcessManager Namespace : Emby.Model.ProcessRun Assembly : MediaBrowser.Model.dll Syntax public interface IProcessManager Methods GetRunningProcesses() Returns a list of currently running processes. Declaration IReadOnlyCollection<IProcessRunner> GetRunningProcesses() Returns Type Description IReadOnlyCollection < IProcessRunner > RegisterProcess(IProcessRunner, Boolean) Registers a process. Declaration bool RegisterProcess(IProcessRunner processRunner, bool autoUnregister = false) Parameters Type Name Description IProcessRunner processRunner The process runner. Boolean autoUnregister if set to true [automatic unregister]. Returns Type Description Boolean True, if the process was registered successfully; false it the process was registered already. StopAllProcesses() Stops all processes. Declaration Task StopAllProcesses() Returns Type Description Task A Task that will complete once all processes have been stopped. UnregisterProcess(IProcessRunner) Unregisters the process. Declaration bool UnregisterProcess(IProcessRunner processRunner) Parameters Type Name Description IProcessRunner processRunner The process runner. Returns Type Description Boolean A boolean indicating whether the process had existed and was removed successfully. Events RunningProcessesChanged Occurs when the list of running processes has changed. Declaration event EventHandler<RunningProcessesChangedEventArgs> RunningProcessesChanged Event Type Type Description EventHandler < RunningProcessesChangedEventArgs >"
  },
  "reference/pluginapi/Emby.Model.ProcessRun.IProcessRunner.html": {
    "href": "reference/pluginapi/Emby.Model.ProcessRun.IProcessRunner.html",
    "title": "Interface IProcessRunner",
    "keywords": "Interface IProcessRunner Inherited Members IDisposable.Dispose() Namespace : Emby.Model.ProcessRun Assembly : MediaBrowser.Model.dll Syntax public interface IProcessRunner : IDisposable Properties LastExitCode Declaration int? LastExitCode { get; } Property Value Type Description Nullable < Int32 > Name Declaration string Name { get; } Property Value Type Description String Methods Run(String, String) Declaration bool Run(string exeFileName, string commandLineArgs) Parameters Type Name Description String exeFileName String commandLineArgs Returns Type Description Boolean Run(String, String, String) Declaration bool Run(string exeFileName, string commandLineArgs, string workingDirectory) Parameters Type Name Description String exeFileName String commandLineArgs String workingDirectory Returns Type Description Boolean WaitAndKillAsync(Int32) Declaration Task<bool> WaitAndKillAsync(int timeoutMs) Parameters Type Name Description Int32 timeoutMs Returns Type Description Task < Boolean > WaitForExitAsync(Int32, CancellationToken) Declaration Task<bool> WaitForExitAsync(int timeoutMs, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Int32 timeoutMs CancellationToken cancellationToken Returns Type Description Task < Boolean >"
  },
  "reference/pluginapi/Emby.Model.ProcessRun.IProcessRunnerWithOutput.html": {
    "href": "reference/pluginapi/Emby.Model.ProcessRun.IProcessRunnerWithOutput.html",
    "title": "Interface IProcessRunnerWithOutput",
    "keywords": "Interface IProcessRunnerWithOutput Inherited Members IProcessRunner.Run(String, String) IProcessRunner.Run(String, String, String) IProcessRunner.WaitForExitAsync(Int32, CancellationToken) IProcessRunner.WaitAndKillAsync(Int32) IProcessRunner.Name IProcessRunner.LastExitCode IDisposable.Dispose() Namespace : Emby.Model.ProcessRun Assembly : MediaBrowser.Model.dll Syntax public interface IProcessRunnerWithOutput : IProcessRunner, IDisposable Methods LogOutput(LogSeverity) Declaration void LogOutput(LogSeverity logSeverity) Parameters Type Name Description LogSeverity logSeverity"
  },
  "reference/pluginapi/Emby.Model.ProcessRun.RunningProcessesChangedEventArgs.html": {
    "href": "reference/pluginapi/Emby.Model.ProcessRun.RunningProcessesChangedEventArgs.html",
    "title": "Class RunningProcessesChangedEventArgs",
    "keywords": "Class RunningProcessesChangedEventArgs EventArgs for the RunningProcessesChanged event. Inheritance Object EventArgs RunningProcessesChangedEventArgs Inherited Members EventArgs.Empty Namespace : Emby.Model.ProcessRun Assembly : MediaBrowser.Model.dll Syntax public class RunningProcessesChangedEventArgs : EventArgs Constructors RunningProcessesChangedEventArgs(RunningProcessesChangedEventArgs.ProcessChangeType, IProcessRunner) Declaration public RunningProcessesChangedEventArgs(RunningProcessesChangedEventArgs.ProcessChangeType changeType, IProcessRunner processRunner) Parameters Type Name Description RunningProcessesChangedEventArgs.ProcessChangeType changeType IProcessRunner processRunner Properties ChangeType Gets the type of the change. Declaration public RunningProcessesChangedEventArgs.ProcessChangeType ChangeType { get; } Property Value Type Description RunningProcessesChangedEventArgs.ProcessChangeType The type of the change. ProcessRunner Gets the process runner. Declaration public IProcessRunner ProcessRunner { get; } Property Value Type Description IProcessRunner The process runner. See Also EventArgs"
  },
  "reference/pluginapi/Emby.Model.ProcessRun.RunningProcessesChangedEventArgs.ProcessChangeType.html": {
    "href": "reference/pluginapi/Emby.Model.ProcessRun.RunningProcessesChangedEventArgs.ProcessChangeType.html",
    "title": "Enum RunningProcessesChangedEventArgs.ProcessChangeType",
    "keywords": "Enum RunningProcessesChangedEventArgs.ProcessChangeType Namespace : Emby.Model.ProcessRun Assembly : MediaBrowser.Model.dll Syntax public enum ProcessChangeType Fields Name Description Added Removed Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<RunningProcessesChangedEventArgs.ProcessChangeType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Model.Sanitation.html": {
    "href": "reference/pluginapi/Emby.Model.Sanitation.html",
    "title": "Namespace Emby.Model.Sanitation",
    "keywords": "Namespace Emby.Model.Sanitation Classes SanitationExtensions SanitationTypeAttribute UrlSanitationOptions Enums SanitationContentType"
  },
  "reference/pluginapi/Emby.Model.Sanitation.SanitationContentType.html": {
    "href": "reference/pluginapi/Emby.Model.Sanitation.SanitationContentType.html",
    "title": "Enum SanitationContentType",
    "keywords": "Enum SanitationContentType Namespace : Emby.Model.Sanitation Assembly : MediaBrowser.Model.dll Syntax public enum SanitationContentType Fields Name Description General Host Password Port UrlPath Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SanitationContentType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Model.Sanitation.SanitationExtensions.html": {
    "href": "reference/pluginapi/Emby.Model.Sanitation.SanitationExtensions.html",
    "title": "Class SanitationExtensions",
    "keywords": "Class SanitationExtensions Inheritance Object SanitationExtensions Namespace : Emby.Model.Sanitation Assembly : MediaBrowser.Model.dll Syntax public static class SanitationExtensions Fields ZeroWidthJoiner Declaration public const string ZeroWidthJoiner = \"‍\" Field Value Type Description String ZeroWidthNonJoiner Declaration public const string ZeroWidthNonJoiner = \"‌\" Field Value Type Description String ZeroWidthSpace Declaration public const string ZeroWidthSpace = \"​\" Field Value Type Description String Methods MarkPrivate(String, SanitationContentType) Declaration public static string MarkPrivate(this string value, SanitationContentType sanitationType = SanitationContentType.General) Parameters Type Name Description String value SanitationContentType sanitationType Returns Type Description String SanitizeUrl(String, UrlSanitationOptions) Declaration public static string SanitizeUrl(this string urlString, UrlSanitationOptions options) Parameters Type Name Description String urlString UrlSanitationOptions options Returns Type Description String"
  },
  "reference/pluginapi/Emby.Model.Sanitation.SanitationTypeAttribute.html": {
    "href": "reference/pluginapi/Emby.Model.Sanitation.SanitationTypeAttribute.html",
    "title": "Class SanitationTypeAttribute",
    "keywords": "Class SanitationTypeAttribute Inheritance Object Attribute SanitationTypeAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : Emby.Model.Sanitation Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, Inherited = true, AllowMultiple = false)] public sealed class SanitationTypeAttribute : Attribute Constructors SanitationTypeAttribute(SanitationContentType) Declaration public SanitationTypeAttribute(SanitationContentType sanitationType) Parameters Type Name Description SanitationContentType sanitationType Properties SanitationType Declaration public SanitationContentType SanitationType { get; } Property Value Type Description SanitationContentType"
  },
  "reference/pluginapi/Emby.Model.Sanitation.UrlSanitationOptions.html": {
    "href": "reference/pluginapi/Emby.Model.Sanitation.UrlSanitationOptions.html",
    "title": "Class UrlSanitationOptions",
    "keywords": "Class UrlSanitationOptions Inheritance Object UrlSanitationOptions Namespace : Emby.Model.Sanitation Assembly : MediaBrowser.Model.dll Syntax public class UrlSanitationOptions Properties DefaultParameterNames Declaration public static HashSet<string> DefaultParameterNames { get; } Property Value Type Description HashSet < String > SanitizeDefaultParams Gets or sets a value indicating whether to sanitize parameters included in DefaultParameterNames . Declaration public bool SanitizeDefaultParams { get; set; } Property Value Type Description Boolean true to sanitize parameters included in DefaultParameterNames ; otherwise, false . Remarks true by default. Examples http://user:*****@host.domain.com:8080/pathpart1/pathpart2?param1=abcde+param2=cdefg SanitizeHost Gets or sets a value indicating whether to sanitize the host name or address. Declaration public bool SanitizeHost { get; set; } Property Value Type Description Boolean true to sanitize the host name or address; otherwise, false . Examples http://user:password@*****:8080/pathpart1/pathpart2?param1=abcde+param2=cdefg SanitizeParams Gets the sanitize parameter list. Declaration public List<string> SanitizeParams { get; } Property Value Type Description List < String > The sanitize parameter list. Remarks Add parameter names to sanitize. Applies to URL parameters, request headers and response headers. Examples http://user:password@host.domain.com:8080/pathpart1/pathpart2?param1=*****+param2=cdefg SanitizePath Gets or sets a value indicating whether to sanitize the path parts. Declaration public bool SanitizePath { get; set; } Property Value Type Description Boolean true to sanitize the path parts; otherwise, false . Examples http://user:password@host.domain.com:8080/*****/*****?param1=abcde+param2=cdefg SanitizePort Gets or sets a value indicating whether to sanitize the port number. Declaration public bool SanitizePort { get; set; } Property Value Type Description Boolean true to sanitize the port number; otherwise, false . Examples http://user:password@host.domain.com:****/pathpart1/pathpart2?param1=abcde+param2=cdefg SanitizeStrings Gets the sanitize strings list. Declaration public IList<string> SanitizeStrings { get; } Property Value Type Description IList < String > The sanitize strings list. Remarks Add arbitrary strings to sanitize. Applies to URL parameter, request header and response header values. Examples http://user:password@host.domain.com:8080/pathpart1/*****?param1=abcde+param2=cdefg Methods ShouldSanitizeParam(String, String) Declaration public bool ShouldSanitizeParam(string paramName, string value = null) Parameters Type Name Description String paramName String value Returns Type Description Boolean"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Actions.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Actions.html",
    "title": "Namespace Emby.Web.GenericEdit.Actions",
    "keywords": "Namespace Emby.Web.GenericEdit.Actions Classes PostbackAction"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Actions.PostbackAction.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Actions.PostbackAction.html",
    "title": "Class PostbackAction",
    "keywords": "Class PostbackAction Inheritance Object PostbackAction Namespace : Emby.Web.GenericEdit.Actions Assembly : Emby.Web.GenericEdit.dll Syntax public class PostbackAction Properties CommandParameterPropertyId Declaration public string CommandParameterPropertyId { get; set; } Property Value Type Description String PostbackCommandId Declaration public string PostbackCommandId { get; set; } Property Value Type Description String TargetEditorId Declaration public string TargetEditorId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Common.EditorHelpers.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Common.EditorHelpers.html",
    "title": "Class EditorHelpers",
    "keywords": "Class EditorHelpers Inheritance Object EditorHelpers Namespace : Emby.Web.GenericEdit.Common Assembly : Emby.Web.GenericEdit.dll Syntax public static class EditorHelpers Methods BuildEditorId(String, String) Declaration public static string BuildEditorId(string parentId, string name) Parameters Type Name Description String parentId String name Returns Type Description String GetColor(Enum) Declaration public static string GetColor(this Enum enumValue) Parameters Type Name Description Enum enumValue Returns Type Description String GetDescription(Enum) Gets the content of an enum member's DescriptionAttribute , or its name in case there is none. Declaration public static string GetDescription(this Enum enumValue) Parameters Type Name Description Enum enumValue The enum value. Returns Type Description String GetDisplayName(Enum) Declaration public static string GetDisplayName(this Enum value) Parameters Type Name Description Enum value Returns Type Description String GetSelectOptionsFromEnumList(IEnumerable<Enum>) Declaration public static IList<EditorSelectOption> GetSelectOptionsFromEnumList(IEnumerable<Enum> enumValues) Parameters Type Name Description IEnumerable < Enum > enumValues Returns Type Description IList < EditorSelectOption > GetSelectOptionsFromEnumList<T>(IEnumerable<T>) Declaration public static IList<EditorSelectOption> GetSelectOptionsFromEnumList<T>(IEnumerable<T> enumValues) where T : struct, Enum Parameters Type Name Description IEnumerable <T> enumValues Returns Type Description IList < EditorSelectOption > Type Parameters Name Description T RadioOptionFromEnum<T>(T) Declaration public static EditorRadioOption RadioOptionFromEnum<T>(this T enumValue) where T : struct, Enum Parameters Type Name Description T enumValue Returns Type Description EditorRadioOption Type Parameters Name Description T SplitByCasing(String) Declaration public static string SplitByCasing(this string input) Parameters Type Name Description String input Returns Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Common.EditorRadioOption.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Common.EditorRadioOption.html",
    "title": "Class EditorRadioOption",
    "keywords": "Class EditorRadioOption Inheritance Object EditorRadioOption Namespace : Emby.Web.GenericEdit.Common Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorRadioOption Constructors EditorRadioOption() Declaration public EditorRadioOption() EditorRadioOption(Object, String, String) Declaration public EditorRadioOption(object value, string primaryText, string secondaryText) Parameters Type Name Description Object value String primaryText String secondaryText Properties Children Declaration public EditableObjectBase Children { get; set; } Property Value Type Description EditableObjectBase IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description Boolean PrimaryText Declaration public string PrimaryText { get; set; } Property Value Type Description String SecondaryText Declaration public string SecondaryText { get; set; } Property Value Type Description String Value Declaration public object Value { get; set; } Property Value Type Description Object"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Common.EditorSelectOption.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Common.EditorSelectOption.html",
    "title": "Class EditorSelectOption",
    "keywords": "Class EditorSelectOption Inheritance Object EditorSelectOption Namespace : Emby.Web.GenericEdit.Common Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorSelectOption Constructors EditorSelectOption() Initializes a new instance of the Object class. Declaration public EditorSelectOption() EditorSelectOption(Int32, String, String, Boolean, String, String, String, String) Declaration public EditorSelectOption(int maxTextLength, string value, string name, bool isEnabled = true, string color = null, string displayHint = null, string toolTip = null, string filterValue = null) Parameters Type Name Description Int32 maxTextLength String value String name Boolean isEnabled String color String displayHint String toolTip String filterValue EditorSelectOption(String, String, Boolean, String, String, String, String) Declaration public EditorSelectOption(string value, string name, bool isEnabled = true, string color = null, string displayHint = null, string toolTip = null, string filterValue = null) Parameters Type Name Description String value String name Boolean isEnabled String color String displayHint String toolTip String filterValue Properties Color Declaration public string Color { get; set; } Property Value Type Description String DisplayHint Declaration public string DisplayHint { get; set; } Property Value Type Description String FilterValue Declaration public string FilterValue { get; set; } Property Value Type Description String IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description Boolean Name Declaration public string Name { get; set; } Property Value Type Description String ShortName Declaration public string ShortName { get; set; } Property Value Type Description String ToolTip Declaration public string ToolTip { get; set; } Property Value Type Description String Value Declaration public string Value { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Common.EditorTypes.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Common.EditorTypes.html",
    "title": "Enum EditorTypes",
    "keywords": "Enum EditorTypes Namespace : Emby.Web.GenericEdit.Common Assembly : Emby.Web.GenericEdit.dll Syntax public enum EditorTypes Fields Name Description Boolean ButtonGroup ButtonItem CaptionItem DataGrid Date FilePath FolderPath Group ItemList LabelItem Numeric PivotGrid ProgressItem RadioGroup SelectMultiple SelectSingle SpacerItem StatusItem Text Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<EditorTypes>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Common.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Common.html",
    "title": "Namespace Emby.Web.GenericEdit.Common",
    "keywords": "Namespace Emby.Web.GenericEdit.Common Classes EditorHelpers EditorRadioOption EditorSelectOption Enums EditorTypes SpacerSize"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Common.SpacerSize.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Common.SpacerSize.html",
    "title": "Enum SpacerSize",
    "keywords": "Enum SpacerSize Namespace : Emby.Web.GenericEdit.Common Assembly : Emby.Web.GenericEdit.dll Syntax public enum SpacerSize Fields Name Description Large Medium Small XLarge Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SpacerSize>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Conditions.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Conditions.html",
    "title": "Namespace Emby.Web.GenericEdit.Conditions",
    "keywords": "Namespace Emby.Web.GenericEdit.Conditions Classes PropertyCondition Enums PropertyConditionType"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Conditions.PropertyCondition.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Conditions.PropertyCondition.html",
    "title": "Class PropertyCondition",
    "keywords": "Class PropertyCondition Inheritance Object PropertyCondition Namespace : Emby.Web.GenericEdit.Conditions Assembly : Emby.Web.GenericEdit.dll Syntax public class PropertyCondition Properties AffectedPropertyId Declaration public string AffectedPropertyId { get; set; } Property Value Type Description String ConditionType Gets the simple condition. Declaration public PropertyConditionType ConditionType { get; set; } Property Value Type Description PropertyConditionType The simple condition. SimpleCondition Gets the simple condition. Declaration public SimpleCondition? SimpleCondition { get; set; } Property Value Type Description Nullable < SimpleCondition > The simple condition. TargetPropertyId Gets the target property name or path. Declaration public string TargetPropertyId { get; set; } Property Value Type Description String The target property name or path. Value Gets the value. Declaration public object Value { get; set; } Property Value Type Description Object The value. ValueCondition Gets the value condition. Declaration public ValueCondition? ValueCondition { get; set; } Property Value Type Description Nullable < ValueCondition > The value condition."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Conditions.PropertyConditionType.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Conditions.PropertyConditionType.html",
    "title": "Enum PropertyConditionType",
    "keywords": "Enum PropertyConditionType Namespace : Emby.Web.GenericEdit.Conditions Assembly : Emby.Web.GenericEdit.dll Syntax public enum PropertyConditionType Fields Name Description Enabled Visible Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<PropertyConditionType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.EditableObjectBase.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.EditableObjectBase.html",
    "title": "Class EditableObjectBase",
    "keywords": "Class EditableObjectBase Inheritance Object EditableObjectBase EditableOptionsBase Implements IEditableObject Namespace : Emby.Web.GenericEdit Assembly : Emby.Web.GenericEdit.dll Syntax public abstract class EditableObjectBase : IEditableObject Fields JsonSerializer Declaration protected static IJsonSerializer JsonSerializer Field Value Type Description IJsonSerializer Properties EditorDescription Gets the editor description. Declaration [Browsable(false)] public virtual string EditorDescription { get; } Property Value Type Description String The editor description. EditorTitle Gets the editor title. Declaration [Browsable(false)] public abstract string EditorTitle { get; } Property Value Type Description String The editor title. TitleButton Gets the title button. Declaration [Browsable(false)] public virtual ButtonItem TitleButton { get; } Property Value Type Description ButtonItem The title button. Methods CreateEditContainer() Declaration public virtual IEditObjectContainer CreateEditContainer() Returns Type Description IEditObjectContainer DeserializeFromJsonStream(Stream, IJsonSerializer) Declaration public IEditableObject DeserializeFromJsonStream(Stream jsonStream, IJsonSerializer serializer) Parameters Type Name Description Stream jsonStream IJsonSerializer serializer Returns Type Description IEditableObject DeserializeFromJsonString(String, IJsonSerializer) Declaration public IEditableObject DeserializeFromJsonString(string jsonString, IJsonSerializer serializer) Parameters Type Name Description String jsonString IJsonSerializer serializer Returns Type Description IEditableObject GetChangesFromDefault() Declaration public List<PropertyChangeInfo> GetChangesFromDefault() Returns Type Description List < PropertyChangeInfo > GetEditorBuildOptions() Declaration protected virtual EditorBuildOptions GetEditorBuildOptions() Returns Type Description EditorBuildOptions Implements IEditableObject"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.EditableObjectCollection.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.EditableObjectCollection.html",
    "title": "Class EditableObjectCollection",
    "keywords": "Class EditableObjectCollection Inheritance Object List < EditableObjectBase > EditableObjectCollection Implements IList < EditableObjectBase > ICollection < EditableObjectBase > IReadOnlyList < EditableObjectBase > IReadOnlyCollection < EditableObjectBase > IEnumerable < EditableObjectBase > IList ICollection IEditableObjectCollection IEnumerable < IEditableObject > IEnumerable Inherited Members System.Collections.Generic.List<Emby.Web.GenericEdit.EditableObjectBase>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Emby.Web.GenericEdit.EditableObjectBase>.System.Collections.IList.set_Item(System.Int32, System.Object) List<EditableObjectBase>.Add(EditableObjectBase) List<EditableObjectBase>.AddRange(IEnumerable<EditableObjectBase>) List<EditableObjectBase>.AsReadOnly() List<EditableObjectBase>.BinarySearch(EditableObjectBase) List<EditableObjectBase>.BinarySearch(EditableObjectBase, IComparer<EditableObjectBase>) List<EditableObjectBase>.BinarySearch(Int32, Int32, EditableObjectBase, IComparer<EditableObjectBase>) List<EditableObjectBase>.Clear() List<EditableObjectBase>.Contains(EditableObjectBase) List<EditableObjectBase>.ConvertAll<TOutput>(Converter<EditableObjectBase, TOutput>) List<EditableObjectBase>.CopyTo(EditableObjectBase[]) List<EditableObjectBase>.CopyTo(EditableObjectBase[], Int32) List<EditableObjectBase>.CopyTo(Int32, EditableObjectBase[], Int32, Int32) List<EditableObjectBase>.Exists(Predicate<EditableObjectBase>) List<EditableObjectBase>.Find(Predicate<EditableObjectBase>) List<EditableObjectBase>.FindAll(Predicate<EditableObjectBase>) List<EditableObjectBase>.FindIndex(Int32, Int32, Predicate<EditableObjectBase>) List<EditableObjectBase>.FindIndex(Int32, Predicate<EditableObjectBase>) List<EditableObjectBase>.FindIndex(Predicate<EditableObjectBase>) List<EditableObjectBase>.FindLast(Predicate<EditableObjectBase>) List<EditableObjectBase>.FindLastIndex(Int32, Int32, Predicate<EditableObjectBase>) List<EditableObjectBase>.FindLastIndex(Int32, Predicate<EditableObjectBase>) List<EditableObjectBase>.FindLastIndex(Predicate<EditableObjectBase>) List<EditableObjectBase>.ForEach(Action<EditableObjectBase>) List<EditableObjectBase>.GetEnumerator() List<EditableObjectBase>.GetRange(Int32, Int32) List<EditableObjectBase>.IndexOf(EditableObjectBase) List<EditableObjectBase>.IndexOf(EditableObjectBase, Int32) List<EditableObjectBase>.IndexOf(EditableObjectBase, Int32, Int32) List<EditableObjectBase>.Insert(Int32, EditableObjectBase) List<EditableObjectBase>.InsertRange(Int32, IEnumerable<EditableObjectBase>) List<EditableObjectBase>.LastIndexOf(EditableObjectBase) List<EditableObjectBase>.LastIndexOf(EditableObjectBase, Int32) List<EditableObjectBase>.LastIndexOf(EditableObjectBase, Int32, Int32) List<EditableObjectBase>.Remove(EditableObjectBase) List<EditableObjectBase>.RemoveAll(Predicate<EditableObjectBase>) List<EditableObjectBase>.RemoveAt(Int32) List<EditableObjectBase>.RemoveRange(Int32, Int32) List<EditableObjectBase>.Reverse() List<EditableObjectBase>.Reverse(Int32, Int32) List<EditableObjectBase>.Sort() List<EditableObjectBase>.Sort(IComparer<EditableObjectBase>) List<EditableObjectBase>.Sort(Comparison<EditableObjectBase>) List<EditableObjectBase>.Sort(Int32, Int32, IComparer<EditableObjectBase>) List<EditableObjectBase>.IEnumerable<EditableObjectBase>.GetEnumerator() List<EditableObjectBase>.ICollection.CopyTo(Array, Int32) List<EditableObjectBase>.IList.Add(Object) List<EditableObjectBase>.IList.Contains(Object) List<EditableObjectBase>.IList.IndexOf(Object) List<EditableObjectBase>.IList.Insert(Int32, Object) List<EditableObjectBase>.IList.Remove(Object) List<EditableObjectBase>.ToArray() List<EditableObjectBase>.TrimExcess() List<EditableObjectBase>.TrueForAll(Predicate<EditableObjectBase>) List<EditableObjectBase>.Capacity List<EditableObjectBase>.Count List<EditableObjectBase>.Item[Int32] List<EditableObjectBase>.ICollection<EditableObjectBase>.IsReadOnly List<EditableObjectBase>.ICollection.IsSynchronized List<EditableObjectBase>.ICollection.SyncRoot List<EditableObjectBase>.IList.IsFixedSize List<EditableObjectBase>.IList.IsReadOnly List<EditableObjectBase>.IList.Item[Int32] Namespace : Emby.Web.GenericEdit Assembly : Emby.Web.GenericEdit.dll Syntax public class EditableObjectCollection : List<EditableObjectBase>, IList<EditableObjectBase>, ICollection<EditableObjectBase>, IReadOnlyList<EditableObjectBase>, IReadOnlyCollection<EditableObjectBase>, IEnumerable<EditableObjectBase>, IList, ICollection, IEditableObjectCollection, IEnumerable<IEditableObject>, IEnumerable Constructors EditableObjectCollection() Declaration public EditableObjectCollection() EditableObjectCollection(IEnumerable<EditableObjectBase>) Declaration public EditableObjectCollection(IEnumerable<EditableObjectBase> collection) Parameters Type Name Description IEnumerable < EditableObjectBase > collection EditableObjectCollection(Int32) Declaration public EditableObjectCollection(int capacity) Parameters Type Name Description Int32 capacity Explicit Interface Implementations IEnumerable<IEditableObject>.GetEnumerator() Returns an enumerator that iterates through the collection. Declaration IEnumerator<IEditableObject> IEnumerable<IEditableObject>.GetEnumerator() Returns Type Description IEnumerator < IEditableObject > An enumerator that can be used to iterate through the collection. IEnumerable.GetEnumerator() Returns an enumerator that iterates through the collection. Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator An enumerator that can be used to iterate through the collection. Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection IEditableObjectCollection System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.EditableOptionsBase.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.EditableOptionsBase.html",
    "title": "Class EditableOptionsBase",
    "keywords": "Class EditableOptionsBase Inheritance Object EditableObjectBase EditableOptionsBase Implements IEditableObject Inherited Members EditableObjectBase.JsonSerializer EditableObjectBase.EditorTitle EditableObjectBase.EditorDescription EditableObjectBase.TitleButton EditableObjectBase.CreateEditContainer() EditableObjectBase.DeserializeFromJsonString(String, IJsonSerializer) EditableObjectBase.DeserializeFromJsonStream(Stream, IJsonSerializer) EditableObjectBase.GetChangesFromDefault() EditableObjectBase.GetEditorBuildOptions() Namespace : Emby.Web.GenericEdit Assembly : Emby.Web.GenericEdit.dll Syntax public abstract class EditableOptionsBase : EditableObjectBase, IEditableObject Implements IEditableObject"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.EditObjectContainer.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.EditObjectContainer.html",
    "title": "Class EditObjectContainer",
    "keywords": "Class EditObjectContainer Inheritance Object EditObjectContainer Implements IEditObjectContainer Namespace : Emby.Web.GenericEdit Assembly : Emby.Web.GenericEdit.dll Syntax public class EditObjectContainer : IEditObjectContainer Constructors EditObjectContainer() Initializes a new instance of the Object class. Declaration public EditObjectContainer() EditObjectContainer(Object, Object, EditorRoot) Initializes a new instance of the EditObjectContainer class. Declaration public EditObjectContainer(object editObject, object defaultObject, EditorRoot editorRoot) Parameters Type Name Description Object editObject The edit object. Object defaultObject The default object. EditorRoot editorRoot The editor root. Properties DefaultObject Declaration public object DefaultObject { get; set; } Property Value Type Description Object EditorRoot Declaration public EditorRoot EditorRoot { get; set; } Property Value Type Description EditorRoot Object Declaration public object Object { get; set; } Property Value Type Description Object TypeName Declaration public string TypeName { get; set; } Property Value Type Description String Implements IEditObjectContainer"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorBase.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorBase.html",
    "title": "Class EditorBase",
    "keywords": "Class EditorBase Inheritance Object EditorBase EditorBoolean EditorButtonGroup EditorButtonItem EditorCaptionItem EditorDateTime EditorFilePicker EditorFolderPicker EditorGrid EditorGroup EditorItemList EditorLabelItem EditorNumeric EditorPivotGrid EditorProgressItem EditorRadioGroup EditorSelectBase EditorSpacerItem EditorStatusItem EditorText Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public abstract class EditorBase Constructors EditorBase() Initializes a new instance of the Object class. Declaration protected EditorBase() EditorBase(EditorTypes, String, String) Declaration protected EditorBase(EditorTypes editorType, string name, string parentId) Parameters Type Name Description EditorTypes editorType String name String parentId Properties AllowEmpty Declaration public virtual bool AllowEmpty { get; set; } Property Value Type Description Boolean Description Declaration public string Description { get; set; } Property Value Type Description String DisplayName Declaration public string DisplayName { get; set; } Property Value Type Description String EditorType Declaration public EditorTypes EditorType { get; set; } Property Value Type Description EditorTypes Id Declaration public string Id { get; } Property Value Type Description String IsAdvanced Declaration public virtual bool IsAdvanced { get; set; } Property Value Type Description Boolean IsReadOnly Declaration public virtual bool IsReadOnly { get; set; } Property Value Type Description Boolean Name Declaration public string Name { get; set; } Property Value Type Description String ParentId Declaration public string ParentId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorBoolean.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorBoolean.html",
    "title": "Class EditorBoolean",
    "keywords": "Class EditorBoolean Inheritance Object EditorBase EditorBoolean Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorBoolean : EditorBase Constructors EditorBoolean() Initializes a new instance of the Object class. Declaration public EditorBoolean() EditorBoolean(String, String) Initializes a new instance of the EditorBoolean class. Declaration public EditorBoolean(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier. Properties AllowEmpty Gets or sets a value indicating whether [allow empty]. Declaration public override bool AllowEmpty { get; set; } Property Value Type Description Boolean true if [allow empty]; otherwise, false . Overrides EditorBase.AllowEmpty"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorButtonGroup.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorButtonGroup.html",
    "title": "Class EditorButtonGroup",
    "keywords": "Class EditorButtonGroup Inheritance Object EditorBase EditorButtonGroup Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorButtonGroup : EditorBase Constructors EditorButtonGroup() Initializes a new instance of the Object class. Declaration public EditorButtonGroup() EditorButtonGroup(IEnumerable<EditorButtonItem>, String, String) Initializes a new instance of the EditorButtonGroup class. Declaration public EditorButtonGroup(IEnumerable<EditorButtonItem> buttonItems, string name, string parentId) Parameters Type Name Description IEnumerable < EditorButtonItem > buttonItems The button items. String name The name. String parentId The parent identifier. Properties EditorItems Gets or sets the editor items. Declaration public List<EditorButtonItem> EditorItems { get; set; } Property Value Type Description List < EditorButtonItem > The editor items. IsBottomPanel Declaration public bool IsBottomPanel { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorButtonItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorButtonItem.html",
    "title": "Class EditorButtonItem",
    "keywords": "Class EditorButtonItem Inheritance Object EditorBase EditorButtonItem Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorButtonItem : EditorBase Constructors EditorButtonItem() Initializes a new instance of the Object class. Declaration public EditorButtonItem() EditorButtonItem(String, String) Initializes a new instance of the EditorButtonItem class. Declaration public EditorButtonItem(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorCaptionItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorCaptionItem.html",
    "title": "Class EditorCaptionItem",
    "keywords": "Class EditorCaptionItem Inheritance Object EditorBase EditorCaptionItem Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorCaptionItem : EditorBase Constructors EditorCaptionItem() Initializes a new instance of the Object class. Declaration public EditorCaptionItem() EditorCaptionItem(String, String) Initializes a new instance of the EditorCaptionItem class. Declaration public EditorCaptionItem(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorDateTime.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorDateTime.html",
    "title": "Class EditorDateTime",
    "keywords": "Class EditorDateTime Inheritance Object EditorBase EditorDateTime Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorDateTime : EditorBase Constructors EditorDateTime() Initializes a new instance of the Object class. Declaration public EditorDateTime() EditorDateTime(String, String) Initializes a new instance of the EditorDateTime class. Declaration public EditorDateTime(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier. Properties MaxValue Gets or sets the maximum value. Declaration public DateTime? MaxValue { get; set; } Property Value Type Description Nullable < DateTime > The maximum value. MinValue Gets or sets the minimum value. Declaration public DateTime? MinValue { get; set; } Property Value Type Description Nullable < DateTime > The minimum value."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorFilePicker.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorFilePicker.html",
    "title": "Class EditorFilePicker",
    "keywords": "Class EditorFilePicker Inheritance Object EditorBase EditorFilePicker Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorFilePicker : EditorBase Constructors EditorFilePicker() Initializes a new instance of the Object class. Declaration public EditorFilePicker() EditorFilePicker(String, String) Initializes a new instance of the EditorFilePicker class. Declaration public EditorFilePicker(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorFolderPicker.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorFolderPicker.html",
    "title": "Class EditorFolderPicker",
    "keywords": "Class EditorFolderPicker Inheritance Object EditorBase EditorFolderPicker Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorFolderPicker : EditorBase Constructors EditorFolderPicker() Initializes a new instance of the Object class. Declaration public EditorFolderPicker() EditorFolderPicker(String, String) Initializes a new instance of the EditorFolderPicker class. Declaration public EditorFolderPicker(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorGrid.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorGrid.html",
    "title": "Class EditorGrid",
    "keywords": "Class EditorGrid Inheritance Object EditorBase EditorGrid Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorGrid : EditorBase Constructors EditorGrid() Initializes a new instance of the Object class. Declaration public EditorGrid() EditorGrid(String, String, Boolean, String, String, String, String, String) Initializes a new instance of the EditorGrid class. Declaration public EditorGrid(string name, string parentId, bool doublePaneGrid, string dataSourceId, string dataSource2Id, string selectionSourceId, string filterSourceId, string datafilterSourceId) Parameters Type Name Description String name The name. String parentId The parent identifier. Boolean doublePaneGrid if set to true [double pane grid]. String dataSourceId The data source identifier. String dataSource2Id The data source2 identifier. String selectionSourceId The selection source identifier. String filterSourceId The filter source identifier. String datafilterSourceId The datafilter source identifier. Properties DataFilterSourceId Declaration public string DataFilterSourceId { get; set; } Property Value Type Description String DataSource2Id Declaration public string DataSource2Id { get; set; } Property Value Type Description String DataSourceId Declaration public string DataSourceId { get; set; } Property Value Type Description String FilterSourceId Declaration public string FilterSourceId { get; set; } Property Value Type Description String SelectionSourceId Declaration public string SelectionSourceId { get; set; } Property Value Type Description String ShowDoublePaneGrid Declaration public bool ShowDoublePaneGrid { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorGroup.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorGroup.html",
    "title": "Class EditorGroup",
    "keywords": "Class EditorGroup Inheritance Object EditorBase EditorGroup EditorRoot Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorGroup : EditorBase Constructors EditorGroup() Initializes a new instance of the Object class. Declaration public EditorGroup() EditorGroup(String, EditorBase[], String, String, EditorButtonItem) Initializes a new instance of the EditorGroup class. Declaration public EditorGroup(string title, EditorBase[] editorItems, string name, string parentId, EditorButtonItem titleButton) Parameters Type Name Description String title The title. EditorBase [] editorItems The editor items. String name The name. String parentId The parent identifier. EditorButtonItem titleButton The title button. Properties EditorItems Declaration public EditorBase[] EditorItems { get; set; } Property Value Type Description EditorBase [] TitleButton Declaration public EditorButtonItem TitleButton { get; set; } Property Value Type Description EditorButtonItem"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorItemList.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorItemList.html",
    "title": "Class EditorItemList",
    "keywords": "Class EditorItemList Inheritance Object EditorBase EditorItemList Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorItemList : EditorBase Constructors EditorItemList() Initializes a new instance of the Object class. Declaration public EditorItemList() EditorItemList(String, String) Initializes a new instance of the EditorItemList class. Declaration public EditorItemList(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorLabelItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorLabelItem.html",
    "title": "Class EditorLabelItem",
    "keywords": "Class EditorLabelItem Inheritance Object EditorBase EditorLabelItem Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorLabelItem : EditorBase Constructors EditorLabelItem() Initializes a new instance of the Object class. Declaration public EditorLabelItem() EditorLabelItem(String, String) Initializes a new instance of the EditorLabelItem class. Declaration public EditorLabelItem(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorNumeric.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorNumeric.html",
    "title": "Class EditorNumeric",
    "keywords": "Class EditorNumeric Inheritance Object EditorBase EditorNumeric Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorNumeric : EditorBase Constructors EditorNumeric() Initializes a new instance of the Object class. Declaration public EditorNumeric() EditorNumeric(String, String) Initializes a new instance of the EditorNumeric class. Declaration public EditorNumeric(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier. Properties DecimalPlaces Declaration public int DecimalPlaces { get; set; } Property Value Type Description Int32 MaxValue Declaration public long? MaxValue { get; set; } Property Value Type Description Nullable < Int64 > MinValue Declaration public long? MinValue { get; set; } Property Value Type Description Nullable < Int64 >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorPivotGrid.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorPivotGrid.html",
    "title": "Class EditorPivotGrid",
    "keywords": "Class EditorPivotGrid Inheritance Object EditorBase EditorPivotGrid Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorPivotGrid : EditorBase Constructors EditorPivotGrid() Initializes a new instance of the Object class. Declaration public EditorPivotGrid() EditorPivotGrid(String, String, String) Initializes a new instance of the EditorPivotGrid class. Declaration public EditorPivotGrid(string name, string parentId, string dataSourceId) Parameters Type Name Description String name The name. String parentId The parent identifier. String dataSourceId The data source identifier. Properties DataSourceId Declaration public string DataSourceId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorProgressItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorProgressItem.html",
    "title": "Class EditorProgressItem",
    "keywords": "Class EditorProgressItem Inheritance Object EditorBase EditorProgressItem Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorProgressItem : EditorBase Constructors EditorProgressItem() Initializes a new instance of the Object class. Declaration public EditorProgressItem() EditorProgressItem(String, String) Initializes a new instance of the EditorProgressItem class. Declaration public EditorProgressItem(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorRadioGroup.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorRadioGroup.html",
    "title": "Class EditorRadioGroup",
    "keywords": "Class EditorRadioGroup Inheritance Object EditorBase EditorRadioGroup Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorRadioGroup : EditorBase Constructors EditorRadioGroup() Initializes a new instance of the Object class. Declaration public EditorRadioGroup() EditorRadioGroup(IList<EditorRadioOption>, String, String, String) Initializes a new instance of the EditorRadioGroup class. Declaration public EditorRadioGroup(IList<EditorRadioOption> radioOptions, string name, string parentId, string itemsSourceId) Parameters Type Name Description IList < EditorRadioOption > radioOptions The radio options. String name The name. String parentId The parent identifier. String itemsSourceId The items source identifier. EditorRadioGroup(String, String) Initializes a new instance of the EditorRadioGroup class. Declaration public EditorRadioGroup(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier. Properties EmptyItemTitle Declaration public string EmptyItemTitle { get; set; } Property Value Type Description String ItemsSourceId Declaration public string ItemsSourceId { get; set; } Property Value Type Description String RadioOptions Declaration public EditorRadioOption[] RadioOptions { get; set; } Property Value Type Description EditorRadioOption []"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorRoot.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorRoot.html",
    "title": "Class EditorRoot",
    "keywords": "Class EditorRoot Inheritance Object EditorBase EditorGroup EditorRoot Inherited Members EditorGroup.TitleButton EditorGroup.EditorItems EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorRoot : EditorGroup Constructors EditorRoot() Initializes a new instance of the Object class. Declaration public EditorRoot() EditorRoot(String, EditorBase[], PropertyCondition[], PostbackAction[], EditorButtonItem) Initializes a new instance of the EditorRoot class. Declaration public EditorRoot(string title, EditorBase[] editorItems, PropertyCondition[] propertyConditions, PostbackAction[] postbackActions, EditorButtonItem titleButton) Parameters Type Name Description String title The title. EditorBase [] editorItems The editor items. PropertyCondition [] propertyConditions The property conditions. PostbackAction [] postbackActions The postback actions. EditorButtonItem titleButton The title button. Properties PostbackActions Declaration public PostbackAction[] PostbackActions { get; set; } Property Value Type Description PostbackAction [] PropertyConditions Declaration public PropertyCondition[] PropertyConditions { get; set; } Property Value Type Description PropertyCondition []"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorSelectBase.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorSelectBase.html",
    "title": "Class EditorSelectBase",
    "keywords": "Class EditorSelectBase Inheritance Object EditorBase EditorSelectBase EditorSelectMultiple EditorSelectSingle Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public abstract class EditorSelectBase : EditorBase Constructors EditorSelectBase() Initializes a new instance of the Object class. Declaration protected EditorSelectBase() EditorSelectBase(String, String, EditorTypes, IList<EditorSelectOption>, String, String) Initializes a new instance of the EditorSelectBase class. Declaration protected EditorSelectBase(string name, string parentId, EditorTypes elementType, IList<EditorSelectOption> selectOptions, string staticItemsSourceId, string itemsSourceId) Parameters Type Name Description String name The name. String parentId The parent identifier. EditorTypes elementType Type of the element. IList < EditorSelectOption > selectOptions The select options. String staticItemsSourceId The static items source identifier. String itemsSourceId The items source identifier. Properties ItemsSourceId Declaration public string ItemsSourceId { get; set; } Property Value Type Description String LineCount Declaration public virtual int? LineCount { get; set; } Property Value Type Description Nullable < Int32 > MultiLine Declaration public virtual bool MultiLine { get; set; } Property Value Type Description Boolean SelectOptions Declaration public virtual EditorSelectOption[] SelectOptions { get; set; } Property Value Type Description EditorSelectOption [] StaticItemsSourceId Declaration public string StaticItemsSourceId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorSelectMultiple.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorSelectMultiple.html",
    "title": "Class EditorSelectMultiple",
    "keywords": "Class EditorSelectMultiple Inheritance Object EditorBase EditorSelectBase EditorSelectMultiple Inherited Members EditorSelectBase.ItemsSourceId EditorSelectBase.StaticItemsSourceId EditorSelectBase.SelectOptions EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorSelectMultiple : EditorSelectBase Constructors EditorSelectMultiple() Initializes a new instance of the Object class. Declaration public EditorSelectMultiple() EditorSelectMultiple(IList<EditorSelectOption>, String, String, String, String) Initializes a new instance of the EditorSelectMultiple class. Declaration public EditorSelectMultiple(IList<EditorSelectOption> selectOptions, string name, string parentId, string staticItemsSourceId, string itemsSourceId) Parameters Type Name Description IList < EditorSelectOption > selectOptions The select options. String name The name. String parentId The parent identifier. String staticItemsSourceId The static items source identifier. String itemsSourceId The items source identifier. Properties EmptyItemTitle Declaration public string EmptyItemTitle { get; set; } Property Value Type Description String LineCount Declaration public override int? LineCount { get; set; } Property Value Type Description Nullable < Int32 > Overrides EditorSelectBase.LineCount MultiLine Declaration public override bool MultiLine { get; } Property Value Type Description Boolean Overrides EditorSelectBase.MultiLine"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorSelectSingle.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorSelectSingle.html",
    "title": "Class EditorSelectSingle",
    "keywords": "Class EditorSelectSingle Inheritance Object EditorBase EditorSelectBase EditorSelectSingle Inherited Members EditorSelectBase.ItemsSourceId EditorSelectBase.StaticItemsSourceId EditorSelectBase.MultiLine EditorSelectBase.LineCount EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorSelectSingle : EditorSelectBase Constructors EditorSelectSingle() Initializes a new instance of the Object class. Declaration public EditorSelectSingle() EditorSelectSingle(IList<EditorSelectOption>, String, String, String, String, Boolean) Initializes a new instance of the EditorSelectSingle class. Declaration public EditorSelectSingle(IList<EditorSelectOption> selectOptions, string name, string parentId, string staticItemsSourceId, string itemsSourceId, bool showAsRadio) Parameters Type Name Description IList < EditorSelectOption > selectOptions The select options. String name The name. String parentId The parent identifier. String staticItemsSourceId The static items source identifier. String itemsSourceId The items source identifier. Boolean showAsRadio if set to true [show as radio]. Properties EmptyItemTitle Declaration public string EmptyItemTitle { get; set; } Property Value Type Description String SelectOptions Declaration public override EditorSelectOption[] SelectOptions { get; set; } Property Value Type Description EditorSelectOption [] Overrides EditorSelectBase.SelectOptions ShowAsRadio Declaration public bool ShowAsRadio { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorSpacerItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorSpacerItem.html",
    "title": "Class EditorSpacerItem",
    "keywords": "Class EditorSpacerItem Inheritance Object EditorBase EditorSpacerItem Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorSpacerItem : EditorBase Constructors EditorSpacerItem() Initializes a new instance of the Object class. Declaration public EditorSpacerItem() EditorSpacerItem(String, String) Initializes a new instance of the EditorSpacerItem class. Declaration public EditorSpacerItem(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorStatusItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorStatusItem.html",
    "title": "Class EditorStatusItem",
    "keywords": "Class EditorStatusItem Inheritance Object EditorBase EditorStatusItem Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorStatusItem : EditorBase Constructors EditorStatusItem() Initializes a new instance of the Object class. Declaration public EditorStatusItem() EditorStatusItem(String, String) Initializes a new instance of the EditorStatusItem class. Declaration public EditorStatusItem(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorText.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.EditorText.html",
    "title": "Class EditorText",
    "keywords": "Class EditorText Inheritance Object EditorBase EditorText Inherited Members EditorBase.EditorType EditorBase.Name EditorBase.Id EditorBase.AllowEmpty EditorBase.IsReadOnly EditorBase.IsAdvanced EditorBase.DisplayName EditorBase.Description EditorBase.ParentId Namespace : Emby.Web.GenericEdit.Editors Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorText : EditorBase Constructors EditorText() Initializes a new instance of the Object class. Declaration public EditorText() EditorText(String, String) Initializes a new instance of the EditorText class. Declaration public EditorText(string name, string parentId) Parameters Type Name Description String name The name. String parentId The parent identifier. Properties IsPassword Declaration public bool IsPassword { get; set; } Property Value Type Description Boolean LineCount Declaration public int? LineCount { get; set; } Property Value Type Description Nullable < Int32 > MaxLength Declaration public int? MaxLength { get; set; } Property Value Type Description Nullable < Int32 > MultiLine Declaration public bool MultiLine { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Editors.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Editors.html",
    "title": "Namespace Emby.Web.GenericEdit.Editors",
    "keywords": "Namespace Emby.Web.GenericEdit.Editors Classes EditorBase EditorBoolean EditorButtonGroup EditorButtonItem EditorCaptionItem EditorDateTime EditorFilePicker EditorFolderPicker EditorGrid EditorGroup EditorItemList EditorLabelItem EditorNumeric EditorPivotGrid EditorProgressItem EditorRadioGroup EditorRoot EditorSelectBase EditorSelectMultiple EditorSelectSingle EditorSpacerItem EditorStatusItem EditorText"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.ButtonItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.ButtonItem.html",
    "title": "Class ButtonItem",
    "keywords": "Class ButtonItem Inheritance Object ButtonItem ToggleButtonItem Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class ButtonItem Constructors ButtonItem() Declaration public ButtonItem() ButtonItem(List<ButtonItem>) Declaration public ButtonItem(List<ButtonItem> subMenuButtons) Parameters Type Name Description List < ButtonItem > subMenuButtons ButtonItem(String) Declaration public ButtonItem(string caption) Parameters Type Name Description String caption Properties Caption Declaration public string Caption { get; set; } Property Value Type Description String CreateInBottomPanel Declaration public bool CreateInBottomPanel { get; set; } Property Value Type Description Boolean Data1 Declaration public string Data1 { get; set; } Property Value Type Description String Data2 Declaration public string Data2 { get; set; } Property Value Type Description String Icon Declaration public IconNames? Icon { get; set; } Property Value Type Description Nullable < IconNames > IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description Boolean IsVisible Declaration public bool IsVisible { get; set; } Property Value Type Description Boolean SubMenuButtons Declaration public List<ButtonItem> SubMenuButtons { get; set; } Property Value Type Description List < ButtonItem >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.CaptionItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.CaptionItem.html",
    "title": "Class CaptionItem",
    "keywords": "Class CaptionItem Inheritance Object CaptionItem Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class CaptionItem Constructors CaptionItem() Declaration public CaptionItem() CaptionItem(String) Declaration public CaptionItem(string caption) Parameters Type Name Description String caption Properties Caption Declaration public string Caption { get; set; } Property Value Type Description String Icon Declaration public IconNames? Icon { get; set; } Property Value Type Description Nullable < IconNames > IsVisible Declaration public bool IsVisible { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.DoubleGridOverlay.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.DoubleGridOverlay.html",
    "title": "Class DoubleGridOverlay",
    "keywords": "Class DoubleGridOverlay Inheritance Object DoubleGridOverlay Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class DoubleGridOverlay Properties LeftText Declaration public string LeftText { get; set; } Property Value Type Description String RightText Declaration public string RightText { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.GenericDoubleMappingGrid.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.GenericDoubleMappingGrid.html",
    "title": "Class GenericDoubleMappingGrid",
    "keywords": "Class GenericDoubleMappingGrid Inheritance Object GenericGrid GenericDoubleMappingGrid Inherited Members GenericGrid.Options GenericGrid.ShowHelpOverlay GenericGrid.HelpOverlay Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class GenericDoubleMappingGrid : GenericGrid Constructors GenericDoubleMappingGrid(GridOptions, GridOptions) Initializes a new instance of the GenericGrid class. Declaration public GenericDoubleMappingGrid(GridOptions options, GridOptions options2) Parameters Type Name Description GridOptions options The options. GridOptions options2 The options2. Properties DataSource2Path Declaration public string DataSource2Path { get; set; } Property Value Type Description String Options2 Declaration public GridOptions Options2 { get; } Property Value Type Description GridOptions ShowDoublePaneGrid Declaration public override bool ShowDoublePaneGrid { get; } Property Value Type Description Boolean Overrides GenericGrid.ShowDoublePaneGrid"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.GenericDoubleSortGrid.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.GenericDoubleSortGrid.html",
    "title": "Class GenericDoubleSortGrid",
    "keywords": "Class GenericDoubleSortGrid Inheritance Object GenericGrid GenericDoubleSortGrid Inherited Members GenericGrid.Options GenericGrid.ShowHelpOverlay GenericGrid.HelpOverlay Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class GenericDoubleSortGrid : GenericGrid Constructors GenericDoubleSortGrid(GridOptions, GridOptions) Initializes a new instance of the GenericGrid class. Declaration public GenericDoubleSortGrid(GridOptions options, GridOptions options2) Parameters Type Name Description GridOptions options The options. GridOptions options2 The options2. Properties Options2 Declaration public GridOptions Options2 { get; } Property Value Type Description GridOptions ShowDoublePaneGrid Declaration public override bool ShowDoublePaneGrid { get; } Property Value Type Description Boolean Overrides GenericGrid.ShowDoublePaneGrid"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.GenericGrid.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.GenericGrid.html",
    "title": "Class GenericGrid",
    "keywords": "Class GenericGrid Inheritance Object GenericGrid GenericDoubleMappingGrid GenericDoubleSortGrid Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class GenericGrid Constructors GenericGrid(GridOptions) Initializes a new instance of the GenericGrid class. Declaration public GenericGrid(GridOptions options) Parameters Type Name Description GridOptions options The options. Properties HelpOverlay Declaration public DoubleGridOverlay HelpOverlay { get; set; } Property Value Type Description DoubleGridOverlay Options Declaration public GridOptions Options { get; } Property Value Type Description GridOptions ShowDoublePaneGrid Declaration public virtual bool ShowDoublePaneGrid { get; } Property Value Type Description Boolean ShowHelpOverlay Declaration public bool ShowHelpOverlay { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.GenericPivotGrid.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.GenericPivotGrid.html",
    "title": "Class GenericPivotGrid",
    "keywords": "Class GenericPivotGrid Inheritance Object GenericPivotGrid Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class GenericPivotGrid Constructors GenericPivotGrid(PivotGridOptions) Initializes a new instance of the GenericPivotGrid class. Declaration public GenericPivotGrid(PivotGridOptions options) Parameters Type Name Description PivotGridOptions options The options. Properties Options Declaration public PivotGridOptions Options { get; } Property Value Type Description PivotGridOptions"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.ColumnBuilder.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.ColumnBuilder.html",
    "title": "Class ColumnBuilder",
    "keywords": "Class ColumnBuilder Inheritance Object ColumnBuilder Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public static class ColumnBuilder Methods CreateColumns(Object, EditorBuildOptions) Declaration public static GridColumnList CreateColumns(object editObject, EditorBuildOptions options) Parameters Type Name Description Object editObject EditorBuildOptions options Returns Type Description GridColumnList CreateColumns<T>(EditorBuildOptions) Declaration public static GridColumnList CreateColumns<T>(EditorBuildOptions options) Parameters Type Name Description EditorBuildOptions options Returns Type Description GridColumnList Type Parameters Name Description T"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridButton.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridButton.html",
    "title": "Class GridButton",
    "keywords": "Class GridButton Inheritance Object GridButton Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridButton Properties cssClass Specifies a CSS class to be applied to the button. Declaration public string cssClass { get; set; } Property Value Type Description String The CSS class. hint Specifies the text for the hint that appears when the button is hovered over or long-pressed. Declaration public string hint { get; set; } Property Value Type Description String The hint. icon Specifies the button's icon. Declaration public string icon { get; set; } Property Value Type Description String The icon. Remarks This option accepts one of the following: The icon's URL The icon's name if the icon is from the DevExtreme icon library The icon's CSS class if the icon is from an external icon library (see External Icon Libraries) The icon in the Base64 format The icon in the SVG format. Ensure that the source is reliable. name The name used to identify a built-in button. Declaration public string name { get; set; } Property Value Type Description String The name. Remarks To configure a built-in button, assign its name to this option. onClick A function that is executed when the button is clicked or tapped. Not executed if a template is used. Declaration public string onClick { get; set; } Property Value Type Description String The on click. template Specifies a custom button template. Declaration public string template { get; set; } Property Value Type Description String The template. text Specifies the button's text. Applies only if the button's icon is not specified. Declaration public string text { get; set; } Property Value Type Description String The text. visible Specifies the button's visibility. Declaration public bool? visible { get; set; } Property Value Type Description Nullable < Boolean > The visible."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumn.Alignment.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumn.Alignment.html",
    "title": "Enum GridColumn.Alignment",
    "keywords": "Enum GridColumn.Alignment Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum Alignment Fields Name Description center left right Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridColumn.Alignment>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumn.ColumnDataType.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumn.ColumnDataType.html",
    "title": "Enum GridColumn.ColumnDataType",
    "keywords": "Enum GridColumn.ColumnDataType Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum ColumnDataType Fields Name Description boolean date datetime number object string Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridColumn.ColumnDataType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumn.FixedPositionType.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumn.FixedPositionType.html",
    "title": "Enum GridColumn.FixedPositionType",
    "keywords": "Enum GridColumn.FixedPositionType Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum FixedPositionType Fields Name Description left right Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridColumn.FixedPositionType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumn.HeaderFilterType.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumn.HeaderFilterType.html",
    "title": "Enum GridColumn.HeaderFilterType",
    "keywords": "Enum GridColumn.HeaderFilterType Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum HeaderFilterType Fields Name Description exclude All values in the header filter are selected initially. A user can deselect values to change the filter. include Values in the header filter are unselected initially, and a user can select values to apply a filter. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridColumn.HeaderFilterType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumn.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumn.html",
    "title": "Class GridColumn",
    "keywords": "Class GridColumn Inheritance Object GridColumn Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridColumn Properties alignment Aligns the content of the column. Declaration public GridColumn.Alignment? alignment { get; set; } Property Value Type Description Nullable < GridColumn.Alignment > allowEditing Specifies whether a user can edit values in the column at runtime. By default, inherits the value of the editing.allowUpdating option. Declaration public bool? allowEditing { get; set; } Property Value Type Description Nullable < Boolean > allowExporting Specifies whether data from this column should be exported. Applies only if the column is visible. Declaration public bool? allowExporting { get; set; } Property Value Type Description Nullable < Boolean > allowFiltering Specifies whether data can be filtered by this column. Applies only if filterRow.visible is true. Declaration public bool? allowFiltering { get; set; } Property Value Type Description Nullable < Boolean > allowFixing Specifies whether a user can fix the column at runtime. Applies only if columnFixing.enabled is true. Declaration public bool? allowFixing { get; set; } Property Value Type Description Nullable < Boolean > allowGrouping Specifies whether the user can group data by values of this column. Applies only when grouping is enabled. Declaration public bool? allowGrouping { get; set; } Property Value Type Description Nullable < Boolean > Remarks When grouping is enabled in the widget, the user can group data by values of any column. To prohibit a particular column from being used for grouping, set the allowGrouping option of this column to false. allowHeaderFiltering Specifies whether the header filter can be used to filter data by this column. Applies only if headerFilter.visible is true. By default, inherits the value of the allowFiltering option. Declaration public bool? allowHeaderFiltering { get; set; } Property Value Type Description Nullable < Boolean > allowHiding Specifies whether a user can hide the column using the column chooser at runtime. Applies only if columnChooser.enabled is true. Declaration public bool? allowHiding { get; set; } Property Value Type Description Nullable < Boolean > allowReordering Specifies whether this column can be used in column reordering at runtime. Applies only if allowColumnReordering is true. Declaration public bool? allowReordering { get; set; } Property Value Type Description Nullable < Boolean > allowResizing Specifies whether a user can resize the column at runtime. Applies only if allowColumnResizing is true. Declaration public bool? allowResizing { get; set; } Property Value Type Description Nullable < Boolean > allowSearch Specifies whether this column can be searched. Applies only if searchPanel.visible is true. Inherits the value of the allowFiltering option by default. Declaration public bool? allowSearch { get; set; } Property Value Type Description Nullable < Boolean > allowSorting Specifies whether a user can sort rows by this column at runtime. Applies only if sorting.mode differs from \"none\". Declaration public bool? allowSorting { get; set; } Property Value Type Description Nullable < Boolean > autoExpandGroup Specifies whether groups appear expanded or not when records are grouped by a specific column. Setting this option makes sense only when grouping is allowed for this column. Declaration public bool? autoExpandGroup { get; set; } Property Value Type Description Nullable < Boolean > buttons Allows you to customize buttons in the editing column or create a custom command column. Applies only if the column's type is \"buttons\". Declaration public GridButton[] buttons { get; set; } Property Value Type Description GridButton [] caption Specifies a caption for the column. Declaration public string caption { get; set; } Property Value Type Description String Remarks Use this option to display a descriptive or friendly name for the column. If this option is not set, the caption will be generated from the name of the dataField. cellTemplate Specifies a custom template for data cells. Declaration public string cellTemplate { get; set; } Property Value Type Description String columns An array of grid columns. Declaration public GridColumn[] columns { get; set; } Property Value Type Description GridColumn [] Remarks Unlike normal columns, band columns do not hold data. Instead, they collect two or more columns under one column header. To set up this layout, declare the band column using a hierarchical structure. For this, assign the nested columns to the columns field of the band column. For example, the following code declares the \"Address\" band column and nests three columns within it. cssClass Specifies a CSS class to be applied to the column. Declaration public string cssClass { get; set; } Property Value Type Description String dataField Binds the column to a field of the dataSource. Declaration public string dataField { get; set; } Property Value Type Description String dataType Casts column values to a specific data type. Declaration public GridColumn.ColumnDataType? dataType { get; set; } Property Value Type Description Nullable < GridColumn.ColumnDataType > Remarks If a data field provides values of one data type, but the widget should cast them to another, specify the proper type in this option. editCellTemplate Specifies a custom template for data cells in editing state. Declaration public string editCellTemplate { get; set; } Property Value Type Description String editorOptions Configures the default widget used for editing and filtering in the filter row. Declaration public object editorOptions { get; set; } Property Value Type Description Object encodeHtml Specifies whether HTML tags are displayed as plain text or applied to the values of the column. Declaration public bool? encodeHtml { get; set; } Property Value Type Description Nullable < Boolean > Remarks When true, HTML tags are displayed as plain text; when false, they are applied to the values of the column. falseText In a boolean column, replaces all false items with a specified text. Applies only if showEditorAlways option is false. Declaration public string falseText { get; set; } Property Value Type Description String filterOperations Specifies a set of available filter operations. Applies only if filterRow.visible and allowFiltering are true Declaration public string[] filterOperations { get; set; } Property Value Type Description String [] Remarks The following table lists available filters by data types. The same filters are assigned to columns of a specific data type by default. dataType filterOperations \"string\" [ \"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\" ] \"numeric\" [ \"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\" ] \"date\" [ \"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\" ] The filterOperations option can also accept an empty array. In this case, the selected filter operation is \"=\" for all data types, and a user cannot change it. filterType Specifies whether a user changes the current filter by including (selecting) or excluding (clearing the selection of) values. Applies only if headerFilter.visible and allowHeaderFiltering are true. Declaration public GridColumn.HeaderFilterType? filterType { get; set; } Property Value Type Description Nullable < GridColumn.HeaderFilterType > Remarks This option changes when the user clicks the Select All checkbox in the header filter: Select All filterType / filterValues filterType: \"include\" filterValues: null filterType: \"exclude\" filterValues: null filterValue Specifies the column's filter value displayed in the filter row. Declaration public object filterValue { get; set; } Property Value Type Description Object filterValues Specifies values selected in the column's header filter. Declaration public object[] filterValues { get; set; } Property Value Type Description Object [] fixed Fixes the column. Declaration public bool? fixed { get; set; } Property Value Type Description Nullable < Boolean > fixedPosition Specifies the widget's edge to which the column is fixed. Applies only if columns[].fixed is true. Declaration public GridColumn.FixedPositionType? fixedPosition { get; set; } Property Value Type Description Nullable < GridColumn.FixedPositionType > format Formats a value before it is displayed in a column cell. Declaration public GridColumnFormat format { get; set; } Property Value Type Description GridColumnFormat groupCellTemplate Specifies a custom template for group cells (group rows). Declaration public string groupCellTemplate { get; set; } Property Value Type Description String groupIndex Specifies the index of a column when grid records are grouped by the values of this column. Declaration public double? groupIndex { get; set; } Property Value Type Description Nullable < Double > Remarks At runtime, the user can group grid records using the context menu or the group panel. But there may be cases when grid records must be grouped initially. To do this, assign an integer value to the groupIndex option of those columns that should be used for grouping grid records. For example, consider the following data source. headerCellTemplate Specifies a custom template for column headers. Declaration public string headerCellTemplate { get; set; } Property Value Type Description String headerFilter Specifies data settings for the header filter. Declaration public object headerFilter { get; set; } Property Value Type Description Object hidingPriority Specifies the order in which columns are hidden when the widget adapts to the screen or container size. Ignored if allowColumnResizing is true and columnResizingMode is \"widget\". Declaration public double? hidingPriority { get; set; } Property Value Type Description Nullable < Double > Remarks The hidingPriority is a unique positive integer that ascends from right to left beginning with 0 by default. Columns with low hidingPriority are hidden first. isBand Specifies whether the column bands other columns or not. Declaration public bool? isBand { get; set; } Property Value Type Description Nullable < Boolean > Remarks Unlike normal columns, band columns do not hold data. Instead, they collect two or more columns under one column header. In most cases, to set up this layout, you can declare the band column using a hierarchical structure. For example, the following code bands three columns under the \"Address\" header. isSecondaryGridDataSource Specifies whether the column should be used as a data source for a secondary grid. Declaration public bool? isSecondaryGridDataSource { get; set; } Property Value Type Description Nullable < Boolean > lookup Specifies options of a lookup column. Declaration public GridLookup lookup { get; set; } Property Value Type Description GridLookup Remarks A lookup column restricts the set of values that can be chosen when a user edits or filters the column. In a lookup column, each cell is a drop-down menu. You can use a lookup column when you need to substitute displayed values with required values. For example, consider that you have two arrays of objects: drivers and buses. minWidth Specifies the minimum width of the column. Declaration public int? minWidth { get; set; } Property Value Type Description Nullable < Int32 > name Specifies the identifier of the column. Declaration public string name { get; set; } Property Value Type Description String Remarks Set this option if you need to refer to the column in your code afterwards, for example, when changing a column option. ownerBand Specifies the band column that owns the current column. Accepts the index of the band column in the columns array. Declaration public double? ownerBand { get; set; } Property Value Type Description Nullable < Double > renderAsync Specifies whether to render the column after other columns and elements. Use if column cells have a complex template. Requires the width option specified. Declaration public bool? renderAsync { get; set; } Property Value Type Description Nullable < Boolean > selectedFilterOperation Specifies the column's filter operation displayed in the filter row. Declaration public string selectedFilterOperation { get; set; } Property Value Type Description String Remarks Accepted Values: '<' '<=' '<>' '=' '>' '>=' 'between' 'contains' 'endswith' showEditorAlways Specifies whether the column displays its values using editors. Declaration public bool? showEditorAlways { get; set; } Property Value Type Description Nullable < Boolean > Remarks A column cell has normal and editing states. In a normal state, the cell value is text. In the editing state, the cell contains an editor that indicates the cell value and allows a user to edit it. In certain cases, a viewer reads the cell value easier if it is indicated by an editor even in the normal state. For example, boolean values are more comprehensible when they are indicated by check boxes. To display editors in cells permanently, set the showEditorAlways option to true. showInColumnChooser Specifies whether the column chooser can contain the column header. Declaration public bool? showInColumnChooser { get; set; } Property Value Type Description Nullable < Boolean > showWhenGrouped Specifies whether or not to display the column when grid records are grouped by it. Declaration public bool? showWhenGrouped { get; set; } Property Value Type Description Nullable < Boolean > Remarks Displaying a grouping column may be useful if you calculate its grouping values. Consider that you need to group records by a column that contains dates. Grouping by full dates seems inconvenient. It would be smarter to group by months or years instead. For this purpose, you calculate grouping values within the calculateGroupValue function and leave the grouping column visible by setting the showWhenGrouped option to true so that the user can view the full dates. sortIndex Specifies the index according to which columns participate in sorting. Declaration public double? sortIndex { get; set; } Property Value Type Description Nullable < Double > Remarks This option accepts an integer specifying the index of the column in a collection of columns with applied sorting. For example, consider the following data source that can provide data for three columns. sortOrder Specifies the sort order of column values. Declaration public string sortOrder { get; set; } Property Value Type Description String Remarks Accepted Values: undefined | 'asc' | 'desc' trueText In a boolean column, replaces all true items with a specified text. Applies only if showEditorAlways option is false. Declaration public string trueText { get; set; } Property Value Type Description String type Specifies the command column that this object customizes. Declaration public string type { get; set; } Property Value Type Description String validationRules Specifies validation rules to be checked when cell values are updated. Declaration public GridValidationRuleBase[] validationRules { get; set; } Property Value Type Description GridValidationRuleBase [] The validation rules. visible Specifies whether the column is visible, that is, occupies space in the table. Declaration public bool? visible { get; set; } Property Value Type Description Nullable < Boolean > visibleIndex Specifies the position of the column regarding other columns in the resulting widget. Declaration public int? visibleIndex { get; set; } Property Value Type Description Nullable < Int32 > width Specifies the column's width in pixels or as a percentage. Ignored if it is less than minWidth. Declaration public int? width { get; set; } Property Value Type Description Nullable < Int32 > Methods AddValidationRule(GridValidationRuleBase) Declaration public void AddValidationRule(GridValidationRuleBase validationRule) Parameters Type Name Description GridValidationRuleBase validationRule"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnChooser.ColumnChooserMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnChooser.ColumnChooserMode.html",
    "title": "Enum GridColumnChooser.ColumnChooserMode",
    "keywords": "Enum GridColumnChooser.ColumnChooserMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum ColumnChooserMode Fields Name Description dragAndDrop select Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridColumnChooser.ColumnChooserMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnChooser.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnChooser.html",
    "title": "Class GridColumnChooser",
    "keywords": "Class GridColumnChooser Configures the column chooser. Inheritance Object GridColumnChooser Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridColumnChooser Properties allowSearch Specifies whether searching is enabled in the column chooser. Declaration public bool? allowSearch { get; set; } Property Value Type Description Nullable < Boolean > emptyPanelText Specifies text displayed by the column chooser when it is empty. Declaration public string emptyPanelText { get; set; } Property Value Type Description String Remarks Default Value: 'Drag a column here to hide it'. enabled Specifies whether a user can open the column chooser.Specifies whether a user can open the column chooser. Declaration public bool? enabled { get; set; } Property Value Type Description Nullable < Boolean > Remarks When this option is set to true, a user can open the column chooser with a click on the \"Column Chooser\" icon. Otherwise, this icon is hidden, but you still can open the column chooser from code by calling the showColumnChooser() method. height Specifies the height of the column chooser. Declaration public int? height { get; set; } Property Value Type Description Nullable < Int32 > mode Specifies how a user manages columns using the column chooser. Declaration public GridColumnChooser.ColumnChooserMode? mode { get; set; } Property Value Type Description Nullable < GridColumnChooser.ColumnChooserMode > searchTimeout Specifies a delay in milliseconds between when a user finishes typing in the column chooser's search panel, and when the search is executed. Declaration public int? searchTimeout { get; set; } Property Value Type Description Nullable < Int32 > title Specifies the title of the column chooser. Declaration public string title { get; set; } Property Value Type Description String width Specifies the width of the column chooser. Declaration public int? width { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnFixing.GridColumnFixingTexts.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnFixing.GridColumnFixingTexts.html",
    "title": "Class GridColumnFixing.GridColumnFixingTexts",
    "keywords": "Class GridColumnFixing.GridColumnFixingTexts Contains options that specify texts for column fixing commands in the context menu of a column header. Inheritance Object GridColumnFixing.GridColumnFixingTexts Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridColumnFixingTexts Properties fix Specifies text for the context menu item that fixes a column. Declaration public string fix { get; set; } Property Value Type Description String leftPosition Specifies text for the context menu subitem that fixes a column to the left edge of the widget. Declaration public string leftPosition { get; set; } Property Value Type Description String rightPosition Specifies text for the context menu subitem that fixes a column to the right edge of the widget. Declaration public string rightPosition { get; set; } Property Value Type Description String unfix Specifies text for the context menu item that unfixes a column. Declaration public string unfix { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnFixing.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnFixing.html",
    "title": "Class GridColumnFixing",
    "keywords": "Class GridColumnFixing Configures the column chooser. Inheritance Object GridColumnFixing Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridColumnFixing Properties enabled Enables column fixing. Declaration public bool? enabled { get; set; } Property Value Type Description Nullable < Boolean > texts Contains options that specify texts for column fixing commands in the context menu of a column header. Declaration public GridColumnFixing.GridColumnFixingTexts texts { get; set; } Property Value Type Description GridColumnFixing.GridColumnFixingTexts"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnFormat.FormatType.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnFormat.FormatType.html",
    "title": "Enum GridColumnFormat.FormatType",
    "keywords": "Enum GridColumnFormat.FormatType Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum FormatType Fields Name Description billions currency day dayOfWeek decimal exponential fixedPoint hour largeNumber longDate longDateLongTime longTime millions millisecond minute month monthAndDay monthAndYear percent quarter quarterAndYear second shortDate shortDateShortTime shortTime thousands trillions year Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridColumnFormat.FormatType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnFormat.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnFormat.html",
    "title": "Class GridColumnFormat",
    "keywords": "Class GridColumnFormat Inheritance Object GridColumnFormat Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridColumnFormat Constructors GridColumnFormat() Declaration public GridColumnFormat() GridColumnFormat(GridColumnFormat.FormatType, Nullable<Int32>) Declaration public GridColumnFormat(GridColumnFormat.FormatType type, int? precision = null) Parameters Type Name Description GridColumnFormat.FormatType type Nullable < Int32 > precision Properties currency Specifies a 3-letter ISO 4217 code for currency. Applies only if the type is \"currency\". Declaration public string currency { get; set; } Property Value Type Description String The currency. precision Specifies a precision for values of a numeric format. Declaration public int? precision { get; set; } Property Value Type Description Nullable < Int32 > The precision. type One of the predefined formats Declaration public GridColumnFormat.FormatType type { get; set; } Property Value Type Description GridColumnFormat.FormatType The type."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnList.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridColumnList.html",
    "title": "Class GridColumnList",
    "keywords": "Class GridColumnList Inheritance Object List < GridColumn > GridColumnList Implements IList < GridColumn > ICollection < GridColumn > IReadOnlyList < GridColumn > IReadOnlyCollection < GridColumn > IEnumerable < GridColumn > IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<Emby.Web.GenericEdit.Elements.Grid.GridColumn>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Emby.Web.GenericEdit.Elements.Grid.GridColumn>.System.Collections.IList.set_Item(System.Int32, System.Object) List<GridColumn>.Add(GridColumn) List<GridColumn>.AddRange(IEnumerable<GridColumn>) List<GridColumn>.AsReadOnly() List<GridColumn>.BinarySearch(GridColumn) List<GridColumn>.BinarySearch(GridColumn, IComparer<GridColumn>) List<GridColumn>.BinarySearch(Int32, Int32, GridColumn, IComparer<GridColumn>) List<GridColumn>.Clear() List<GridColumn>.Contains(GridColumn) List<GridColumn>.ConvertAll<TOutput>(Converter<GridColumn, TOutput>) List<GridColumn>.CopyTo(GridColumn[]) List<GridColumn>.CopyTo(GridColumn[], Int32) List<GridColumn>.CopyTo(Int32, GridColumn[], Int32, Int32) List<GridColumn>.Exists(Predicate<GridColumn>) List<GridColumn>.Find(Predicate<GridColumn>) List<GridColumn>.FindAll(Predicate<GridColumn>) List<GridColumn>.FindIndex(Int32, Int32, Predicate<GridColumn>) List<GridColumn>.FindIndex(Int32, Predicate<GridColumn>) List<GridColumn>.FindIndex(Predicate<GridColumn>) List<GridColumn>.FindLast(Predicate<GridColumn>) List<GridColumn>.FindLastIndex(Int32, Int32, Predicate<GridColumn>) List<GridColumn>.FindLastIndex(Int32, Predicate<GridColumn>) List<GridColumn>.FindLastIndex(Predicate<GridColumn>) List<GridColumn>.ForEach(Action<GridColumn>) List<GridColumn>.GetEnumerator() List<GridColumn>.GetRange(Int32, Int32) List<GridColumn>.IndexOf(GridColumn) List<GridColumn>.IndexOf(GridColumn, Int32) List<GridColumn>.IndexOf(GridColumn, Int32, Int32) List<GridColumn>.Insert(Int32, GridColumn) List<GridColumn>.InsertRange(Int32, IEnumerable<GridColumn>) List<GridColumn>.LastIndexOf(GridColumn) List<GridColumn>.LastIndexOf(GridColumn, Int32) List<GridColumn>.LastIndexOf(GridColumn, Int32, Int32) List<GridColumn>.Remove(GridColumn) List<GridColumn>.RemoveAll(Predicate<GridColumn>) List<GridColumn>.RemoveAt(Int32) List<GridColumn>.RemoveRange(Int32, Int32) List<GridColumn>.Reverse() List<GridColumn>.Reverse(Int32, Int32) List<GridColumn>.Sort() List<GridColumn>.Sort(IComparer<GridColumn>) List<GridColumn>.Sort(Comparison<GridColumn>) List<GridColumn>.Sort(Int32, Int32, IComparer<GridColumn>) List<GridColumn>.IEnumerable<GridColumn>.GetEnumerator() List<GridColumn>.ICollection.CopyTo(Array, Int32) List<GridColumn>.IEnumerable.GetEnumerator() List<GridColumn>.IList.Add(Object) List<GridColumn>.IList.Contains(Object) List<GridColumn>.IList.IndexOf(Object) List<GridColumn>.IList.Insert(Int32, Object) List<GridColumn>.IList.Remove(Object) List<GridColumn>.ToArray() List<GridColumn>.TrimExcess() List<GridColumn>.TrueForAll(Predicate<GridColumn>) List<GridColumn>.Capacity List<GridColumn>.Count List<GridColumn>.Item[Int32] List<GridColumn>.ICollection<GridColumn>.IsReadOnly List<GridColumn>.ICollection.IsSynchronized List<GridColumn>.ICollection.SyncRoot List<GridColumn>.IList.IsFixedSize List<GridColumn>.IList.IsReadOnly List<GridColumn>.IList.Item[Int32] Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridColumnList : List<GridColumn>, IList<GridColumn>, ICollection<GridColumn>, IReadOnlyList<GridColumn>, IReadOnlyCollection<GridColumn>, IEnumerable<GridColumn>, IList, ICollection, IEnumerable Constructors GridColumnList() Declaration public GridColumnList() GridColumnList(IEnumerable<GridColumn>) Declaration public GridColumnList(IEnumerable<GridColumn> collection) Parameters Type Name Description IEnumerable < GridColumn > collection GridColumnList(Int32) Declaration public GridColumnList(int capacity) Parameters Type Name Description Int32 capacity Properties Item[String] Declaration public GridColumn this[string columnName] { get; set; } Parameters Type Name Description String columnName Property Value Type Description GridColumn Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods LinqExtensions.ToArray<TSource>(IEnumerable<TSource>, Int32) SortExtensions.OrderByString<T>(IEnumerable<T>, Func<T, String>) SortExtensions.OrderByStringDescending<T>(IEnumerable<T>, Func<T, String>)"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridEditing.GridEditMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridEditing.GridEditMode.html",
    "title": "Enum GridEditing.GridEditMode",
    "keywords": "Enum GridEditing.GridEditMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum GridEditMode Fields Name Description batch A user edits data cell by cell. The widget does not save changes until a user clicks the global \"Save\" button. cell Differs from the batch mode in that the widget saves changes when the cell leaves the editing state. form On entering the editing state, a row becomes a form with editable fields. The widget saves changes after a user clicks the \"Save\" button. popup Differs from the form mode in that the form with editable fields is placed in a popup window. row A user edits one row at a time. The widget saves changes when the row leaves the editing state. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridEditing.GridEditMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridEditing.GridEditRefreshMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridEditing.GridEditRefreshMode.html",
    "title": "Enum GridEditing.GridEditRefreshMode",
    "keywords": "Enum GridEditing.GridEditRefreshMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum GridEditRefreshMode Fields Name Description full repaint reshape Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridEditing.GridEditRefreshMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridEditing.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridEditing.html",
    "title": "Class GridEditing",
    "keywords": "Class GridEditing Inheritance Object GridEditing Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridEditing Properties allowAdding Specifies whether a user can add new rows. Declaration public bool? allowAdding { get; set; } Property Value Type Description Nullable < Boolean > The allow adding. allowDeleting Specifies whether a user can delete rows. It is called for each data row when defined as a function. Declaration public bool? allowDeleting { get; set; } Property Value Type Description Nullable < Boolean > The allow deleting. allowUpdating Specifies whether a user can update rows. It is called for each data row when defined as a function. Declaration public bool? allowUpdating { get; set; } Property Value Type Description Nullable < Boolean > The allow updating. form Configures the form. Used only if editing.mode is \"form\" or \"popup\". Declaration public object form { get; set; } Property Value Type Description Object The form. highlightEditableColumns Declaration public bool? highlightEditableColumns { get; set; } Property Value Type Description Nullable < Boolean > mode Specifies how a user edits data. Declaration public GridEditing.GridEditMode? mode { get; set; } Property Value Type Description Nullable < GridEditing.GridEditMode > The mode. popup Configures the popup. Used only if editing.mode is \"popup\". Declaration public object popup { get; set; } Property Value Type Description Object The popup. refreshMode Specifies operations that are performed after saving changes. Declaration public GridEditing.GridEditRefreshMode? refreshMode { get; set; } Property Value Type Description Nullable < GridEditing.GridEditRefreshMode > The refresh mode. selectTextOnEditStart Specifies whether to select text in a cell when a user starts editing. Declaration public bool? selectTextOnEditStart { get; set; } Property Value Type Description Nullable < Boolean > The select text on edit start. Remarks Default is false. startEditAction Specifies whether a single or double click should switch a cell to the editing state. Applies if editing.mode is \"cell\" or \"batch\". Declaration public string startEditAction { get; set; } Property Value Type Description String The start edit action. Remarks Accepted Values: 'click' | 'dblClick'. Default Value: 'click'. texts Contains options that specify texts for editing-related UI elements. Declaration public GridEditingTexts texts { get; set; } Property Value Type Description GridEditingTexts The texts. useIcons Specifies whether the editing column uses icons instead of links. Declaration public bool? useIcons { get; set; } Property Value Type Description Nullable < Boolean > The use icons."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridEditingTexts.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridEditingTexts.html",
    "title": "Class GridEditingTexts",
    "keywords": "Class GridEditingTexts Contains options that specify texts for editing-related UI elements. Inheritance Object GridEditingTexts Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridEditingTexts Properties addRow Declaration public string addRow { get; set; } Property Value Type Description String cancelAllChanges Declaration public string cancelAllChanges { get; set; } Property Value Type Description String cancelRowChanges Declaration public string cancelRowChanges { get; set; } Property Value Type Description String confirmDeleteMessage Declaration public string confirmDeleteMessage { get; set; } Property Value Type Description String confirmDeleteTitle Declaration public string confirmDeleteTitle { get; set; } Property Value Type Description String deleteRow Declaration public string deleteRow { get; set; } Property Value Type Description String editRow Declaration public string editRow { get; set; } Property Value Type Description String saveAllChanges Declaration public string saveAllChanges { get; set; } Property Value Type Description String saveRowChanges Declaration public string saveRowChanges { get; set; } Property Value Type Description String undeleteRow Declaration public string undeleteRow { get; set; } Property Value Type Description String validationCancelChanges Declaration public string validationCancelChanges { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridExport.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridExport.html",
    "title": "Class GridExport",
    "keywords": "Class GridExport Inheritance Object GridExport Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridExport Properties allowExportSelectedData Allows users to export selected rows only. Declaration public bool? allowExportSelectedData { get; set; } Property Value Type Description Nullable < Boolean > The allow export selected data. enabled Adds the Export button to the DataGrid's toolbar. Declaration public bool? enabled { get; set; } Property Value Type Description Nullable < Boolean > The enabled."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridFilterPanel.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridFilterPanel.html",
    "title": "Class GridFilterPanel",
    "keywords": "Class GridFilterPanel Configures the filter panel feature. Inheritance Object GridFilterPanel Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridFilterPanel Remarks The filter panel displays the applied filter expression. Properties filterEnabled Specifies whether the filter expression is applied. Declaration public bool? filterEnabled { get; set; } Property Value Type Description Nullable < Boolean > texts Contains options that specify text for various elements of the popup menu. Declaration public GridHeaderFilterTexts texts { get; set; } Property Value Type Description GridHeaderFilterTexts visible Indicates whether header filter icons are visible. Declaration public bool? visible { get; set; } Property Value Type Description Nullable < Boolean >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridFilterPanelTexts.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridFilterPanelTexts.html",
    "title": "Class GridFilterPanelTexts",
    "keywords": "Class GridFilterPanelTexts Specifies texts for the filter panel's elements. Inheritance Object GridFilterPanelTexts Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridFilterPanelTexts Properties clearFilter The text of the \"Clear\" link. Declaration public string clearFilter { get; set; } Property Value Type Description String createFilter The text of the \"Create Filter\" link. Declaration public string createFilter { get; set; } Property Value Type Description String filterEnabledHint The hint of the checkbox that applies the filter. Declaration public string filterEnabledHint { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridFilterRow.ColumnChooserMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridFilterRow.ColumnChooserMode.html",
    "title": "Enum GridFilterRow.ColumnChooserMode",
    "keywords": "Enum GridFilterRow.ColumnChooserMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum ColumnChooserMode Fields Name Description dragAndDrop select Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridFilterRow.ColumnChooserMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridFilterRow.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridFilterRow.html",
    "title": "Class GridFilterRow",
    "keywords": "Class GridFilterRow Configures the filter row. Inheritance Object GridFilterRow Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridFilterRow Properties applyFilterText Specifies text for a hint that appears when a user pauses on a button that applies the filter. Declaration public string applyFilterText { get; set; } Property Value Type Description String betweenEndText Specifies a placeholder for the editor that specifies the end of a range when a user selects the \"between\" filter operation. Declaration public string betweenEndText { get; set; } Property Value Type Description String Remarks Default Value: 'End'. betweenStartText Specifies a placeholder for the editor that specifies the start of a range when a user selects the \"between\" filter operation. Declaration public string betweenStartText { get; set; } Property Value Type Description String Remarks Default Value: 'Start'. operationDescriptions Specifies descriptions for filter operations on the filter list. Declaration public object operationDescriptions { get; set; } Property Value Type Description Object resetOperationText Specifies text for the reset operation on the filter list. Declaration public string resetOperationText { get; set; } Property Value Type Description String Remarks Default Value: 'Reset'. showAllText Specifies text for the item that clears the applied filter. Used only when a cell of the filter row contains a select box. Declaration public string showAllText { get; set; } Property Value Type Description String Remarks Default Value: '(All)'. showOperationChooser Specifies whether icons that open the filter lists are visible. Declaration public bool? showOperationChooser { get; set; } Property Value Type Description Nullable < Boolean > visible Specifies whether the filter row is visible. Declaration public bool? visible { get; set; } Property Value Type Description Nullable < Boolean >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridGrouping.GroupExpandMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridGrouping.GroupExpandMode.html",
    "title": "Enum GridGrouping.GroupExpandMode",
    "keywords": "Enum GridGrouping.GroupExpandMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum GroupExpandMode Fields Name Description buttonClick rowClick Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridGrouping.GroupExpandMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridGrouping.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridGrouping.html",
    "title": "Class GridGrouping",
    "keywords": "Class GridGrouping Configures the filter row. Inheritance Object GridGrouping Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridGrouping Properties allowCollapsing Specifies whether the user can collapse grouped records in a grid or not. Declaration public bool? allowCollapsing { get; set; } Property Value Type Description Nullable < Boolean > autoExpandAll Specifies whether groups appear expanded or not. Declaration public bool? autoExpandAll { get; set; } Property Value Type Description Nullable < Boolean > contextMenuEnabled Enables the user to group data using the context menu. Declaration public bool? contextMenuEnabled { get; set; } Property Value Type Description Nullable < Boolean > Remarks Set this option to true to enable grouping using the context menu. In this case, to group/ungroup data, the user right-clicks a column header and chooses the required item from the appeared context menu. texts Defines the texts of grouping-related visual elements. Declaration public GridGroupingTexts texts { get; set; } Property Value Type Description GridGroupingTexts Remarks Use the options of this object to localize or customize grouping-related elements. For example, the groupByThisColumn, ungroup and ungroupAll options customize items of the context menu. These items appear in the menu only if the grouping.contextMenuEnabled option is set to true."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridGroupingTexts.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridGroupingTexts.html",
    "title": "Class GridGroupingTexts",
    "keywords": "Class GridGroupingTexts Defines the texts of grouping-related visual elements. Inheritance Object GridGroupingTexts Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridGroupingTexts Remarks Use the options of this object to localize or customize grouping-related elements. For example, the groupByThisColumn, ungroup and ungroupAll options customize items of the context menu. These items appear in the menu only if the grouping.contextMenuEnabled option is set to true. Properties groupByThisColumn Specifies the text of the context menu item that groups data by a specific column. Declaration public string groupByThisColumn { get; set; } Property Value Type Description String groupContinuedMessage Specifies the message displayed in a group row when the corresponding group is continued from the previous page. Declaration public string groupContinuedMessage { get; set; } Property Value Type Description String groupContinuesMessage Specifies the message displayed in a group row when the corresponding group continues on the next page. Declaration public string groupContinuesMessage { get; set; } Property Value Type Description String ungroup Specifies the text of the context menu item that clears grouping settings of a specific column. Declaration public string ungroup { get; set; } Property Value Type Description String ungroupAll Specifies the text of the context menu item that clears grouping settings of all columns. Declaration public string ungroupAll { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridHeaderFilter.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridHeaderFilter.html",
    "title": "Class GridHeaderFilter",
    "keywords": "Class GridHeaderFilter Configures the header filter feature. Inheritance Object GridHeaderFilter Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridHeaderFilter Remarks A header filter allows a user to filter values in an individual column by including/excluding them in/from the applied filter. A click on a header filter icon invokes a popup menu with all unique values in the column. By selecting or clearing the selection of values in this menu, the user includes/excludes them in/from the filter. Properties allowSearch Specifies whether searching is enabled in the header filter. Declaration public bool? allowSearch { get; set; } Property Value Type Description Nullable < Boolean > height Specifies the height of the popup menu that contains values for filtering. Declaration public int? height { get; set; } Property Value Type Description Nullable < Int32 > searchTimeout Specifies a delay in milliseconds between when a user finishes typing in the header filter's search panel, and when the search is executed. Declaration public int? searchTimeout { get; set; } Property Value Type Description Nullable < Int32 > texts Contains options that specify text for various elements of the popup menu. Declaration public GridHeaderFilterTexts texts { get; set; } Property Value Type Description GridHeaderFilterTexts visible Indicates whether header filter icons are visible. Declaration public bool? visible { get; set; } Property Value Type Description Nullable < Boolean > width Specifies the width of the popup menu that contains values for filtering. Declaration public int? width { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridHeaderFilterTexts.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridHeaderFilterTexts.html",
    "title": "Class GridHeaderFilterTexts",
    "keywords": "Class GridHeaderFilterTexts Contains options that specify text for various elements of the popup menu. Inheritance Object GridHeaderFilterTexts Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridHeaderFilterTexts Properties cancel Specifies text for the button that closes the popup menu without applying a filter. Declaration public string cancel { get; set; } Property Value Type Description String emptyValue Specifies a name for the item that represents empty values in the popup menu. Declaration public string emptyValue { get; set; } Property Value Type Description String ok Specifies text for the button that applies the specified filter. Declaration public string ok { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridLookup.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridLookup.html",
    "title": "Class GridLookup",
    "keywords": "Class GridLookup Specifies options of a lookup column. Inheritance Object GridLookup Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridLookup Remarks A lookup column restricts the set of values that can be chosen when a user edits or filters the column. In a lookup column, each cell is a drop-down menu. You can use a lookup column when you need to substitute displayed values with required values. Properties allowClearing Specifies whether to display the Clear button in lookup column cells while they are being edited. Declaration public bool? allowClearing { get; set; } Property Value Type Description Nullable < Boolean > Remarks Set this option to true only if your data source accepts null values. dataSource Specifies the data source for the lookup column. Declaration public object dataSource { get; set; } Property Value Type Description Object displayExpr Specifies the data source field whose values must be displayed. Declaration public string displayExpr { get; set; } Property Value Type Description String filterByColumn Declaration public string filterByColumn { get; set; } Property Value Type Description String filterField Declaration public string filterField { get; set; } Property Value Type Description String valueExpr Specifies the data source field whose values must be replaced. Declaration public string valueExpr { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridMasterDetail.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridMasterDetail.html",
    "title": "Class GridMasterDetail",
    "keywords": "Class GridMasterDetail Inheritance Object GridMasterDetail Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridMasterDetail Properties autoExpandAll Specifies whether detail sections appear expanded or collapsed. Declaration public bool? autoExpandAll { get; set; } Property Value Type Description Nullable < Boolean > The automatic expand all. childRowsFieldName Declaration public string childRowsFieldName { get; set; } Property Value Type Description String detailGridOptions Specifies the detail grid options. Declaration public GridOptions detailGridOptions { get; set; } Property Value Type Description GridOptions enabled Enables an end-user to expand/collapse detail sections. Declaration public bool? enabled { get; set; } Property Value Type Description Nullable < Boolean > template Specifies a custom template for detail sections. Declaration public string template { get; set; } Property Value Type Description String The template."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridOnChangeCommand.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridOnChangeCommand.html",
    "title": "Class GridOnChangeCommand",
    "keywords": "Class GridOnChangeCommand Inheritance Object GridOnChangeCommand Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridOnChangeCommand Properties commandId Declaration public string commandId { get; set; } Property Value Type Description String data2 Declaration public string data2 { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridOptions.ColumnResizingMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridOptions.ColumnResizingMode.html",
    "title": "Enum GridOptions.ColumnResizingMode",
    "keywords": "Enum GridOptions.ColumnResizingMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum ColumnResizingMode Fields Name Description nextColumn When a user resizes a column, the width of the next column changes. widget When a user resizes a column, the width of the widget changes. This mode is ignored if you specify the width of any column in percent. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridOptions.ColumnResizingMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridOptions.GridHeightMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridOptions.GridHeightMode.html",
    "title": "Enum GridOptions.GridHeightMode",
    "keywords": "Enum GridOptions.GridHeightMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum GridHeightMode Fields Name Description auto fullHeight large medium small Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridOptions.GridHeightMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridOptions.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridOptions.html",
    "title": "Class GridOptions",
    "keywords": "Class GridOptions Inheritance Object GridOptions Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridOptions Constructors GridOptions() Declaration public GridOptions() GridOptions(Object, String, Boolean, Boolean, Boolean, Boolean) Declaration public GridOptions(object editObject, string keyExpr, bool multiSelect, bool disableColumnChooser, bool showFilterRow, bool showHeaderFilter) Parameters Type Name Description Object editObject String keyExpr Boolean multiSelect Boolean disableColumnChooser Boolean showFilterRow Boolean showHeaderFilter Properties accessKey Specifies the shortcut key that sets focus on the widget. Declaration public string accessKey { get; set; } Property Value Type Description String activeStateEnabled Specifies whether or not the widget changes its state when interacting with a user. Declaration public bool? activeStateEnabled { get; set; } Property Value Type Description Nullable < Boolean > allowColumnReordering Specifies whether a user can reorder columns.Specifies whether a user can reorder columns. Declaration public bool? allowColumnReordering { get; set; } Property Value Type Description Nullable < Boolean > allowColumnResizing Specifies whether a user can resize columns.Specifies whether a user can resize columns. Declaration public bool? allowColumnResizing { get; set; } Property Value Type Description Nullable < Boolean > allowMultiRowUpdating Declaration public bool? allowMultiRowUpdating { get; set; } Property Value Type Description Nullable < Boolean > autoNavigateToFocusedRow Automatically scrolls to the focused row when the focusedRowKey is changed. Declaration public bool? autoNavigateToFocusedRow { get; set; } Property Value Type Description Nullable < Boolean > cacheEnabled Specifies whether data should be cached.Specifies whether data should be cached. Declaration public bool? cacheEnabled { get; set; } Property Value Type Description Nullable < Boolean > cellHintEnabled Enables a hint that appears when a user hovers the mouse pointer over a cell with truncated content. Declaration public bool? cellHintEnabled { get; set; } Property Value Type Description Nullable < Boolean > Remarks The cell's content may be truncated if the width of the cell's column becomes very small. In this case, when a user hovers the mouse pointer over such a cell, a hint containing the cell's value appears. To disable cell hints, assign false to the cellHintEnabled option. columnAutoWidth Specifies whether columns should adjust their widths to the content. Declaration public bool? columnAutoWidth { get; set; } Property Value Type Description Nullable < Boolean > Remarks When this option is set to true, all columns adjust their width to the content. If the widget's overall content is narrower than the widget's width, the columns are stretched to fit the widget. To avoid this, set the columns.width option to \"auto\". If the content is wider, the columnAutoWidth option set to true causes horizontal scrolling. You can set the allowHiding option to false for columns you want to be displayed continuously. When the columnAutoWidth option is set to false, all columns have identical width, which in turn depends on the width of the widget. columnChooser Configures the column chooser. Declaration public GridColumnChooser columnChooser { get; set; } Property Value Type Description GridColumnChooser columnFixing Declaration public GridColumnFixing columnFixing { get; set; } Property Value Type Description GridColumnFixing columnHidingEnabled Specifies whether the widget should hide columns to adapt to the screen or container size. Ignored if allowColumnResizing is true and columnResizingMode is \"widget\". Declaration public bool? columnHidingEnabled { get; set; } Property Value Type Description Nullable < Boolean > Remarks This option set to true makes the widget hide certain columns automatically if all the columns do not fit the widget's width. Columns with low hidingPriority are hidden first. These are the rightmost (leftmost if rtlEnabled is true) columns by default. Information from hidden columns is available in an adaptive detail row. columnMinWidth Specifies the minimum width of columns. Declaration public double? columnMinWidth { get; set; } Property Value Type Description Nullable < Double > columnResizingMode Specifies how the widget resizes columns. Applies only if allowColumnResizing is true. Declaration public GridOptions.ColumnResizingMode? columnResizingMode { get; set; } Property Value Type Description Nullable < GridOptions.ColumnResizingMode > columns An array of grid columns. Declaration public GridColumnList columns { get; set; } Property Value Type Description GridColumnList Remarks By default, a column is created for each field of a data source object, but in most cases, it is redundant. To specify a set of columns to be created in a grid, assign an array specifying these columns to the columns option. Each grid column is represented in this array by an object containing column settings or by a data source field that this column is bound to. Detailed information on specifying grid columns is given in the Columns Overview article. Column options define the behavior and appearance of a grid column. One of the other capabilities allows you to control the sorting of column values using the allowSorting and sortOrder options, apply a filter to grid records using the allowFiltering and filterOperations options, and group grid records using the allowGrouping and groupIndex options. In addition, you can change the visibility and width of a column using corresponding options. To get or set an option or several options for a column at runtime, use the columnOption method with the required arguments. columnWidth Specifies the width for all data columns. Has a lower priority than the column.width option. Declaration public double? columnWidth { get; set; } Property Value Type Description Nullable < Double > dataSource Binds the widget to data Declaration public object[] dataSource { get; set; } Property Value Type Description Object [] dataSourceSortField Declaration public string dataSourceSortField { get; set; } Property Value Type Description String dateSerializationFormat Specifies the format in which date-time values should be sent to the server. Use it only if you do not specify the dataSource at design time. Declaration public string dateSerializationFormat { get; set; } Property Value Type Description String Remarks Without a data source, the widget cannot detect the date-time values' format. In this case, specify the dateSerializationFormat option that supports the following formats: \"yyyy-MM-dd\" - a local date \"yyyy-MM-ddTHH:mm:ss\" - local date and time \"yyyy-MM-ddTHH:mm:ssZ\" - the UTC date and time \"yyyy-MM-ddTHH:mm:ssx\" - date and time with a timezone This option applies only if the forceIsoDateParsing field is set to true in the global configuration object. disabled Specifies whether the widget responds to user interaction. Declaration public bool? disabled { get; set; } Property Value Type Description Nullable < Boolean > editing Configures editing. Declaration public GridEditing editing { get; set; } Property Value Type Description GridEditing Remarks The widget can allow a user to add, update and delete data. To control which of these operations are allowed, use the allowAdding, allowUpdating and allowDeleting options. Editing can be carried out in different modes, which are detailed in the mode option's description. errorRowEnabled Indicates whether to show the error row. Declaration public bool? errorRowEnabled { get; set; } Property Value Type Description Nullable < Boolean > Remarks The error row displays data-related errors that may occur on the server during the widget's runtime. Setting this option to false hides the error row, but the errors can still be viewed in the browser's console. export Configures client-side exporting. Declaration public GridExport export { get; set; } Property Value Type Description GridExport filterPanel Configures the filter panel. Declaration public GridFilterPanel filterPanel { get; set; } Property Value Type Description GridFilterPanel filterRow Configures the filter row. Declaration public GridFilterRow filterRow { get; set; } Property Value Type Description GridFilterRow filterRowCoverLabel Declaration public string filterRowCoverLabel { get; set; } Property Value Type Description String filterSyncEnabled Specifies whether to synchronize the filter row, header filter, and filter builder. The synchronized filter expression is stored in the filterValue option.Specifies whether to synchronize the filter row, header filter, and filter builder. The synchronized filter expression is stored in the filterValue option. Declaration public string filterSyncEnabled { get; set; } Property Value Type Description String filterValue Specifies a filter expression. Declaration public object[] filterValue { get; set; } Property Value Type Description Object [] focusedColumnIndex The index of the column that contains the focused data cell. Declaration public int? focusedColumnIndex { get; set; } Property Value Type Description Nullable < Int32 > focusedRowEnabled Specifies whether the focused row feature is enabled. Declaration public bool? focusedRowEnabled { get; set; } Property Value Type Description Nullable < Boolean > Remarks When this option is set to true, the following applies: Rows are initially sorted by keys if any field of remoteOperations is true. The row with focusedRowIndex or focusedRowKey is highlighted. When the data row area is focused, this row is focused and the area is scrolled down to it. The onFocusedRowChanging and onFocusedRowChanged functions become active. focusedRowIndex Specifies the initially or currently focused grid row's index. Use it when focusedRowEnabled is true. Declaration public double? focusedRowIndex { get; set; } Property Value Type Description Nullable < Double > Remarks The focused row has a key and index on a page. When the pager is used for navigation, the focused row's index persists from page to page but corresponds to a different row with a different key on each page. The default index, -1, means that no row is focused. The focusedRowKey takes precedence over the focusedRowIndex when both are specified. focusedRowKey Specifies initially or currently focused grid row's key. Use it when focusedRowEnabled is true. Declaration public object focusedRowKey { get; set; } Property Value Type Description Object Remarks The focused row has a key and index on a page. When the pager is used for navigation, the focused row's index persists from page to page but corresponds to a different row with a different key on each page. In the DataGrid, group rows can also be focused. See the Group Index and Key topic for more information on how group keys are formed. focusStateEnabled Specifies whether the widget can be focused using keyboard navigation. Declaration public bool? focusStateEnabled { get; set; } Property Value Type Description Nullable < Boolean > grouping Configures grouping. Declaration public GridGrouping grouping { get; set; } Property Value Type Description GridGrouping groupPanel Configures the group panel. Declaration public object groupPanel { get; set; } Property Value Type Description Object headerFilter Configures the header filter feature. Declaration public GridHeaderFilter headerFilter { get; set; } Property Value Type Description GridHeaderFilter heightMode Declaration public GridOptions.GridHeightMode heightMode { get; set; } Property Value Type Description GridOptions.GridHeightMode highlightChanges Specifies whether to highlight rows and cells with edited data. repaintChangesOnly should be true. Declaration public bool? highlightChanges { get; set; } Property Value Type Description Nullable < Boolean > hint Specifies text for a hint that appears when a user pauses on the widget. Declaration public string hint { get; set; } Property Value Type Description String hoverStateEnabled Specifies whether to highlight rows when a user moves the mouse pointer over them. Declaration public bool? hoverStateEnabled { get; set; } Property Value Type Description Nullable < Boolean > keyboardNavigation Configures keyboard navigation. Declaration public object keyboardNavigation { get; set; } Property Value Type Description Object keyExpr Specifies the key property (or properties) that provide(s) key values to access data items. Each key value must be unique. This option applies only if data is a simple array. Declaration public string keyExpr { get; set; } Property Value Type Description String loadPanel Configures the load panel. Declaration public object loadPanel { get; set; } Property Value Type Description Object masterDetail Allows you to build a master-detail interface in the grid. Declaration public GridMasterDetail masterDetail { get; set; } Property Value Type Description GridMasterDetail Remarks In DataGrid, a master-detail interface supplies a usual data row with an expandable section that contains the details on this data row. In that case, the data row is called \"master row\", while the section is called \"detail section\". To enable the master-detail interface, assign true to the masterDetail.enabled option. After that, specify the template for detail sections using the masterDetail.template option. Templates allow you to place virtually anything into the detail sections. For example, you can display another DataGrid or any other UI widget there. For more information on specifying the template for the detail sections, see the template option description. noDataText Specifies text shown when the widget does not display any data. Declaration public string noDataText { get; set; } Property Value Type Description String onChangeCommand Configures change command. Declaration public GridOnChangeCommand onChangeCommand { get; set; } Property Value Type Description GridOnChangeCommand pager Configures the pager. Declaration public object pager { get; set; } Property Value Type Description Object paging Configures paging. Declaration public GridPaging paging { get; set; } Property Value Type Description GridPaging Remarks Paging allows the widget to load data in portions instead of loading it simultaneously. To enable paging, set the paging.enabled option to true. Users can switch between pages and change paging settings using the pager or they can scroll the pages. Paging settings apply with any scrolling mode. remoteOperations Notifies the DataGrid of the server's data processing operations. Declaration public object remoteOperations { get; set; } Property Value Type Description Object renderAsync Specifies whether to render the filter row, command columns, and columns with showEditorAlways set to true after other elements. Declaration public bool? renderAsync { get; set; } Property Value Type Description Nullable < Boolean > repaintChangesOnly Specifies whether to repaint only those cells whose data changed. Declaration public bool? repaintChangesOnly { get; set; } Property Value Type Description Nullable < Boolean > rowAlternationEnabled Specifies whether rows should be shaded differently. Declaration public bool? rowAlternationEnabled { get; set; } Property Value Type Description Nullable < Boolean > rowDragging Configures row reordering using drag and drop gestures. Declaration public GridRowDragging rowDragging { get; set; } Property Value Type Description GridRowDragging rowTemplate Declaration public object rowTemplate { get; set; } Property Value Type Description Object scrolling Configures scrolling. Declaration public GridScrolling scrolling { get; set; } Property Value Type Description GridScrolling searchPanel Configures the search panel. Declaration public object searchPanel { get; set; } Property Value Type Description Object selectedRowKeys Allows you to select rows or determine which rows are selected. Applies only if selection.deferred is false. Declaration public object[] selectedRowKeys { get; set; } Property Value Type Description Object [] selection Configures runtime selection. Declaration public GridSelection selection { get; set; } Property Value Type Description GridSelection Remarks A user can select rows in a single or multiple mode. In multiple mode, a user can select all rows at once. To disable this feature, assign false to the allowSelectAll. By default, once a user selects a row, the data source is instantly notified about it. This may lower the widget performance if the data source is remote and the user is allowed to select all rows at once. In this case, we recommend making the selection deferred. selectionFilter Specifies filters for the rows that must be selected initially. Applies only if selection.deferred is true. Declaration public object[] selectionFilter { get; set; } Property Value Type Description Object [] Remarks This option also allows you to obtain filter expressions for the currently selected rows. Note that if all records are selected, the selectionFilter value is null. If there are no selected records, the value contains an empty array. showBorders Specifies whether the outer borders of the widget are visible. Declaration public bool? showBorders { get; set; } Property Value Type Description Nullable < Boolean > showColumnHeaders Specifies whether column headers are visible. Declaration public bool? showColumnHeaders { get; set; } Property Value Type Description Nullable < Boolean > showColumnLines Specifies whether vertical lines that separate one column from another are visible. Declaration public bool? showColumnLines { get; set; } Property Value Type Description Nullable < Boolean > showRowLines Specifies whether horizontal lines that separate one row from another are visible. Declaration public bool? showRowLines { get; set; } Property Value Type Description Nullable < Boolean > sortByGroupSummaryInfo Allows you to sort groups according to the values of group summary items. Declaration public object[] sortByGroupSummaryInfo { get; set; } Property Value Type Description Object [] sorting Configures runtime sorting. Declaration public GridSorting sorting { get; set; } Property Value Type Description GridSorting stateStoring Configures state storing. Declaration public object stateStoring { get; set; } Property Value Type Description Object summary Specifies the options of the grid summary Declaration public GridSummary summary { get; set; } Property Value Type Description GridSummary tabIndex Specifies the number of the element when the Tab key is used for navigating. Declaration public double? tabIndex { get; set; } Property Value Type Description Nullable < Double > twoWayBindingEnabled Specifies whether to enable two-way data binding. Declaration public bool? twoWayBindingEnabled { get; set; } Property Value Type Description Nullable < Boolean > Remarks Two-way data binding ensures that the UI tracks changes made in the data source by a 3rd-party component, and vice versa. This way, the widget and its data source stay synchronized. If you implement two-way data binding in the widget on your own using the cellTemplate and/or editCellTemplate options, make sure to set the twoWayBindingEnabled option to false. visible Specifies whether the widget is visible. Declaration public bool? visible { get; set; } Property Value Type Description Nullable < Boolean > wordWrapEnabled Specifies whether text that does not fit into a column should be wrapped. Declaration public bool? wordWrapEnabled { get; set; } Property Value Type Description Nullable < Boolean >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridPaging.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridPaging.html",
    "title": "Class GridPaging",
    "keywords": "Class GridPaging Inheritance Object GridPaging Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridPaging Properties enabled Enables paging. Declaration public bool? enabled { get; set; } Property Value Type Description Nullable < Boolean > pageIndex Specifies the page to be displayed using a zero-based index. Declaration public int? pageIndex { get; set; } Property Value Type Description Nullable < Int32 > pageSize Specifies the page size. Declaration public int? pageSize { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridPopupOptions.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridPopupOptions.html",
    "title": "Class GridPopupOptions",
    "keywords": "Class GridPopupOptions Inheritance Object GridPopupOptions Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridPopupOptions Constructors GridPopupOptions() Declaration public GridPopupOptions() Properties accessKey Specifies the shortcut key that sets focus on the widget. Declaration public string accessKey { get; set; } Property Value Type Description String animation Declaration public object animation { get; set; } Property Value Type Description Object applyValueMode Specifies the way an end-user applies the selected value. Declaration public SelectBoxOptions.ApplyValueModes? applyValueMode { get; set; } Property Value Type Description Nullable < SelectBoxOptions.ApplyValueModes > The apply value mode. closeOnOutsideClick Specifies whether to close the widget if a user clicks outside it. Declaration public bool? closeOnOutsideClick { get; set; } Property Value Type Description Nullable < Boolean > The close on outside click. container Declaration public object container { get; set; } Property Value Type Description Object contentTemplate Declaration public object contentTemplate { get; set; } Property Value Type Description Object deferRendering Specifies whether to render the widget's content when it is displayed. If false, the content is rendered immediately. Declaration public bool? deferRendering { get; set; } Property Value Type Description Nullable < Boolean > The defer rendering. disabled Specifies whether the widget responds to user interaction. Declaration public bool? disabled { get; set; } Property Value Type Description Nullable < Boolean > The disabled. dragEnabled Specifies whether or not to allow a user to drag the popup window. Declaration public bool? dragEnabled { get; set; } Property Value Type Description Nullable < Boolean > The drag enabled. elementAttr Declaration public object elementAttr { get; set; } Property Value Type Description Object focusStateEnabled Specifies whether the widget can be focused using keyboard navigation. Declaration public bool? focusStateEnabled { get; set; } Property Value Type Description Nullable < Boolean > fullScreen Specifies whether to display the Popup in full-screen mode. Declaration public bool? fullScreen { get; set; } Property Value Type Description Nullable < Boolean > The full screen. height Specifies the widget's height in pixels. Declaration public int? height { get; set; } Property Value Type Description Nullable < Int32 > The height. hint Specifies text for a hint that appears when a user pauses on the widget. Declaration public string hint { get; set; } Property Value Type Description String hoverStateEnabled Specifies whether to highlight rows when a user moves the mouse pointer over them. Declaration public bool? hoverStateEnabled { get; set; } Property Value Type Description Nullable < Boolean > keyboardNavigation Configures keyboard navigation. Declaration public object keyboardNavigation { get; set; } Property Value Type Description Object maxHeight Specifies the maximum height the widget can reach while resizing. Declaration public int? maxHeight { get; set; } Property Value Type Description Nullable < Int32 > The maximum height. maxWidth Specifies the maximum width the widget can reach while resizing. Declaration public int? maxWidth { get; set; } Property Value Type Description Nullable < Int32 > The maximum width. minHeight Specifies the minimum height the widget can reach while resizing. Declaration public int? minHeight { get; set; } Property Value Type Description Nullable < Int32 > The minimum height. minWidth Specifies the minimum width the widget can reach while resizing. Declaration public int? minWidth { get; set; } Property Value Type Description Nullable < Int32 > The minimum width. position Positions the widget. Declaration public object position { get; set; } Property Value Type Description Object The position. renderAsync Declaration public bool? renderAsync { get; set; } Property Value Type Description Nullable < Boolean > repaintChangesOnly Specifies whether to repaint only those cells whose data changed. Declaration public bool? repaintChangesOnly { get; set; } Property Value Type Description Nullable < Boolean > resizeEnabled Specifies whether or not an end user can resize the widget. Declaration public object resizeEnabled { get; set; } Property Value Type Description Object rowAlternationEnabled Specifies whether rows should be shaded differently. Declaration public bool? rowAlternationEnabled { get; set; } Property Value Type Description Nullable < Boolean > rowDragging Configures row reordering using drag and drop gestures. Declaration public GridRowDragging rowDragging { get; set; } Property Value Type Description GridRowDragging rtlEnabled Switches the widget to a right-to-left representation. Declaration public object rtlEnabled { get; set; } Property Value Type Description Object The RTL enabled. shading Specifies whether to shade the background when the widget is active. Declaration public bool? shading { get; set; } Property Value Type Description Nullable < Boolean > The shading. shadingColor Specifies the shading color. Applies only if shading is enabled. Declaration public string shadingColor { get; set; } Property Value Type Description String The color of the shading. showCloseButton Specifies whether or not the widget displays the Close button. Declaration public bool? showCloseButton { get; set; } Property Value Type Description Nullable < Boolean > The show close button. showTitle A Boolean value specifying whether or not to display the title in the popup window. Declaration public bool? showTitle { get; set; } Property Value Type Description Nullable < Boolean > The show title. tabIndex Specifies the number of the element when the Tab key is used for navigating. Declaration public double? tabIndex { get; set; } Property Value Type Description Nullable < Double > title The title in the overlay window. Declaration public string title { get; set; } Property Value Type Description String The title. visible Specifies whether the widget is visible. Declaration public bool? visible { get; set; } Property Value Type Description Nullable < Boolean > width Specifies the widget's width in pixels. Declaration public int? width { get; set; } Property Value Type Description Nullable < Int32 > The width."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridRowDragging.DragDirection.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridRowDragging.DragDirection.html",
    "title": "Enum GridRowDragging.DragDirection",
    "keywords": "Enum GridRowDragging.DragDirection Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum DragDirection Fields Name Description both horizontal vertical Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridRowDragging.DragDirection>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridRowDragging.DropFeedbackMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridRowDragging.DropFeedbackMode.html",
    "title": "Enum GridRowDragging.DropFeedbackMode",
    "keywords": "Enum GridRowDragging.DropFeedbackMode Specifies how to highlight the row's drop position. Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum DropFeedbackMode Fields Name Description indicate Rows do not animate, a blue square appears at the place where the dragged row is going to be placed. push Rows move apart with animation, making free space for the dragged row to be placed. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridRowDragging.DropFeedbackMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridRowDragging.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridRowDragging.html",
    "title": "Class GridRowDragging",
    "keywords": "Class GridRowDragging Configures row dragging and reordering. Inheritance Object GridRowDragging Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridRowDragging Properties allowDropInsideItem Allows users to drop a row inside another row. Declaration public bool? allowDropInsideItem { get; set; } Property Value Type Description Nullable < Boolean > The allow drop inside item. Remarks This option allows users to drop rows only in the UI. You should also handle drag-and-drop in code. If users drag and drop rows inside a single component, use the onReorder handler. To allow users to drag and drop rows between components, use the onAdd handler. allowReordering Allows row reordering using drag and drop gestures. Declaration public bool? allowReordering { get; set; } Property Value Type Description Nullable < Boolean > The allow reordering. Remarks This option only enables dragging. You should also implement the reordering logic in the onReorder handler to enable row reordering inside a component. If you need to perform cross-component drag-and-drop, implement the dragging logic in the onAdd handler.This option only enables dragging. You should also implement the reordering logic in the onReorder handler to enable row reordering inside a component. If you need to perform cross-component drag-and-drop, implement the dragging logic in the onAdd handler. animation Gets or sets the animation in dropfeedbackmode push. Declaration public GridRowDragging.RowAnimation animation { get; set; } Property Value Type Description GridRowDragging.RowAnimation The animation configuration. Remarks This is not officially documented. autoScroll Enables automatic scrolling while dragging a row beyond the viewport. Declaration public bool? autoScroll { get; set; } Property Value Type Description Nullable < Boolean > The automatic scroll. Remarks Default: true. boundary Specifies a DOM element that limits the dragging area. Declaration public string boundary { get; set; } Property Value Type Description String The boundary. container Specifies a custom container in which the draggable row should be rendered. Declaration public string container { get; set; } Property Value Type Description String The container. cursorOffset Specifies the cursor offset from the dragged row. Declaration public GridRowDragging.xyOffset cursorOffset { get; set; } Property Value Type Description GridRowDragging.xyOffset The cursor offset. data A container for custom data. Declaration public object data { get; set; } Property Value Type Description Object The data. dragDirection Specifies the directions in which a row can be dragged. Declaration public GridRowDragging.DragDirection? dragDirection { get; set; } Property Value Type Description Nullable < GridRowDragging.DragDirection > The drag direction. Remarks Default Value: 'both'. dropFeedbackMode Specifies how to highlight the row's drop position. Declaration public GridRowDragging.DropFeedbackMode? dropFeedbackMode { get; set; } Property Value Type Description Nullable < GridRowDragging.DropFeedbackMode > The drop feedback mode. dropInsideItem Declaration public bool? dropInsideItem { get; set; } Property Value Type Description Nullable < Boolean > filter Specifies a CSS selector for draggable rows. Declaration public string filter { get; set; } Property Value Type Description String The filter. group Allows you to group several widgets so that users can drag and drop rows between them. Declaration public string group { get; set; } Property Value Type Description String The group. Remarks Set this option to identical values for the widgets you want to collect in a single group. handle Specifies a CSS selector (ID or class) for the element(s) that should act as the drag handle(s). Declaration public string handle { get; set; } Property Value Type Description String The handle. scrollSensitivity Specifies the distance in pixels from the edge of viewport at which scrolling should start. Applies only if autoScroll is true. Declaration public double? scrollSensitivity { get; set; } Property Value Type Description Nullable < Double > The scroll sensitivity. Remarks Default Value: 60. scrollSpeed Specifies the scrolling speed when dragging a row beyond the viewport. Applies only if autoScroll is true. Declaration public double? scrollSpeed { get; set; } Property Value Type Description Nullable < Double > The scroll speed. Remarks Default Value: 30. showDragIcons Shows or hides row dragging icons. Declaration public bool? showDragIcons { get; set; } Property Value Type Description Nullable < Boolean > The show drag icons."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridRowDragging.RowAnimation.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridRowDragging.RowAnimation.html",
    "title": "Class GridRowDragging.RowAnimation",
    "keywords": "Class GridRowDragging.RowAnimation Inheritance Object GridRowDragging.RowAnimation Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class RowAnimation Properties duration Declaration public int duration { get; set; } Property Value Type Description Int32 type Declaration public string type { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridRowDragging.xyOffset.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridRowDragging.xyOffset.html",
    "title": "Class GridRowDragging.xyOffset",
    "keywords": "Class GridRowDragging.xyOffset Inheritance Object GridRowDragging.xyOffset Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class xyOffset Properties x Declaration public int x { get; set; } Property Value Type Description Int32 y Declaration public int y { get; set; } Property Value Type Description Int32"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridScrolling.ColumnRenderingMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridScrolling.ColumnRenderingMode.html",
    "title": "Enum GridScrolling.ColumnRenderingMode",
    "keywords": "Enum GridScrolling.ColumnRenderingMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum ColumnRenderingMode Fields Name Description standard Renders all columns at once. virtual Renders only those columns that get into the viewport. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridScrolling.ColumnRenderingMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridScrolling.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridScrolling.html",
    "title": "Class GridScrolling",
    "keywords": "Class GridScrolling Scrolling allows a user to browse data left outside the current viewport. The widget provides several scrolling modes detailed in the mode option description. Inheritance Object GridScrolling Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridScrolling Properties columnRenderingMode Specifies the rendering mode for columns. Applies when columns are left outside the viewport. Requires the columnWidth, columnAutoWidth, or width (for all columns) option specified. Declaration public GridScrolling.ColumnRenderingMode? columnRenderingMode { get; set; } Property Value Type Description Nullable < GridScrolling.ColumnRenderingMode > minTimeout Declaration public int? minTimeout { get; set; } Property Value Type Description Nullable < Int32 > mode Specifies the scrolling mode. Declaration public GridScrolling.ScrollingMode? mode { get; set; } Property Value Type Description Nullable < GridScrolling.ScrollingMode > Remarks Regardless of the scrolling mode, you can use the paging.pageSize option to specify the number of rows on a page. preloadEnabled Specifies whether the widget should load adjacent pages. Applies only if scrolling.mode is \"virtual\" or \"infinite\". Declaration public bool? preloadEnabled { get; set; } Property Value Type Description Nullable < Boolean > Remarks In virtual and infinite scrolling modes, pages are loaded on demand. If you set this option to true, the adjacent pages are loaded in advance for smoother scrolling. This option can reduce the performance on older devices. removeInvisiblePages Declaration public bool? removeInvisiblePages { get; set; } Property Value Type Description Nullable < Boolean > renderingThreshold Declaration public int? renderingThreshold { get; set; } Property Value Type Description Nullable < Int32 > rowPageSize Declaration public int? rowPageSize { get; set; } Property Value Type Description Nullable < Int32 > rowRenderingMode Specifies the rendering mode for loaded rows. Declaration public GridScrolling.RowRenderingMode? rowRenderingMode { get; set; } Property Value Type Description Nullable < GridScrolling.RowRenderingMode > scrollByContent Specifies whether a user can scroll the content with a swipe gesture. Applies only if useNative is false. Declaration public bool? scrollByContent { get; set; } Property Value Type Description Nullable < Boolean > scrollByThumb Specifies whether a user can scroll the content with the scrollbar. Applies only if useNative is false. Declaration public bool? scrollByThumb { get; set; } Property Value Type Description Nullable < Boolean > showScrollbar Specifies when to show scrollbars. Applies only if useNative is false. Declaration public GridScrolling.ShowScrollbarMode? showScrollbar { get; set; } Property Value Type Description Nullable < GridScrolling.ShowScrollbarMode > Remarks The scrollbars help to scroll the content vertically and horizontally. Vertical scrolling is available when all the rows do not fit in the widget's height. Horizontal scrolling is available when all the columns do not fit in the widget's width, which can happen when columns have fixed widths or the columnAutoWidth option is set to true. timeout Declaration public int? timeout { get; set; } Property Value Type Description Nullable < Int32 > updateTimeout Declaration public int? updateTimeout { get; set; } Property Value Type Description Nullable < Int32 > useNative Specifies whether the widget should use native or simulated scrolling. Declaration public string useNative { get; set; } Property Value Type Description String Remarks By default, the widget employs native scrolling on most platforms, except non-Mac desktops and devices based on Android older than version 4. To employ native scrolling on all platforms without exception, assign true to this option. If you assign false, the widget simulates scrolling on all platforms.By default, the widget employs native scrolling on most platforms, except non-Mac desktops and devices based on Android older than version 4. To employ native scrolling on all platforms without exception, assign true to this option. If you assign false, the widget simulates scrolling on all platforms."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridScrolling.RowRenderingMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridScrolling.RowRenderingMode.html",
    "title": "Enum GridScrolling.RowRenderingMode",
    "keywords": "Enum GridScrolling.RowRenderingMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum RowRenderingMode Fields Name Description standard Renders all the loaded rows at once. virtual Renders only those rows that get into the viewport. Use this mode if the pageSize is large. Rows that are being currently rendered can be shown as grey boxes. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridScrolling.RowRenderingMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridScrolling.ScrollingMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridScrolling.ScrollingMode.html",
    "title": "Enum GridScrolling.ScrollingMode",
    "keywords": "Enum GridScrolling.ScrollingMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum ScrollingMode Fields Name Description infinite Each next page is loaded once the scrollbar reaches the end of its scale. In this mode, users scroll data gradually from the first to the last page. standard A user scrolls a single page only. Scrolling is available only if all the page's rows do not fit into the widget's height. In this mode, the pager performs the main navigation and scrolling is auxiliary. If paging is disabled, the widget loads all rows simultaneously which can reduce the widget's performance. In this case, we recommend that you use another scrolling mode. virtual Rows are loaded when they get into the viewport and removed once they leave it. If the rows take time to be loaded and rendered, they display gray boxes. Rendering optimization can reduce rendering time and remove gray boxes. In this mode, users can move to any page instantly. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridScrolling.ScrollingMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridScrolling.ShowScrollbarMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridScrolling.ShowScrollbarMode.html",
    "title": "Enum GridScrolling.ShowScrollbarMode",
    "keywords": "Enum GridScrolling.ShowScrollbarMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum ShowScrollbarMode Fields Name Description always never onHover onScroll Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridScrolling.ShowScrollbarMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSelection.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSelection.html",
    "title": "Class GridSelection",
    "keywords": "Class GridSelection Configures runtime selection. Inheritance Object GridSelection Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridSelection Remarks A user can select rows in a single or multiple mode. In multiple mode, a user can select all rows at once. To disable this feature, assign false to the allowSelectAll. By default, once a user selects a row, the data source is instantly notified about it. This may lower the widget performance if the data source is remote and the user is allowed to select all rows at once. In this case, we recommend making the selection deferred. Properties allowSelectAll Specifies whether a user can select all rows at once. Declaration public bool? allowSelectAll { get; set; } Property Value Type Description Nullable < Boolean > Remarks If this option is set to true, it allows a user to select all rows at once by pressing Ctrl + A or clicking the check box in the selection column's header. The \"Select All\" check box also allows a user to deselect all rows. The select all functionality allows selecting/deselecting only those rows that meet filtering conditions if a filter is applied. If this option is set to false, it disables the select all functionality. In this case, the check box clears selection and is hidden if no rows are selected. deferred Makes selection deferred. Declaration public bool? deferred { get; set; } Property Value Type Description Nullable < Boolean > Remarks Consider making selection deferred if the widget needs to operate a large volume of data and the user is allowed to select all rows at once. Unlike usual (or \"instant\") selection, in the case of deferred selection, the widget requests data only when you demand this using the API, for example, when the getSelectedRowsData() or getSelectedRowKeys() method is called. This mode has certain specifics that determine the API you need to use. For more information, see the Deferred Selection article. mode Specifies the selection mode. Declaration public GridSelection.SelectionMode? mode { get; set; } Property Value Type Description Nullable < GridSelection.SelectionMode > selectAllMode Specifies the mode in which all the records are selected. Applies only if selection.allowSelectAll is true. Declaration public GridSelection.SelectAllMode? selectAllMode { get; set; } Property Value Type Description Nullable < GridSelection.SelectAllMode > Remarks selectAllMode specifies how records should be selected on clicking the \"Select All\" check box and by calling the selectAll()/deselectAll() methods. The following modes are available. showCheckBoxesMode Specifies when to display check boxes in rows. Applies only if selection.mode is \"multiple\". Declaration public GridSelection.ShowCheckBoxesMode? showCheckBoxesMode { get; set; } Property Value Type Description Nullable < GridSelection.ShowCheckBoxesMode > Remarks The selection behavior in multiple mode depends on the check boxes' visibility. Selection is proper multiple only when check boxes are visible. In other cases, the selection behavior resembles the single mode: clicking (or tapping) a row selects it, but cancels the selection of other rows. However, a user still can select multiple rows in this mode using a click and hold, or long tap."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSelection.SelectAllMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSelection.SelectAllMode.html",
    "title": "Enum GridSelection.SelectAllMode",
    "keywords": "Enum GridSelection.SelectAllMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum SelectAllMode Fields Name Description allPages Selects records on all pages. page Selects records on currently rendered page. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridSelection.SelectAllMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSelection.SelectionMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSelection.SelectionMode.html",
    "title": "Enum GridSelection.SelectionMode",
    "keywords": "Enum GridSelection.SelectionMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum SelectionMode Fields Name Description multiple Several rows can be in the selected state at a time. none The none single Only one row can be in the selected state at a time. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridSelection.SelectionMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSelection.ShowCheckBoxesMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSelection.ShowCheckBoxesMode.html",
    "title": "Enum GridSelection.ShowCheckBoxesMode",
    "keywords": "Enum GridSelection.ShowCheckBoxesMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum ShowCheckBoxesMode Fields Name Description always The selection column with all the check boxes is always visible. A user can select a row by clicking the check box or its grid cell, but not the row itself. none Check boxes are always hidden, which means that selection is always single-like in this mode. onClick Check boxes appear once a user clicks anywhere in the selection column, or if two or more rows are selected programmatically or using keyboard shortcuts. Check boxes disappear once rows selection is canceled. onLongTap The selection column with all the check boxes appears and disappears on long tap, and on click and hold. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridSelection.ShowCheckBoxesMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSorting.GridSortingMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSorting.GridSortingMode.html",
    "title": "Enum GridSorting.GridSortingMode",
    "keywords": "Enum GridSorting.GridSortingMode Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum GridSortingMode Fields Name Description multiple Rows can be sorted by values of several columns. none No sorting. single Rows can be sorted by values of a single column only. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridSorting.GridSortingMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSorting.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSorting.html",
    "title": "Class GridSorting",
    "keywords": "Class GridSorting Configures the filter row. Inheritance Object GridSorting Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridSorting Properties mode Specifies the sorting mode. Declaration public GridSorting.GridSortingMode? mode { get; set; } Property Value Type Description Nullable < GridSorting.GridSortingMode > The mode. showSortIndexes Declaration public bool? showSortIndexes { get; set; } Property Value Type Description Nullable < Boolean >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSummary.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSummary.html",
    "title": "Class GridSummary",
    "keywords": "Class GridSummary Configures the filter row. Inheritance Object GridSummary Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridSummary Properties groupItems Specifies items of the group summary. Declaration public List<GridSummaryGroupItem> groupItems { get; set; } Property Value Type Description List < GridSummaryGroupItem > Remarks The group summary provides a synopsis of a group of data. Groups of data are formed in the process of grouping. The group summary contains several items. Each item displays a value that is a product of applying an aggregate function to a group of data. To specify the items of the group summary, declare an array of objects, each of which contains at least two fields: column and summaryType. The column field specifies the identifier of the column that provides data for an aggregate function. The summaryType specifies the aggregate function to be applied. recalculateWhileEditing Specifies whether to recalculate summaries while a user edits data. Declaration public bool? recalculateWhileEditing { get; set; } Property Value Type Description Nullable < Boolean > skipEmptyValues Specifies whether or not to skip empty strings, null and undefined values when calculating a summary. Declaration public bool? skipEmptyValues { get; set; } Property Value Type Description Nullable < Boolean > Remarks Specified in the summary object, this option affects all summaries in the grid. In addition, the same option can be specified for an individual summary. It will override the global setting."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSummaryGroupItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSummaryGroupItem.html",
    "title": "Class GridSummaryGroupItem",
    "keywords": "Class GridSummaryGroupItem Inheritance Object GridSummaryGroupItem Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class GridSummaryGroupItem Properties alignByColumn Indicates whether to display group summary items in parentheses after the group row header or to align them by the corresponding columns within the group row. Declaration public bool? alignByColumn { get; set; } Property Value Type Description Nullable < Boolean > column Specifies the column that provides data for a group summary item. Declaration public string column { get; set; } Property Value Type Description String displayFormat Specifies the summary item's text. Declaration public string displayFormat { get; set; } Property Value Type Description String Remarks You can use the following position markers in this text: {0} - formatted summary value. {1} - the parent column's caption. Available if the showInColumn option is specified. name Specifies the group summary item's identifier. Declaration public string name { get; set; } Property Value Type Description String Remarks Use this name to access the summary item in callback functions like calculateCustomSummary. showInColumn Specifies the column that must hold the summary item when this item is displayed in the group footer or aligned by a column in the group row. Declaration public bool? showInColumn { get; set; } Property Value Type Description Nullable < Boolean > Remarks A group summary item can be forced to be displayed in the group row by the column that provides data for this item. Alternatively, you can place an item to the group footer where the item is also held by the column that provides data for it. If you need to place an item in another column, assign the name, data field or caption of this column to the showInColumn option. showInGroupFooter pecifies whether or not a summary item must be displayed in the group footer. Declaration public bool? showInGroupFooter { get; set; } Property Value Type Description Nullable < Boolean > Remarks By default, summary items are displayed as a part of a group row. If you need a summary item to be displayed in the group footer, assign true to the showInGroupFooter option of this item. This summary item will be located in the column that provides data for it. If you want another column to hold the summary item, specify the showInColumn option of this item. skipEmptyValues Specifies whether or not to skip empty strings, null and undefined values when calculating a summary. Declaration public bool? skipEmptyValues { get; set; } Property Value Type Description Nullable < Boolean > Remarks Specified in a summary configuration object, this option affects an individual summary item. If you need to apply a single setting to all summaries in a grid, specify the skipEmptyValues option in the summary object. summaryType Specifies how to aggregate data for the group summary item. Declaration public GridSummaryGroupItem.SummaryType? summaryType { get; set; } Property Value Type Description Nullable < GridSummaryGroupItem.SummaryType > Remarks Use the SummaryType enum to specify this option when the widget is used as an ASP.NET MVC 5 Control or a DevExtreme-Based ASP.NET Core Control. This enum accepts the following values: Sum, Min, Max, Avg, Count, and Custom. To apply a custom server-side aggregate function, use a string overload instead. valueFormat Specifies a summary item value's display format. Declaration public string valueFormat { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSummaryGroupItem.SummaryType.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.GridSummaryGroupItem.SummaryType.html",
    "title": "Enum GridSummaryGroupItem.SummaryType",
    "keywords": "Enum GridSummaryGroupItem.SummaryType Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum SummaryType Fields Name Description avg count custom max min sum Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GridSummaryGroupItem.SummaryType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.html",
    "title": "Namespace Emby.Web.GenericEdit.Elements.Grid",
    "keywords": "Namespace Emby.Web.GenericEdit.Elements.Grid Classes ColumnBuilder GridButton GridColumn GridColumnChooser Configures the column chooser. GridColumnFixing Configures the column chooser. GridColumnFixing.GridColumnFixingTexts Contains options that specify texts for column fixing commands in the context menu of a column header. GridColumnFormat GridColumnList GridEditing GridEditingTexts Contains options that specify texts for editing-related UI elements. GridExport GridFilterPanel Configures the filter panel feature. GridFilterPanelTexts Specifies texts for the filter panel's elements. GridFilterRow Configures the filter row. GridGrouping Configures the filter row. GridGroupingTexts Defines the texts of grouping-related visual elements. GridHeaderFilter Configures the header filter feature. GridHeaderFilterTexts Contains options that specify text for various elements of the popup menu. GridLookup Specifies options of a lookup column. GridMasterDetail GridOnChangeCommand GridOptions GridPaging GridPopupOptions GridRowDragging Configures row dragging and reordering. GridRowDragging.RowAnimation GridRowDragging.xyOffset GridScrolling Scrolling allows a user to browse data left outside the current viewport. The widget provides several scrolling modes detailed in the mode option description. GridSelection Configures runtime selection. GridSorting Configures the filter row. GridSummary Configures the filter row. GridSummaryGroupItem SelectBoxOptions Enums GridColumn.Alignment GridColumn.ColumnDataType GridColumn.FixedPositionType GridColumn.HeaderFilterType GridColumnChooser.ColumnChooserMode GridColumnFormat.FormatType GridEditing.GridEditMode GridEditing.GridEditRefreshMode GridFilterRow.ColumnChooserMode GridGrouping.GroupExpandMode GridOptions.ColumnResizingMode GridOptions.GridHeightMode GridRowDragging.DragDirection GridRowDragging.DropFeedbackMode Specifies how to highlight the row's drop position. GridScrolling.ColumnRenderingMode GridScrolling.RowRenderingMode GridScrolling.ScrollingMode GridScrolling.ShowScrollbarMode GridSelection.SelectAllMode GridSelection.SelectionMode GridSelection.ShowCheckBoxesMode GridSorting.GridSortingMode GridSummaryGroupItem.SummaryType SelectBoxOptions.ApplyValueModes"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.SelectBoxOptions.ApplyValueModes.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.SelectBoxOptions.ApplyValueModes.html",
    "title": "Enum SelectBoxOptions.ApplyValueModes",
    "keywords": "Enum SelectBoxOptions.ApplyValueModes Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public enum ApplyValueModes Fields Name Description instantly Applies the selected value immediately after a user clicks the required value in the drop-down menu. To cancel the selection, click outside the drop-down menu. useButtons Enables an end-user to apply the selected value or cancel the selection using the Apply and Cancel buttons respectively. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SelectBoxOptions.ApplyValueModes>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.SelectBoxOptions.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.SelectBoxOptions.html",
    "title": "Class SelectBoxOptions",
    "keywords": "Class SelectBoxOptions Inheritance Object SelectBoxOptions Namespace : Emby.Web.GenericEdit.Elements.Grid Assembly : Emby.Web.GenericEdit.dll Syntax public class SelectBoxOptions Properties applyValueMode Specifies the way an end-user applies the selected value. Declaration public SelectBoxOptions.ApplyValueModes? applyValueMode { get; set; } Property Value Type Description Nullable < SelectBoxOptions.ApplyValueModes > The apply value mode. dropDownOptions Declaration public GridPopupOptions dropDownOptions { get; set; } Property Value Type Description GridPopupOptions fieldTemplate Declaration public string fieldTemplate { get; set; } Property Value Type Description String itemTemplate Declaration public string itemTemplate { get; set; } Property Value Type Description String searchEnabled Specifies whether the search box is visible. Declaration public bool? searchEnabled { get; set; } Property Value Type Description Nullable < Boolean > The search enabled. valueChangeEvent Declaration public string valueChangeEvent { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridEmailRule.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridEmailRule.html",
    "title": "Class GridEmailRule",
    "keywords": "Class GridEmailRule Inheritance Object GridValidationRuleBase GridEmailRule Inherited Members GridValidationRuleBase.message GridValidationRuleBase.ignoreEmptyValue Namespace : Emby.Web.GenericEdit.Elements.Grid.Validation Assembly : Emby.Web.GenericEdit.dll Syntax public class GridEmailRule : GridValidationRuleBase Properties type Specifies the rule type Declaration public override ValidationRuleType type { get; } Property Value Type Description ValidationRuleType The the rule type. Overrides GridValidationRuleBase.type"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridNumericRule.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridNumericRule.html",
    "title": "Class GridNumericRule",
    "keywords": "Class GridNumericRule Inheritance Object GridValidationRuleBase GridNumericRule Inherited Members GridValidationRuleBase.message GridValidationRuleBase.ignoreEmptyValue Namespace : Emby.Web.GenericEdit.Elements.Grid.Validation Assembly : Emby.Web.GenericEdit.dll Syntax public class GridNumericRule : GridValidationRuleBase Properties type Specifies the rule type Declaration public override ValidationRuleType type { get; } Property Value Type Description ValidationRuleType The the rule type. Overrides GridValidationRuleBase.type"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridRangeRule.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridRangeRule.html",
    "title": "Class GridRangeRule",
    "keywords": "Class GridRangeRule Inheritance Object GridValidationRuleBase GridRangeRule Inherited Members GridValidationRuleBase.message GridValidationRuleBase.ignoreEmptyValue Namespace : Emby.Web.GenericEdit.Elements.Grid.Validation Assembly : Emby.Web.GenericEdit.dll Syntax public class GridRangeRule : GridValidationRuleBase Properties max Specifies the maximum value allowed for the validated value. Declaration public double? max { get; set; } Property Value Type Description Nullable < Double > The maximum. min Specifies the minimum value allowed for the validated value. Declaration public double? min { get; set; } Property Value Type Description Nullable < Double > The minimum. type Specifies the rule type Declaration public override ValidationRuleType type { get; } Property Value Type Description ValidationRuleType The the rule type. Overrides GridValidationRuleBase.type"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridRequiredRule.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridRequiredRule.html",
    "title": "Class GridRequiredRule",
    "keywords": "Class GridRequiredRule Inheritance Object GridValidationRuleBase GridRequiredRule Inherited Members GridValidationRuleBase.message GridValidationRuleBase.ignoreEmptyValue Namespace : Emby.Web.GenericEdit.Elements.Grid.Validation Assembly : Emby.Web.GenericEdit.dll Syntax public class GridRequiredRule : GridValidationRuleBase Properties trim Indicates whether to remove the Space characters from the validated value. Declaration public bool? trim { get; set; } Property Value Type Description Nullable < Boolean > The trim. type Specifies the rule type Declaration public override ValidationRuleType type { get; } Property Value Type Description ValidationRuleType The the rule type. Overrides GridValidationRuleBase.type"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridStringLengthRule.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridStringLengthRule.html",
    "title": "Class GridStringLengthRule",
    "keywords": "Class GridStringLengthRule Inheritance Object GridValidationRuleBase GridStringLengthRule Inherited Members GridValidationRuleBase.message GridValidationRuleBase.ignoreEmptyValue Namespace : Emby.Web.GenericEdit.Elements.Grid.Validation Assembly : Emby.Web.GenericEdit.dll Syntax public class GridStringLengthRule : GridValidationRuleBase Properties max Specifies the maximum length allowed for the validated value. Declaration public int? max { get; set; } Property Value Type Description Nullable < Int32 > The maximum. min Specifies the minimum length allowed for the validated value. Declaration public int? min { get; set; } Property Value Type Description Nullable < Int32 > The minimum. trim Indicates whether to remove the Space characters from the validated value. Declaration public bool? trim { get; set; } Property Value Type Description Nullable < Boolean > The trim. type Specifies the rule type Declaration public override ValidationRuleType type { get; } Property Value Type Description ValidationRuleType The the rule type. Overrides GridValidationRuleBase.type"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridValidationRuleBase.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.GridValidationRuleBase.html",
    "title": "Class GridValidationRuleBase",
    "keywords": "Class GridValidationRuleBase Inheritance Object GridValidationRuleBase GridEmailRule GridNumericRule GridRangeRule GridRequiredRule GridStringLengthRule Namespace : Emby.Web.GenericEdit.Elements.Grid.Validation Assembly : Emby.Web.GenericEdit.dll Syntax public abstract class GridValidationRuleBase Properties ignoreEmptyValue If set to true, empty values are valid. Declaration public bool? ignoreEmptyValue { get; set; } Property Value Type Description Nullable < Boolean > true if empty values are valid; otherwise, false . message Specifies the message that is shown if the rule is broken. Declaration public string message { get; set; } Property Value Type Description String The message. type Specifies the rule type Declaration public abstract ValidationRuleType type { get; } Property Value Type Description ValidationRuleType The the rule type."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.html",
    "title": "Namespace Emby.Web.GenericEdit.Elements.Grid.Validation",
    "keywords": "Namespace Emby.Web.GenericEdit.Elements.Grid.Validation Classes GridEmailRule GridNumericRule GridRangeRule GridRequiredRule GridStringLengthRule GridValidationRuleBase Enums ValidationRuleType"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.ValidationRuleType.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.Grid.Validation.ValidationRuleType.html",
    "title": "Enum ValidationRuleType",
    "keywords": "Enum ValidationRuleType Namespace : Emby.Web.GenericEdit.Elements.Grid.Validation Assembly : Emby.Web.GenericEdit.dll Syntax public enum ValidationRuleType Fields Name Description async compare custom email numeric pattern range required stringLength Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ValidationRuleType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.html",
    "title": "Namespace Emby.Web.GenericEdit.Elements",
    "keywords": "Namespace Emby.Web.GenericEdit.Elements Classes ButtonItem CaptionItem DoubleGridOverlay GenericDoubleMappingGrid GenericDoubleSortGrid GenericGrid GenericPivotGrid LabelItem ProgressItem SpacerItem StatusItem TagItem ToggleButtonItem Enums IconNames ItemStatus"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.IconNames.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.IconNames.html",
    "title": "Enum IconNames",
    "keywords": "Enum IconNames Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public enum IconNames Fields Name Description _3d_rotation ac_unit access_alarm access_alarms access_time accessibility accessible account_balance account_balance_wallet account_box account_circle account_tree adb add add_a_photo add_alarm add_alert add_box add_circle add_circle_outline add_location add_shopping_cart add_to_photos add_to_queue adjust airline_seat_flat airline_seat_flat_angled airline_seat_individual_suite airline_seat_legroom_extra airline_seat_legroom_normal airline_seat_legroom_reduced airline_seat_recline_extra airline_seat_recline_normal airplanemode_active airplanemode_inactive airplay airport_shuttle alarm alarm_add alarm_off alarm_on album all_inclusive all_out android announcement apps archive arrow_back arrow_downward arrow_drop_down arrow_drop_down_circle arrow_drop_up arrow_forward arrow_upward art_track aspect_ratio assessment assignment assignment_ind assignment_late assignment_return assignment_returned assignment_turned_in assistant assistant_photo attach_file attach_money attachment audiotrack autorenew av_timer backspace backup battery_alert battery_charging_full battery_full battery_std battery_unknown beach_access beenhere block bluetooth bluetooth_audio bluetooth_connected bluetooth_disabled bluetooth_searching blur_circular blur_linear blur_off blur_on book bookmark bookmark_border bookmarks border_all border_bottom border_clear border_color border_horizontal border_inner border_left border_outer border_right border_style border_top border_vertical branding_watermark brightness_1 brightness_2 brightness_3 brightness_4 brightness_5 brightness_6 brightness_7 brightness_auto brightness_high brightness_low brightness_medium broken_image brush bubble_chart bug_report build burst_mode business business_center cached cake calendar_today call call_end call_made call_merge call_missed call_missed_outgoing call_received call_split call_to_action camera camera_alt camera_enhance camera_front camera_rear camera_roll cancel card_giftcard card_membership card_travel casino cast cast_connected center_focus_strong center_focus_weak change_history chat chat_bubble chat_bubble_outline check check_box check_box_outline_blank check_circle check_circle_outline chevron_left chevron_right child_care child_friendly chrome_reader_mode class clear clear_all close closed_caption cloud cloud_circle cloud_done cloud_download cloud_off cloud_queue cloud_upload code collections collections_bookmark color_lens colorize comment compare compare_arrows computer confirmation_number contact_mail contact_phone contacts content_copy content_cut content_paste control_point control_point_duplicate copyright create create_new_folder credit_card crop crop_16_9 crop_3_2 crop_5_4 crop_7_5 crop_din crop_free crop_landscape crop_original crop_portrait crop_rotate crop_square dashboard data_usage date_range dehaze delete delete_forever delete_outline delete_sweep description desktop_mac desktop_windows details developer_board developer_mode device_hub devices devices_other dialer_sip dialpad directions directions_bike directions_boat directions_bus directions_car directions_railway directions_run directions_subway directions_transit directions_walk disc_full dns do_not_disturb do_not_disturb_alt do_not_disturb_off do_not_disturb_on dock domain done done_all donut_large donut_small drafts drag_handle drive_eta dvr edit edit_location eject email enhanced_encryption equalizer error error_outline euro_symbol ev_station event event_available event_busy event_note event_seat exit_to_app expand_less expand_more explicit explore exposure exposure_neg_1 exposure_neg_2 exposure_plus_1 exposure_plus_2 exposure_zero extension face fast_forward fast_rewind favorite favorite_border featured_play_list featured_video feedback fiber_dvr fiber_manual_record fiber_new fiber_pin fiber_smart_record file_download file_upload filter filter_1 filter_2 filter_3 filter_4 filter_5 filter_6 filter_7 filter_8 filter_9 filter_9_plus filter_b_and_w filter_center_focus filter_drama filter_frames filter_hdr filter_list filter_none filter_tilt_shift filter_vintage find_in_page find_replace fingerprint first_page fitness_center flag flare flash_auto flash_off flash_on flight flight_land flight_takeoff flip flip_to_back flip_to_front folder folder_open folder_shared folder_special font_download format_align_center format_align_justify format_align_left format_align_right format_bold format_clear format_color_fill format_color_reset format_color_text format_indent_decrease format_indent_increase format_italic format_line_spacing format_list_bulleted format_list_numbered format_paint format_quote format_shapes format_size format_strikethrough format_textdirection_l_to_r format_textdirection_r_to_l format_underlined forum forward forward_10 forward_30 forward_5 free_breakfast fullscreen fullscreen_exit functions g_translate gamepad games gavel gesture get_app gif golf_course gps_fixed gps_not_fixed gps_off grade gradient grain graphic_eq grid_off grid_on group group_add group_work hd hdr_off hdr_on hdr_strong hdr_weak headset headset_mic healing hearing help help_outline high_quality highlight highlight_off history history_toggle_off home hot_tub hotel hourglass_empty hourglass_full http https image image_aspect_ratio import_contacts import_export important_devices inbox indeterminate_check_box info info_outline input insert_chart insert_comment insert_drive_file insert_emoticon insert_invitation insert_link insert_photo invert_colors invert_colors_off iso keyboard keyboard_arrow_down keyboard_arrow_left keyboard_arrow_right keyboard_arrow_up keyboard_backspace keyboard_capslock keyboard_hide keyboard_return keyboard_tab keyboard_voice kitchen label label_outline landscape language laptop laptop_chromebook laptop_mac laptop_windows last_page launch layers layers_clear leak_add leak_remove lens library_add library_books library_music lightbulb_outline line_style line_weight linear_scale link linked_camera list list_alt live_help live_tv Loading local_activity local_airport local_atm local_bar local_cafe local_car_wash local_convenience_store local_dining local_drink local_florist local_gas_station local_grocery_store local_hospital local_hotel local_laundry_service local_library local_mall local_movies local_offer local_parking local_pharmacy local_phone local_pizza local_play local_post_office local_printshop local_see local_shipping local_taxi location_city location_disabled location_off location_on location_searching lock lock_open lock_outline login looks looks_3 looks_4 looks_5 looks_6 looks_one looks_two loop loupe low_priority loyalty mail mail_outline map markunread markunread_mailbox memory menu merge_type message mic mic_none mic_off mms mode_comment mode_edit monetization_on money_off monochrome_photos mood mood_bad more more_horiz more_vert motorcycle mouse move_to_inbox movie movie_creation movie_filter multiline_chart music_note music_video my_location nature nature_people navigate_before navigate_next navigation near_me network_cell network_check network_locked network_wifi new_releases next_week nfc no_encryption no_sim not_interested note note_add notifications notifications_active notifications_none notifications_off notifications_paused offline_pin ondemand_video opacity open_in_browser open_in_new open_with pages pageview palette pan_tool panorama panorama_fish_eye panorama_horizontal panorama_vertical panorama_wide_angle party_mode pause pause_circle_filled pause_circle_outline payment people people_outline perm_camera_mic perm_contact_calendar perm_data_setting perm_device_information perm_identity perm_media perm_phone_msg perm_scan_wifi person person_add person_outline person_pin person_pin_circle personal_video pets phone phone_android phone_bluetooth_speaker phone_forwarded phone_in_talk phone_iphone phone_locked phone_missed phone_paused phonelink phonelink_erase phonelink_lock phonelink_off phonelink_ring phonelink_setup photo photo_album photo_camera photo_filter photo_library photo_size_select_actual photo_size_select_large photo_size_select_small picture_as_pdf picture_in_picture picture_in_picture_alt pie_chart pie_chart_outlined pin_drop place play_arrow play_circle_filled play_circle_outline play_for_work playlist_add playlist_add_check playlist_play plus_one poll polymer pool portable_wifi_off portrait power power_input power_settings_new pregnant_woman present_to_all print priority_high public publish query_builder question_answer queue queue_music queue_play_next radio radio_button_checked radio_button_unchecked rate_review receipt recent_actors record_voice_over redeem redo refresh remove remove_circle remove_circle_outline remove_from_queue remove_red_eye remove_shopping_cart reorder repeat repeat_one replay replay_10 replay_30 replay_5 reply reply_all report report_problem restaurant restaurant_menu restore restore_page ring_volume room room_service rotate_90_degrees_ccw rotate_left rotate_right rounded_corner router rowing rss_feed rv_hookup satellite save scanner schedule school screen_lock_landscape screen_lock_portrait screen_lock_rotation screen_rotation screen_share sd_card sd_storage search security select_all send sentiment_dissatisfied sentiment_neutral sentiment_satisfied sentiment_very_dissatisfied sentiment_very_satisfied settings settings_applications settings_backup_restore settings_bluetooth settings_brightness settings_cell settings_ethernet settings_input_antenna settings_input_component settings_input_composite settings_input_hdmi settings_input_svideo settings_overscan settings_phone settings_power settings_remote settings_system_daydream settings_voice share shop shop_two shopping_basket shopping_cart short_text show_chart shuffle signal_cellular_4_bar signal_cellular_connected_no_internet_4_bar signal_cellular_no_sim signal_cellular_null signal_cellular_off signal_wifi_4_bar signal_wifi_4_bar_lock signal_wifi_off sim_card sim_card_alert skip_next skip_previous slideshow slow_motion_video smartphone smoke_free smoking_rooms sms sms_failed snooze sort sort_by_alpha spa space_bar speaker speaker_group speaker_notes speaker_notes_off speaker_phone spellcheck star star_border star_half stars stay_current_landscape stay_current_portrait stay_primary_landscape stay_primary_portrait stop stop_screen_share storage store store_mall_directory straighten streetview strikethrough_s style subdirectory_arrow_left subdirectory_arrow_right subject subscriptions subtitles subway supervisor_account surround_sound swap_calls swap_horiz swap_vert swap_vertical_circle switch_camera switch_video sync sync_alt sync_disabled sync_problem system_update system_update_alt tab tab_unselected tablet tablet_android tablet_mac tag_faces tap_and_play terrain text_fields text_format textsms texture theaters thumb_down thumb_up thumbs_up_down time_to_leave timelapse timeline timer timer_10 timer_3 timer_off title toc today toll tonality touch_app toys track_changes traffic train tram transfer_within_a_station transform translate trending_down trending_flat trending_up trip_origin tune turned_in turned_in_not tv unarchive undo unfold_less unfold_more update usb verified_user vertical_align_bottom vertical_align_center vertical_align_top vibration video_call video_label video_library videocam videocam_off videogame_asset view_agenda view_array view_carousel view_column view_comfy view_compact view_day view_headline view_list view_module view_quilt view_stream view_week vignette visibility visibility_off voice_chat voicemail volume_down volume_mute volume_off volume_up vpn_key vpn_lock wallpaper warning watch watch_later wb_auto wb_cloudy wb_incandescent wb_iridescent wb_sunny wc web web_asset weekend whatshot widgets wifi wifi_lock wifi_tethering work wrap_text youtube_searched_for zoom_in zoom_out zoom_out_map Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<IconNames>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.ItemStatus.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.ItemStatus.html",
    "title": "Enum ItemStatus",
    "keywords": "Enum ItemStatus Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public enum ItemStatus Fields Name Description Failed InProgress None Succeeded Unavailable Unknown Warning Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ItemStatus>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.LabelItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.LabelItem.html",
    "title": "Class LabelItem",
    "keywords": "Class LabelItem Inheritance Object LabelItem Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class LabelItem Constructors LabelItem() Declaration public LabelItem() LabelItem(String) Declaration public LabelItem(string text) Parameters Type Name Description String text Properties HyperLink Declaration public string HyperLink { get; set; } Property Value Type Description String Icon Declaration public IconNames? Icon { get; set; } Property Value Type Description Nullable < IconNames > IsVisible Declaration public bool IsVisible { get; set; } Property Value Type Description Boolean Text Declaration public string Text { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.List.GenericItemList.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.List.GenericItemList.html",
    "title": "Class GenericItemList",
    "keywords": "Class GenericItemList Inheritance Object List < GenericListItem > GenericItemList Implements IList < GenericListItem > ICollection < GenericListItem > IReadOnlyList < GenericListItem > IReadOnlyCollection < GenericListItem > IEnumerable < GenericListItem > IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<Emby.Web.GenericEdit.Elements.List.GenericListItem>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Emby.Web.GenericEdit.Elements.List.GenericListItem>.System.Collections.IList.set_Item(System.Int32, System.Object) List<GenericListItem>.Add(GenericListItem) List<GenericListItem>.AddRange(IEnumerable<GenericListItem>) List<GenericListItem>.AsReadOnly() List<GenericListItem>.BinarySearch(GenericListItem) List<GenericListItem>.BinarySearch(GenericListItem, IComparer<GenericListItem>) List<GenericListItem>.BinarySearch(Int32, Int32, GenericListItem, IComparer<GenericListItem>) List<GenericListItem>.Clear() List<GenericListItem>.Contains(GenericListItem) List<GenericListItem>.ConvertAll<TOutput>(Converter<GenericListItem, TOutput>) List<GenericListItem>.CopyTo(GenericListItem[]) List<GenericListItem>.CopyTo(GenericListItem[], Int32) List<GenericListItem>.CopyTo(Int32, GenericListItem[], Int32, Int32) List<GenericListItem>.Exists(Predicate<GenericListItem>) List<GenericListItem>.Find(Predicate<GenericListItem>) List<GenericListItem>.FindAll(Predicate<GenericListItem>) List<GenericListItem>.FindIndex(Int32, Int32, Predicate<GenericListItem>) List<GenericListItem>.FindIndex(Int32, Predicate<GenericListItem>) List<GenericListItem>.FindIndex(Predicate<GenericListItem>) List<GenericListItem>.FindLast(Predicate<GenericListItem>) List<GenericListItem>.FindLastIndex(Int32, Int32, Predicate<GenericListItem>) List<GenericListItem>.FindLastIndex(Int32, Predicate<GenericListItem>) List<GenericListItem>.FindLastIndex(Predicate<GenericListItem>) List<GenericListItem>.ForEach(Action<GenericListItem>) List<GenericListItem>.GetEnumerator() List<GenericListItem>.GetRange(Int32, Int32) List<GenericListItem>.IndexOf(GenericListItem) List<GenericListItem>.IndexOf(GenericListItem, Int32) List<GenericListItem>.IndexOf(GenericListItem, Int32, Int32) List<GenericListItem>.Insert(Int32, GenericListItem) List<GenericListItem>.InsertRange(Int32, IEnumerable<GenericListItem>) List<GenericListItem>.LastIndexOf(GenericListItem) List<GenericListItem>.LastIndexOf(GenericListItem, Int32) List<GenericListItem>.LastIndexOf(GenericListItem, Int32, Int32) List<GenericListItem>.Remove(GenericListItem) List<GenericListItem>.RemoveAll(Predicate<GenericListItem>) List<GenericListItem>.RemoveAt(Int32) List<GenericListItem>.RemoveRange(Int32, Int32) List<GenericListItem>.Reverse() List<GenericListItem>.Reverse(Int32, Int32) List<GenericListItem>.Sort() List<GenericListItem>.Sort(IComparer<GenericListItem>) List<GenericListItem>.Sort(Comparison<GenericListItem>) List<GenericListItem>.Sort(Int32, Int32, IComparer<GenericListItem>) List<GenericListItem>.IEnumerable<GenericListItem>.GetEnumerator() List<GenericListItem>.ICollection.CopyTo(Array, Int32) List<GenericListItem>.IEnumerable.GetEnumerator() List<GenericListItem>.IList.Add(Object) List<GenericListItem>.IList.Contains(Object) List<GenericListItem>.IList.IndexOf(Object) List<GenericListItem>.IList.Insert(Int32, Object) List<GenericListItem>.IList.Remove(Object) List<GenericListItem>.ToArray() List<GenericListItem>.TrimExcess() List<GenericListItem>.TrueForAll(Predicate<GenericListItem>) List<GenericListItem>.Capacity List<GenericListItem>.Count List<GenericListItem>.Item[Int32] List<GenericListItem>.ICollection<GenericListItem>.IsReadOnly List<GenericListItem>.ICollection.IsSynchronized List<GenericListItem>.ICollection.SyncRoot List<GenericListItem>.IList.IsFixedSize List<GenericListItem>.IList.IsReadOnly List<GenericListItem>.IList.Item[Int32] Namespace : Emby.Web.GenericEdit.Elements.List Assembly : Emby.Web.GenericEdit.dll Syntax public class GenericItemList : List<GenericListItem>, IList<GenericListItem>, ICollection<GenericListItem>, IReadOnlyList<GenericListItem>, IReadOnlyCollection<GenericListItem>, IEnumerable<GenericListItem>, IList, ICollection, IEnumerable Constructors GenericItemList() Declaration public GenericItemList() GenericItemList(IEnumerable<GenericListItem>) Declaration public GenericItemList(IEnumerable<GenericListItem> collection) Parameters Type Name Description IEnumerable < GenericListItem > collection GenericItemList(Int32) Declaration public GenericItemList(int capacity) Parameters Type Name Description Int32 capacity Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods LinqExtensions.ToArray<TSource>(IEnumerable<TSource>, Int32) SortExtensions.OrderByString<T>(IEnumerable<T>, Func<T, String>) SortExtensions.OrderByStringDescending<T>(IEnumerable<T>, Func<T, String>)"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.List.GenericListItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.List.GenericListItem.html",
    "title": "Class GenericListItem",
    "keywords": "Class GenericListItem Inheritance Object GenericListItem Namespace : Emby.Web.GenericEdit.Elements.List Assembly : Emby.Web.GenericEdit.dll Syntax public class GenericListItem Constructors GenericListItem() Declaration public GenericListItem() GenericListItem(IconNames, String, String) Declaration public GenericListItem(IconNames icon, string primaryText, string secondaryText) Parameters Type Name Description IconNames icon String primaryText String secondaryText Properties Button1 Declaration public ButtonItem Button1 { get; set; } Property Value Type Description ButtonItem Button2 Declaration public ButtonItem Button2 { get; set; } Property Value Type Description ButtonItem HasPercentage Declaration public bool HasPercentage { get; set; } Property Value Type Description Boolean HyperLink Declaration public string HyperLink { get; set; } Property Value Type Description String Icon Declaration public IconNames? Icon { get; set; } Property Value Type Description Nullable < IconNames > IconMode Declaration public ItemListIconMode IconMode { get; set; } Property Value Type Description ItemListIconMode PercentComplete Declaration public int PercentComplete { get; set; } Property Value Type Description Int32 PrimaryText Declaration public string PrimaryText { get; set; } Property Value Type Description String SecondaryText Declaration public string SecondaryText { get; set; } Property Value Type Description String ShowSecondaryFirst Declaration public bool ShowSecondaryFirst { get; set; } Property Value Type Description Boolean Status Declaration public ItemStatus Status { get; set; } Property Value Type Description ItemStatus SubItems Declaration public List<GenericListItem> SubItems { get; set; } Property Value Type Description List < GenericListItem > Tag Declaration public TagItem Tag { get; set; } Property Value Type Description TagItem Toggle Declaration public ToggleButtonItem Toggle { get; set; } Property Value Type Description ToggleButtonItem"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.List.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.List.html",
    "title": "Namespace Emby.Web.GenericEdit.Elements.List",
    "keywords": "Namespace Emby.Web.GenericEdit.Elements.List Classes GenericItemList GenericListItem Enums ItemListIconMode"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.List.ItemListIconMode.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.List.ItemListIconMode.html",
    "title": "Enum ItemListIconMode",
    "keywords": "Enum ItemListIconMode Namespace : Emby.Web.GenericEdit.Elements.List Assembly : Emby.Web.GenericEdit.dll Syntax public enum ItemListIconMode Fields Name Description LargeInCircle LargeRegular NoIcons SmallInCircle SmallRegular Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ItemListIconMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.html",
    "title": "Namespace Emby.Web.GenericEdit.Elements.PivotGrid",
    "keywords": "Namespace Emby.Web.GenericEdit.Elements.PivotGrid Classes PivotGridDataSource Configures the filter row. PivotGridExport Configures the export options. PivotGridField PivotGridFieldChooser Configures the column chooser. PivotGridFieldList PivotGridOptions PivotGridTexts"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridDataSource.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridDataSource.html",
    "title": "Class PivotGridDataSource",
    "keywords": "Class PivotGridDataSource Configures the filter row. Inheritance Object PivotGridDataSource Namespace : Emby.Web.GenericEdit.Elements.PivotGrid Assembly : Emby.Web.GenericEdit.dll Syntax public class PivotGridDataSource Properties fields Declaration public PivotGridFieldList fields { get; set; } Property Value Type Description PivotGridFieldList store Declaration public object store { get; set; } Property Value Type Description Object"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridExport.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridExport.html",
    "title": "Class PivotGridExport",
    "keywords": "Class PivotGridExport Configures the export options. Inheritance Object PivotGridExport Namespace : Emby.Web.GenericEdit.Elements.PivotGrid Assembly : Emby.Web.GenericEdit.dll Syntax public class PivotGridExport Properties enabled Enables client-side exporting. Declaration public bool? enabled { get; set; } Property Value Type Description Nullable < Boolean > The enabled. fileName Specifies a default name for the file to which grid data is exported. Declaration public string fileName { get; set; } Property Value Type Description String The name of the file. ignoreExcelErrors Specifies whether Excel should hide warnings if there are errors in the exported document. Declaration public bool? ignoreExcelErrors { get; set; } Property Value Type Description Nullable < Boolean > The ignore excel errors."
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridField.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridField.html",
    "title": "Class PivotGridField",
    "keywords": "Class PivotGridField Inheritance Object PivotGridField Namespace : Emby.Web.GenericEdit.Elements.PivotGrid Assembly : Emby.Web.GenericEdit.dll Syntax public class PivotGridField Properties area Declaration public string area { get; set; } Property Value Type Description String caption Declaration public string caption { get; set; } Property Value Type Description String dataField Declaration public string dataField { get; set; } Property Value Type Description String dataType Declaration public string dataType { get; set; } Property Value Type Description String sortBy Declaration public string sortBy { get; set; } Property Value Type Description String sortOrder Declaration public string sortOrder { get; set; } Property Value Type Description String summaryType Declaration public string summaryType { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridFieldChooser.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridFieldChooser.html",
    "title": "Class PivotGridFieldChooser",
    "keywords": "Class PivotGridFieldChooser Configures the column chooser. Inheritance Object PivotGridFieldChooser Namespace : Emby.Web.GenericEdit.Elements.PivotGrid Assembly : Emby.Web.GenericEdit.dll Syntax public class PivotGridFieldChooser Properties enabled Declaration public bool? enabled { get; set; } Property Value Type Description Nullable < Boolean >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridFieldList.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridFieldList.html",
    "title": "Class PivotGridFieldList",
    "keywords": "Class PivotGridFieldList Inheritance Object List < PivotGridField > PivotGridFieldList Implements IList < PivotGridField > ICollection < PivotGridField > IReadOnlyList < PivotGridField > IReadOnlyCollection < PivotGridField > IEnumerable < PivotGridField > IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridField>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridField>.System.Collections.IList.set_Item(System.Int32, System.Object) List<PivotGridField>.Add(PivotGridField) List<PivotGridField>.AddRange(IEnumerable<PivotGridField>) List<PivotGridField>.AsReadOnly() List<PivotGridField>.BinarySearch(PivotGridField) List<PivotGridField>.BinarySearch(PivotGridField, IComparer<PivotGridField>) List<PivotGridField>.BinarySearch(Int32, Int32, PivotGridField, IComparer<PivotGridField>) List<PivotGridField>.Clear() List<PivotGridField>.Contains(PivotGridField) List<PivotGridField>.ConvertAll<TOutput>(Converter<PivotGridField, TOutput>) List<PivotGridField>.CopyTo(PivotGridField[]) List<PivotGridField>.CopyTo(PivotGridField[], Int32) List<PivotGridField>.CopyTo(Int32, PivotGridField[], Int32, Int32) List<PivotGridField>.Exists(Predicate<PivotGridField>) List<PivotGridField>.Find(Predicate<PivotGridField>) List<PivotGridField>.FindAll(Predicate<PivotGridField>) List<PivotGridField>.FindIndex(Int32, Int32, Predicate<PivotGridField>) List<PivotGridField>.FindIndex(Int32, Predicate<PivotGridField>) List<PivotGridField>.FindIndex(Predicate<PivotGridField>) List<PivotGridField>.FindLast(Predicate<PivotGridField>) List<PivotGridField>.FindLastIndex(Int32, Int32, Predicate<PivotGridField>) List<PivotGridField>.FindLastIndex(Int32, Predicate<PivotGridField>) List<PivotGridField>.FindLastIndex(Predicate<PivotGridField>) List<PivotGridField>.ForEach(Action<PivotGridField>) List<PivotGridField>.GetEnumerator() List<PivotGridField>.GetRange(Int32, Int32) List<PivotGridField>.IndexOf(PivotGridField) List<PivotGridField>.IndexOf(PivotGridField, Int32) List<PivotGridField>.IndexOf(PivotGridField, Int32, Int32) List<PivotGridField>.Insert(Int32, PivotGridField) List<PivotGridField>.InsertRange(Int32, IEnumerable<PivotGridField>) List<PivotGridField>.LastIndexOf(PivotGridField) List<PivotGridField>.LastIndexOf(PivotGridField, Int32) List<PivotGridField>.LastIndexOf(PivotGridField, Int32, Int32) List<PivotGridField>.Remove(PivotGridField) List<PivotGridField>.RemoveAll(Predicate<PivotGridField>) List<PivotGridField>.RemoveAt(Int32) List<PivotGridField>.RemoveRange(Int32, Int32) List<PivotGridField>.Reverse() List<PivotGridField>.Reverse(Int32, Int32) List<PivotGridField>.Sort() List<PivotGridField>.Sort(IComparer<PivotGridField>) List<PivotGridField>.Sort(Comparison<PivotGridField>) List<PivotGridField>.Sort(Int32, Int32, IComparer<PivotGridField>) List<PivotGridField>.IEnumerable<PivotGridField>.GetEnumerator() List<PivotGridField>.ICollection.CopyTo(Array, Int32) List<PivotGridField>.IEnumerable.GetEnumerator() List<PivotGridField>.IList.Add(Object) List<PivotGridField>.IList.Contains(Object) List<PivotGridField>.IList.IndexOf(Object) List<PivotGridField>.IList.Insert(Int32, Object) List<PivotGridField>.IList.Remove(Object) List<PivotGridField>.ToArray() List<PivotGridField>.TrimExcess() List<PivotGridField>.TrueForAll(Predicate<PivotGridField>) List<PivotGridField>.Capacity List<PivotGridField>.Count List<PivotGridField>.Item[Int32] List<PivotGridField>.ICollection<PivotGridField>.IsReadOnly List<PivotGridField>.ICollection.IsSynchronized List<PivotGridField>.ICollection.SyncRoot List<PivotGridField>.IList.IsFixedSize List<PivotGridField>.IList.IsReadOnly List<PivotGridField>.IList.Item[Int32] Namespace : Emby.Web.GenericEdit.Elements.PivotGrid Assembly : Emby.Web.GenericEdit.dll Syntax public class PivotGridFieldList : List<PivotGridField>, IList<PivotGridField>, ICollection<PivotGridField>, IReadOnlyList<PivotGridField>, IReadOnlyCollection<PivotGridField>, IEnumerable<PivotGridField>, IList, ICollection, IEnumerable Constructors PivotGridFieldList() Declaration public PivotGridFieldList() PivotGridFieldList(IEnumerable<PivotGridField>) Declaration public PivotGridFieldList(IEnumerable<PivotGridField> collection) Parameters Type Name Description IEnumerable < PivotGridField > collection PivotGridFieldList(Int32) Declaration public PivotGridFieldList(int capacity) Parameters Type Name Description Int32 capacity Properties Item[String] Declaration public PivotGridField this[string columnName] { get; set; } Parameters Type Name Description String columnName Property Value Type Description PivotGridField Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods LinqExtensions.ToArray<TSource>(IEnumerable<TSource>, Int32) SortExtensions.OrderByString<T>(IEnumerable<T>, Func<T, String>) SortExtensions.OrderByStringDescending<T>(IEnumerable<T>, Func<T, String>)"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridOptions.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridOptions.html",
    "title": "Class PivotGridOptions",
    "keywords": "Class PivotGridOptions Inheritance Object PivotGridOptions Namespace : Emby.Web.GenericEdit.Elements.PivotGrid Assembly : Emby.Web.GenericEdit.dll Syntax public class PivotGridOptions Constructors PivotGridOptions() Declaration public PivotGridOptions() Properties allowExpandAll Declaration public bool? allowExpandAll { get; set; } Property Value Type Description Nullable < Boolean > allowFiltering Declaration public bool? allowFiltering { get; set; } Property Value Type Description Nullable < Boolean > allowSorting Declaration public bool? allowSorting { get; set; } Property Value Type Description Nullable < Boolean > allowSortingBySummary Declaration public bool? allowSortingBySummary { get; set; } Property Value Type Description Nullable < Boolean > dataSource Declaration public PivotGridDataSource dataSource { get; set; } Property Value Type Description PivotGridDataSource export Declaration public PivotGridExport export { get; set; } Property Value Type Description PivotGridExport fieldChooser Declaration public PivotGridFieldChooser fieldChooser { get; set; } Property Value Type Description PivotGridFieldChooser rowHeaderLayout Declaration public string rowHeaderLayout { get; set; } Property Value Type Description String showBorders Declaration public bool? showBorders { get; set; } Property Value Type Description Nullable < Boolean > showRowGrandTotals Declaration public bool? showRowGrandTotals { get; set; } Property Value Type Description Nullable < Boolean > showTotalsPrior Declaration public string showTotalsPrior { get; set; } Property Value Type Description String texts Declaration public PivotGridTexts texts { get; set; } Property Value Type Description PivotGridTexts wordWrapEnabled Declaration public bool? wordWrapEnabled { get; set; } Property Value Type Description Nullable < Boolean >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridTexts.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.PivotGrid.PivotGridTexts.html",
    "title": "Class PivotGridTexts",
    "keywords": "Class PivotGridTexts Inheritance Object PivotGridTexts Namespace : Emby.Web.GenericEdit.Elements.PivotGrid Assembly : Emby.Web.GenericEdit.dll Syntax public class PivotGridTexts Properties grandTotal Declaration public string grandTotal { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.ProgressItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.ProgressItem.html",
    "title": "Class ProgressItem",
    "keywords": "Class ProgressItem Inheritance Object ProgressItem Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class ProgressItem Constructors ProgressItem() Declaration public ProgressItem() ProgressItem(Int32, Int32, String) Declaration public ProgressItem(int currentValue, int maxValue, string progressText) Parameters Type Name Description Int32 currentValue Int32 maxValue String progressText Properties CurrentValue Declaration public int CurrentValue { get; set; } Property Value Type Description Int32 MaxValue Declaration public int MaxValue { get; set; } Property Value Type Description Int32 ProgressText Declaration public string ProgressText { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.SpacerItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.SpacerItem.html",
    "title": "Class SpacerItem",
    "keywords": "Class SpacerItem Inheritance Object SpacerItem Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class SpacerItem Constructors SpacerItem() Declaration public SpacerItem() SpacerItem(SpacerSize) Declaration public SpacerItem(SpacerSize spacerSize) Parameters Type Name Description SpacerSize spacerSize Properties Size Declaration public SpacerSize Size { get; set; } Property Value Type Description SpacerSize"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.StatusItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.StatusItem.html",
    "title": "Class StatusItem",
    "keywords": "Class StatusItem Inheritance Object StatusItem Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class StatusItem Constructors StatusItem() Declaration public StatusItem() StatusItem(String, String) Declaration public StatusItem(string caption, string statusText) Parameters Type Name Description String caption String statusText StatusItem(String, String, ItemStatus) Declaration public StatusItem(string caption, string statusText, ItemStatus status) Parameters Type Name Description String caption String statusText ItemStatus status Properties Caption Declaration public string Caption { get; set; } Property Value Type Description String Status Declaration public ItemStatus Status { get; set; } Property Value Type Description ItemStatus StatusText Declaration public string StatusText { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.TagItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.TagItem.html",
    "title": "Class TagItem",
    "keywords": "Class TagItem Inheritance Object TagItem Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class TagItem Constructors TagItem() Declaration public TagItem() TagItem(String, String, String) Declaration public TagItem(string text, string tagType, string color = null) Parameters Type Name Description String text String tagType String color Properties Color Declaration public string Color { get; set; } Property Value Type Description String Icon Declaration public IconNames? Icon { get; set; } Property Value Type Description Nullable < IconNames > TagType Declaration public string TagType { get; set; } Property Value Type Description String Text Declaration public string Text { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Elements.ToggleButtonItem.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Elements.ToggleButtonItem.html",
    "title": "Class ToggleButtonItem",
    "keywords": "Class ToggleButtonItem Inheritance Object ButtonItem ToggleButtonItem Inherited Members ButtonItem.Caption ButtonItem.Icon ButtonItem.IsEnabled ButtonItem.IsVisible ButtonItem.Data1 ButtonItem.Data2 ButtonItem.CreateInBottomPanel ButtonItem.SubMenuButtons Namespace : Emby.Web.GenericEdit.Elements Assembly : Emby.Web.GenericEdit.dll Syntax public class ToggleButtonItem : ButtonItem Constructors ToggleButtonItem() Declaration public ToggleButtonItem() ToggleButtonItem(String) Declaration public ToggleButtonItem(string caption) Parameters Type Name Description String caption Properties IsChecked Declaration public bool IsChecked { get; set; } Property Value Type Description Boolean IsToogle Declaration public bool IsToogle { get; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Factory.EditorBuilder.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Factory.EditorBuilder.html",
    "title": "Class EditorBuilder",
    "keywords": "Class EditorBuilder Inheritance Object EditorBuilder Namespace : Emby.Web.GenericEdit.Factory Assembly : Emby.Web.GenericEdit.dll Syntax public static class EditorBuilder Methods BuildFromObject(Object, Object, String, String, ButtonItem, EditorBuildOptions) Declaration public static EditObjectContainer BuildFromObject(object editObject, object defaultObject, string rootTitle, string rootDescription, ButtonItem titleButton, EditorBuildOptions options) Parameters Type Name Description Object editObject Object defaultObject String rootTitle String rootDescription ButtonItem titleButton EditorBuildOptions options Returns Type Description EditObjectContainer"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Factory.EditorBuildOptions.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Factory.EditorBuildOptions.html",
    "title": "Class EditorBuildOptions",
    "keywords": "Class EditorBuildOptions Inheritance Object EditorBuildOptions Namespace : Emby.Web.GenericEdit.Factory Assembly : Emby.Web.GenericEdit.dll Syntax public class EditorBuildOptions Properties IncludeChildObjects Declaration public bool IncludeChildObjects { get; set; } Property Value Type Description Boolean IncludeIgnored Declaration public bool IncludeIgnored { get; set; } Property Value Type Description Boolean IncludeNonBrowsable Declaration public bool IncludeNonBrowsable { get; set; } Property Value Type Description Boolean IncludeReadOnly Declaration public bool IncludeReadOnly { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.Factory.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.Factory.html",
    "title": "Namespace Emby.Web.GenericEdit.Factory",
    "keywords": "Namespace Emby.Web.GenericEdit.Factory Classes EditorBuilder EditorBuildOptions"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.html",
    "title": "Namespace Emby.Web.GenericEdit",
    "keywords": "Namespace Emby.Web.GenericEdit Classes EditableObjectBase EditableObjectCollection EditableOptionsBase EditObjectContainer Interfaces IEditableObjectCollection"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.IEditableObjectCollection.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.IEditableObjectCollection.html",
    "title": "Interface IEditableObjectCollection",
    "keywords": "Interface IEditableObjectCollection Inherited Members IEnumerable<IEditableObject>.GetEnumerator() Namespace : Emby.Web.GenericEdit Assembly : Emby.Web.GenericEdit.dll Syntax public interface IEditableObjectCollection : IEnumerable<IEditableObject>, IEnumerable Extension Methods LinqExtensions.ToArray<TSource>(IEnumerable<TSource>, Int32) SortExtensions.OrderByString<T>(IEnumerable<T>, Func<T, String>) SortExtensions.OrderByStringDescending<T>(IEnumerable<T>, Func<T, String>)"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.PropertyDiff.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.PropertyDiff.html",
    "title": "Namespace Emby.Web.GenericEdit.PropertyDiff",
    "keywords": "Namespace Emby.Web.GenericEdit.PropertyDiff Classes PropertyChangeDetector PropertyChangeInfo"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.PropertyDiff.PropertyChangeDetector.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.PropertyDiff.PropertyChangeDetector.html",
    "title": "Class PropertyChangeDetector",
    "keywords": "Class PropertyChangeDetector Inheritance Object PropertyChangeDetector Namespace : Emby.Web.GenericEdit.PropertyDiff Assembly : Emby.Web.GenericEdit.dll Syntax public static class PropertyChangeDetector Methods DetectObjectPropertyChanges(Object, Object, EditorBuildOptions) Declaration public static List<PropertyChangeInfo> DetectObjectPropertyChanges(object oldObject, object newObject, EditorBuildOptions options = null) Parameters Type Name Description Object oldObject Object newObject EditorBuildOptions options Returns Type Description List < PropertyChangeInfo >"
  },
  "reference/pluginapi/Emby.Web.GenericEdit.PropertyDiff.PropertyChangeInfo.html": {
    "href": "reference/pluginapi/Emby.Web.GenericEdit.PropertyDiff.PropertyChangeInfo.html",
    "title": "Class PropertyChangeInfo",
    "keywords": "Class PropertyChangeInfo Inheritance Object PropertyChangeInfo Namespace : Emby.Web.GenericEdit.PropertyDiff Assembly : Emby.Web.GenericEdit.dll Syntax public class PropertyChangeInfo Properties Descriptor Declaration public PropertyDescriptor Descriptor { get; set; } Property Value Type Description PropertyDescriptor NewString Declaration public string NewString { get; set; } Property Value Type Description String NewValue Declaration public object NewValue { get; set; } Property Value Type Description Object OldString Declaration public string OldString { get; set; } Property Value Type Description String OldValue Declaration public object OldValue { get; set; } Property Value Type Description Object ParentPath Declaration public string ParentPath { get; set; } Property Value Type Description String PropertyName Declaration public string PropertyName { get; set; } Property Value Type Description String PropertyPath Declaration public string PropertyPath { get; set; } Property Value Type Description String Methods ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description String A string that represents the current object. Overrides Object.ToString()"
  },
  "reference/pluginapi/MediaBrowser.Common.Configuration.ConfigurationManagerExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Configuration.ConfigurationManagerExtensions.html",
    "title": "Class ConfigurationManagerExtensions",
    "keywords": "Class ConfigurationManagerExtensions Inheritance Object ConfigurationManagerExtensions Namespace : MediaBrowser.Common.Configuration Assembly : MediaBrowser.Common.dll Syntax public static class ConfigurationManagerExtensions Methods GetConfiguration<T>(IConfigurationManager, String) Declaration public static T GetConfiguration<T>(this IConfigurationManager manager, string key) Parameters Type Name Description IConfigurationManager manager String key Returns Type Description T Type Parameters Name Description T"
  },
  "reference/pluginapi/MediaBrowser.Common.Configuration.ConfigurationStore.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Configuration.ConfigurationStore.html",
    "title": "Class ConfigurationStore",
    "keywords": "Class ConfigurationStore Inheritance Object ConfigurationStore Namespace : MediaBrowser.Common.Configuration Assembly : MediaBrowser.Common.dll Syntax public class ConfigurationStore Properties ConfigurationType Declaration public Type ConfigurationType { get; set; } Property Value Type Description Type Key Declaration public string Key { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Common.Configuration.ConfigurationUpdateEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Configuration.ConfigurationUpdateEventArgs.html",
    "title": "Class ConfigurationUpdateEventArgs",
    "keywords": "Class ConfigurationUpdateEventArgs Inheritance Object EventArgs ConfigurationUpdateEventArgs Inherited Members EventArgs.Empty Namespace : MediaBrowser.Common.Configuration Assembly : MediaBrowser.Common.dll Syntax public sealed class ConfigurationUpdateEventArgs : EventArgs Properties Key Gets or sets the key. Declaration public string Key { get; set; } Property Value Type Description String The key. NewConfiguration Gets or sets the new configuration. Declaration public object NewConfiguration { get; set; } Property Value Type Description Object The new configuration."
  },
  "reference/pluginapi/MediaBrowser.Common.Configuration.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Configuration.html",
    "title": "Namespace MediaBrowser.Common.Configuration",
    "keywords": "Namespace MediaBrowser.Common.Configuration Classes ConfigurationManagerExtensions ConfigurationStore ConfigurationUpdateEventArgs Interfaces IApplicationPaths Interface IApplicationPaths IConfigurationFactory IConfigurationManager IValidatingConfiguration"
  },
  "reference/pluginapi/MediaBrowser.Common.Configuration.IApplicationPaths.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Configuration.IApplicationPaths.html",
    "title": "Interface IApplicationPaths",
    "keywords": "Interface IApplicationPaths Interface IApplicationPaths Namespace : MediaBrowser.Common.Configuration Assembly : MediaBrowser.Common.dll Syntax public interface IApplicationPaths Properties CachePath Gets the folder path to the cache directory Declaration string CachePath { get; } Property Value Type Description String The cache directory. ConfigurationDirectoryPath Gets the path to the application configuration root directory Declaration string ConfigurationDirectoryPath { get; } Property Value Type Description String The configuration directory path. DataPath Gets the folder path to the data directory Declaration string DataPath { get; } Property Value Type Description String The data directory. LogDirectoryPath Gets the path to the log directory Declaration string LogDirectoryPath { get; } Property Value Type Description String The log directory path. PluginConfigurationsPath Gets the path to the plugin configurations directory Declaration string PluginConfigurationsPath { get; } Property Value Type Description String The plugin configurations path. PluginsPath Gets the path to the plugin directory Declaration string PluginsPath { get; } Property Value Type Description String The plugins path. ProgramDataPath Gets the path to the program data folder Declaration string ProgramDataPath { get; } Property Value Type Description String The program data path. ProgramSystemPath Gets the path to the program system folder Declaration string ProgramSystemPath { get; } Property Value Type Description String The program data path. SystemConfigurationFilePath Gets the path to the system configuration file Declaration string SystemConfigurationFilePath { get; } Property Value Type Description String The system configuration file path. TempDirectory Gets the folder path to the temp directory within the cache folder Declaration string TempDirectory { get; } Property Value Type Description String The temp directory. TempUpdatePath Gets the path to where temporary update files will be stored Declaration string TempUpdatePath { get; } Property Value Type Description String The plugin configurations path. VirtualDataPath Declaration string VirtualDataPath { get; } Property Value Type Description String Methods GetCachePath() Declaration ReadOnlySpan<char> GetCachePath() Returns Type Description ReadOnlySpan < Char > GetImageCachePath() Gets the image cache path. Declaration ReadOnlySpan<char> GetImageCachePath() Returns Type Description ReadOnlySpan < Char > The image cache path."
  },
  "reference/pluginapi/MediaBrowser.Common.Configuration.IConfigurationFactory.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Configuration.IConfigurationFactory.html",
    "title": "Interface IConfigurationFactory",
    "keywords": "Interface IConfigurationFactory Namespace : MediaBrowser.Common.Configuration Assembly : MediaBrowser.Common.dll Syntax public interface IConfigurationFactory Methods GetConfigurations() Declaration IEnumerable<ConfigurationStore> GetConfigurations() Returns Type Description IEnumerable < ConfigurationStore >"
  },
  "reference/pluginapi/MediaBrowser.Common.Configuration.IConfigurationManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Configuration.IConfigurationManager.html",
    "title": "Interface IConfigurationManager",
    "keywords": "Interface IConfigurationManager Namespace : MediaBrowser.Common.Configuration Assembly : MediaBrowser.Common.dll Syntax public interface IConfigurationManager Properties CommonApplicationPaths Gets or sets the application paths. Declaration IApplicationPaths CommonApplicationPaths { get; } Property Value Type Description IApplicationPaths The application paths. CommonConfiguration Gets the configuration. Declaration BaseApplicationConfiguration CommonConfiguration { get; } Property Value Type Description BaseApplicationConfiguration The configuration. Methods AddParts(IEnumerable<IConfigurationFactory>) Adds the parts. Declaration void AddParts(IEnumerable<IConfigurationFactory> factories) Parameters Type Name Description IEnumerable < IConfigurationFactory > factories The factories. GetConfiguration(String) Gets the configuration. Declaration object GetConfiguration(string key) Parameters Type Name Description String key The key. Returns Type Description Object System.Object. GetConfigurationType(String) Gets the type of the configuration. Declaration Type GetConfigurationType(string key) Parameters Type Name Description String key The key. Returns Type Description Type Type. ReplaceConfiguration(BaseApplicationConfiguration) Replaces the configuration. Declaration void ReplaceConfiguration(BaseApplicationConfiguration newConfiguration) Parameters Type Name Description BaseApplicationConfiguration newConfiguration The new configuration. SaveConfiguration() Saves the configuration. Declaration void SaveConfiguration() SaveConfiguration(String, Object) Saves the configuration. Declaration void SaveConfiguration(string key, object configuration) Parameters Type Name Description String key The key. Object configuration The configuration. Events ConfigurationUpdated Occurs when [configuration updated]. Declaration event EventHandler<EventArgs> ConfigurationUpdated Event Type Type Description EventHandler < EventArgs > NamedConfigurationUpdated Occurs when [named configuration updated]. Declaration event EventHandler<ConfigurationUpdateEventArgs> NamedConfigurationUpdated Event Type Type Description EventHandler < ConfigurationUpdateEventArgs > NamedConfigurationUpdating Occurs when [configuration updating]. Declaration event EventHandler<ConfigurationUpdateEventArgs> NamedConfigurationUpdating Event Type Type Description EventHandler < ConfigurationUpdateEventArgs > Extension Methods ConfigurationManagerExtensions.GetConfiguration<T>(IConfigurationManager, String) MetadataConfigurationExtensions.GetMetadataConfiguration(IConfigurationManager)"
  },
  "reference/pluginapi/MediaBrowser.Common.Configuration.IValidatingConfiguration.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Configuration.IValidatingConfiguration.html",
    "title": "Interface IValidatingConfiguration",
    "keywords": "Interface IValidatingConfiguration Namespace : MediaBrowser.Common.Configuration Assembly : MediaBrowser.Common.dll Syntax public interface IValidatingConfiguration Methods Validate(Object, Object) Declaration void Validate(object oldConfig, object newConfig) Parameters Type Name Description Object oldConfig Object newConfig"
  },
  "reference/pluginapi/MediaBrowser.Common.Events.EventHelper.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Events.EventHelper.html",
    "title": "Class EventHelper",
    "keywords": "Class EventHelper Class EventHelper Inheritance Object EventHelper Namespace : MediaBrowser.Common.Events Assembly : MediaBrowser.Common.dll Syntax public static class EventHelper Methods FireEventIfNotNull(EventHandler, Object, EventArgs, ILogger) Fires the event. Declaration public static void FireEventIfNotNull(EventHandler handler, object sender, EventArgs args, ILogger logger) Parameters Type Name Description EventHandler handler The handler. Object sender The sender. EventArgs args The EventArgs instance containing the event data. ILogger logger The logger. FireEventIfNotNull<T>(EventHandler<T>, Object, T, ILogger) Fires the event. Declaration public static void FireEventIfNotNull<T>(EventHandler<T> handler, object sender, T args, ILogger logger) Parameters Type Name Description EventHandler <T> handler The handler. Object sender The sender. T args The args. ILogger logger The logger. Type Parameters Name Description T QueueEventIfNotNull(EventHandler, Object, EventArgs, ILogger) Fires the event. Declaration public static void QueueEventIfNotNull(EventHandler handler, object sender, EventArgs args, ILogger logger) Parameters Type Name Description EventHandler handler The handler. Object sender The sender. EventArgs args The EventArgs instance containing the event data. ILogger logger The logger. QueueEventIfNotNull<T>(EventHandler<T>, Object, T, ILogger) Queues the event. Declaration public static void QueueEventIfNotNull<T>(EventHandler<T> handler, object sender, T args, ILogger logger) Parameters Type Name Description EventHandler <T> handler The handler. Object sender The sender. T args The args. ILogger logger The logger. Type Parameters Name Description T"
  },
  "reference/pluginapi/MediaBrowser.Common.Events.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Events.html",
    "title": "Namespace MediaBrowser.Common.Events",
    "keywords": "Namespace MediaBrowser.Common.Events Classes EventHelper Class EventHelper"
  },
  "reference/pluginapi/MediaBrowser.Common.Extensions.BaseExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Extensions.BaseExtensions.html",
    "title": "Class BaseExtensions",
    "keywords": "Class BaseExtensions Class BaseExtensions Inheritance Object BaseExtensions Namespace : MediaBrowser.Common.Extensions Assembly : MediaBrowser.Common.dll Syntax public static class BaseExtensions Properties CryptographyProvider Declaration public static ICryptoProvider CryptographyProvider { get; set; } Property Value Type Description ICryptoProvider Methods GetMD5(ReadOnlySpan<Char>) Declaration public static Guid GetMD5(this ReadOnlySpan<char> str) Parameters Type Name Description ReadOnlySpan < Char > str Returns Type Description Guid GetMD5(String) Gets the M d5. Declaration public static Guid GetMD5(this string str) Parameters Type Name Description String str The STR. Returns Type Description Guid Guid. StripHtml(String) Strips the HTML. Declaration public static string StripHtml(this string htmlString) Parameters Type Name Description String htmlString The HTML string. Returns Type Description String System.String."
  },
  "reference/pluginapi/MediaBrowser.Common.Extensions.ConflictException.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Extensions.ConflictException.html",
    "title": "Class ConflictException",
    "keywords": "Class ConflictException Inheritance Object Exception ConflictException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Namespace : MediaBrowser.Common.Extensions Assembly : MediaBrowser.Common.dll Syntax public class ConflictException : Exception, ISerializable Constructors ConflictException() Declaration public ConflictException() ConflictException(String) Declaration public ConflictException(string message) Parameters Type Name Description String message Implements System.Runtime.Serialization.ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Common.Extensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Extensions.html",
    "title": "Namespace MediaBrowser.Common.Extensions",
    "keywords": "Namespace MediaBrowser.Common.Extensions Classes BaseExtensions Class BaseExtensions ConflictException RangeRequestOutOfRangeException RateLimitExceededException RemoteServiceUnavailableException ResourceNotFoundException Class ResourceNotFoundException ServiceUnavailableException"
  },
  "reference/pluginapi/MediaBrowser.Common.Extensions.RangeRequestOutOfRangeException.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Extensions.RangeRequestOutOfRangeException.html",
    "title": "Class RangeRequestOutOfRangeException",
    "keywords": "Class RangeRequestOutOfRangeException Inheritance Object Exception RangeRequestOutOfRangeException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Namespace : MediaBrowser.Common.Extensions Assembly : MediaBrowser.Common.dll Syntax public class RangeRequestOutOfRangeException : Exception, ISerializable Constructors RangeRequestOutOfRangeException() Initializes a new instance of the RangeRequestOutOfRangeException class. Declaration public RangeRequestOutOfRangeException() RangeRequestOutOfRangeException(String) Initializes a new instance of the RangeRequestOutOfRangeException class. Declaration public RangeRequestOutOfRangeException(string message) Parameters Type Name Description String message The message. Implements System.Runtime.Serialization.ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Common.Extensions.RateLimitExceededException.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Extensions.RateLimitExceededException.html",
    "title": "Class RateLimitExceededException",
    "keywords": "Class RateLimitExceededException Inheritance Object Exception RateLimitExceededException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Namespace : MediaBrowser.Common.Extensions Assembly : MediaBrowser.Common.dll Syntax public class RateLimitExceededException : Exception, ISerializable Constructors RateLimitExceededException() Initializes a new instance of the RateLimitExceededException class. Declaration public RateLimitExceededException() RateLimitExceededException(String) Initializes a new instance of the RateLimitExceededException class. Declaration public RateLimitExceededException(string message) Parameters Type Name Description String message The message. Implements System.Runtime.Serialization.ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Common.Extensions.RemoteServiceUnavailableException.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Extensions.RemoteServiceUnavailableException.html",
    "title": "Class RemoteServiceUnavailableException",
    "keywords": "Class RemoteServiceUnavailableException Inheritance Object Exception RemoteServiceUnavailableException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Namespace : MediaBrowser.Common.Extensions Assembly : MediaBrowser.Common.dll Syntax public class RemoteServiceUnavailableException : Exception, ISerializable Constructors RemoteServiceUnavailableException() Declaration public RemoteServiceUnavailableException() RemoteServiceUnavailableException(String) Declaration public RemoteServiceUnavailableException(string message) Parameters Type Name Description String message Implements System.Runtime.Serialization.ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Common.Extensions.ResourceNotFoundException.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Extensions.ResourceNotFoundException.html",
    "title": "Class ResourceNotFoundException",
    "keywords": "Class ResourceNotFoundException Class ResourceNotFoundException Inheritance Object Exception ResourceNotFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Namespace : MediaBrowser.Common.Extensions Assembly : MediaBrowser.Common.dll Syntax public class ResourceNotFoundException : Exception, ISerializable Constructors ResourceNotFoundException() Initializes a new instance of the ResourceNotFoundException class. Declaration public ResourceNotFoundException() ResourceNotFoundException(String) Initializes a new instance of the ResourceNotFoundException class. Declaration public ResourceNotFoundException(string message) Parameters Type Name Description String message The message. Implements System.Runtime.Serialization.ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Common.Extensions.ServiceUnavailableException.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Extensions.ServiceUnavailableException.html",
    "title": "Class ServiceUnavailableException",
    "keywords": "Class ServiceUnavailableException Inheritance Object Exception ServiceUnavailableException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Namespace : MediaBrowser.Common.Extensions Assembly : MediaBrowser.Common.dll Syntax public class ServiceUnavailableException : Exception, ISerializable Constructors ServiceUnavailableException() Initializes a new instance of the ServiceUnavailableException class. Declaration public ServiceUnavailableException() ServiceUnavailableException(String) Initializes a new instance of the ServiceUnavailableException class. Declaration public ServiceUnavailableException(string message) Parameters Type Name Description String message The message. Implements System.Runtime.Serialization.ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Common.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.html",
    "title": "Namespace MediaBrowser.Common",
    "keywords": "Namespace MediaBrowser.Common Interfaces IApplicationHost An interface to be implemented by the applications hosting a kernel"
  },
  "reference/pluginapi/MediaBrowser.Common.IApplicationHost.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.IApplicationHost.html",
    "title": "Interface IApplicationHost",
    "keywords": "Interface IApplicationHost An interface to be implemented by the applications hosting a kernel Namespace : MediaBrowser.Common Assembly : MediaBrowser.Common.dll Syntax public interface IApplicationHost Properties ApplicationVersion Gets the application version. Declaration Version ApplicationVersion { get; } Property Value Type Description Version The application version. CanSelfRestart Gets a value indicating whether this instance can self restart. Declaration bool CanSelfRestart { get; } Property Value Type Description Boolean true if this instance can self restart; otherwise, false . CanSelfUpdate Gets or sets a value indicating whether this instance can self update. Declaration bool CanSelfUpdate { get; } Property Value Type Description Boolean true if this instance can self update; otherwise, false . HasPendingRestart Gets or sets a value indicating whether this instance has pending kernel reload. Declaration bool HasPendingRestart { get; } Property Value Type Description Boolean true if this instance has pending kernel reload; otherwise, false . IsShuttingDown Declaration bool IsShuttingDown { get; } Property Value Type Description Boolean IsStartupComplete Declaration bool IsStartupComplete { get; } Property Value Type Description Boolean Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. OperatingSystemDisplayName Gets the display name of the operating system. Declaration string OperatingSystemDisplayName { get; } Property Value Type Description String The display name of the operating system. Plugins Gets the plugins. Declaration IPlugin[] Plugins { get; } Property Value Type Description IPlugin [] The plugins. SystemId Gets the device identifier. Declaration string SystemId { get; } Property Value Type Description String The device identifier. SystemUpdateLevel Declaration PackageVersionClass SystemUpdateLevel { get; } Property Value Type Description PackageVersionClass Methods CheckForApplicationUpdate(CancellationToken, IProgress<Double>) Checks for update. Declaration Task<CheckForUpdateResult> CheckForApplicationUpdate(CancellationToken cancellationToken, IProgress<double> progress) Parameters Type Name Description CancellationToken cancellationToken IProgress < Double > progress Returns Type Description Task < CheckForUpdateResult > Task{CheckForUpdateResult}. ContainsStartupOption(String) Declaration bool ContainsStartupOption(string name) Parameters Type Name Description String name Returns Type Description Boolean CreateInstance(Type) Creates the instance. Declaration object CreateInstance(Type type) Parameters Type Name Description Type type The type. Returns Type Description Object System.Object. GetExports<T>(Boolean) Gets the exports. Declaration IEnumerable<T> GetExports<T>(bool manageLiftime = true) Parameters Type Name Description Boolean manageLiftime if set to true [manage liftime]. Returns Type Description IEnumerable <T> IEnumerable{``0}. Type Parameters Name Description T Init() Inits this instance. Declaration void Init() NotifyPendingRestart() Notifies the pending restart. Declaration void NotifyPendingRestart() RemovePlugin(IPlugin) Removes the plugin. Declaration void RemovePlugin(IPlugin plugin) Parameters Type Name Description IPlugin plugin The plugin. Resolve<T>() Resolves this instance. Declaration T Resolve<T>() Returns Type Description T ``0. Type Parameters Name Description T Restart() Restarts this instance. Declaration void Restart() Shutdown() Shuts down. Declaration Task Shutdown() Returns Type Description Task TryResolve<T>() Resolves this instance. Declaration T TryResolve<T>() Returns Type Description T ``0. Type Parameters Name Description T UpdateApplication(PackageVersionInfo, CancellationToken, IProgress<Double>) Updates the application. Declaration Task UpdateApplication(PackageVersionInfo package, CancellationToken cancellationToken, IProgress<double> progress) Parameters Type Name Description PackageVersionInfo package CancellationToken cancellationToken IProgress < Double > progress Returns Type Description Task Task. Events ApplicationUpdated Occurs when [application updated]. Declaration event EventHandler<GenericEventArgs<PackageVersionInfo>> ApplicationUpdated Event Type Type Description EventHandler < GenericEventArgs < PackageVersionInfo >> HasPendingRestartChanged Occurs when [has pending restart changed]. Declaration event EventHandler HasPendingRestartChanged Event Type Type Description EventHandler"
  },
  "reference/pluginapi/MediaBrowser.Common.Net.CacheMode.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Net.CacheMode.html",
    "title": "Enum CacheMode",
    "keywords": "Enum CacheMode Namespace : MediaBrowser.Common.Net Assembly : MediaBrowser.Common.dll Syntax public enum CacheMode Fields Name Description None Unconditional Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<CacheMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Common.Net.CompressionMethod.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Net.CompressionMethod.html",
    "title": "Enum CompressionMethod",
    "keywords": "Enum CompressionMethod Namespace : MediaBrowser.Common.Net Assembly : MediaBrowser.Common.dll Syntax public enum CompressionMethod Fields Name Description Deflate Gzip Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<CompressionMethod>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Common.Net.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Net.html",
    "title": "Namespace MediaBrowser.Common.Net",
    "keywords": "Namespace MediaBrowser.Common.Net Classes HttpRequestOptions Class HttpRequestOptions HttpResponseInfo Class HttpResponseInfo Interfaces IHttpClient Interface IHttpClient INetworkManager Enums CacheMode CompressionMethod"
  },
  "reference/pluginapi/MediaBrowser.Common.Net.HttpRequestOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Net.HttpRequestOptions.html",
    "title": "Class HttpRequestOptions",
    "keywords": "Class HttpRequestOptions Class HttpRequestOptions Inheritance Object HttpRequestOptions Namespace : MediaBrowser.Common.Net Assembly : MediaBrowser.Common.dll Syntax public sealed class HttpRequestOptions Constructors HttpRequestOptions() Initializes a new instance of the HttpRequestOptions class. Declaration public HttpRequestOptions() Properties AcceptHeader Gets or sets the accept header. Declaration public string AcceptHeader { get; set; } Property Value Type Description String The accept header. AppendCharsetToMimeType Declaration public bool AppendCharsetToMimeType { get; set; } Property Value Type Description Boolean BufferContent Declaration public bool BufferContent { get; set; } Property Value Type Description Boolean CacheLength Declaration public TimeSpan CacheLength { get; set; } Property Value Type Description TimeSpan CacheMode Declaration public CacheMode CacheMode { get; set; } Property Value Type Description CacheMode CancellationToken Gets or sets the cancellation token. Declaration public CancellationToken CancellationToken { get; set; } Property Value Type Description CancellationToken The cancellation token. ConnectionContext Declaration public IDisposable ConnectionContext { get; set; } Property Value Type Description IDisposable DecompressionMethod Declaration public CompressionMethod? DecompressionMethod { get; set; } Property Value Type Description Nullable < CompressionMethod > DownloadFilePath Declaration public string DownloadFilePath { get; set; } Property Value Type Description String EnableAutomaticTimeouts Declaration public bool EnableAutomaticTimeouts { get; set; } Property Value Type Description Boolean EnableDefaultUserAgent Declaration public bool EnableDefaultUserAgent { get; set; } Property Value Type Description Boolean EnableHttpCompression Gets or sets a value indicating whether [enable HTTP compression]. Declaration public bool EnableHttpCompression { get; set; } Property Value Type Description Boolean true if [enable HTTP compression]; otherwise, false . EnableKeepAlive Declaration public bool EnableKeepAlive { get; set; } Property Value Type Description Boolean FileBufferSize Declaration public int? FileBufferSize { get; set; } Property Value Type Description Nullable < Int32 > FileOpenOptions Declaration public FileOpenOptions FileOpenOptions { get; set; } Property Value Type Description FileOpenOptions FileShareMode Declaration public FileShareMode FileShareMode { get; set; } Property Value Type Description FileShareMode Host Gets or sets the host. Declaration public string Host { get; set; } Property Value Type Description String The host. LogErrorResponseBody Declaration public bool LogErrorResponseBody { get; set; } Property Value Type Description Boolean LogErrors Declaration public bool LogErrors { get; set; } Property Value Type Description Boolean LogRequest Declaration public bool LogRequest { get; set; } Property Value Type Description Boolean LogRequestAsDebug Declaration public bool LogRequestAsDebug { get; set; } Property Value Type Description Boolean LogResponse Declaration public bool LogResponse { get; set; } Property Value Type Description Boolean LogResponseHeaders Declaration public bool LogResponseHeaders { get; set; } Property Value Type Description Boolean LogUrl Declaration [Obsolete(\"Deprecated. Use LogUrlPrefix for prefixing or Sanitation for removing sensitive data.\")] public string LogUrl { get; set; } Property Value Type Description String LogUrlPrefix Declaration public string LogUrlPrefix { get; set; } Property Value Type Description String Progress Gets or sets the progress. Declaration public IProgress<double> Progress { get; set; } Property Value Type Description IProgress < Double > The progress. Referer Gets or sets the referrer. Declaration public string Referer { get; set; } Property Value Type Description String The referrer. RequestContent Declaration public ReadOnlyMemory<char> RequestContent { get; set; } Property Value Type Description ReadOnlyMemory < Char > RequestContentBytes Declaration public ReadOnlyMemory<byte> RequestContentBytes { get; set; } Property Value Type Description ReadOnlyMemory < Byte > RequestContentType Declaration public string RequestContentType { get; set; } Property Value Type Description String RequestHeaders Declaration public Dictionary<string, string> RequestHeaders { get; } Property Value Type Description Dictionary < String , String > RequestHttpContent Declaration public HttpContent RequestHttpContent { get; set; } Property Value Type Description HttpContent Sanitation Declaration public UrlSanitationOptions Sanitation { get; } Property Value Type Description UrlSanitationOptions SingleTcpConnection Declaration public bool SingleTcpConnection { get; set; } Property Value Type Description Boolean TimeoutMs Declaration public int TimeoutMs { get; set; } Property Value Type Description Int32 Url Gets or sets the URL. Declaration public string Url { get; set; } Property Value Type Description String The URL. UserAgent Gets or sets the user agent. Declaration public string UserAgent { get; set; } Property Value Type Description String The user agent. Methods SetPostData(IDictionary<String, String>) Declaration public void SetPostData(IDictionary<string, string> values) Parameters Type Name Description IDictionary < String , String > values"
  },
  "reference/pluginapi/MediaBrowser.Common.Net.HttpResponseInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Net.HttpResponseInfo.html",
    "title": "Class HttpResponseInfo",
    "keywords": "Class HttpResponseInfo Class HttpResponseInfo Inheritance Object HttpResponseInfo Implements IDisposable Namespace : MediaBrowser.Common.Net Assembly : MediaBrowser.Common.dll Syntax public sealed class HttpResponseInfo : IDisposable Constructors HttpResponseInfo() Declaration public HttpResponseInfo() HttpResponseInfo(IDisposable[]) Declaration public HttpResponseInfo(IDisposable[] disposables) Parameters Type Name Description IDisposable [] disposables Properties Content Gets or sets the content. Declaration public Stream Content { get; set; } Property Value Type Description Stream The content. ContentLength Gets or sets the length of the content. Declaration public long? ContentLength { get; set; } Property Value Type Description Nullable < Int64 > The length of the content. ContentType Gets or sets the type of the content. Declaration public string ContentType { get; set; } Property Value Type Description String The type of the content. Headers Gets or sets the headers. Declaration public Dictionary<string, string> Headers { get; set; } Property Value Type Description Dictionary < String , String > The headers. ResponseUrl Gets or sets the response URL. Declaration public string ResponseUrl { get; set; } Property Value Type Description String The response URL. StatusCode Gets or sets the status code. Declaration public HttpStatusCode StatusCode { get; set; } Property Value Type Description HttpStatusCode The status code. TempFilePath Gets or sets the temp file path. Declaration public string TempFilePath { get; set; } Property Value Type Description String The temp file path. Methods Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "reference/pluginapi/MediaBrowser.Common.Net.IHttpClient.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Net.IHttpClient.html",
    "title": "Interface IHttpClient",
    "keywords": "Interface IHttpClient Interface IHttpClient Namespace : MediaBrowser.Common.Net Assembly : MediaBrowser.Common.dll Syntax public interface IHttpClient Methods Get(HttpRequestOptions) Gets the specified options. Declaration Task<Stream> Get(HttpRequestOptions options) Parameters Type Name Description HttpRequestOptions options The options. Returns Type Description Task < Stream > Task{Stream}. GetConnectionContext(HttpRequestOptions) Declaration IDisposable GetConnectionContext(HttpRequestOptions options) Parameters Type Name Description HttpRequestOptions options Returns Type Description IDisposable GetResponse(HttpRequestOptions) Gets the response. Declaration Task<HttpResponseInfo> GetResponse(HttpRequestOptions options) Parameters Type Name Description HttpRequestOptions options The options. Returns Type Description Task < HttpResponseInfo > Task{HttpResponseInfo}. GetTempFile(HttpRequestOptions) Downloads the contents of a given url into a temporary location Declaration Task<string> GetTempFile(HttpRequestOptions options) Parameters Type Name Description HttpRequestOptions options The options. Returns Type Description Task < String > Task{System.String}. Exceptions Type Condition ArgumentNullException progress HttpException GetTempFileResponse(HttpRequestOptions) Gets the temporary file response. Declaration Task<HttpResponseInfo> GetTempFileResponse(HttpRequestOptions options) Parameters Type Name Description HttpRequestOptions options The options. Returns Type Description Task < HttpResponseInfo > Task{HttpResponseInfo}. Post(HttpRequestOptions) Posts the specified options. Declaration Task<HttpResponseInfo> Post(HttpRequestOptions options) Parameters Type Name Description HttpRequestOptions options The options. Returns Type Description Task < HttpResponseInfo > Task{HttpResponseInfo}. SendAsync(HttpRequestOptions, String) Sends the asynchronous. Declaration Task<HttpResponseInfo> SendAsync(HttpRequestOptions options, string httpMethod) Parameters Type Name Description HttpRequestOptions options The options. String httpMethod The HTTP method. Returns Type Description Task < HttpResponseInfo > Task{HttpResponseInfo}."
  },
  "reference/pluginapi/MediaBrowser.Common.Net.INetworkManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Net.INetworkManager.html",
    "title": "Interface INetworkManager",
    "keywords": "Interface INetworkManager Namespace : MediaBrowser.Common.Net Assembly : MediaBrowser.Common.dll Syntax public interface INetworkManager Properties LocalSubnetsFn Declaration Func<string[]> LocalSubnetsFn { get; set; } Property Value Type Description Func < String []> RemoteApiAddresses Declaration string[] RemoteApiAddresses { get; } Property Value Type Description String [] RemoteIPAddresses Declaration string[] RemoteIPAddresses { get; } Property Value Type Description String [] Methods GetHostAddressesAsync(String, CancellationToken) Declaration Task<IPAddress[]> GetHostAddressesAsync(string host, CancellationToken cancellationToken) Parameters Type Name Description String host CancellationToken cancellationToken Returns Type Description Task < IPAddress []> GetLocalIpAddresses(CancellationToken) Declaration Task<IPAddress[]> GetLocalIpAddresses(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < IPAddress []> GetMacAddresses() Returns MAC Address from first Network Card in Computer Declaration List<string> GetMacAddresses() Returns Type Description List < String > [string] MAC Address GetNetworkDevices() Gets available devices within the domain Declaration IEnumerable<FileSystemEntryInfo> GetNetworkDevices() Returns Type Description IEnumerable < FileSystemEntryInfo > PC's in the Domain GetNetworkShares(String) Gets the network shares. Declaration IEnumerable<NetworkShare> GetNetworkShares(string path) Parameters Type Name Description String path The path. Returns Type Description IEnumerable < NetworkShare > IEnumerable{NetworkShare}. GetRandomUnusedTcpPort() Gets a random port number that is currently available Declaration int GetRandomUnusedTcpPort() Returns Type Description Int32 System.Int32. GetRandomUnusedUdpPort() Declaration int GetRandomUnusedUdpPort() Returns Type Description Int32 IsAddressInSubnets(IPAddress, String[]) Declaration bool IsAddressInSubnets(IPAddress address, string[] subnets) Parameters Type Name Description IPAddress address String [] subnets Returns Type Description Boolean IsInLocalNetwork(IPAddress, CancellationToken) Declaration Task<bool> IsInLocalNetwork(IPAddress remoteAddress, CancellationToken cancellationToken) Parameters Type Name Description IPAddress remoteAddress CancellationToken cancellationToken Returns Type Description Task < Boolean > IsInLocalNetwork(ReadOnlyMemory<Char>, CancellationToken) Determines whether [is in local network] [the specified endpoint]. Declaration Task<bool> IsInLocalNetwork(ReadOnlyMemory<char> endpoint, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Char > endpoint The endpoint. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > true if [is in local network] [the specified endpoint]; otherwise, false . IsInPrivateAddressSpace(ReadOnlySpan<Char>) Determines whether [is in private address space] [the specified endpoint]. Declaration bool IsInPrivateAddressSpace(ReadOnlySpan<char> endpoint) Parameters Type Name Description ReadOnlySpan < Char > endpoint The endpoint. Returns Type Description Boolean true if [is in private address space] [the specified endpoint]; otherwise, false . Events NetworkChanged Declaration event EventHandler NetworkChanged Event Type Type Description EventHandler RemoteAddressesChanged Declaration event EventHandler RemoteAddressesChanged Event Type Type Description EventHandler"
  },
  "reference/pluginapi/MediaBrowser.Common.Plugins.BasePlugin.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Plugins.BasePlugin.html",
    "title": "Class BasePlugin",
    "keywords": "Class BasePlugin Inheritance Object BasePlugin BasePlugin<TConfigurationType> Implements IPlugin IPluginAssembly Namespace : MediaBrowser.Common.Plugins Assembly : MediaBrowser.Common.dll Syntax public abstract class BasePlugin : IPlugin, IPluginAssembly Properties AssemblyFilePath Gets the path to the assembly file Declaration public string AssemblyFilePath { get; } Property Value Type Description String The assembly file path. DataFolderPath Gets the full path to the data folder, where the plugin can store any miscellaneous files needed Declaration public string DataFolderPath { get; } Property Value Type Description String The data folder path. Description Gets the description. Declaration public virtual string Description { get; } Property Value Type Description String The description. Id Gets the unique id. Declaration public virtual Guid Id { get; } Property Value Type Description Guid The unique id. Name Gets the name of the plugin Declaration public abstract string Name { get; } Property Value Type Description String The name. Version Gets the plugin version Declaration public Version Version { get; } Property Value Type Description Version The version. Methods GetPluginInfo() Gets the plugin info. Declaration public virtual PluginInfo GetPluginInfo() Returns Type Description PluginInfo PluginInfo. GetPluginPageUrl(String) Declaration public static string GetPluginPageUrl(string name) Parameters Type Name Description String name Returns Type Description String OnUninstalling() Called when just before the plugin is uninstalled from the server. Declaration public virtual void OnUninstalling() SetAttributes(String, String, Version) Declaration public void SetAttributes(string assemblyFilePath, string dataFolderPath, Version assemblyVersion) Parameters Type Name Description String assemblyFilePath String dataFolderPath Version assemblyVersion SetId(Guid) Declaration public void SetId(Guid assemblyId) Parameters Type Name Description Guid assemblyId Implements IPlugin IPluginAssembly"
  },
  "reference/pluginapi/MediaBrowser.Common.Plugins.BasePlugin-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Plugins.BasePlugin-1.html",
    "title": "Class BasePlugin<TConfigurationType>",
    "keywords": "Class BasePlugin<TConfigurationType> Provides a common base class for all plugins Inheritance Object BasePlugin BasePlugin<TConfigurationType> Implements IPlugin IPluginAssembly IHasPluginConfiguration Inherited Members BasePlugin.Name BasePlugin.Description BasePlugin.Id BasePlugin.Version BasePlugin.AssemblyFilePath BasePlugin.OnUninstalling() BasePlugin.SetAttributes(String, String, Version) BasePlugin.SetId(Guid) BasePlugin.DataFolderPath BasePlugin.GetPluginPageUrl(String) Namespace : MediaBrowser.Common.Plugins Assembly : MediaBrowser.Common.dll Syntax public abstract class BasePlugin<TConfigurationType> : BasePlugin, IPlugin, IPluginAssembly, IHasPluginConfiguration where TConfigurationType : BasePluginConfiguration Type Parameters Name Description TConfigurationType The type of the T configuration type. Constructors BasePlugin(IApplicationPaths, IXmlSerializer) Initializes a new instance of the BasePlugin<TConfigurationType> class. Declaration protected BasePlugin(IApplicationPaths applicationPaths, IXmlSerializer xmlSerializer) Parameters Type Name Description IApplicationPaths applicationPaths The application paths. IXmlSerializer xmlSerializer The XML serializer. Properties ApplicationPaths Gets the application paths. Declaration protected IApplicationPaths ApplicationPaths { get; } Property Value Type Description IApplicationPaths The application paths. AssemblyFileName Gets the name the assembly file Declaration protected string AssemblyFileName { get; } Property Value Type Description String The name of the assembly file. Configuration Gets the plugin's configuration Declaration public TConfigurationType Configuration { get; protected set; } Property Value Type Description TConfigurationType The configuration. ConfigurationFileName Gets the name of the configuration file. Subclasses should override Declaration public virtual string ConfigurationFileName { get; } Property Value Type Description String The name of the configuration file. ConfigurationFilePath Gets the full path to the configuration file Declaration public string ConfigurationFilePath { get; } Property Value Type Description String The configuration file path. ConfigurationType Gets the type of configuration this plugin uses Declaration public Type ConfigurationType { get; } Property Value Type Description Type The type of the configuration. IsFirstRun Gets a value indicating whether this instance is first run. Declaration public bool IsFirstRun { get; } Property Value Type Description Boolean true if this instance is first run; otherwise, false . XmlSerializer Gets the XML serializer. Declaration protected IXmlSerializer XmlSerializer { get; } Property Value Type Description IXmlSerializer The XML serializer. Methods GetPluginInfo() Declaration public override PluginInfo GetPluginInfo() Returns Type Description PluginInfo Overrides BasePlugin.GetPluginInfo() SaveConfiguration() Saves the current configuration to the file system Declaration public virtual void SaveConfiguration() SetStartupInfo(Action<String>) Declaration public void SetStartupInfo(Action<string> directoryCreateFn) Parameters Type Name Description Action < String > directoryCreateFn UpdateConfiguration(BasePluginConfiguration) Completely overwrites the current configuration with a new copy Returns true or false indicating success or failure Declaration public virtual void UpdateConfiguration(BasePluginConfiguration configuration) Parameters Type Name Description BasePluginConfiguration configuration The configuration. Exceptions Type Condition ArgumentNullException configuration Explicit Interface Implementations IHasPluginConfiguration.Configuration Gets the plugin's configuration Declaration BasePluginConfiguration IHasPluginConfiguration.Configuration { get; } Returns Type Description BasePluginConfiguration The configuration. Implements IPlugin IPluginAssembly IHasPluginConfiguration"
  },
  "reference/pluginapi/MediaBrowser.Common.Plugins.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Plugins.html",
    "title": "Namespace MediaBrowser.Common.Plugins",
    "keywords": "Namespace MediaBrowser.Common.Plugins Classes BasePlugin BasePlugin<TConfigurationType> Provides a common base class for all plugins Interfaces IHasPluginConfiguration IHasThumbImage IPlugin Interface IPlugin IPluginAssembly"
  },
  "reference/pluginapi/MediaBrowser.Common.Plugins.IHasPluginConfiguration.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Plugins.IHasPluginConfiguration.html",
    "title": "Interface IHasPluginConfiguration",
    "keywords": "Interface IHasPluginConfiguration Namespace : MediaBrowser.Common.Plugins Assembly : MediaBrowser.Common.dll Syntax public interface IHasPluginConfiguration Properties Configuration Gets the plugin's configuration Declaration BasePluginConfiguration Configuration { get; } Property Value Type Description BasePluginConfiguration The configuration. ConfigurationType Gets the type of configuration this plugin uses Declaration Type ConfigurationType { get; } Property Value Type Description Type The type of the configuration. Methods SetStartupInfo(Action<String>) Declaration void SetStartupInfo(Action<string> directoryCreateFn) Parameters Type Name Description Action < String > directoryCreateFn UpdateConfiguration(BasePluginConfiguration) Completely overwrites the current configuration with a new copy Returns true or false indicating success or failure Declaration void UpdateConfiguration(BasePluginConfiguration configuration) Parameters Type Name Description BasePluginConfiguration configuration The configuration. Exceptions Type Condition ArgumentNullException configuration"
  },
  "reference/pluginapi/MediaBrowser.Common.Plugins.IHasThumbImage.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Plugins.IHasThumbImage.html",
    "title": "Interface IHasThumbImage",
    "keywords": "Interface IHasThumbImage Namespace : MediaBrowser.Common.Plugins Assembly : MediaBrowser.Common.dll Syntax public interface IHasThumbImage Properties ThumbImageFormat Declaration ImageFormat ThumbImageFormat { get; } Property Value Type Description ImageFormat Methods GetThumbImage() Declaration Stream GetThumbImage() Returns Type Description Stream"
  },
  "reference/pluginapi/MediaBrowser.Common.Plugins.IPlugin.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Plugins.IPlugin.html",
    "title": "Interface IPlugin",
    "keywords": "Interface IPlugin Interface IPlugin Namespace : MediaBrowser.Common.Plugins Assembly : MediaBrowser.Common.dll Syntax public interface IPlugin Properties AssemblyFilePath Gets the path to the assembly file Declaration string AssemblyFilePath { get; } Property Value Type Description String The assembly file path. DataFolderPath Gets the full path to the data folder, where the plugin can store any miscellaneous files needed Declaration string DataFolderPath { get; } Property Value Type Description String The data folder path. Description Gets the description. Declaration string Description { get; } Property Value Type Description String The description. Id Gets the unique id. Declaration Guid Id { get; } Property Value Type Description Guid The unique id. Name Gets the name of the plugin Declaration string Name { get; } Property Value Type Description String The name. Version Gets the plugin version Declaration Version Version { get; } Property Value Type Description Version The version. Methods GetPluginInfo() Gets the plugin info. Declaration PluginInfo GetPluginInfo() Returns Type Description PluginInfo PluginInfo. OnUninstalling() Called when just before the plugin is uninstalled from the server. Declaration void OnUninstalling()"
  },
  "reference/pluginapi/MediaBrowser.Common.Plugins.IPluginAssembly.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Plugins.IPluginAssembly.html",
    "title": "Interface IPluginAssembly",
    "keywords": "Interface IPluginAssembly Namespace : MediaBrowser.Common.Plugins Assembly : MediaBrowser.Common.dll Syntax public interface IPluginAssembly Methods SetAttributes(String, String, Version) Declaration void SetAttributes(string assemblyFilePath, string dataFolderPath, Version assemblyVersion) Parameters Type Name Description String assemblyFilePath String dataFolderPath Version assemblyVersion SetId(Guid) Declaration void SetId(Guid assemblyId) Parameters Type Name Description Guid assemblyId"
  },
  "reference/pluginapi/MediaBrowser.Common.Progress.ActionableProgress-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Progress.ActionableProgress-1.html",
    "title": "Class ActionableProgress<T>",
    "keywords": "Class ActionableProgress<T> Class ActionableProgress Inheritance Object ActionableProgress<T> Implements IProgress <T> Namespace : MediaBrowser.Common.Progress Assembly : MediaBrowser.Common.dll Syntax public sealed class ActionableProgress<T> : IProgress<T> Type Parameters Name Description T Methods RegisterAction(Action<T>) Registers the action. Declaration public void RegisterAction(Action<T> action) Parameters Type Name Description Action <T> action The action. Report(T) Declaration public void Report(T value) Parameters Type Name Description T value Events ProgressChanged Declaration public event EventHandler<T> ProgressChanged Event Type Type Description EventHandler <T> Implements System.IProgress<T>"
  },
  "reference/pluginapi/MediaBrowser.Common.Progress.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Progress.html",
    "title": "Namespace MediaBrowser.Common.Progress",
    "keywords": "Namespace MediaBrowser.Common.Progress Classes ActionableProgress<T> Class ActionableProgress SimpleProgress<T>"
  },
  "reference/pluginapi/MediaBrowser.Common.Progress.SimpleProgress-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Progress.SimpleProgress-1.html",
    "title": "Class SimpleProgress<T>",
    "keywords": "Class SimpleProgress<T> Inheritance Object SimpleProgress<T> Implements IProgress <T> Namespace : MediaBrowser.Common.Progress Assembly : MediaBrowser.Common.dll Syntax public sealed class SimpleProgress<T> : IProgress<T> Type Parameters Name Description T Methods Report(T) Declaration public void Report(T value) Parameters Type Name Description T value Events ProgressChanged Declaration public event EventHandler<T> ProgressChanged Event Type Type Description EventHandler <T> Implements System.IProgress<T>"
  },
  "reference/pluginapi/MediaBrowser.Common.Security.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Security.html",
    "title": "Namespace MediaBrowser.Common.Security",
    "keywords": "Namespace MediaBrowser.Common.Security Classes PaymentRequiredException Interfaces IRequiresRegistration ISecurityManager"
  },
  "reference/pluginapi/MediaBrowser.Common.Security.IRequiresRegistration.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Security.IRequiresRegistration.html",
    "title": "Interface IRequiresRegistration",
    "keywords": "Interface IRequiresRegistration Namespace : MediaBrowser.Common.Security Assembly : MediaBrowser.Common.dll Syntax public interface IRequiresRegistration Methods LoadRegistrationInfoAsync() Load all registration information required for this entity. Your class should re-load all MBRegistrationRecords when this is called even if they were previously loaded. Declaration Task LoadRegistrationInfoAsync() Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Common.Security.ISecurityManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Security.ISecurityManager.html",
    "title": "Interface ISecurityManager",
    "keywords": "Interface ISecurityManager Namespace : MediaBrowser.Common.Security Assembly : MediaBrowser.Common.dll Syntax public interface ISecurityManager Properties SupporterKey Gets or sets the supporter key. Declaration string SupporterKey { get; } Property Value Type Description String The supporter key. Methods GetRegistrationStatus(String, CancellationToken) Gets the registration status. Overload to support existing plug-ins. Declaration Task<MBRegistrationRecord> GetRegistrationStatus(string feature, CancellationToken cancellationToken) Parameters Type Name Description String feature CancellationToken cancellationToken Returns Type Description Task < MBRegistrationRecord > IsFeatureAllowed(String, CancellationToken) Declaration Task<bool> IsFeatureAllowed(string feature, CancellationToken cancellationToken) Parameters Type Name Description String feature CancellationToken cancellationToken Returns Type Description Task < Boolean > IsSupporter(CancellationToken) Gets a value indicating whether this instance is MB supporter. Declaration Task<bool> IsSupporter(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Boolean > true if this instance is MB supporter; otherwise, false . RegisterAppStoreSale(String, Boolean) Register and app store sale with our back-end Declaration Task RegisterAppStoreSale(string parameters, bool updatePremiereKey) Parameters Type Name Description String parameters Json parameters to pass to admin server Boolean updatePremiereKey if set to true [update premiere key]. Returns Type Description Task UpdateSupporterKey(String) Declaration Task UpdateSupporterKey(string newValue) Parameters Type Name Description String newValue Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Common.Security.PaymentRequiredException.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Security.PaymentRequiredException.html",
    "title": "Class PaymentRequiredException",
    "keywords": "Class PaymentRequiredException Inheritance Object Exception PaymentRequiredException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Namespace : MediaBrowser.Common.Security Assembly : MediaBrowser.Common.dll Syntax public sealed class PaymentRequiredException : Exception, ISerializable Implements System.Runtime.Serialization.ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Common.Updates.GithubUpdater.Asset.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Updates.GithubUpdater.Asset.html",
    "title": "Class GithubUpdater.Asset",
    "keywords": "Class GithubUpdater.Asset Inheritance Object GithubUpdater.Asset Namespace : MediaBrowser.Common.Updates Assembly : MediaBrowser.Common.dll Syntax public sealed class Asset Properties browser_download_url Declaration public string browser_download_url { get; set; } Property Value Type Description String content_type Declaration public string content_type { get; set; } Property Value Type Description String created_at Declaration public string created_at { get; set; } Property Value Type Description String download_count Declaration public int download_count { get; set; } Property Value Type Description Int32 id Declaration public int id { get; set; } Property Value Type Description Int32 label Declaration public object label { get; set; } Property Value Type Description Object name Declaration public string name { get; set; } Property Value Type Description String size Declaration public int size { get; set; } Property Value Type Description Int32 state Declaration public string state { get; set; } Property Value Type Description String updated_at Declaration public string updated_at { get; set; } Property Value Type Description String uploader Declaration public GithubUpdater.Uploader uploader { get; set; } Property Value Type Description GithubUpdater.Uploader url Declaration public string url { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Common.Updates.GithubUpdater.Author.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Updates.GithubUpdater.Author.html",
    "title": "Class GithubUpdater.Author",
    "keywords": "Class GithubUpdater.Author Inheritance Object GithubUpdater.Author Namespace : MediaBrowser.Common.Updates Assembly : MediaBrowser.Common.dll Syntax public sealed class Author Properties avatar_url Declaration public string avatar_url { get; set; } Property Value Type Description String events_url Declaration public string events_url { get; set; } Property Value Type Description String followers_url Declaration public string followers_url { get; set; } Property Value Type Description String following_url Declaration public string following_url { get; set; } Property Value Type Description String gists_url Declaration public string gists_url { get; set; } Property Value Type Description String gravatar_id Declaration public string gravatar_id { get; set; } Property Value Type Description String html_url Declaration public string html_url { get; set; } Property Value Type Description String id Declaration public int id { get; set; } Property Value Type Description Int32 login Declaration public string login { get; set; } Property Value Type Description String organizations_url Declaration public string organizations_url { get; set; } Property Value Type Description String received_events_url Declaration public string received_events_url { get; set; } Property Value Type Description String repos_url Declaration public string repos_url { get; set; } Property Value Type Description String site_admin Declaration public bool site_admin { get; set; } Property Value Type Description Boolean starred_url Declaration public string starred_url { get; set; } Property Value Type Description String subscriptions_url Declaration public string subscriptions_url { get; set; } Property Value Type Description String type Declaration public string type { get; set; } Property Value Type Description String url Declaration public string url { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Common.Updates.GithubUpdater.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Updates.GithubUpdater.html",
    "title": "Class GithubUpdater",
    "keywords": "Class GithubUpdater Inheritance Object GithubUpdater Namespace : MediaBrowser.Common.Updates Assembly : MediaBrowser.Common.dll Syntax public sealed class GithubUpdater Constructors GithubUpdater(IHttpClient, IJsonSerializer) Declaration public GithubUpdater(IHttpClient httpClient, IJsonSerializer jsonSerializer) Parameters Type Name Description IHttpClient httpClient IJsonSerializer jsonSerializer Methods CheckForUpdateResult(String, String, Version, PackageVersionClass, String, String, String, TimeSpan, CancellationToken) Declaration public async Task<CheckForUpdateResult> CheckForUpdateResult(string organzation, string repository, Version minVersion, PackageVersionClass updateLevel, string assetFilename, string packageName, string targetFilename, TimeSpan cacheLength, CancellationToken cancellationToken) Parameters Type Name Description String organzation String repository Version minVersion PackageVersionClass updateLevel String assetFilename String packageName String targetFilename TimeSpan cacheLength CancellationToken cancellationToken Returns Type Description Task < CheckForUpdateResult > GetLatestReleases(String, String, String, TimeSpan, CancellationToken) Declaration public async Task<List<GithubUpdater.RootObject>> GetLatestReleases(string organzation, string repository, string assetFilename, TimeSpan cacheLength, CancellationToken cancellationToken) Parameters Type Name Description String organzation String repository String assetFilename TimeSpan cacheLength CancellationToken cancellationToken Returns Type Description Task < List < GithubUpdater.RootObject >> GetVersion(GithubUpdater.RootObject) Declaration public Version GetVersion(GithubUpdater.RootObject obj) Parameters Type Name Description GithubUpdater.RootObject obj Returns Type Description Version"
  },
  "reference/pluginapi/MediaBrowser.Common.Updates.GithubUpdater.RootObject.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Updates.GithubUpdater.RootObject.html",
    "title": "Class GithubUpdater.RootObject",
    "keywords": "Class GithubUpdater.RootObject Inheritance Object GithubUpdater.RootObject Namespace : MediaBrowser.Common.Updates Assembly : MediaBrowser.Common.dll Syntax public sealed class RootObject Properties assets Declaration public List<GithubUpdater.Asset> assets { get; set; } Property Value Type Description List < GithubUpdater.Asset > assets_url Declaration public string assets_url { get; set; } Property Value Type Description String author Declaration public GithubUpdater.Author author { get; set; } Property Value Type Description GithubUpdater.Author body Declaration public string body { get; set; } Property Value Type Description String created_at Declaration public string created_at { get; set; } Property Value Type Description String draft Declaration public bool draft { get; set; } Property Value Type Description Boolean html_url Declaration public string html_url { get; set; } Property Value Type Description String id Declaration public int id { get; set; } Property Value Type Description Int32 name Declaration public string name { get; set; } Property Value Type Description String prerelease Declaration public bool prerelease { get; set; } Property Value Type Description Boolean published_at Declaration public string published_at { get; set; } Property Value Type Description String tag_name Declaration public string tag_name { get; set; } Property Value Type Description String tarball_url Declaration public string tarball_url { get; set; } Property Value Type Description String target_commitish Declaration public string target_commitish { get; set; } Property Value Type Description String upload_url Declaration public string upload_url { get; set; } Property Value Type Description String url Declaration public string url { get; set; } Property Value Type Description String zipball_url Declaration public string zipball_url { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Common.Updates.GithubUpdater.Uploader.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Updates.GithubUpdater.Uploader.html",
    "title": "Class GithubUpdater.Uploader",
    "keywords": "Class GithubUpdater.Uploader Inheritance Object GithubUpdater.Uploader Namespace : MediaBrowser.Common.Updates Assembly : MediaBrowser.Common.dll Syntax public sealed class Uploader Properties avatar_url Declaration public string avatar_url { get; set; } Property Value Type Description String events_url Declaration public string events_url { get; set; } Property Value Type Description String followers_url Declaration public string followers_url { get; set; } Property Value Type Description String following_url Declaration public string following_url { get; set; } Property Value Type Description String gists_url Declaration public string gists_url { get; set; } Property Value Type Description String gravatar_id Declaration public string gravatar_id { get; set; } Property Value Type Description String html_url Declaration public string html_url { get; set; } Property Value Type Description String id Declaration public int id { get; set; } Property Value Type Description Int32 login Declaration public string login { get; set; } Property Value Type Description String organizations_url Declaration public string organizations_url { get; set; } Property Value Type Description String received_events_url Declaration public string received_events_url { get; set; } Property Value Type Description String repos_url Declaration public string repos_url { get; set; } Property Value Type Description String site_admin Declaration public bool site_admin { get; set; } Property Value Type Description Boolean starred_url Declaration public string starred_url { get; set; } Property Value Type Description String subscriptions_url Declaration public string subscriptions_url { get; set; } Property Value Type Description String type Declaration public string type { get; set; } Property Value Type Description String url Declaration public string url { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Common.Updates.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Updates.html",
    "title": "Namespace MediaBrowser.Common.Updates",
    "keywords": "Namespace MediaBrowser.Common.Updates Classes GithubUpdater GithubUpdater.Asset GithubUpdater.Author GithubUpdater.RootObject GithubUpdater.Uploader InstallationEventArgs InstallationFailedEventArgs Interfaces IInstallationManager"
  },
  "reference/pluginapi/MediaBrowser.Common.Updates.IInstallationManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Updates.IInstallationManager.html",
    "title": "Interface IInstallationManager",
    "keywords": "Interface IInstallationManager Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Common.Updates Assembly : MediaBrowser.Common.dll Syntax public interface IInstallationManager : IDisposable Properties CompletedInstallations The completed installations Declaration InstallationInfo[] CompletedInstallations { get; } Property Value Type Description InstallationInfo [] CurrentInstallations The current installations Declaration List<Tuple<InstallationInfo, CancellationTokenSource>> CurrentInstallations { get; set; } Property Value Type Description List < Tuple < InstallationInfo , CancellationTokenSource >> Methods GetAvailablePackages(CancellationToken, Boolean, String, Version) Gets all available packages. Declaration Task<List<PackageInfo>> GetAvailablePackages(CancellationToken cancellationToken, bool withRegistration = true, string packageType = null, Version applicationVersion = null) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Boolean withRegistration if set to true [with registration]. String packageType Type of the package. Version applicationVersion The application version. Returns Type Description Task < List < PackageInfo >> Task{List{PackageInfo}}. GetAvailablePluginUpdates(Version, CancellationToken) Gets the available plugin updates. Declaration Task<PackageVersionInfo[]> GetAvailablePluginUpdates(Version applicationVersion, CancellationToken cancellationToken) Parameters Type Name Description Version applicationVersion CancellationToken cancellationToken Returns Type Description Task < PackageVersionInfo []> GetLatestCompatibleVersion(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, Version, PackageVersionClass) Gets the latest compatible version. Declaration Task<PackageVersionInfo> GetLatestCompatibleVersion(ReadOnlyMemory<char> name, ReadOnlyMemory<char> guid, Version currentServerVersion, PackageVersionClass classification = PackageVersionClass.Release) Parameters Type Name Description ReadOnlyMemory < Char > name The name. ReadOnlyMemory < Char > guid The assembly guid Version currentServerVersion The current server version. PackageVersionClass classification The classification. Returns Type Description Task < PackageVersionInfo > Task{PackageVersionInfo}. GetPackage(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, PackageVersionClass, Version) Gets the package. Declaration Task<PackageVersionInfo> GetPackage(ReadOnlyMemory<char> name, ReadOnlyMemory<char> guid, PackageVersionClass classification, Version version) Parameters Type Name Description ReadOnlyMemory < Char > name The name. ReadOnlyMemory < Char > guid The assembly guid PackageVersionClass classification The classification. Version version The version. Returns Type Description Task < PackageVersionInfo > Task{PackageVersionInfo}. InstallPackage(PackageVersionInfo, Boolean, IProgress<Double>, CancellationToken) Installs the package. Declaration Task InstallPackage(PackageVersionInfo package, bool isPlugin, IProgress<double> progress, CancellationToken cancellationToken) Parameters Type Name Description PackageVersionInfo package The package. Boolean isPlugin if set to true [is plugin]. IProgress < Double > progress The progress. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. Exceptions Type Condition ArgumentNullException package UninstallPlugin(IPlugin) Uninstalls a plugin Declaration void UninstallPlugin(IPlugin plugin) Parameters Type Name Description IPlugin plugin The plugin. Exceptions Type Condition ArgumentException Events PackageInstallationCancelled Declaration event EventHandler<InstallationEventArgs> PackageInstallationCancelled Event Type Type Description EventHandler < InstallationEventArgs > PackageInstallationCompleted Declaration event EventHandler<InstallationEventArgs> PackageInstallationCompleted Event Type Type Description EventHandler < InstallationEventArgs > PackageInstallationFailed Declaration event EventHandler<InstallationFailedEventArgs> PackageInstallationFailed Event Type Type Description EventHandler < InstallationFailedEventArgs > PackageInstalling Declaration event EventHandler<InstallationEventArgs> PackageInstalling Event Type Type Description EventHandler < InstallationEventArgs > PluginInstalled Occurs when [plugin updated]. Declaration event EventHandler<GenericEventArgs<PackageVersionInfo>> PluginInstalled Event Type Type Description EventHandler < GenericEventArgs < PackageVersionInfo >> PluginUninstalled Occurs when [plugin uninstalled]. Declaration event EventHandler<GenericEventArgs<IPlugin>> PluginUninstalled Event Type Type Description EventHandler < GenericEventArgs < IPlugin >> PluginUpdated Occurs when [plugin updated]. Declaration event EventHandler<GenericEventArgs<Tuple<IPlugin, PackageVersionInfo>>> PluginUpdated Event Type Type Description EventHandler < GenericEventArgs < Tuple < IPlugin , PackageVersionInfo >>>"
  },
  "reference/pluginapi/MediaBrowser.Common.Updates.InstallationEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Updates.InstallationEventArgs.html",
    "title": "Class InstallationEventArgs",
    "keywords": "Class InstallationEventArgs Inheritance Object InstallationEventArgs InstallationFailedEventArgs Namespace : MediaBrowser.Common.Updates Assembly : MediaBrowser.Common.dll Syntax public class InstallationEventArgs Properties InstallationInfo Declaration public InstallationInfo InstallationInfo { get; set; } Property Value Type Description InstallationInfo PackageVersionInfo Declaration public PackageVersionInfo PackageVersionInfo { get; set; } Property Value Type Description PackageVersionInfo"
  },
  "reference/pluginapi/MediaBrowser.Common.Updates.InstallationFailedEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Common.Updates.InstallationFailedEventArgs.html",
    "title": "Class InstallationFailedEventArgs",
    "keywords": "Class InstallationFailedEventArgs Inheritance Object InstallationEventArgs InstallationFailedEventArgs Inherited Members InstallationEventArgs.InstallationInfo InstallationEventArgs.PackageVersionInfo Namespace : MediaBrowser.Common.Updates Assembly : MediaBrowser.Common.dll Syntax public sealed class InstallationFailedEventArgs : InstallationEventArgs Properties Exception Declaration public Exception Exception { get; set; } Property Value Type Description Exception"
  },
  "reference/pluginapi/MediaBrowser.Controller.Api.BaseApiService.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Api.BaseApiService.html",
    "title": "Class BaseApiService",
    "keywords": "Class BaseApiService Class BaseApiService Inheritance Object BaseApiService Implements IService IRequiresRequest Namespace : MediaBrowser.Controller.Api Assembly : MediaBrowser.Controller.dll Syntax public class BaseApiService : IService, IRequiresRequest Properties Logger Gets or sets the logger. Declaration public ILogger Logger { get; set; } Property Value Type Description ILogger The logger. Request Gets or sets the request context. Declaration public IRequest Request { get; set; } Property Value Type Description IRequest The request context. ResultFactory Gets or sets the HTTP result factory. Declaration public IHttpResultFactory ResultFactory { get; set; } Property Value Type Description IHttpResultFactory The HTTP result factory. Methods AssertCanUpdateUser(IAuthorizationContext, IUserManager, Int64, Boolean) Declaration protected void AssertCanUpdateUser(IAuthorizationContext authContext, IUserManager userManager, long userId, bool restrictUserPreferences) Parameters Type Name Description IAuthorizationContext authContext IUserManager userManager Int64 userId Boolean restrictUserPreferences GetArtist(String, ILibraryManager) Declaration protected MusicArtist GetArtist(string name, ILibraryManager libraryManager) Parameters Type Name Description String name ILibraryManager libraryManager Returns Type Description MusicArtist GetDtoOptions(IAuthorizationContext, Object) Declaration protected DtoOptions GetDtoOptions(IAuthorizationContext authContext, object request) Parameters Type Name Description IAuthorizationContext authContext Object request Returns Type Description DtoOptions GetGameGenre(String, ILibraryManager) Declaration protected GameGenre GetGameGenre(string name, ILibraryManager libraryManager) Parameters Type Name Description String name ILibraryManager libraryManager Returns Type Description GameGenre GetGenre(String, ILibraryManager) Declaration protected Genre GetGenre(string name, ILibraryManager libraryManager) Parameters Type Name Description String name ILibraryManager libraryManager Returns Type Description Genre GetHeader(String) Declaration public string GetHeader(string name) Parameters Type Name Description String name Returns Type Description String GetItemById(ILibraryManager, String, String) Declaration protected BaseItem GetItemById(ILibraryManager libraryManager, string itemId, string mediaSourceId) Parameters Type Name Description ILibraryManager libraryManager String itemId String mediaSourceId Returns Type Description BaseItem GetItemByName(String, String, ILibraryManager) Gets the name of the item by. Declaration protected BaseItem GetItemByName(string name, string type, ILibraryManager libraryManager) Parameters Type Name Description String name String type ILibraryManager libraryManager Returns Type Description BaseItem GetItemsQuery(BaseItem, BaseItemsRequest, DtoOptions, User, ILibraryManager, ILocalizationManager) Declaration protected InternalItemsQuery GetItemsQuery(BaseItem parentItem, BaseItemsRequest request, DtoOptions dtoOptions, User user, ILibraryManager libraryManager, ILocalizationManager localization) Parameters Type Name Description BaseItem parentItem BaseItemsRequest request DtoOptions dtoOptions User user ILibraryManager libraryManager ILocalizationManager localization Returns Type Description InternalItemsQuery GetMusicGenre(String, ILibraryManager) Declaration protected MusicGenre GetMusicGenre(string name, ILibraryManager libraryManager) Parameters Type Name Description String name ILibraryManager libraryManager Returns Type Description MusicGenre GetPathValue(Int32) Declaration protected string GetPathValue(int index) Parameters Type Name Description Int32 index Returns Type Description String GetPerson(String, ILibraryManager) Declaration protected Person GetPerson(string name, ILibraryManager libraryManager) Parameters Type Name Description String name ILibraryManager libraryManager Returns Type Description Person GetSession(ISessionContext) Gets the session. Declaration protected SessionInfo GetSession(ISessionContext sessionContext) Parameters Type Name Description ISessionContext sessionContext Returns Type Description SessionInfo SessionInfo. GetStudio(String, ILibraryManager) Declaration protected Studio GetStudio(string name, ILibraryManager libraryManager) Parameters Type Name Description String name ILibraryManager libraryManager Returns Type Description Studio GetUserForRequest(AuthorizationInfo, IUserManager, ReadOnlySpan<Char>, Boolean) Declaration protected User GetUserForRequest(AuthorizationInfo auth, IUserManager userManager, ReadOnlySpan<char> requestedUserId, bool autoRevertToLoggedInUser = true) Parameters Type Name Description AuthorizationInfo auth IUserManager userManager ReadOnlySpan < Char > requestedUserId Boolean autoRevertToLoggedInUser Returns Type Description User GetUserGuidForRequest(AuthorizationInfo, IUserManager, ReadOnlySpan<Char>, Boolean) Declaration protected Guid GetUserGuidForRequest(AuthorizationInfo auth, IUserManager userManager, ReadOnlySpan<char> requestedUserId, bool autoRevertToLoggedInUser = true) Parameters Type Name Description AuthorizationInfo auth IUserManager userManager ReadOnlySpan < Char > requestedUserId Boolean autoRevertToLoggedInUser Returns Type Description Guid ParseIds(String, ILibraryManager) Declaration protected long[] ParseIds(string value, ILibraryManager libraryManager) Parameters Type Name Description String value ILibraryManager libraryManager Returns Type Description Int64 [] SplitValue(String, Char) Declaration public static string[] SplitValue(string value, char delim) Parameters Type Name Description String value Char delim Returns Type Description String [] ToOptimizedResult<T>(T) To the optimized result. Declaration protected object ToOptimizedResult<T>(T result) where T : class Parameters Type Name Description T result The result. Returns Type Description Object System.Object. Type Parameters Name Description T Implements IService IRequiresRequest"
  },
  "reference/pluginapi/MediaBrowser.Controller.Api.BaseItemsRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Api.BaseItemsRequest.html",
    "title": "Class BaseItemsRequest",
    "keywords": "Class BaseItemsRequest Inheritance Object BaseItemsRequest Implements IHasDtoOptions IHasItemFields Namespace : MediaBrowser.Controller.Api Assembly : MediaBrowser.Controller.dll Syntax public abstract class BaseItemsRequest : IHasDtoOptions, IHasItemFields Constructors BaseItemsRequest() Declaration protected BaseItemsRequest() Properties AdjacentTo Declaration public string AdjacentTo { get; set; } Property Value Type Description String AiredDuringSeason Declaration public int? AiredDuringSeason { get; set; } Property Value Type Description Nullable < Int32 > AlbumArtistIds Declaration public string AlbumArtistIds { get; set; } Property Value Type Description String AlbumArtistStartsWithOrGreater Declaration public string AlbumArtistStartsWithOrGreater { get; set; } Property Value Type Description String AlbumIds Declaration public string AlbumIds { get; set; } Property Value Type Description String Albums Declaration public string Albums { get; set; } Property Value Type Description String AnyProviderIdEquals Provider IDs to match at least one of. Declaration public string AnyProviderIdEquals { get; set; } Property Value Type Description String The any provider id equals filter. ArtistIds Declaration public string ArtistIds { get; set; } Property Value Type Description String Artists Gets or sets the studios. Declaration public string Artists { get; set; } Property Value Type Description String The studios. ArtistStartsWithOrGreater Declaration public string ArtistStartsWithOrGreater { get; set; } Property Value Type Description String ArtistType Declaration public string ArtistType { get; set; } Property Value Type Description String AudioCodecs Declaration public string AudioCodecs { get; set; } Property Value Type Description String AudioLanguages Declaration public string AudioLanguages { get; set; } Property Value Type Description String CollectionIds Declaration public string CollectionIds { get; set; } Property Value Type Description String Containers Declaration public string Containers { get; set; } Property Value Type Description String ContributingArtistIds Declaration public string ContributingArtistIds { get; set; } Property Value Type Description String EnableImages Declaration public bool? EnableImages { get; set; } Property Value Type Description Nullable < Boolean > EnableImageTypes Declaration public string EnableImageTypes { get; set; } Property Value Type Description String EnableTotalRecordCount Declaration public bool EnableTotalRecordCount { get; set; } Property Value Type Description Boolean EnableUserData Declaration public bool? EnableUserData { get; set; } Property Value Type Description Nullable < Boolean > ExcludeArtistIds Declaration public string ExcludeArtistIds { get; set; } Property Value Type Description String ExcludeItemIds Declaration public string ExcludeItemIds { get; set; } Property Value Type Description String ExcludeItemTypes Gets or sets the exclude item types. Declaration public string ExcludeItemTypes { get; set; } Property Value Type Description String The exclude item types. ExcludeLocationTypes Declaration public string ExcludeLocationTypes { get; set; } Property Value Type Description String Fields Fields to return within the items, in addition to basic information Declaration public string Fields { get; set; } Property Value Type Description String The fields. Filters Filters to apply to the results Declaration public string Filters { get; set; } Property Value Type Description String The filters. GenreIds Declaration public string GenreIds { get; set; } Property Value Type Description String Genres Limit results to items containing specific genres Declaration public string Genres { get; set; } Property Value Type Description String The genres. GroupItemsInto Declaration public ItemLinkType? GroupItemsInto { get; set; } Property Value Type Description Nullable < ItemLinkType > GroupItemsIntoCollections Declaration public bool GroupItemsIntoCollections { get; set; } Property Value Type Description Boolean GroupProgramsBySeries Declaration public bool GroupProgramsBySeries { get; set; } Property Value Type Description Boolean HasAired Declaration public bool? HasAired { get; set; } Property Value Type Description Nullable < Boolean > HasImdbId Declaration public bool? HasImdbId { get; set; } Property Value Type Description Nullable < Boolean > HasOfficialRating Declaration public bool? HasOfficialRating { get; set; } Property Value Type Description Nullable < Boolean > HasOverview Declaration public bool? HasOverview { get; set; } Property Value Type Description Nullable < Boolean > HasParentalRating Declaration public bool? HasParentalRating { get; set; } Property Value Type Description Nullable < Boolean > HasSpecialFeature Declaration public bool? HasSpecialFeature { get; set; } Property Value Type Description Nullable < Boolean > HasSubtitles Declaration public bool? HasSubtitles { get; set; } Property Value Type Description Nullable < Boolean > HasThemeSong Declaration public bool? HasThemeSong { get; set; } Property Value Type Description Nullable < Boolean > HasThemeVideo Declaration public bool? HasThemeVideo { get; set; } Property Value Type Description Nullable < Boolean > HasTmdbId Declaration public bool? HasTmdbId { get; set; } Property Value Type Description Nullable < Boolean > HasTrailer Declaration public bool? HasTrailer { get; set; } Property Value Type Description Nullable < Boolean > HasTvdbId Declaration public bool? HasTvdbId { get; set; } Property Value Type Description Nullable < Boolean > Ids Gets or sets the item ids. Declaration public string Ids { get; set; } Property Value Type Description String The item ids. ImageTypeLimit Declaration public int? ImageTypeLimit { get; set; } Property Value Type Description Nullable < Int32 > ImageTypes Gets or sets the image types. Declaration public string ImageTypes { get; set; } Property Value Type Description String The image types. IncludeItemTypes Gets or sets the include item types. Declaration public string IncludeItemTypes { get; set; } Property Value Type Description String The include item types. Is3D Gets or sets the video formats. Declaration public bool? Is3D { get; set; } Property Value Type Description Nullable < Boolean > The video formats. Is4K Declaration public bool? Is4K { get; set; } Property Value Type Description Nullable < Boolean > IsAiring Declaration public bool? IsAiring { get; set; } Property Value Type Description Nullable < Boolean > IsFavorite Gets or sets the Isfavorite option Declaration public bool? IsFavorite { get; set; } Property Value Type Description Nullable < Boolean > IsFavorite IsHD Declaration public bool? IsHD { get; set; } Property Value Type Description Nullable < Boolean > IsKids Declaration public bool? IsKids { get; set; } Property Value Type Description Nullable < Boolean > IsLocked Declaration public bool? IsLocked { get; set; } Property Value Type Description Nullable < Boolean > IsMissing Declaration public bool? IsMissing { get; set; } Property Value Type Description Nullable < Boolean > IsMovie Declaration public bool? IsMovie { get; set; } Property Value Type Description Nullable < Boolean > IsNews Declaration public bool? IsNews { get; set; } Property Value Type Description Nullable < Boolean > IsPlaceHolder Declaration public bool? IsPlaceHolder { get; set; } Property Value Type Description Nullable < Boolean > IsPlayed Declaration public bool? IsPlayed { get; set; } Property Value Type Description Nullable < Boolean > IsSeries Declaration public bool? IsSeries { get; set; } Property Value Type Description Nullable < Boolean > IsSports Declaration public bool? IsSports { get; set; } Property Value Type Description Nullable < Boolean > IsUnaired Declaration public bool? IsUnaired { get; set; } Property Value Type Description Nullable < Boolean > Limit The maximum number of items to return Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > The limit. ListItemIds Declaration public string ListItemIds { get; set; } Property Value Type Description String LocationTypes Declaration public string LocationTypes { get; set; } Property Value Type Description String MaxHeight Declaration public int? MaxHeight { get; set; } Property Value Type Description Nullable < Int32 > MaxOfficialRating Gets or sets the max offical rating. Declaration public string MaxOfficialRating { get; set; } Property Value Type Description String The max offical rating. MaxPlayers Declaration public int? MaxPlayers { get; set; } Property Value Type Description Nullable < Int32 > MaxPremiereDate Declaration public string MaxPremiereDate { get; set; } Property Value Type Description String MaxWidth Declaration public int? MaxWidth { get; set; } Property Value Type Description Nullable < Int32 > MediaTypes Gets or sets the media types. Declaration public string MediaTypes { get; set; } Property Value Type Description String The media types. MinCommunityRating Declaration public double? MinCommunityRating { get; set; } Property Value Type Description Nullable < Double > MinCriticRating Declaration public double? MinCriticRating { get; set; } Property Value Type Description Nullable < Double > MinDateLastSaved Declaration public string MinDateLastSaved { get; set; } Property Value Type Description String MinDateLastSavedForUser Declaration public string MinDateLastSavedForUser { get; set; } Property Value Type Description String MinHeight Declaration public int? MinHeight { get; set; } Property Value Type Description Nullable < Int32 > MinIndexNumber Declaration public int? MinIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > MinOfficialRating Gets or sets the min offical rating. Declaration public string MinOfficialRating { get; set; } Property Value Type Description String The min offical rating. MinPlayers Declaration public int? MinPlayers { get; set; } Property Value Type Description Nullable < Int32 > MinPremiereDate Declaration public string MinPremiereDate { get; set; } Property Value Type Description String MinWidth Declaration public int? MinWidth { get; set; } Property Value Type Description Nullable < Int32 > NameLessThan Declaration public string NameLessThan { get; set; } Property Value Type Description String NameStartsWith Declaration public string NameStartsWith { get; set; } Property Value Type Description String NameStartsWithOrGreater Declaration public string NameStartsWithOrGreater { get; set; } Property Value Type Description String OfficialRatings Declaration public string OfficialRatings { get; set; } Property Value Type Description String OuterIds Declaration public string OuterIds { get; set; } Property Value Type Description String ParentId Specify this to localize the search to a specific item or folder. Omit to use the root. Declaration public string ParentId { get; set; } Property Value Type Description String The parent id. ParentIndexNumber Declaration public int? ParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > Path Declaration public string Path { get; set; } Property Value Type Description String Person Limit results to items containing a specific person Declaration public string Person { get; set; } Property Value Type Description String The person. PersonIds Declaration public string PersonIds { get; set; } Property Value Type Description String PersonTypes If the Person filter is used, this can also be used to restrict to a specific person type Declaration public string PersonTypes { get; set; } Property Value Type Description String The type of the person. Recursive Whether or not to perform the query recursively Declaration public bool Recursive { get; set; } Property Value Type Description Boolean true if recursive; otherwise, false . SearchTerm Declaration public string SearchTerm { get; set; } Property Value Type Description String SeriesStatus Gets or sets the series status. Declaration public string SeriesStatus { get; set; } Property Value Type Description String The series status. SortBy What to sort the results by Declaration public string SortBy { get; set; } Property Value Type Description String The sort by. SortOrder Gets or sets the sort order. Declaration public string SortOrder { get; set; } Property Value Type Description String The sort order. StartIndex Skips over a given number of items within the results. Use for paging. Declaration public int? StartIndex { get; set; } Property Value Type Description Nullable < Int32 > The start index. StudioIds Declaration public string StudioIds { get; set; } Property Value Type Description String Studios Limit results to items containing specific studios Declaration public string Studios { get; set; } Property Value Type Description String The studios. SubtitleCodecs Declaration public string SubtitleCodecs { get; set; } Property Value Type Description String SubtitleLanguages Declaration public string SubtitleLanguages { get; set; } Property Value Type Description String TagIds Declaration public string TagIds { get; set; } Property Value Type Description String Tags Declaration public string Tags { get; set; } Property Value Type Description String UserId Gets or sets the user id. Declaration public Guid UserId { get; set; } Property Value Type Description Guid The user id. VideoCodecs Declaration public string VideoCodecs { get; set; } Property Value Type Description String VideoTypes Gets or sets the video types. Declaration public string VideoTypes { get; set; } Property Value Type Description String The video types. Years Limit results to items containing specific years Declaration public string Years { get; set; } Property Value Type Description String The years. Methods GetAnyProviderIdEquals() Gets the AnyProviderIdEquals filter. Declaration public List<KeyValuePair<string, string>> GetAnyProviderIdEquals() Returns Type Description List < KeyValuePair < String , String >> Dictionary{string, string}. GetAudioCodecs() Declaration public string[] GetAudioCodecs() Returns Type Description String [] GetAudioLanguages() Declaration public string[] GetAudioLanguages() Returns Type Description String [] GetContainers() Declaration public string[] GetContainers() Returns Type Description String [] GetExcludeItemTypes() Declaration public string[] GetExcludeItemTypes() Returns Type Description String [] GetFilters() Gets the filters. Declaration public ItemFilter[] GetFilters() Returns Type Description ItemFilter [] IEnumerable{ItemFilter}. GetGenres() Declaration public string[] GetGenres() Returns Type Description String [] GetImageTypes() Gets the image types. Declaration public ImageType[] GetImageTypes() Returns Type Description ImageType [] IEnumerable{ImageType}. GetIncludeItemTypes() Declaration public string[] GetIncludeItemTypes() Returns Type Description String [] GetMediaTypes() Declaration public string[] GetMediaTypes() Returns Type Description String [] GetOfficialRatings() Declaration public string[] GetOfficialRatings() Returns Type Description String [] GetOrderBy() Gets the order by. Declaration public (string, SortOrder)[] GetOrderBy() Returns Type Description (T1, T2) < String , SortOrder >[] IEnumerable{ItemSortBy}. GetOrderBy(String, String) Declaration public static (string, SortOrder)[] GetOrderBy(string sortBy, string requestedSortOrder) Parameters Type Name Description String sortBy String requestedSortOrder Returns Type Description (T1, T2) < String , SortOrder >[] GetPersonTypes() Declaration public PersonType[] GetPersonTypes() Returns Type Description PersonType [] GetStudios() Declaration public string[] GetStudios() Returns Type Description String [] GetSubtitleCodecs() Declaration public string[] GetSubtitleCodecs() Returns Type Description String [] GetSubtitleLanguages() Declaration public string[] GetSubtitleLanguages() Returns Type Description String [] GetTags() Declaration public string[] GetTags() Returns Type Description String [] GetVideoCodecs() Declaration public string[] GetVideoCodecs() Returns Type Description String [] GetYears() Declaration public int[] GetYears() Returns Type Description Int32 [] Implements IHasDtoOptions IHasItemFields Extension Methods ItemFieldsExtensions.GetItemFields(IHasItemFields)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Api.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Api.html",
    "title": "Namespace MediaBrowser.Controller.Api",
    "keywords": "Namespace MediaBrowser.Controller.Api Classes BaseApiService Class BaseApiService BaseItemsRequest ItemFieldsExtensions Class ItemFieldsExtensions. Interfaces IHasDtoOptions IHasItemFields Interface IHasItemFields"
  },
  "reference/pluginapi/MediaBrowser.Controller.Api.IHasDtoOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Api.IHasDtoOptions.html",
    "title": "Interface IHasDtoOptions",
    "keywords": "Interface IHasDtoOptions Inherited Members IHasItemFields.Fields Namespace : MediaBrowser.Controller.Api Assembly : MediaBrowser.Controller.dll Syntax public interface IHasDtoOptions : IHasItemFields Properties EnableImages Declaration bool? EnableImages { get; set; } Property Value Type Description Nullable < Boolean > EnableImageTypes Declaration string EnableImageTypes { get; set; } Property Value Type Description String EnableUserData Declaration bool? EnableUserData { get; set; } Property Value Type Description Nullable < Boolean > ImageTypeLimit Declaration int? ImageTypeLimit { get; set; } Property Value Type Description Nullable < Int32 > Extension Methods ItemFieldsExtensions.GetItemFields(IHasItemFields)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Api.IHasItemFields.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Api.IHasItemFields.html",
    "title": "Interface IHasItemFields",
    "keywords": "Interface IHasItemFields Interface IHasItemFields Namespace : MediaBrowser.Controller.Api Assembly : MediaBrowser.Controller.dll Syntax public interface IHasItemFields Properties Fields Gets or sets the fields. Declaration string Fields { get; set; } Property Value Type Description String The fields. Extension Methods ItemFieldsExtensions.GetItemFields(IHasItemFields)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Api.ItemFieldsExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Api.ItemFieldsExtensions.html",
    "title": "Class ItemFieldsExtensions",
    "keywords": "Class ItemFieldsExtensions Class ItemFieldsExtensions. Inheritance Object ItemFieldsExtensions Namespace : MediaBrowser.Controller.Api Assembly : MediaBrowser.Controller.dll Syntax public static class ItemFieldsExtensions Methods GetItemFields(IHasItemFields) Gets the item fields. Declaration public static ItemFields[] GetItemFields(this IHasItemFields request) Parameters Type Name Description IHasItemFields request The request. Returns Type Description ItemFields [] IEnumerable{ItemFields}. GetItemFields(String) Declaration public static ItemFields[] GetItemFields(string val) Parameters Type Name Description String val Returns Type Description ItemFields []"
  },
  "reference/pluginapi/MediaBrowser.Controller.Authentication.AuthenticationResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Authentication.AuthenticationResult.html",
    "title": "Class AuthenticationResult",
    "keywords": "Class AuthenticationResult Inheritance Object AuthenticationResult Namespace : MediaBrowser.Controller.Authentication Assembly : MediaBrowser.Controller.dll Syntax public sealed class AuthenticationResult Properties AccessToken Gets or sets the authentication token. Declaration public string AccessToken { get; set; } Property Value Type Description String The authentication token. ServerId Gets or sets the server identifier. Declaration public string ServerId { get; set; } Property Value Type Description String The server identifier. SessionInfo Gets or sets the session information. Declaration public SessionInfo SessionInfo { get; set; } Property Value Type Description SessionInfo The session information. User Gets or sets the user. Declaration public UserDto User { get; set; } Property Value Type Description UserDto The user."
  },
  "reference/pluginapi/MediaBrowser.Controller.Authentication.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Authentication.html",
    "title": "Namespace MediaBrowser.Controller.Authentication",
    "keywords": "Namespace MediaBrowser.Controller.Authentication Classes AuthenticationResult ProviderAuthenticationResult Interfaces IAuthenticationProvider IHasNewUserPolicy IRequiresResolvedUser"
  },
  "reference/pluginapi/MediaBrowser.Controller.Authentication.IAuthenticationProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Authentication.IAuthenticationProvider.html",
    "title": "Interface IAuthenticationProvider",
    "keywords": "Interface IAuthenticationProvider Namespace : MediaBrowser.Controller.Authentication Assembly : MediaBrowser.Controller.dll Syntax public interface IAuthenticationProvider Properties IsEnabled Declaration bool IsEnabled { get; } Property Value Type Description Boolean Name Declaration string Name { get; } Property Value Type Description String Methods Authenticate(String, String) Declaration Task<ProviderAuthenticationResult> Authenticate(string username, string password) Parameters Type Name Description String username String password Returns Type Description Task < ProviderAuthenticationResult > ChangePassword(User, String) Declaration Task ChangePassword(User user, string newPassword) Parameters Type Name Description User user String newPassword Returns Type Description Task HasPassword(User) Declaration Task<bool> HasPassword(User user) Parameters Type Name Description User user Returns Type Description Task < Boolean >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Authentication.IHasNewUserPolicy.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Authentication.IHasNewUserPolicy.html",
    "title": "Interface IHasNewUserPolicy",
    "keywords": "Interface IHasNewUserPolicy Namespace : MediaBrowser.Controller.Authentication Assembly : MediaBrowser.Controller.dll Syntax public interface IHasNewUserPolicy Methods GetNewUserPolicy() Declaration UserPolicy GetNewUserPolicy() Returns Type Description UserPolicy"
  },
  "reference/pluginapi/MediaBrowser.Controller.Authentication.IRequiresResolvedUser.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Authentication.IRequiresResolvedUser.html",
    "title": "Interface IRequiresResolvedUser",
    "keywords": "Interface IRequiresResolvedUser Namespace : MediaBrowser.Controller.Authentication Assembly : MediaBrowser.Controller.dll Syntax public interface IRequiresResolvedUser Methods Authenticate(String, String, User) Declaration Task<ProviderAuthenticationResult> Authenticate(string username, string password, User resolvedUser) Parameters Type Name Description String username String password User resolvedUser Returns Type Description Task < ProviderAuthenticationResult >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Authentication.ProviderAuthenticationResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Authentication.ProviderAuthenticationResult.html",
    "title": "Class ProviderAuthenticationResult",
    "keywords": "Class ProviderAuthenticationResult Inheritance Object ProviderAuthenticationResult Namespace : MediaBrowser.Controller.Authentication Assembly : MediaBrowser.Controller.dll Syntax public sealed class ProviderAuthenticationResult Properties DisplayName Declaration public string DisplayName { get; set; } Property Value Type Description String Username Declaration public string Username { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.Channel.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.Channel.html",
    "title": "Class Channel",
    "keywords": "Class Channel Inheritance Object BaseItem Folder Channel Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > ICollectionFolder IHasCollectionType Inherited Members Folder.UserViewManager Folder.IsPreSorted Folder.IsPhysicalRoot Folder.IsResolvedToFolder Folder.SupportsPlayedStatus(LibraryOptions) Folder.IsFolder Folder.IsDisplayedAsFolder Folder.SupportsCumulativeRunTimeTicks Folder.SupportsExternalTransfer Folder.FileNameWithoutExtension Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.IsVisibleViaTags(User) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Folder.SortChildrenForValidation(BaseItem[]) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetChildCount(User) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetItemsInternal(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsPeople BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.GetDefaultPrimaryImageAspectRatio() BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public sealed class Channel : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, ICollectionFolder, IHasCollectionType Properties CollectionType Declaration [IgnoreDataMember] public string CollectionType { get; } Property Value Type Description String EnableItemChangeEvents Declaration [IgnoreDataMember] public bool EnableItemChangeEvents { get; } Property Value Type Description Boolean IsTopParent Declaration [IgnoreDataMember] public override bool IsTopParent { get; } Property Value Type Description Boolean Overrides Folder.IsTopParent SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages SupportsUserData Declaration [IgnoreDataMember] public override bool SupportsUserData { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsUserData Methods CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides Folder.CanDelete(Folder[]) GetInternalAncestorIds() Declaration public override IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetInternalAncestorIds() GetItemIdsInternal(InternalItemsQuery) Declaration protected override long[] GetItemIdsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] Overrides Folder.GetItemIdsInternal(InternalItemsQuery) GetLatestItemsOrderBy() Declaration public (string, SortOrder)[] GetLatestItemsOrderBy() Returns Type Description (T1, T2) < String , SortOrder >[] GetLibraryOptions() Declaration public LibraryOptions GetLibraryOptions() Returns Type Description LibraryOptions IsVisible(User) Declaration public override bool IsVisible(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides Folder.IsVisible(User) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> ICollectionFolder IHasCollectionType Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.ChannelItemInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.ChannelItemInfo.html",
    "title": "Class ChannelItemInfo",
    "keywords": "Class ChannelItemInfo Inheritance Object ChannelItemInfo Implements IHasProviderIds Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public class ChannelItemInfo : IHasProviderIds Constructors ChannelItemInfo() Declaration public ChannelItemInfo() Properties AlbumArtists Declaration public List<string> AlbumArtists { get; set; } Property Value Type Description List < String > Artists Declaration public List<string> Artists { get; set; } Property Value Type Description List < String > CommunityRating Declaration public float? CommunityRating { get; set; } Property Value Type Description Nullable < Single > ContentType Declaration public ChannelMediaContentType ContentType { get; set; } Property Value Type Description ChannelMediaContentType DateCreated Declaration public DateTimeOffset? DateCreated { get; set; } Property Value Type Description Nullable < DateTimeOffset > DateModified Declaration public DateTimeOffset DateModified { get; set; } Property Value Type Description DateTimeOffset EndDate Declaration public DateTimeOffset? EndDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > Etag Declaration public string Etag { get; set; } Property Value Type Description String ExtraType Declaration public ExtraType ExtraType { get; set; } Property Value Type Description ExtraType FolderType Declaration public ChannelFolderType FolderType { get; set; } Property Value Type Description ChannelFolderType Genres Declaration public List<string> Genres { get; set; } Property Value Type Description List < String > HomePageUrl Declaration public string HomePageUrl { get; set; } Property Value Type Description String Id Declaration public string Id { get; set; } Property Value Type Description String ImageUrl Declaration public string ImageUrl { get; set; } Property Value Type Description String IndexNumber Declaration public int? IndexNumber { get; set; } Property Value Type Description Nullable < Int32 > IsLiveStream Declaration public bool IsLiveStream { get; set; } Property Value Type Description Boolean MediaSources Declaration public List<MediaSourceInfo> MediaSources { get; set; } Property Value Type Description List < MediaSourceInfo > MediaType Declaration public ChannelMediaType MediaType { get; set; } Property Value Type Description ChannelMediaType Name Declaration public string Name { get; set; } Property Value Type Description String OfficialRating Declaration public string OfficialRating { get; set; } Property Value Type Description String OriginalTitle Declaration public string OriginalTitle { get; set; } Property Value Type Description String Overview Declaration public string Overview { get; set; } Property Value Type Description String ParentIndexNumber Declaration public int? ParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > People Declaration public List<PersonInfo> People { get; set; } Property Value Type Description List < PersonInfo > PremiereDate Declaration public DateTimeOffset? PremiereDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > ProductionYear Declaration public int? ProductionYear { get; set; } Property Value Type Description Nullable < Int32 > ProviderIds Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary RunTimeTicks Declaration public long? RunTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > SeriesName Declaration public string SeriesName { get; set; } Property Value Type Description String StartDate Declaration public DateTimeOffset? StartDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > Studios Declaration public List<string> Studios { get; set; } Property Value Type Description List < String > Tags Declaration public List<string> Tags { get; set; } Property Value Type Description List < String > Type Declaration public ChannelItemType Type { get; set; } Property Value Type Description ChannelItemType Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.ChannelItemResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.ChannelItemResult.html",
    "title": "Class ChannelItemResult",
    "keywords": "Class ChannelItemResult Inheritance Object ChannelItemResult Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public sealed class ChannelItemResult Constructors ChannelItemResult() Declaration public ChannelItemResult() Properties Items Declaration public List<ChannelItemInfo> Items { get; set; } Property Value Type Description List < ChannelItemInfo > TotalRecordCount Declaration public int? TotalRecordCount { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.ChannelItemType.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.ChannelItemType.html",
    "title": "Enum ChannelItemType",
    "keywords": "Enum ChannelItemType Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public enum ChannelItemType Fields Name Description Folder Media Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ChannelItemType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.ChannelParentalRating.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.ChannelParentalRating.html",
    "title": "Enum ChannelParentalRating",
    "keywords": "Enum ChannelParentalRating Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public enum ChannelParentalRating Fields Name Description Adult GeneralAudience UsPG UsPG13 UsR Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ChannelParentalRating>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.html",
    "title": "Namespace MediaBrowser.Controller.Channels",
    "keywords": "Namespace MediaBrowser.Controller.Channels Classes Channel ChannelItemInfo ChannelItemResult InternalChannelFeatures InternalChannelItemQuery Interfaces IChannel IChannelManager IDisableMediaSourceDisplay IHasCacheKey IHasChangeEvent IHasFolderAttributes IRequiresMediaInfoCallback ISearchableChannel ISupportsDelete ISupportsLatestMedia ISupportsMediaProbe Enums ChannelItemType ChannelParentalRating"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.IChannel.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.IChannel.html",
    "title": "Interface IChannel",
    "keywords": "Interface IChannel Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public interface IChannel Properties Description Gets the description. Declaration string Description { get; } Property Value Type Description String The description. Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. ParentalRating Gets the parental rating. Declaration ChannelParentalRating ParentalRating { get; } Property Value Type Description ChannelParentalRating The parental rating. Methods GetChannelImage(ImageType, CancellationToken) Gets the channel image. Declaration Task<DynamicImageResponse> GetChannelImage(ImageType type, CancellationToken cancellationToken) Parameters Type Name Description ImageType type The type. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < DynamicImageResponse > Task{DynamicImageInfo}. GetChannelItems(InternalChannelItemQuery, CancellationToken) Gets the channel items. Declaration Task<ChannelItemResult> GetChannelItems(InternalChannelItemQuery query, CancellationToken cancellationToken) Parameters Type Name Description InternalChannelItemQuery query The query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < ChannelItemResult > GetSupportedChannelImages() Gets the supported channel images. Declaration IEnumerable<ImageType> GetSupportedChannelImages() Returns Type Description IEnumerable < ImageType > IEnumerable{ImageType}."
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.IChannelManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.IChannelManager.html",
    "title": "Interface IChannelManager",
    "keywords": "Interface IChannelManager Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public interface IChannelManager Properties ChannelCount Declaration int ChannelCount { get; } Property Value Type Description Int32 Methods AddParts(IEnumerable<IChannel>) Adds the parts. Declaration void AddParts(IEnumerable<IChannel> channels) Parameters Type Name Description IEnumerable < IChannel > channels The channels. CanDelete(BaseItem, Channel) Declaration bool CanDelete(BaseItem item, Channel channel) Parameters Type Name Description BaseItem item Channel channel Returns Type Description Boolean DeleteItem(BaseItem) Declaration Task DeleteItem(BaseItem item) Parameters Type Name Description BaseItem item Returns Type Description Task GetChannel<T>() Declaration T GetChannel<T>() where T : IChannel Returns Type Description T Type Parameters Name Description T GetChannelsInternal(InternalItemsQuery) Gets the channels internal. Declaration BaseItem[] GetChannelsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description BaseItem [] GetLatestItemsOrderBy(Channel) Declaration (string, SortOrder)[] GetLatestItemsOrderBy(Channel channel) Parameters Type Name Description Channel channel Returns Type Description (T1, T2) < String , SortOrder >[] GetLibraryOptions(Channel) Declaration LibraryOptions GetLibraryOptions(Channel channel) Parameters Type Name Description Channel channel Returns Type Description LibraryOptions RefreshChannelContent(IChannel, Int32, String, CancellationToken) Declaration Task RefreshChannelContent(IChannel channel, int maxRefreshLevel, string restrictTopLevelFolderId, CancellationToken cancellationToken) Parameters Type Name Description IChannel channel Int32 maxRefreshLevel String restrictTopLevelFolderId CancellationToken cancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.IDisableMediaSourceDisplay.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.IDisableMediaSourceDisplay.html",
    "title": "Interface IDisableMediaSourceDisplay",
    "keywords": "Interface IDisableMediaSourceDisplay Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public interface IDisableMediaSourceDisplay"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.IHasCacheKey.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.IHasCacheKey.html",
    "title": "Interface IHasCacheKey",
    "keywords": "Interface IHasCacheKey Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public interface IHasCacheKey Methods GetCacheKey(String) Gets the cache key. Declaration string GetCacheKey(string userId) Parameters Type Name Description String userId The user identifier. Returns Type Description String System.String."
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.IHasChangeEvent.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.IHasChangeEvent.html",
    "title": "Interface IHasChangeEvent",
    "keywords": "Interface IHasChangeEvent Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public interface IHasChangeEvent Events ContentChanged Declaration event EventHandler ContentChanged Event Type Type Description EventHandler"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.IHasFolderAttributes.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.IHasFolderAttributes.html",
    "title": "Interface IHasFolderAttributes",
    "keywords": "Interface IHasFolderAttributes Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public interface IHasFolderAttributes Properties Attributes Declaration string[] Attributes { get; } Property Value Type Description String []"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.InternalChannelFeatures.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.InternalChannelFeatures.html",
    "title": "Class InternalChannelFeatures",
    "keywords": "Class InternalChannelFeatures Inheritance Object InternalChannelFeatures Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public sealed class InternalChannelFeatures Constructors InternalChannelFeatures() Declaration public InternalChannelFeatures() Properties AutoRefreshLevels Gets or sets the automatic refresh levels. Declaration public int? AutoRefreshLevels { get; set; } Property Value Type Description Nullable < Int32 > The automatic refresh levels. ContentTypes Gets or sets the content types. Declaration public List<ChannelMediaContentType> ContentTypes { get; set; } Property Value Type Description List < ChannelMediaContentType > The content types. DailyDownloadLimit Gets or sets the daily download limit. Declaration public int? DailyDownloadLimit { get; set; } Property Value Type Description Nullable < Int32 > The daily download limit. DefaultSortFields Gets or sets the default sort orders. Declaration public List<ChannelItemSortField> DefaultSortFields { get; set; } Property Value Type Description List < ChannelItemSortField > The default sort orders. MaxPageSize Represents the maximum number of records the channel allows retrieving at a time Declaration public int? MaxPageSize { get; set; } Property Value Type Description Nullable < Int32 > MediaTypes Gets or sets the media types. Declaration public List<ChannelMediaType> MediaTypes { get; set; } Property Value Type Description List < ChannelMediaType > The media types. SupportsContentDownloading Gets or sets a value indicating whether [supports downloading]. Declaration public bool SupportsContentDownloading { get; set; } Property Value Type Description Boolean true if [supports downloading]; otherwise, false . SupportsSortOrderToggle Indicates if a sort ascending/descending toggle is supported or not. Declaration public bool SupportsSortOrderToggle { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.InternalChannelItemQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.InternalChannelItemQuery.html",
    "title": "Class InternalChannelItemQuery",
    "keywords": "Class InternalChannelItemQuery Inheritance Object InternalChannelItemQuery Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public sealed class InternalChannelItemQuery Properties FolderId Declaration public string FolderId { get; set; } Property Value Type Description String Limit Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > SortBy Declaration public ChannelItemSortField? SortBy { get; set; } Property Value Type Description Nullable < ChannelItemSortField > SortDescending Declaration public bool SortDescending { get; set; } Property Value Type Description Boolean StartIndex Declaration public int? StartIndex { get; set; } Property Value Type Description Nullable < Int32 > UserId Declaration public long UserId { get; set; } Property Value Type Description Int64"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.IRequiresMediaInfoCallback.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.IRequiresMediaInfoCallback.html",
    "title": "Interface IRequiresMediaInfoCallback",
    "keywords": "Interface IRequiresMediaInfoCallback Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public interface IRequiresMediaInfoCallback Methods GetChannelItemMediaInfo(String, CancellationToken) Gets the channel item media information. Declaration Task<IEnumerable<MediaSourceInfo>> GetChannelItemMediaInfo(string id, CancellationToken cancellationToken) Parameters Type Name Description String id CancellationToken cancellationToken Returns Type Description Task < IEnumerable < MediaSourceInfo >>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.ISearchableChannel.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.ISearchableChannel.html",
    "title": "Interface ISearchableChannel",
    "keywords": "Interface ISearchableChannel Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public interface ISearchableChannel"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.ISupportsDelete.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.ISupportsDelete.html",
    "title": "Interface ISupportsDelete",
    "keywords": "Interface ISupportsDelete Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public interface ISupportsDelete Methods CanDelete(BaseItem) Declaration bool CanDelete(BaseItem item) Parameters Type Name Description BaseItem item Returns Type Description Boolean DeleteItem(String, CancellationToken) Declaration Task DeleteItem(string id, CancellationToken cancellationToken) Parameters Type Name Description String id CancellationToken cancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.ISupportsLatestMedia.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.ISupportsLatestMedia.html",
    "title": "Interface ISupportsLatestMedia",
    "keywords": "Interface ISupportsLatestMedia Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public interface ISupportsLatestMedia"
  },
  "reference/pluginapi/MediaBrowser.Controller.Channels.ISupportsMediaProbe.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Channels.ISupportsMediaProbe.html",
    "title": "Interface ISupportsMediaProbe",
    "keywords": "Interface ISupportsMediaProbe Namespace : MediaBrowser.Controller.Channels Assembly : MediaBrowser.Controller.dll Syntax public interface ISupportsMediaProbe"
  },
  "reference/pluginapi/MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo.html",
    "title": "Class FfmpegCapabilities.CapabilityInfo",
    "keywords": "Class FfmpegCapabilities.CapabilityInfo Inheritance Object FfmpegCapabilities.CapabilityInfo Namespace : MediaBrowser.Controller.Codecs Assembly : MediaBrowser.Controller.dll Syntax public sealed class CapabilityInfo Constructors CapabilityInfo(String, String, String) Declaration public CapabilityInfo(string key, string decription, string extra) Parameters Type Name Description String key String decription String extra Properties Decription Declaration public string Decription { get; } Property Value Type Description String Extra Declaration public string Extra { get; } Property Value Type Description String Key Declaration public string Key { get; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapsList.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapsList.html",
    "title": "Class FfmpegCapabilities.CapsList",
    "keywords": "Class FfmpegCapabilities.CapsList Inheritance Object Dictionary < String , FfmpegCapabilities.CapabilityInfo > FfmpegCapabilities.CapsList Implements IDictionary < String , FfmpegCapabilities.CapabilityInfo > ICollection < KeyValuePair < String , FfmpegCapabilities.CapabilityInfo >> IReadOnlyDictionary < String , FfmpegCapabilities.CapabilityInfo > IReadOnlyCollection < KeyValuePair < String , FfmpegCapabilities.CapabilityInfo >> IEnumerable < KeyValuePair < String , FfmpegCapabilities.CapabilityInfo >> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, FfmpegCapabilities.CapabilityInfo>.Add(String, FfmpegCapabilities.CapabilityInfo) Dictionary<String, FfmpegCapabilities.CapabilityInfo>.Clear() Dictionary<String, FfmpegCapabilities.CapabilityInfo>.ContainsKey(String) Dictionary<String, FfmpegCapabilities.CapabilityInfo>.ContainsValue(FfmpegCapabilities.CapabilityInfo) Dictionary<String, FfmpegCapabilities.CapabilityInfo>.GetEnumerator() Dictionary<String, FfmpegCapabilities.CapabilityInfo>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, FfmpegCapabilities.CapabilityInfo>.OnDeserialization(Object) Dictionary<String, FfmpegCapabilities.CapabilityInfo>.Remove(String) System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>>.Add(System.Collections.Generic.KeyValuePair<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>) System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>>.Contains(System.Collections.Generic.KeyValuePair<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>) System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>[], System.Int32) System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>>.Remove(System.Collections.Generic.KeyValuePair<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>) System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>>.GetEnumerator() Dictionary<String, FfmpegCapabilities.CapabilityInfo>.ICollection.CopyTo(Array, Int32) Dictionary<String, FfmpegCapabilities.CapabilityInfo>.IDictionary.Add(Object, Object) Dictionary<String, FfmpegCapabilities.CapabilityInfo>.IDictionary.Contains(Object) Dictionary<String, FfmpegCapabilities.CapabilityInfo>.IDictionary.GetEnumerator() Dictionary<String, FfmpegCapabilities.CapabilityInfo>.IDictionary.Remove(Object) Dictionary<String, FfmpegCapabilities.CapabilityInfo>.IEnumerable.GetEnumerator() Dictionary<String, FfmpegCapabilities.CapabilityInfo>.TryGetValue(String, FfmpegCapabilities.CapabilityInfo) Dictionary<String, FfmpegCapabilities.CapabilityInfo>.Comparer Dictionary<String, FfmpegCapabilities.CapabilityInfo>.Count Dictionary<String, FfmpegCapabilities.CapabilityInfo>.Item[String] Dictionary<String, FfmpegCapabilities.CapabilityInfo>.Keys System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>>.IsReadOnly System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.Generic.IDictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.Keys System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.Generic.IDictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.Values System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.Generic.IReadOnlyDictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.Keys System.Collections.Generic.Dictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.System.Collections.Generic.IReadOnlyDictionary<System.String, MediaBrowser.Controller.Codecs.FfmpegCapabilities.CapabilityInfo>.Values Dictionary<String, FfmpegCapabilities.CapabilityInfo>.ICollection.IsSynchronized Dictionary<String, FfmpegCapabilities.CapabilityInfo>.ICollection.SyncRoot Dictionary<String, FfmpegCapabilities.CapabilityInfo>.IDictionary.IsFixedSize Dictionary<String, FfmpegCapabilities.CapabilityInfo>.IDictionary.IsReadOnly Dictionary<String, FfmpegCapabilities.CapabilityInfo>.IDictionary.Item[Object] Dictionary<String, FfmpegCapabilities.CapabilityInfo>.IDictionary.Keys Dictionary<String, FfmpegCapabilities.CapabilityInfo>.IDictionary.Values Dictionary<String, FfmpegCapabilities.CapabilityInfo>.Values Namespace : MediaBrowser.Controller.Codecs Assembly : MediaBrowser.Controller.dll Syntax public sealed class CapsList : Dictionary<string, FfmpegCapabilities.CapabilityInfo>, IDictionary<string, FfmpegCapabilities.CapabilityInfo>, ICollection<KeyValuePair<string, FfmpegCapabilities.CapabilityInfo>>, IReadOnlyDictionary<string, FfmpegCapabilities.CapabilityInfo>, IReadOnlyCollection<KeyValuePair<string, FfmpegCapabilities.CapabilityInfo>>, IEnumerable<KeyValuePair<string, FfmpegCapabilities.CapabilityInfo>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Constructors CapsList() Declaration public CapsList() Methods AddCap(FfmpegCapabilities.CapabilityInfo) Declaration public void AddCap(FfmpegCapabilities.CapabilityInfo cap) Parameters Type Name Description FfmpegCapabilities.CapabilityInfo cap Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.IEnumerable System.Runtime.Serialization.IDeserializationCallback System.Runtime.Serialization.ISerializable Extension Methods LinqExtensions.ToArray<TSource>(IEnumerable<TSource>, Int32) SortExtensions.OrderByString<T>(IEnumerable<T>, Func<T, String>) SortExtensions.OrderByStringDescending<T>(IEnumerable<T>, Func<T, String>)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Codecs.FfmpegCapabilities.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Codecs.FfmpegCapabilities.html",
    "title": "Class FfmpegCapabilities",
    "keywords": "Class FfmpegCapabilities Inheritance Object FfmpegCapabilities Namespace : MediaBrowser.Controller.Codecs Assembly : MediaBrowser.Controller.dll Syntax public sealed class FfmpegCapabilities Properties AudioDecoders Declaration public FfmpegCapabilities.CapsList AudioDecoders { get; } Property Value Type Description FfmpegCapabilities.CapsList AudioEncoders Declaration public FfmpegCapabilities.CapsList AudioEncoders { get; } Property Value Type Description FfmpegCapabilities.CapsList AudioFilters Declaration public FfmpegCapabilities.CapsList AudioFilters { get; } Property Value Type Description FfmpegCapabilities.CapsList FullVersionInfo Declaration public string FullVersionInfo { get; set; } Property Value Type Description String HardwareAccelerations Declaration public FfmpegCapabilities.CapsList HardwareAccelerations { get; } Property Value Type Description FfmpegCapabilities.CapsList InputProtocols Declaration public FfmpegCapabilities.CapsList InputProtocols { get; } Property Value Type Description FfmpegCapabilities.CapsList IsEmbyCustom Declaration public bool IsEmbyCustom { get; set; } Property Value Type Description Boolean OutputProtocols Declaration public FfmpegCapabilities.CapsList OutputProtocols { get; } Property Value Type Description FfmpegCapabilities.CapsList PositionTimeStartsFromZero Declaration public bool PositionTimeStartsFromZero { get; set; } Property Value Type Description Boolean SubtitleDecoders Declaration public FfmpegCapabilities.CapsList SubtitleDecoders { get; } Property Value Type Description FfmpegCapabilities.CapsList SubtitleEncoders Declaration public FfmpegCapabilities.CapsList SubtitleEncoders { get; } Property Value Type Description FfmpegCapabilities.CapsList SubtitleFilters Declaration public FfmpegCapabilities.CapsList SubtitleFilters { get; } Property Value Type Description FfmpegCapabilities.CapsList SupportsChromaprint Declaration public bool SupportsChromaprint { get; set; } Property Value Type Description Boolean SupportsDiscardCorruptPts Declaration public bool SupportsDiscardCorruptPts { get; } Property Value Type Description Boolean SupportsFillWallClockDts Declaration public bool SupportsFillWallClockDts { get; } Property Value Type Description Boolean SupportsFilterGraphReport Declaration public bool SupportsFilterGraphReport { get; set; } Property Value Type Description Boolean SupportsLogTimeStamps Declaration public bool SupportsLogTimeStamps { get; set; } Property Value Type Description Boolean SupportsSegmentCompleteLogMessages Declaration public bool SupportsSegmentCompleteLogMessages { get; } Property Value Type Description Boolean SupportsSegmentMinFrame Declaration public bool SupportsSegmentMinFrame { get; set; } Property Value Type Description Boolean SupportsSkipInterval Declaration public bool SupportsSkipInterval { get; set; } Property Value Type Description Boolean SupportsSkipList Declaration public bool SupportsSkipList { get; set; } Property Value Type Description Boolean SupportsTempSegmentWriting Declaration public bool SupportsTempSegmentWriting { get; set; } Property Value Type Description Boolean SupportsThrottling Declaration public bool SupportsThrottling { get; } Property Value Type Description Boolean SupportsWebVttReferenceStream Declaration public bool SupportsWebVttReferenceStream { get; set; } Property Value Type Description Boolean Version Declaration public string Version { get; set; } Property Value Type Description String VideoDecoders Declaration public FfmpegCapabilities.CapsList VideoDecoders { get; } Property Value Type Description FfmpegCapabilities.CapsList VideoEncoders Declaration public FfmpegCapabilities.CapsList VideoEncoders { get; } Property Value Type Description FfmpegCapabilities.CapsList VideoFilters Declaration public FfmpegCapabilities.CapsList VideoFilters { get; } Property Value Type Description FfmpegCapabilities.CapsList"
  },
  "reference/pluginapi/MediaBrowser.Controller.Codecs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Codecs.html",
    "title": "Namespace MediaBrowser.Controller.Codecs",
    "keywords": "Namespace MediaBrowser.Controller.Codecs Classes FfmpegCapabilities FfmpegCapabilities.CapabilityInfo FfmpegCapabilities.CapsList Interfaces ICodecBase ICodecProvider Objects implementing this interface will be detected at runtime. Executing GetCodecList() will allow a codec provider to a list of codecs that it has detected."
  },
  "reference/pluginapi/MediaBrowser.Controller.Codecs.ICodecBase.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Codecs.ICodecBase.html",
    "title": "Interface ICodecBase",
    "keywords": "Interface ICodecBase Namespace : MediaBrowser.Controller.Codecs Assembly : MediaBrowser.Controller.dll Syntax public interface ICodecBase Properties Description Declaration string Description { get; set; } Property Value Type Description String Id Declaration string Id { get; } Property Value Type Description String Name Declaration string Name { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Codecs.ICodecProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Codecs.ICodecProvider.html",
    "title": "Interface ICodecProvider",
    "keywords": "Interface ICodecProvider Objects implementing this interface will be detected at runtime. Executing GetCodecList() will allow a codec provider to a list of codecs that it has detected. Namespace : MediaBrowser.Controller.Codecs Assembly : MediaBrowser.Controller.dll Syntax public interface ICodecProvider Remarks The purpose of this provider model is to allow platform specific detection implementations. Methods GetCodecList() A codec info provider implements this method to return a list of detected codecs. Declaration Task<List<ICodecBase>> GetCodecList() Returns Type Description Task < List < ICodecBase >> A list of codecs. IsApplicable() Indicates whether a codec info provider is applicable to the current platform and configuration Declaration bool IsApplicable() Returns Type Description Boolean true if the provider is applicable; otherwise, false ."
  },
  "reference/pluginapi/MediaBrowser.Controller.Collections.CollectionCreatedEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Collections.CollectionCreatedEventArgs.html",
    "title": "Class CollectionCreatedEventArgs",
    "keywords": "Class CollectionCreatedEventArgs Inheritance Object EventArgs CollectionCreatedEventArgs Inherited Members EventArgs.Empty Namespace : MediaBrowser.Controller.Collections Assembly : MediaBrowser.Controller.dll Syntax public sealed class CollectionCreatedEventArgs : EventArgs Properties Collection Gets or sets the collection. Declaration public BoxSet Collection { get; set; } Property Value Type Description BoxSet The collection. Options Gets or sets the options. Declaration public CollectionCreationOptions Options { get; set; } Property Value Type Description CollectionCreationOptions The options."
  },
  "reference/pluginapi/MediaBrowser.Controller.Collections.CollectionCreationOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Collections.CollectionCreationOptions.html",
    "title": "Class CollectionCreationOptions",
    "keywords": "Class CollectionCreationOptions Inheritance Object CollectionCreationOptions Implements IHasProviderIds Namespace : MediaBrowser.Controller.Collections Assembly : MediaBrowser.Controller.dll Syntax public sealed class CollectionCreationOptions : IHasProviderIds Constructors CollectionCreationOptions() Declaration public CollectionCreationOptions() Properties IsLocked Declaration public bool IsLocked { get; set; } Property Value Type Description Boolean ItemIdList Declaration public long[] ItemIdList { get; set; } Property Value Type Description Int64 [] Name Declaration public string Name { get; set; } Property Value Type Description String ParentId Declaration public long ParentId { get; set; } Property Value Type Description Int64 ProviderIds Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary UserIds Declaration public long[] UserIds { get; set; } Property Value Type Description Int64 [] Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Collections.CollectionModifiedEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Collections.CollectionModifiedEventArgs.html",
    "title": "Class CollectionModifiedEventArgs",
    "keywords": "Class CollectionModifiedEventArgs Inheritance Object EventArgs CollectionModifiedEventArgs Inherited Members EventArgs.Empty Namespace : MediaBrowser.Controller.Collections Assembly : MediaBrowser.Controller.dll Syntax public sealed class CollectionModifiedEventArgs : EventArgs Properties Collection Gets or sets the collection. Declaration public BoxSet Collection { get; set; } Property Value Type Description BoxSet The collection. ItemsChanged Gets or sets the items changed. Declaration public IList<long> ItemsChanged { get; set; } Property Value Type Description IList < Int64 > The items changed."
  },
  "reference/pluginapi/MediaBrowser.Controller.Collections.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Collections.html",
    "title": "Namespace MediaBrowser.Controller.Collections",
    "keywords": "Namespace MediaBrowser.Controller.Collections Classes CollectionCreatedEventArgs CollectionCreationOptions CollectionModifiedEventArgs Interfaces ICollectionManager"
  },
  "reference/pluginapi/MediaBrowser.Controller.Collections.ICollectionManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Collections.ICollectionManager.html",
    "title": "Interface ICollectionManager",
    "keywords": "Interface ICollectionManager Namespace : MediaBrowser.Controller.Collections Assembly : MediaBrowser.Controller.dll Syntax public interface ICollectionManager Methods AddToCollection(Int64, Int64[]) Adds to collection. Declaration Task AddToCollection(long collectionId, long[] itemIds) Parameters Type Name Description Int64 collectionId The collection identifier. Int64 [] itemIds The item ids. Returns Type Description Task CreateCollection(CollectionCreationOptions) Creates the collection. Declaration Task<BoxSet> CreateCollection(CollectionCreationOptions options) Parameters Type Name Description CollectionCreationOptions options The options. Returns Type Description Task < BoxSet > RemoveFromCollection(BoxSet, Int64[]) Removes from collection. Declaration void RemoveFromCollection(BoxSet item, long[] itemIds) Parameters Type Name Description BoxSet item Int64 [] itemIds Events CollectionCreated Occurs when [collection created]. Declaration event EventHandler<CollectionCreatedEventArgs> CollectionCreated Event Type Type Description EventHandler < CollectionCreatedEventArgs > ItemsAddedToCollection Occurs when [items added to collection]. Declaration event EventHandler<CollectionModifiedEventArgs> ItemsAddedToCollection Event Type Type Description EventHandler < CollectionModifiedEventArgs > ItemsRemovedFromCollection Occurs when [items removed from collection]. Declaration event EventHandler<CollectionModifiedEventArgs> ItemsRemovedFromCollection Event Type Type Description EventHandler < CollectionModifiedEventArgs >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Configuration.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Configuration.html",
    "title": "Namespace MediaBrowser.Controller.Configuration",
    "keywords": "Namespace MediaBrowser.Controller.Configuration Interfaces IServerConfigurationManager Interface IServerConfigurationManager"
  },
  "reference/pluginapi/MediaBrowser.Controller.Configuration.IServerConfigurationManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Configuration.IServerConfigurationManager.html",
    "title": "Interface IServerConfigurationManager",
    "keywords": "Interface IServerConfigurationManager Interface IServerConfigurationManager Inherited Members IConfigurationManager.NamedConfigurationUpdating IConfigurationManager.ConfigurationUpdated IConfigurationManager.NamedConfigurationUpdated IConfigurationManager.CommonApplicationPaths IConfigurationManager.CommonConfiguration IConfigurationManager.SaveConfiguration() IConfigurationManager.ReplaceConfiguration(BaseApplicationConfiguration) IConfigurationManager.GetConfiguration(String) IConfigurationManager.GetConfigurationType(String) IConfigurationManager.SaveConfiguration(String, Object) IConfigurationManager.AddParts(IEnumerable<IConfigurationFactory>) Namespace : MediaBrowser.Controller.Configuration Assembly : MediaBrowser.Controller.dll Syntax public interface IServerConfigurationManager : IConfigurationManager Properties ApplicationPaths Gets the application paths. Declaration IServerApplicationPaths ApplicationPaths { get; } Property Value Type Description IServerApplicationPaths The application paths. Configuration Gets the configuration. Declaration ServerConfiguration Configuration { get; } Property Value Type Description ServerConfiguration The configuration. Methods SetOptimalValues() Declaration bool SetOptimalValues() Returns Type Description Boolean Extension Methods MetadataConfigurationExtensions.GetMetadataConfiguration(IConfigurationManager)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Connect.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Connect.html",
    "title": "Namespace MediaBrowser.Controller.Connect",
    "keywords": "Namespace MediaBrowser.Controller.Connect Classes UserLinkResult Interfaces IConnectManager"
  },
  "reference/pluginapi/MediaBrowser.Controller.Connect.IConnectManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Connect.IConnectManager.html",
    "title": "Interface IConnectManager",
    "keywords": "Interface IConnectManager Namespace : MediaBrowser.Controller.Connect Assembly : MediaBrowser.Controller.dll Syntax public interface IConnectManager Methods Authenticate(String, String, CancellationToken) Authenticates the specified username. Declaration Task<ConnectAuthenticationResult> Authenticate(string username, string password, CancellationToken cancellationToken) Parameters Type Name Description String username String password CancellationToken cancellationToken Returns Type Description Task < ConnectAuthenticationResult > GetUserFromExchangeToken(String) Declaration User GetUserFromExchangeToken(string token) Parameters Type Name Description String token Returns Type Description User IsAuthorizationTokenValid(String) Determines whether [is authorization token valid] [the specified token]. Declaration bool IsAuthorizationTokenValid(string token) Parameters Type Name Description String token The token. Returns Type Description Boolean true if [is authorization token valid] [the specified token]; otherwise, false . LinkUser(User, String) Links the user. Declaration Task<UserLinkResult> LinkUser(User user, string connectUsername) Parameters Type Name Description User user String connectUsername Returns Type Description Task < UserLinkResult > RemoveConnect(User) Removes the link. Declaration Task RemoveConnect(User user) Parameters Type Name Description User user Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Controller.Connect.UserLinkResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Connect.UserLinkResult.html",
    "title": "Class UserLinkResult",
    "keywords": "Class UserLinkResult Inheritance Object UserLinkResult Namespace : MediaBrowser.Controller.Connect Assembly : MediaBrowser.Controller.dll Syntax public sealed class UserLinkResult Properties GuestDisplayName Declaration public string GuestDisplayName { get; set; } Property Value Type Description String IsNewUserInvitation Declaration public bool IsNewUserInvitation { get; set; } Property Value Type Description Boolean IsPending Declaration public bool IsPending { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Data.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Data.html",
    "title": "Namespace MediaBrowser.Controller.Data",
    "keywords": "Namespace MediaBrowser.Controller.Data Interfaces ILibraryDatabase"
  },
  "reference/pluginapi/MediaBrowser.Controller.Data.ILibraryDatabase.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Data.ILibraryDatabase.html",
    "title": "Interface ILibraryDatabase",
    "keywords": "Interface ILibraryDatabase Namespace : MediaBrowser.Controller.Data Assembly : MediaBrowser.Controller.dll Syntax public interface ILibraryDatabase Methods GetDeleteItemQueries() Declaration string[] GetDeleteItemQueries() Returns Type Description String [] Initialize(ReaderWriterLockSlim, Object) Declaration void Initialize(ReaderWriterLockSlim writeLock, object managedConnection) Parameters Type Name Description ReaderWriterLockSlim writeLock Object managedConnection"
  },
  "reference/pluginapi/MediaBrowser.Controller.Devices.CameraImageUploadInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Devices.CameraImageUploadInfo.html",
    "title": "Class CameraImageUploadInfo",
    "keywords": "Class CameraImageUploadInfo Inheritance Object CameraImageUploadInfo Namespace : MediaBrowser.Controller.Devices Assembly : MediaBrowser.Controller.dll Syntax public sealed class CameraImageUploadInfo Properties Device Declaration public DeviceInfo Device { get; set; } Property Value Type Description DeviceInfo FileInfo Declaration public LocalFileInfo FileInfo { get; set; } Property Value Type Description LocalFileInfo"
  },
  "reference/pluginapi/MediaBrowser.Controller.Devices.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Devices.html",
    "title": "Namespace MediaBrowser.Controller.Devices",
    "keywords": "Namespace MediaBrowser.Controller.Devices Classes CameraImageUploadInfo Interfaces IDeviceManager"
  },
  "reference/pluginapi/MediaBrowser.Controller.Devices.IDeviceManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Devices.IDeviceManager.html",
    "title": "Interface IDeviceManager",
    "keywords": "Interface IDeviceManager Namespace : MediaBrowser.Controller.Devices Assembly : MediaBrowser.Controller.dll Syntax public interface IDeviceManager Methods AcceptCameraUpload(Int64, Stream, LocalFileInfo) Accepts the upload. Declaration Task AcceptCameraUpload(long deviceId, Stream stream, LocalFileInfo file) Parameters Type Name Description Int64 deviceId The device identifier. Stream stream The stream. LocalFileInfo file The file. Returns Type Description Task Task. AddParts(IEnumerable<IDeviceProfileResolver>) Declaration void AddParts(IEnumerable<IDeviceProfileResolver> resolvers) Parameters Type Name Description IEnumerable < IDeviceProfileResolver > resolvers CanAccessDevice(User, String) Declaration bool CanAccessDevice(User user, string reportedDevceId) Parameters Type Name Description User user String reportedDevceId Returns Type Description Boolean GetCameraUploadHistory(Int64) Gets the upload history. Declaration ContentUploadHistory GetCameraUploadHistory(long deviceId) Parameters Type Name Description Int64 deviceId The device identifier. Returns Type Description ContentUploadHistory ContentUploadHistory. GetCapabilities(Int64) Gets the capabilities. Declaration ClientCapabilities GetCapabilities(long deviceId) Parameters Type Name Description Int64 deviceId Returns Type Description ClientCapabilities ClientCapabilities. GetDevice(Int64) Declaration DeviceInfo GetDevice(long id) Parameters Type Name Description Int64 id Returns Type Description DeviceInfo GetDeviceOptions(Int64) Declaration DeviceOptions GetDeviceOptions(long deviceId) Parameters Type Name Description Int64 deviceId Returns Type Description DeviceOptions GetDevices(DeviceQuery) Gets the devices. Declaration QueryResult<DeviceInfo> GetDevices(DeviceQuery query) Parameters Type Name Description DeviceQuery query The query. Returns Type Description QueryResult < DeviceInfo > GetDeviceStreamingProfile(String) Declaration DeviceProfile GetDeviceStreamingProfile(string profileId) Parameters Type Name Description String profileId Returns Type Description DeviceProfile GetInternalId(String) Declaration long GetInternalId(string reportedDeviceId) Parameters Type Name Description String reportedDeviceId Returns Type Description Int64 GetUserHistory(String) Declaration long[] GetUserHistory(string reportedDevceId) Parameters Type Name Description String reportedDevceId Returns Type Description Int64 [] SaveCapabilities(Int64, ClientCapabilities) Saves the capabilities. Declaration void SaveCapabilities(long deviceId, ClientCapabilities capabilities) Parameters Type Name Description Int64 deviceId ClientCapabilities capabilities UpdateDeviceOptions(Int64, DeviceOptions) Declaration void UpdateDeviceOptions(long deviceId, DeviceOptions options) Parameters Type Name Description Int64 deviceId DeviceOptions options Events CameraImageUploaded Occurs when [camera image uploaded]. Declaration event EventHandler<GenericEventArgs<CameraImageUploadInfo>> CameraImageUploaded Event Type Type Description EventHandler < GenericEventArgs < CameraImageUploadInfo >> DeviceOptionsUpdated Declaration event EventHandler<GenericEventArgs<Tuple<long, DeviceOptions>>> DeviceOptionsUpdated Event Type Type Description EventHandler < GenericEventArgs < Tuple < Int64 , DeviceOptions >>>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Drawing.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Drawing.html",
    "title": "Namespace MediaBrowser.Controller.Drawing",
    "keywords": "Namespace MediaBrowser.Controller.Drawing Classes ImageCollageOptions ImageProcessingOptions ImageProcessorExtensions ImageStream Interfaces IImageEncoder IImageProcessor Interface IImageProcessor"
  },
  "reference/pluginapi/MediaBrowser.Controller.Drawing.IImageEncoder.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Drawing.IImageEncoder.html",
    "title": "Interface IImageEncoder",
    "keywords": "Interface IImageEncoder Namespace : MediaBrowser.Controller.Drawing Assembly : MediaBrowser.Controller.dll Syntax public interface IImageEncoder Properties Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. SupportedInputFormats Gets the supported input formats. Declaration string[] SupportedInputFormats { get; } Property Value Type Description String [] The supported input formats. SupportedOutputFormats Gets the supported output formats. Declaration ImageFormat[] SupportedOutputFormats { get; } Property Value Type Description ImageFormat [] The supported output formats. SupportsImageCollageCreation Gets a value indicating whether [supports image collage creation]. Declaration bool SupportsImageCollageCreation { get; } Property Value Type Description Boolean true if [supports image collage creation]; otherwise, false . SupportsImageEncoding Gets a value indicating whether [supports image encoding]. Declaration bool SupportsImageEncoding { get; } Property Value Type Description Boolean true if [supports image encoding]; otherwise, false . Methods CreateImageCollage(ImageCollageOptions) Creates the image collage. Declaration void CreateImageCollage(ImageCollageOptions options) Parameters Type Name Description ImageCollageOptions options The options. EncodeImage(String, String, Boolean, Nullable<ImageOrientation>, Int32, ImageProcessingOptions, ImageFormat) Encodes the image. Declaration string EncodeImage(string inputPath, string outputPath, bool autoOrient, ImageOrientation? orientation, int quality, ImageProcessingOptions options, ImageFormat outputFormat) Parameters Type Name Description String inputPath String outputPath Boolean autoOrient Nullable < ImageOrientation > orientation Int32 quality ImageProcessingOptions options ImageFormat outputFormat Returns Type Description String GetImageSize(String) Declaration (ImageSize, ImageOrientation? ) GetImageSize(string path) Parameters Type Name Description String path Returns Type Description (T1, T2) < ImageSize , Nullable < ImageOrientation >>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Drawing.IImageProcessor.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Drawing.IImageProcessor.html",
    "title": "Interface IImageProcessor",
    "keywords": "Interface IImageProcessor Interface IImageProcessor Namespace : MediaBrowser.Controller.Drawing Assembly : MediaBrowser.Controller.dll Syntax public interface IImageProcessor Properties ImageEncoder Declaration IImageEncoder ImageEncoder { get; set; } Property Value Type Description IImageEncoder ImageEnhancers Gets the image enhancers. Declaration IImageEnhancer[] ImageEnhancers { get; } Property Value Type Description IImageEnhancer [] The image enhancers. SupportedFileExtensions Gets the supported input formats. Declaration ReadOnlyMemory<char>[] SupportedFileExtensions { get; } Property Value Type Description ReadOnlyMemory < Char >[] The supported input formats. SupportsImageCollageCreation Gets a value indicating whether [supports image collage creation]. Declaration bool SupportsImageCollageCreation { get; } Property Value Type Description Boolean true if [supports image collage creation]; otherwise, false . Methods AddParts(IEnumerable<IImageEnhancer>) Adds the parts. Declaration void AddParts(IEnumerable<IImageEnhancer> enhancers) Parameters Type Name Description IEnumerable < IImageEnhancer > enhancers The enhancers. CreateImageCollage(ImageCollageOptions, CancellationToken) Creates the image collage. Declaration Task CreateImageCollage(ImageCollageOptions options, CancellationToken cancellationToken) Parameters Type Name Description ImageCollageOptions options The options. CancellationToken cancellationToken The cancellation token. Returns Type Description Task GetEnhancedImage(BaseItem, ImageType, Int32, CancellationToken) Gets the enhanced image. Declaration Task<string> GetEnhancedImage(BaseItem item, ImageType imageType, int imageIndex, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item The item. ImageType imageType Type of the image. Int32 imageIndex Index of the image. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > Task{System.String}. GetImageCacheTag(BaseItem, ItemImageInfo) Gets the image cache tag. Declaration string GetImageCacheTag(BaseItem item, ItemImageInfo image) Parameters Type Name Description BaseItem item The item. ItemImageInfo image The image. Returns Type Description String GetImageCacheTag(BaseItem, ItemImageInfo, IImageEnhancer[]) Gets the image cache tag. Declaration string GetImageCacheTag(BaseItem item, ItemImageInfo image, IImageEnhancer[] imageEnhancers) Parameters Type Name Description BaseItem item The item. ItemImageInfo image The image. IImageEnhancer [] imageEnhancers The image enhancers. Returns Type Description String GetImageCacheTag(ItemImageInfo) Declaration string GetImageCacheTag(ItemImageInfo image) Parameters Type Name Description ItemImageInfo image Returns Type Description String GetImageCacheTag(Int64, ChapterInfo) Declaration string GetImageCacheTag(long itemId, ChapterInfo chapter) Parameters Type Name Description Int64 itemId ChapterInfo chapter Returns Type Description String GetImageSize(BaseItem, ItemImageInfo) Gets the size of the image. Declaration (ImageSize, ImageOrientation? ) GetImageSize(BaseItem item, ItemImageInfo info) Parameters Type Name Description BaseItem item The item. ItemImageInfo info The information. Returns Type Description (T1, T2) < ImageSize , Nullable < ImageOrientation >> ImageSize. GetImageSize(BaseItem, ItemImageInfo, Boolean, Boolean) Declaration (ImageSize, ImageOrientation? ) GetImageSize(BaseItem item, ItemImageInfo info, bool allowSlowMethods, bool updateItem) Parameters Type Name Description BaseItem item ItemImageInfo info Boolean allowSlowMethods Boolean updateItem Returns Type Description (T1, T2) < ImageSize , Nullable < ImageOrientation >> GetImageSize(String) Declaration ImageSize GetImageSize(string path) Parameters Type Name Description String path Returns Type Description ImageSize GetSupportedEnhancers(BaseItem, ImageType) Gets the supported enhancers. Declaration IImageEnhancer[] GetSupportedEnhancers(BaseItem item, ImageType imageType) Parameters Type Name Description BaseItem item The item. ImageType imageType Type of the image. Returns Type Description IImageEnhancer [] GetSupportedImageOutputFormats() Gets the supported image output formats. Declaration ImageFormat[] GetSupportedImageOutputFormats() Returns Type Description ImageFormat [] ImageOutputFormat[]. OnImageSizeObtained(ImageProcessingOptions, ImageSize, Nullable<ImageOrientation>) Declaration void OnImageSizeObtained(ImageProcessingOptions options, ImageSize size, ImageOrientation? orientation) Parameters Type Name Description ImageProcessingOptions options ImageSize size Nullable < ImageOrientation > orientation ProcessImage(ImageProcessingOptions, Stream, CancellationToken) Processes the image. Declaration Task ProcessImage(ImageProcessingOptions options, Stream toStream, CancellationToken cancellationToken) Parameters Type Name Description ImageProcessingOptions options Stream toStream CancellationToken cancellationToken Returns Type Description Task ProcessImage(ImageProcessingOptions, CancellationToken) Processes the image. Declaration Task<Tuple<string, string, DateTimeOffset>> ProcessImage(ImageProcessingOptions options, CancellationToken cancellationToken) Parameters Type Name Description ImageProcessingOptions options The options. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Tuple < String , String , DateTimeOffset >> Task. SupportsTransparency(ReadOnlySpan<Char>) Declaration bool SupportsTransparency(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path Returns Type Description Boolean Extension Methods ImageProcessorExtensions.GetImageCacheTag(IImageProcessor, BaseItem, ImageType) ImageProcessorExtensions.GetImageCacheTag(IImageProcessor, BaseItem, ImageType, Int32)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Drawing.ImageCollageOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Drawing.ImageCollageOptions.html",
    "title": "Class ImageCollageOptions",
    "keywords": "Class ImageCollageOptions Inheritance Object ImageCollageOptions Namespace : MediaBrowser.Controller.Drawing Assembly : MediaBrowser.Controller.dll Syntax public sealed class ImageCollageOptions Properties Height Gets or sets the height. Declaration public int Height { get; set; } Property Value Type Description Int32 The height. Images Gets or sets the input paths. Declaration public ItemImageInfo[] Images { get; set; } Property Value Type Description ItemImageInfo [] The input paths. OutputPath Gets or sets the output path. Declaration public string OutputPath { get; set; } Property Value Type Description String The output path. Width Gets or sets the width. Declaration public int Width { get; set; } Property Value Type Description Int32 The width."
  },
  "reference/pluginapi/MediaBrowser.Controller.Drawing.ImageProcessingOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Drawing.ImageProcessingOptions.html",
    "title": "Class ImageProcessingOptions",
    "keywords": "Class ImageProcessingOptions Inheritance Object ImageProcessingOptions Namespace : MediaBrowser.Controller.Drawing Assembly : MediaBrowser.Controller.dll Syntax public sealed class ImageProcessingOptions Properties AddPlayedIndicator Declaration public bool AddPlayedIndicator { get; set; } Property Value Type Description Boolean BackgroundColor Declaration public string BackgroundColor { get; set; } Property Value Type Description String Blur Declaration public int Blur { get; set; } Property Value Type Description Int32 CropWhiteSpace Declaration public bool CropWhiteSpace { get; set; } Property Value Type Description Boolean Enhancers Declaration public IImageEnhancer[] Enhancers { get; set; } Property Value Type Description IImageEnhancer [] ForegroundLayer Declaration public string ForegroundLayer { get; set; } Property Value Type Description String Height Declaration public int Height { get; set; } Property Value Type Description Int32 Image Declaration public ItemImageInfo Image { get; set; } Property Value Type Description ItemImageInfo ImageIndex Declaration public int ImageIndex { get; set; } Property Value Type Description Int32 Item Declaration public BaseItem Item { get; set; } Property Value Type Description BaseItem ItemId Declaration public long ItemId { get; set; } Property Value Type Description Int64 MaxHeight Declaration public int MaxHeight { get; set; } Property Value Type Description Int32 MaxWidth Declaration public int MaxWidth { get; set; } Property Value Type Description Int32 PercentPlayed Declaration public double PercentPlayed { get; set; } Property Value Type Description Double Quality Declaration public int Quality { get; set; } Property Value Type Description Int32 RequiresAutoOrientation Declaration public bool RequiresAutoOrientation { get; set; } Property Value Type Description Boolean SupportedOutputFormats Declaration public ImageFormat[] SupportedOutputFormats { get; set; } Property Value Type Description ImageFormat [] UnplayedCount Declaration public int UnplayedCount { get; set; } Property Value Type Description Int32 Width Declaration public int Width { get; set; } Property Value Type Description Int32 Methods HasDefaultOptions(String, Nullable<ImageSize>) Declaration public bool HasDefaultOptions(string originalImagePath, ImageSize? size) Parameters Type Name Description String originalImagePath Nullable < ImageSize > size Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Drawing.ImageProcessorExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Drawing.ImageProcessorExtensions.html",
    "title": "Class ImageProcessorExtensions",
    "keywords": "Class ImageProcessorExtensions Inheritance Object ImageProcessorExtensions Namespace : MediaBrowser.Controller.Drawing Assembly : MediaBrowser.Controller.dll Syntax public static class ImageProcessorExtensions Methods GetImageCacheTag(IImageProcessor, BaseItem, ImageType) Declaration public static string GetImageCacheTag(this IImageProcessor processor, BaseItem item, ImageType imageType) Parameters Type Name Description IImageProcessor processor BaseItem item ImageType imageType Returns Type Description String GetImageCacheTag(IImageProcessor, BaseItem, ImageType, Int32) Declaration public static string GetImageCacheTag(this IImageProcessor processor, BaseItem item, ImageType imageType, int imageIndex) Parameters Type Name Description IImageProcessor processor BaseItem item ImageType imageType Int32 imageIndex Returns Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Drawing.ImageStream.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Drawing.ImageStream.html",
    "title": "Class ImageStream",
    "keywords": "Class ImageStream Inheritance Object ImageStream Implements IDisposable Namespace : MediaBrowser.Controller.Drawing Assembly : MediaBrowser.Controller.dll Syntax public sealed class ImageStream : IDisposable Properties Format Gets or sets the format. Declaration public ImageFormat Format { get; set; } Property Value Type Description ImageFormat The format. Stream Gets or sets the stream. Declaration public Stream Stream { get; set; } Property Value Type Description Stream The stream. Methods Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "reference/pluginapi/MediaBrowser.Controller.Dto.DtoOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Dto.DtoOptions.html",
    "title": "Class DtoOptions",
    "keywords": "Class DtoOptions Inheritance Object DtoOptions Namespace : MediaBrowser.Controller.Dto Assembly : MediaBrowser.Controller.dll Syntax public sealed class DtoOptions Constructors DtoOptions() Declaration public DtoOptions() DtoOptions(ItemFields[]) Declaration public DtoOptions(ItemFields[] fields) Parameters Type Name Description ItemFields [] fields DtoOptions(Boolean) Declaration public DtoOptions(bool allFields) Parameters Type Name Description Boolean allFields Properties AddCurrentProgram Declaration public bool AddCurrentProgram { get; set; } Property Value Type Description Boolean AddProgramRecordingInfo Declaration public bool AddProgramRecordingInfo { get; set; } Property Value Type Description Boolean AutoExcludeExternalId Declaration public bool AutoExcludeExternalId { get; set; } Property Value Type Description Boolean EnableImages Declaration public bool EnableImages { get; set; } Property Value Type Description Boolean EnableUserData Declaration public bool EnableUserData { get; set; } Property Value Type Description Boolean Fields Declaration public ItemFields[] Fields { get; set; } Property Value Type Description ItemFields [] GroupProgramsBySeries Declaration public bool GroupProgramsBySeries { get; set; } Property Value Type Description Boolean ImageTypeLimit Declaration public int ImageTypeLimit { get; set; } Property Value Type Description Int32 ImageTypes Declaration public ImageType[] ImageTypes { get; set; } Property Value Type Description ImageType [] Methods ContainsField(ItemFields) Declaration public bool ContainsField(ItemFields field) Parameters Type Name Description ItemFields field Returns Type Description Boolean GetImageLimit(ImageType) Declaration public int GetImageLimit(ImageType type) Parameters Type Name Description ImageType type Returns Type Description Int32"
  },
  "reference/pluginapi/MediaBrowser.Controller.Dto.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Dto.html",
    "title": "Namespace MediaBrowser.Controller.Dto",
    "keywords": "Namespace MediaBrowser.Controller.Dto Classes DtoOptions Interfaces IDtoService Interface IDtoService"
  },
  "reference/pluginapi/MediaBrowser.Controller.Dto.IDtoService.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Dto.IDtoService.html",
    "title": "Interface IDtoService",
    "keywords": "Interface IDtoService Interface IDtoService Namespace : MediaBrowser.Controller.Dto Assembly : MediaBrowser.Controller.dll Syntax public interface IDtoService Methods AttachPrimaryImageAspectRatio(IItemDto, BaseItem) Attaches the primary image aspect ratio. Declaration void AttachPrimaryImageAspectRatio(IItemDto dto, BaseItem item) Parameters Type Name Description IItemDto dto The dto. BaseItem item The item. GetBaseItemDto(BaseItem, DtoOptions, User) Gets the base item dto. Declaration BaseItemDto GetBaseItemDto(BaseItem item, DtoOptions options, User user = null) Parameters Type Name Description BaseItem item DtoOptions options User user Returns Type Description BaseItemDto GetBaseItemDtos(BaseItem[], DtoOptions, User) Declaration BaseItemDto[] GetBaseItemDtos(BaseItem[] items, DtoOptions options, User user = null) Parameters Type Name Description BaseItem [] items DtoOptions options User user Returns Type Description BaseItemDto [] GetItemByNameDto(BaseItem, DtoOptions, User, ItemCounts) Gets the item by name dto. Declaration BaseItemDto GetItemByNameDto(BaseItem item, DtoOptions options, User user, ItemCounts counts) Parameters Type Name Description BaseItem item DtoOptions options User user ItemCounts counts Returns Type Description BaseItemDto GetPrimaryImageAspectRatio(BaseItem) Gets the primary image aspect ratio. Declaration double? GetPrimaryImageAspectRatio(BaseItem item) Parameters Type Name Description BaseItem item The item. Returns Type Description Nullable < Double > System.Nullable<System.Double>."
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.AggregateFolder.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.AggregateFolder.html",
    "title": "Class AggregateFolder",
    "keywords": "Class AggregateFolder Specialized folder that can have items added to it's children by external entities. Used for our RootFolder so plug-ins can add items. Inheritance Object BaseItem Folder AggregateFolder Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > Inherited Members Folder.UserViewManager Folder.IsPreSorted Folder.IsResolvedToFolder Folder.IsTopParent Folder.SupportsInheritedParentImages Folder.IsFolder Folder.IsDisplayedAsFolder Folder.SupportsCumulativeRunTimeTicks Folder.SupportsExternalTransfer Folder.FileNameWithoutExtension Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetChildCount(User) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetItemIdsInternal(InternalItemsQuery) Folder.GetItemsInternal(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsPeople BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.GetDefaultPrimaryImageAspectRatio() BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public class AggregateFolder : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo> Properties IsPhysicalRoot Declaration [IgnoreDataMember] public override bool IsPhysicalRoot { get; } Property Value Type Description Boolean Overrides Folder.IsPhysicalRoot SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsCollections Declaration [IgnoreDataMember] public override bool SupportsCollections { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsCollections SupportsTags Declaration [IgnoreDataMember] public override bool SupportsTags { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsTags SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsThemeMedia SupportsUserData Declaration [IgnoreDataMember] public override bool SupportsUserData { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsUserData Methods CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides Folder.CanDelete(Folder[]) GetFileSystemChildren(IDirectoryService) Declaration protected override FileSystemMetadata[] GetFileSystemChildren(IDirectoryService directoryService) Parameters Type Name Description IDirectoryService directoryService Returns Type Description FileSystemMetadata [] Overrides BaseItem.GetFileSystemChildren(IDirectoryService) IsVisible(User) Declaration public override bool IsVisible(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides Folder.IsVisible(User) IsVisibleStandalone(User) Declaration public override bool IsVisibleStandalone(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides BaseItem.IsVisibleStandalone(User) IsVisibleViaTags(User) Declaration protected override bool IsVisibleViaTags(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides Folder.IsVisibleViaTags(User) SortChildrenForValidation(BaseItem[]) Declaration protected override BaseItem[] SortChildrenForValidation(BaseItem[] children) Parameters Type Name Description BaseItem [] children Returns Type Description BaseItem [] Overrides Folder.SortChildrenForValidation(BaseItem[]) SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.Audio.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.Audio.html",
    "title": "Class Audio",
    "keywords": "Class Audio Class Audio Inheritance Object BaseItem Audio Implements IHasLookupInfo < ItemLookupInfo > IHasAlbumArtist IHasProviderIds IHasAlbum IHasMusicAlbum IHasArtist IHasMusicGenres IHasLookupInfo < SongInfo > IHasMediaSources Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(Folder[]) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities.Audio Assembly : MediaBrowser.Controller.dll Syntax public class Audio : BaseItem, IHasLookupInfo<ItemLookupInfo>, IHasAlbumArtist, IHasProviderIds, IHasAlbum, IHasMusicAlbum, IHasArtist, IHasMusicGenres, IHasLookupInfo<SongInfo>, IHasMediaSources Constructors Audio() Declaration public Audio() Properties AlbumArtistItems Gets or sets the artists. Declaration [IgnoreDataMember] public LinkedItemInfo[] AlbumArtistItems { get; set; } Property Value Type Description LinkedItemInfo [] The artists. AlbumArtists Declaration [IgnoreDataMember] public string[] AlbumArtists { get; set; } Property Value Type Description String [] ArtistItems Gets or sets the artists. Declaration [IgnoreDataMember] public LinkedItemInfo[] ArtistItems { get; set; } Property Value Type Description LinkedItemInfo [] The artists. Artists Declaration [IgnoreDataMember] public string[] Artists { get; set; } Property Value Type Description String [] Composers Gets or sets the composers. Declaration [IgnoreDataMember] public LinkedItemInfo[] Composers { get; set; } Property Value Type Description LinkedItemInfo [] The composers. ForceDefaultAspectRatio Declaration [IgnoreDataMember] public override bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean Overrides BaseItem.ForceDefaultAspectRatio ImageDisplayParentId Declaration [IgnoreDataMember] public override long ImageDisplayParentId { get; } Property Value Type Description Int64 Overrides BaseItem.ImageDisplayParentId LatestItemsContainerId Declaration [IgnoreDataMember] public override long LatestItemsContainerId { get; } Property Value Type Description Int64 Overrides BaseItem.LatestItemsContainerId MediaType Gets the type of the media. Declaration [IgnoreDataMember] public override string MediaType { get; } Property Value Type Description String The type of the media. Overrides BaseItem.MediaType SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExternalTransfer SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsInheritedParentImages SupportsOwnedItems Declaration [IgnoreDataMember] protected override bool SupportsOwnedItems { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsOwnedItems SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios Methods CanDownload() Declaration public override bool CanDownload() Returns Type Description Boolean Overrides BaseItem.CanDownload() GetAlbumArtistFolder(LibraryOptions) Declaration public string GetAlbumArtistFolder(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String GetAlbumFolder(LibraryOptions) Declaration public string GetAlbumFolder(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String GetAllItemsForMediaSources(User, Boolean) Declaration protected override List<Tuple<BaseItem, MediaSourceType>> GetAllItemsForMediaSources(User user, bool enableAlternateMediaSources) Parameters Type Name Description User user Boolean enableAlternateMediaSources Returns Type Description List < Tuple < BaseItem , MediaSourceType >> Overrides BaseItem.GetAllItemsForMediaSources(User, Boolean) GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetLookupInfo(LibraryOptions) Declaration public SongInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description SongInfo GetMediaStreams(MediaStreamType) Declaration public List<MediaStream> GetMediaStreams(MediaStreamType type) Parameters Type Name Description MediaStreamType type Returns Type Description List < MediaStream > GetSupportsPositionTicksResume(LibraryOptions) Declaration public override bool GetSupportsPositionTicksResume(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides BaseItem.GetSupportsPositionTicksResume(LibraryOptions) GetUserDataKey() Declaration public override string GetUserDataKey() Returns Type Description String Overrides BaseItem.GetUserDataKey() SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides BaseItem.SupportsPlayedStatus(LibraryOptions) Implements IHasLookupInfo<TLookupInfoType> IHasAlbumArtist IHasProviderIds IHasAlbum IHasMusicAlbum IHasArtist IHasMusicGenres IHasLookupInfo<TLookupInfoType> IHasMediaSources Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String) HasArtistExtensions.SetArtists(IHasArtist, IEnumerable<String>) HasArtistExtensions.AddArtist(IHasArtist, String) HasArtistExtensions.SetComposers(IHasArtist, IEnumerable<String>) HasArtistExtensions.SetAlbumArtists(IHasAlbumArtist, IEnumerable<String>)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.HasArtistExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.HasArtistExtensions.html",
    "title": "Class HasArtistExtensions",
    "keywords": "Class HasArtistExtensions Inheritance Object HasArtistExtensions Namespace : MediaBrowser.Controller.Entities.Audio Assembly : MediaBrowser.Controller.dll Syntax public static class HasArtistExtensions Methods AddArtist(IHasArtist, String) Declaration public static void AddArtist(this IHasArtist item, string name) Parameters Type Name Description IHasArtist item String name SetAlbumArtists(IHasAlbumArtist, IEnumerable<String>) Declaration public static void SetAlbumArtists(this IHasAlbumArtist item, IEnumerable<string> names) Parameters Type Name Description IHasAlbumArtist item IEnumerable < String > names SetArtists(IHasArtist, IEnumerable<String>) Declaration public static void SetArtists(this IHasArtist item, IEnumerable<string> names) Parameters Type Name Description IHasArtist item IEnumerable < String > names SetComposers(IHasArtist, IEnumerable<String>) Declaration public static void SetComposers(this IHasArtist item, IEnumerable<string> names) Parameters Type Name Description IHasArtist item IEnumerable < String > names"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.html",
    "title": "Namespace MediaBrowser.Controller.Entities.Audio",
    "keywords": "Namespace MediaBrowser.Controller.Entities.Audio Classes Audio Class Audio HasArtistExtensions MusicAlbum Class MusicAlbum MusicArtist Class MusicArtist MusicGenre Class MusicGenre Interfaces IHasAlbum IHasAlbumArtist IHasArtist IHasMusicAlbum IHasMusicGenres"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.IHasAlbum.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.IHasAlbum.html",
    "title": "Interface IHasAlbum",
    "keywords": "Interface IHasAlbum Namespace : MediaBrowser.Controller.Entities.Audio Assembly : MediaBrowser.Controller.dll Syntax public interface IHasAlbum"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.IHasAlbumArtist.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.IHasAlbumArtist.html",
    "title": "Interface IHasAlbumArtist",
    "keywords": "Interface IHasAlbumArtist Inherited Members IHasProviderIds.ProviderIds Namespace : MediaBrowser.Controller.Entities.Audio Assembly : MediaBrowser.Controller.dll Syntax public interface IHasAlbumArtist : IHasProviderIds Properties AlbumArtistItems Declaration LinkedItemInfo[] AlbumArtistItems { get; set; } Property Value Type Description LinkedItemInfo [] AlbumArtists Declaration string[] AlbumArtists { get; set; } Property Value Type Description String [] Extension Methods HasArtistExtensions.SetAlbumArtists(IHasAlbumArtist, IEnumerable<String>)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.IHasArtist.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.IHasArtist.html",
    "title": "Interface IHasArtist",
    "keywords": "Interface IHasArtist Namespace : MediaBrowser.Controller.Entities.Audio Assembly : MediaBrowser.Controller.dll Syntax public interface IHasArtist Properties ArtistItems Declaration LinkedItemInfo[] ArtistItems { get; set; } Property Value Type Description LinkedItemInfo [] Artists Declaration string[] Artists { get; set; } Property Value Type Description String [] Composers Declaration LinkedItemInfo[] Composers { get; set; } Property Value Type Description LinkedItemInfo [] Extension Methods HasArtistExtensions.SetArtists(IHasArtist, IEnumerable<String>) HasArtistExtensions.AddArtist(IHasArtist, String) HasArtistExtensions.SetComposers(IHasArtist, IEnumerable<String>)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.IHasMusicAlbum.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.IHasMusicAlbum.html",
    "title": "Interface IHasMusicAlbum",
    "keywords": "Interface IHasMusicAlbum Namespace : MediaBrowser.Controller.Entities.Audio Assembly : MediaBrowser.Controller.dll Syntax public interface IHasMusicAlbum Properties Album Declaration string Album { get; } Property Value Type Description String AlbumArtistItems Declaration LinkedItemInfo[] AlbumArtistItems { get; } Property Value Type Description LinkedItemInfo []"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.IHasMusicGenres.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.IHasMusicGenres.html",
    "title": "Interface IHasMusicGenres",
    "keywords": "Interface IHasMusicGenres Namespace : MediaBrowser.Controller.Entities.Audio Assembly : MediaBrowser.Controller.dll Syntax public interface IHasMusicGenres Properties GenreItems Declaration LinkedItemInfo[] GenreItems { get; } Property Value Type Description LinkedItemInfo []"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.MusicAlbum.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.MusicAlbum.html",
    "title": "Class MusicAlbum",
    "keywords": "Class MusicAlbum Class MusicAlbum Inheritance Object BaseItem Folder MusicAlbum Implements IHasLookupInfo < ItemLookupInfo > IItemByName IHasAlbumArtist IHasProviderIds IHasArtist IHasMusicGenres IHasLookupInfo < AlbumInfo > Inherited Members Folder.UserViewManager Folder.IsPhysicalRoot Folder.IsResolvedToFolder Folder.IsTopParent Folder.SupportsExternalTransfer Folder.FileNameWithoutExtension Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.IsVisibleViaTags(User) Folder.IsVisible(User) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.SortChildrenForValidation(BaseItem[]) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) Namespace : MediaBrowser.Controller.Entities.Audio Assembly : MediaBrowser.Controller.dll Syntax public class MusicAlbum : Folder, IHasLookupInfo<ItemLookupInfo>, IItemByName, IHasAlbumArtist, IHasProviderIds, IHasArtist, IHasMusicGenres, IHasLookupInfo<AlbumInfo> Constructors MusicAlbum() Declaration public MusicAlbum() Properties AlbumArtist Declaration [IgnoreDataMember] public string AlbumArtist { get; } Property Value Type Description String AlbumArtistItems Gets or sets the artists. Declaration [IgnoreDataMember] public LinkedItemInfo[] AlbumArtistItems { get; set; } Property Value Type Description LinkedItemInfo [] The artists. AlbumArtists Declaration [IgnoreDataMember] public string[] AlbumArtists { get; set; } Property Value Type Description String [] ArtistItems Gets or sets the artists. Declaration [IgnoreDataMember] public LinkedItemInfo[] ArtistItems { get; set; } Property Value Type Description LinkedItemInfo [] The artists. Artists Declaration [IgnoreDataMember] public string[] Artists { get; set; } Property Value Type Description String [] Composers Gets or sets the composers. Declaration [IgnoreDataMember] public LinkedItemInfo[] Composers { get; set; } Property Value Type Description LinkedItemInfo [] The composers. ForceDefaultAspectRatio Declaration [IgnoreDataMember] public override bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean Overrides BaseItem.ForceDefaultAspectRatio IsDisplayedAsFolder Declaration [IgnoreDataMember] public override bool IsDisplayedAsFolder { get; } Property Value Type Description Boolean Overrides Folder.IsDisplayedAsFolder IsFolder Declaration [IgnoreDataMember] public override bool IsFolder { get; } Property Value Type Description Boolean Overrides Folder.IsFolder IsPreSorted Declaration [IgnoreDataMember] public override bool IsPreSorted { get; } Property Value Type Description Boolean Overrides Folder.IsPreSorted MarkDirectlyAsPlayed Declaration [IgnoreDataMember] protected override bool MarkDirectlyAsPlayed { get; } Property Value Type Description Boolean Overrides Folder.MarkDirectlyAsPlayed SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsCumulativeRunTimeTicks Declaration [IgnoreDataMember] public override bool SupportsCumulativeRunTimeTicks { get; } Property Value Type Description Boolean Overrides Folder.SupportsCumulativeRunTimeTicks SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios Methods AllowEditingField(MetadataFields) Declaration public override bool AllowEditingField(MetadataFields field) Parameters Type Name Description MetadataFields field Returns Type Description Boolean Overrides BaseItem.AllowEditingField(MetadataFields) CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides Folder.CanDelete(Folder[]) FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) Declaration protected override void FillPlayedStatus(UserItemDataDto dto, int? recursiveItemCount, User user, DtoOptions options, LibraryOptions libraryOptions) Parameters Type Name Description UserItemDataDto dto Nullable < Int32 > recursiveItemCount User user DtoOptions options LibraryOptions libraryOptions Overrides Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) GetAlbumFolderFromMediaPath(String) Declaration public static string GetAlbumFolderFromMediaPath(string mediaPath) Parameters Type Name Description String mediaPath Returns Type Description String GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetBlockUnratedValue(UserPolicy) Declaration protected override bool GetBlockUnratedValue(UserPolicy config) Parameters Type Name Description UserPolicy config Returns Type Description Boolean Overrides BaseItem.GetBlockUnratedValue(UserPolicy) GetChildCount(User) Declaration public override int GetChildCount(User user) Parameters Type Name Description User user Returns Type Description Int32 Overrides Folder.GetChildCount(User) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetDeletePaths(Boolean) Declaration public override List<FileSystemMetadata> GetDeletePaths(bool mediaFilesOnly) Parameters Type Name Description Boolean mediaFilesOnly Returns Type Description List < FileSystemMetadata > Overrides BaseItem.GetDeletePaths(Boolean) GetInternalAncestorIds() Declaration public override IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetInternalAncestorIds() GetInternalMetadataPath(String) Declaration protected override string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String Overrides BaseItem.GetInternalMetadataPath(String) GetItemIdsInternal(InternalItemsQuery) Declaration protected override long[] GetItemIdsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] Overrides Folder.GetItemIdsInternal(InternalItemsQuery) GetItemsInternal(InternalItemsQuery) Declaration protected override QueryResult<BaseItem> GetItemsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Overrides Folder.GetItemsInternal(InternalItemsQuery) GetLookupInfo(LibraryOptions) Declaration public AlbumInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description AlbumInfo GetMediaContainingFolderPath(LibraryOptions) Declaration public override string GetMediaContainingFolderPath(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.GetMediaContainingFolderPath(LibraryOptions) GetSupportsPositionTicksResume(LibraryOptions) Declaration public override bool GetSupportsPositionTicksResume(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides BaseItem.GetSupportsPositionTicksResume(LibraryOptions) GetTaggedItems(InternalItemsQuery) Declaration public long[] GetTaggedItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetTaggedItemsResult(InternalItemsQuery) Declaration public QueryResult<BaseItem> GetTaggedItemsResult(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > GetTrackIds(InternalItemsQuery) Declaration public long[] GetTrackIds(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetTracks(InternalItemsQuery) Declaration public QueryResult<BaseItem> GetTracks(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > GetUserDataKey() Declaration public override string GetUserDataKey() Returns Type Description String Overrides BaseItem.GetUserDataKey() SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Declaration protected override Task ValidateChildrenInternal(IProgress<double> progress, CancellationToken cancellationToken, bool recursive, bool refreshChildMetadata, MetadataRefreshOptions refreshOptions, IDirectoryService directoryService) Parameters Type Name Description IProgress < Double > progress CancellationToken cancellationToken Boolean recursive Boolean refreshChildMetadata MetadataRefreshOptions refreshOptions IDirectoryService directoryService Returns Type Description Task Overrides Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Implements IHasLookupInfo<TLookupInfoType> IItemByName IHasAlbumArtist IHasProviderIds IHasArtist IHasMusicGenres IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String) HasArtistExtensions.SetArtists(IHasArtist, IEnumerable<String>) HasArtistExtensions.AddArtist(IHasArtist, String) HasArtistExtensions.SetComposers(IHasArtist, IEnumerable<String>) HasArtistExtensions.SetAlbumArtists(IHasAlbumArtist, IEnumerable<String>)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.MusicArtist.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.MusicArtist.html",
    "title": "Class MusicArtist",
    "keywords": "Class MusicArtist Class MusicArtist Inheritance Object BaseItem Folder MusicArtist Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IItemByName IHasMusicGenres IHasLookupInfo < ArtistInfo > Inherited Members Folder.UserViewManager Folder.IsPreSorted Folder.IsPhysicalRoot Folder.IsResolvedToFolder Folder.IsTopParent Folder.FileNameWithoutExtension Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.IsVisibleViaTags(User) Folder.IsVisible(User) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.SortChildrenForValidation(BaseItem[]) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsStudios BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) Namespace : MediaBrowser.Controller.Entities.Audio Assembly : MediaBrowser.Controller.dll Syntax public sealed class MusicArtist : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IItemByName, IHasMusicGenres, IHasLookupInfo<ArtistInfo> Properties ContainingFolderPath Returns the folder containing the item. If the item is a folder, it returns the folder itself Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String The containing folder path. Overrides BaseItem.ContainingFolderPath ForceDefaultAspectRatio Declaration [IgnoreDataMember] public override bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean Overrides BaseItem.ForceDefaultAspectRatio IsDisplayedAsFolder Declaration [IgnoreDataMember] public override bool IsDisplayedAsFolder { get; } Property Value Type Description Boolean Overrides Folder.IsDisplayedAsFolder IsFolder Declaration [IgnoreDataMember] public override bool IsFolder { get; } Property Value Type Description Boolean Overrides Folder.IsFolder SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsCumulativeRunTimeTicks Declaration [IgnoreDataMember] public override bool SupportsCumulativeRunTimeTicks { get; } Property Value Type Description Boolean Overrides Folder.SupportsCumulativeRunTimeTicks SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides Folder.SupportsExternalTransfer SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople Methods AllowEditingField(MetadataFields) Declaration public override bool AllowEditingField(MetadataFields field) Parameters Type Name Description MetadataFields field Returns Type Description Boolean Overrides BaseItem.AllowEditingField(MetadataFields) CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides Folder.CanDelete(Folder[]) GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetBlockUnratedValue(UserPolicy) Declaration protected override bool GetBlockUnratedValue(UserPolicy config) Parameters Type Name Description UserPolicy config Returns Type Description Boolean Overrides BaseItem.GetBlockUnratedValue(UserPolicy) GetChildCount(User) Declaration public override int GetChildCount(User user) Parameters Type Name Description User user Returns Type Description Int32 Overrides Folder.GetChildCount(User) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetDeletePaths(Boolean) Declaration public override List<FileSystemMetadata> GetDeletePaths(bool mediaFilesOnly) Parameters Type Name Description Boolean mediaFilesOnly Returns Type Description List < FileSystemMetadata > Overrides BaseItem.GetDeletePaths(Boolean) GetInternalAncestorIds() Declaration public override IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetInternalAncestorIds() GetInternalMetadataPath(String) Declaration protected override string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String Overrides BaseItem.GetInternalMetadataPath(String) GetItemIdsInternal(InternalItemsQuery) Declaration protected override long[] GetItemIdsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] Overrides Folder.GetItemIdsInternal(InternalItemsQuery) GetItemsInternal(InternalItemsQuery) Declaration protected override QueryResult<BaseItem> GetItemsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Overrides Folder.GetItemsInternal(InternalItemsQuery) GetLookupInfo(LibraryOptions) Declaration public ArtistInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description ArtistInfo GetMediaContainingFolderPath(LibraryOptions) Declaration public override string GetMediaContainingFolderPath(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.GetMediaContainingFolderPath(LibraryOptions) GetTaggedItems(InternalItemsQuery) Declaration public long[] GetTaggedItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetTaggedItemsResult(InternalItemsQuery) Declaration public QueryResult<BaseItem> GetTaggedItemsResult(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > GetUserDataKey() Declaration public override string GetUserDataKey() Returns Type Description String Overrides BaseItem.GetUserDataKey() SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Declaration protected override Task ValidateChildrenInternal(IProgress<double> progress, CancellationToken cancellationToken, bool recursive, bool refreshChildMetadata, MetadataRefreshOptions refreshOptions, IDirectoryService directoryService) Parameters Type Name Description IProgress < Double > progress CancellationToken cancellationToken Boolean recursive Boolean refreshChildMetadata MetadataRefreshOptions refreshOptions IDirectoryService directoryService Returns Type Description Task Overrides Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IItemByName IHasMusicGenres IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.MusicGenre.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Audio.MusicGenre.html",
    "title": "Class MusicGenre",
    "keywords": "Class MusicGenre Class MusicGenre Inheritance Object BaseItem MusicGenre Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IItemByName Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) Namespace : MediaBrowser.Controller.Entities.Audio Assembly : MediaBrowser.Controller.dll Syntax public sealed class MusicGenre : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IItemByName Properties ContainingFolderPath Returns the folder containing the item. If the item is a folder, it returns the folder itself Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String The containing folder path. Overrides BaseItem.ContainingFolderPath IsDisplayedAsFolder Declaration [IgnoreDataMember] public override bool IsDisplayedAsFolder { get; } Property Value Type Description Boolean Overrides BaseItem.IsDisplayedAsFolder SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExternalTransfer SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsTags Declaration [IgnoreDataMember] public override bool SupportsTags { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsTags Methods AllowEditingField(MetadataFields) Declaration public override bool AllowEditingField(MetadataFields field) Parameters Type Name Description MetadataFields field Returns Type Description Boolean Overrides BaseItem.AllowEditingField(MetadataFields) CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides BaseItem.CanDelete(Folder[]) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetInternalAncestorIds() Declaration public override IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetInternalAncestorIds() GetInternalMetadataPath(String) Declaration protected override string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String Overrides BaseItem.GetInternalMetadataPath(String) GetMediaContainingFolderPath(LibraryOptions) Declaration public override string GetMediaContainingFolderPath(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.GetMediaContainingFolderPath(LibraryOptions) GetTaggedItems(InternalItemsQuery) Declaration public long[] GetTaggedItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetTaggedItemsResult(InternalItemsQuery) Declaration public QueryResult<BaseItem> GetTaggedItemsResult(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IItemByName Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.BaseItem.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.BaseItem.html",
    "title": "Class BaseItem",
    "keywords": "Class BaseItem Class BaseItem Inheritance Object BaseItem Audio MusicGenre Book Folder Game GameGenre Genre Person Photo Studio Tag User Video LiveTvChannel LiveTvProgram Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public abstract class BaseItem : IHasProviderIds, IHasLookupInfo<ItemLookupInfo> Constructors BaseItem() Declaration protected BaseItem() Fields DisplayExtraTypes Declaration public static ExtraType[] DisplayExtraTypes Field Value Type Description ExtraType [] ExtrasSubFolders Declaration public static readonly Dictionary<string, ExtraType?> ExtrasSubFolders Field Value Type Description Dictionary < String , Nullable < ExtraType >> SlugChar Declaration public static char SlugChar Field Value Type Description Char SlugReplaceChars Declaration public static readonly char[] SlugReplaceChars Field Value Type Description Char [] SupportedImageExtensions The supported image extensions Declaration public static readonly string[] SupportedImageExtensions Field Value Type Description String [] SupportedImageExtensionsList Declaration public static readonly List<string> SupportedImageExtensionsList Field Value Type Description List < String > ThemeSongFilename Declaration public static ReadOnlyMemory<char> ThemeSongFilename Field Value Type Description ReadOnlyMemory < Char > ThemeSongsFolderName Declaration public static ReadOnlyMemory<char> ThemeSongsFolderName Field Value Type Description ReadOnlyMemory < Char > ThemeVideosFolderName Declaration public static ReadOnlyMemory<char> ThemeVideosFolderName Field Value Type Description ReadOnlyMemory < Char > TrailerFolderName The trailer folder name Declaration public static ReadOnlyMemory<char> TrailerFolderName Field Value Type Description ReadOnlyMemory < Char > Properties Album Gets or sets the album. Declaration [IgnoreDataMember] public string Album { get; set; } Property Value Type Description String The album. AlbumId Declaration [IgnoreDataMember] public long AlbumId { get; set; } Property Value Type Description Int64 AudioStreamIndex Declaration [IgnoreDataMember] public int? AudioStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > ChannelManager Declaration public static IChannelManager ChannelManager { get; set; } Property Value Type Description IChannelManager Collections Gets or sets the collections. Declaration [IgnoreDataMember] public LinkedItemInfo[] Collections { get; set; } Property Value Type Description LinkedItemInfo [] The collections. CommunityRating Gets or sets the community rating. Declaration [IgnoreDataMember] public float? CommunityRating { get; set; } Property Value Type Description Nullable < Single > The community rating. ConfigurationManager Declaration public static IServerConfigurationManager ConfigurationManager { get; set; } Property Value Type Description IServerConfigurationManager Container Declaration [IgnoreDataMember] public string Container { get; set; } Property Value Type Description String ContainingFolderPath Returns the folder containing the item. If the item is a folder, it returns the folder itself Declaration [IgnoreDataMember] public virtual string ContainingFolderPath { get; } Property Value Type Description String CriticRating Gets or sets the critic rating. Declaration [IgnoreDataMember] public float? CriticRating { get; set; } Property Value Type Description Nullable < Single > The critic rating. CustomRating Gets or sets the custom rating. Declaration [IgnoreDataMember] public string CustomRating { get; set; } Property Value Type Description String The custom rating. CustomRatingForComparison Declaration [IgnoreDataMember] public ReadOnlySpan<char> CustomRatingForComparison { get; } Property Value Type Description ReadOnlySpan < Char > DateCreated Gets or sets the date created. Declaration [IgnoreDataMember] public DateTimeOffset DateCreated { get; set; } Property Value Type Description DateTimeOffset The date created. DateLastRefreshed Declaration [IgnoreDataMember] public DateTimeOffset DateLastRefreshed { get; set; } Property Value Type Description DateTimeOffset DateLastSaved Declaration [IgnoreDataMember] public DateTimeOffset DateLastSaved { get; set; } Property Value Type Description DateTimeOffset DateModified Gets or sets the date modified. Declaration [IgnoreDataMember] public DateTimeOffset DateModified { get; set; } Property Value Type Description DateTimeOffset The date modified. DisplayParent Declaration [IgnoreDataMember] public BaseItem DisplayParent { get; } Property Value Type Description BaseItem DisplayParentId Declaration [IgnoreDataMember] public virtual long DisplayParentId { get; } Property Value Type Description Int64 DisplayPreferencesId Return the id that should be used to key display prefs for this item. Default is based on the type for everything except actual generic folders. Declaration [IgnoreDataMember] public virtual Guid DisplayPreferencesId { get; } Property Value Type Description Guid The display prefs id. EnableAlphaNumericSorting Declaration [IgnoreDataMember] public virtual bool EnableAlphaNumericSorting { get; } Property Value Type Description Boolean EnableInternalIdsExternally Declaration [IgnoreDataMember] public virtual bool EnableInternalIdsExternally { get; } Property Value Type Description Boolean EnableRememberingTrackSelections Declaration [IgnoreDataMember] public virtual bool EnableRememberingTrackSelections { get; } Property Value Type Description Boolean EndDate Gets or sets the end date. Declaration [IgnoreDataMember] public DateTimeOffset? EndDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The end date. ExternalId If this content came from an external service, the id of the content on that service Declaration [IgnoreDataMember] public string ExternalId { get; set; } Property Value Type Description String ExtraType Declaration [IgnoreDataMember] public ExtraType? ExtraType { get; set; } Property Value Type Description Nullable < ExtraType > FileName Declaration [IgnoreDataMember] public virtual string FileName { get; } Property Value Type Description String FileNameWithoutExtension Declaration [IgnoreDataMember] public virtual string FileNameWithoutExtension { get; } Property Value Type Description String FileSystem Declaration public static IFileSystem FileSystem { get; set; } Property Value Type Description IFileSystem ForceDefaultAspectRatio Declaration [IgnoreDataMember] public virtual bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean GenreItems Gets or sets the genres. Declaration [IgnoreDataMember] public LinkedItemInfo[] GenreItems { get; set; } Property Value Type Description LinkedItemInfo [] The genres. Genres Declaration [IgnoreDataMember] public string[] Genres { get; set; } Property Value Type Description String [] HasPathProtocol Declaration [IgnoreDataMember] public bool HasPathProtocol { get; } Property Value Type Description Boolean Height Declaration [IgnoreDataMember] public int Height { get; set; } Property Value Type Description Int32 Id Gets or sets the id. Declaration [IgnoreDataMember] public Guid Id { get; set; } Property Value Type Description Guid The id. ImageDisplayParentId Declaration [IgnoreDataMember] public virtual long ImageDisplayParentId { get; } Property Value Type Description Int64 ImageInfos Declaration [IgnoreDataMember] public virtual ItemImageInfo[] ImageInfos { get; set; } Property Value Type Description ItemImageInfo [] ImportedCollections Declaration public LinkedItemInfo[] ImportedCollections { get; set; } Property Value Type Description LinkedItemInfo [] IndexNumber If the item is part of a series, this is it's number in the series. This could be episode number, album track number, etc. Declaration [IgnoreDataMember] public int? IndexNumber { get; set; } Property Value Type Description Nullable < Int32 > The index number. InternalId Declaration [IgnoreDataMember] public long InternalId { get; set; } Property Value Type Description Int64 IsCompleteMedia Declaration [IgnoreDataMember] public bool IsCompleteMedia { get; } Property Value Type Description Boolean IsDisplayedAsFolder Declaration [IgnoreDataMember] public virtual bool IsDisplayedAsFolder { get; } Property Value Type Description Boolean IsFavorite Declaration [IgnoreDataMember] public bool IsFavorite { get; set; } Property Value Type Description Boolean IsFileProtocol Declaration [IgnoreDataMember] public bool IsFileProtocol { get; } Property Value Type Description Boolean IsFolder Gets a value indicating whether this instance is folder. Declaration [IgnoreDataMember] public virtual bool IsFolder { get; } Property Value Type Description Boolean true if this instance is folder; otherwise, false . IsHD Declaration [IgnoreDataMember] public bool IsHD { get; } Property Value Type Description Boolean IsHidden Declaration [IgnoreDataMember] public virtual bool IsHidden { get; } Property Value Type Description Boolean IsInMixedFolder Gets a value indicating whether this instance is in mixed folder. Declaration [IgnoreDataMember] public bool IsInMixedFolder { get; set; } Property Value Type Description Boolean true if this instance is in mixed folder; otherwise, false . IsLocked Declaration [IgnoreDataMember] public bool IsLocked { get; set; } Property Value Type Description Boolean IsPlaceHolder Declaration [IgnoreDataMember] public bool IsPlaceHolder { get; } Property Value Type Description Boolean IsResolvedToFolder Declaration [IgnoreDataMember] public virtual bool IsResolvedToFolder { get; } Property Value Type Description Boolean IsShortcut Declaration [IgnoreDataMember] public bool IsShortcut { get; } Property Value Type Description Boolean IsThemeMedia Declaration [IgnoreDataMember] public bool IsThemeMedia { get; } Property Value Type Description Boolean IsTopParent Declaration [IgnoreDataMember] public virtual bool IsTopParent { get; } Property Value Type Description Boolean IsUnaired Declaration [IgnoreDataMember] public bool IsUnaired { get; } Property Value Type Description Boolean IsVirtualItem Declaration [IgnoreDataMember] public bool IsVirtualItem { get; set; } Property Value Type Description Boolean ItemRepository Declaration public static IItemRepository ItemRepository { get; set; } Property Value Type Description IItemRepository LastPlayedDate Declaration [IgnoreDataMember] public DateTimeOffset? LastPlayedDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > LatestItemsContainerId Declaration [IgnoreDataMember] public virtual long LatestItemsContainerId { get; } Property Value Type Description Int64 LibraryManager Declaration public static ILibraryManager LibraryManager { get; set; } Property Value Type Description ILibraryManager ListItemEntryId Declaration [IgnoreDataMember] public long ListItemEntryId { get; set; } Property Value Type Description Int64 LocalizationManager Declaration public static ILocalizationManager LocalizationManager { get; set; } Property Value Type Description ILocalizationManager LocalTrailerIds Declaration [IgnoreDataMember] public Guid[] LocalTrailerIds { get; } Property Value Type Description Guid [] LocationType Gets or sets the type of the location. Declaration [IgnoreDataMember] public virtual LocationType LocationType { get; } Property Value Type Description LocationType The type of the location. LockedFields Gets or sets the locked fields. Declaration [IgnoreDataMember] public MetadataFields[] LockedFields { get; set; } Property Value Type Description MetadataFields [] The locked fields. Logger The logger Declaration public static ILogger Logger { get; set; } Property Value Type Description ILogger MediaSourceManager Declaration public static IMediaSourceManager MediaSourceManager { get; set; } Property Value Type Description IMediaSourceManager MediaType Gets the type of the media. Declaration [IgnoreDataMember] public virtual string MediaType { get; } Property Value Type Description String The type of the media. Name Gets or sets the name. Declaration [IgnoreDataMember] public virtual string Name { get; set; } Property Value Type Description String The name. OfficialRating Gets or sets the official rating. Declaration [IgnoreDataMember] public string OfficialRating { get; set; } Property Value Type Description String The official rating. OfficialRatingForComparison Declaration [IgnoreDataMember] public ReadOnlySpan<char> OfficialRatingForComparison { get; } Property Value Type Description ReadOnlySpan < Char > OriginalTitle Declaration [IgnoreDataMember] public string OriginalTitle { get; set; } Property Value Type Description String Overview Gets or sets the overview. Declaration [IgnoreDataMember] public string Overview { get; set; } Property Value Type Description String The overview. OwnerId Declaration [IgnoreDataMember] public long OwnerId { get; set; } Property Value Type Description Int64 Parent Gets or sets the parent. Declaration [IgnoreDataMember] public Folder Parent { get; set; } Property Value Type Description Folder The parent. ParentId Declaration [IgnoreDataMember] public long ParentId { get; set; } Property Value Type Description Int64 ParentIndexNumber For an episode this could be the season number, or for a song this could be the disc number. Declaration [IgnoreDataMember] public int? ParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > The parent index number. Path Gets or sets the path. Declaration [IgnoreDataMember] public virtual string Path { get; set; } Property Value Type Description String The path. PathProtocol Declaration [IgnoreDataMember] public MediaProtocol? PathProtocol { get; } Property Value Type Description Nullable < MediaProtocol > PlaybackPositionTicks Declaration [IgnoreDataMember] public long PlaybackPositionTicks { get; set; } Property Value Type Description Int64 PlayCount Declaration [IgnoreDataMember] public int PlayCount { get; set; } Property Value Type Description Int32 Played Declaration [IgnoreDataMember] public bool Played { get; set; } Property Value Type Description Boolean PreferredMetadataCountryCode Declaration [IgnoreDataMember] public string PreferredMetadataCountryCode { get; set; } Property Value Type Description String PreferredMetadataLanguage Declaration [IgnoreDataMember] public string PreferredMetadataLanguage { get; set; } Property Value Type Description String Prefix Declaration [IgnoreDataMember] public string Prefix { get; set; } Property Value Type Description String PremiereDate When the item first debuted. For movies this could be premiere date, episodes would be first aired Declaration [IgnoreDataMember] public DateTimeOffset? PremiereDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The premiere date. PresentationUniqueKey Declaration [IgnoreDataMember] public string PresentationUniqueKey { get; set; } Property Value Type Description String PrimaryImagePath This is just a helper for convenience Declaration [IgnoreDataMember] public string PrimaryImagePath { get; } Property Value Type Description String The primary image path. ProductionLocations Declaration [IgnoreDataMember] public string[] ProductionLocations { get; set; } Property Value Type Description String [] ProductionYear Gets or sets the production year. Declaration [IgnoreDataMember] public int? ProductionYear { get; set; } Property Value Type Description Nullable < Int32 > The production year. ProviderIds Gets or sets the provider ids. Declaration [IgnoreDataMember] public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary The provider ids. ProviderManager Declaration public static IProviderManager ProviderManager { get; set; } Property Value Type Description IProviderManager RemoteTrailers Declaration [IgnoreDataMember] public string[] RemoteTrailers { get; set; } Property Value Type Description String [] RunTimeTicks Gets or sets the run time ticks. Declaration [IgnoreDataMember] public long? RunTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > The run time ticks. SeriesPresentationUniqueKey Declaration [IgnoreDataMember] public string SeriesPresentationUniqueKey { get; set; } Property Value Type Description String Size Declaration [IgnoreDataMember] public long Size { get; set; } Property Value Type Description Int64 SortName Gets the name of the sort. Declaration [IgnoreDataMember] public string SortName { get; set; } Property Value Type Description String The name of the sort. StudioItems Gets or sets the studios. Declaration [IgnoreDataMember] public LinkedItemInfo[] StudioItems { get; set; } Property Value Type Description LinkedItemInfo [] The studios. Studios Declaration [IgnoreDataMember] public string[] Studios { get; set; } Property Value Type Description String [] SubtitleStreamIndex Declaration [IgnoreDataMember] public int? SubtitleStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > SupportsAncestors Declaration [IgnoreDataMember] public virtual bool SupportsAncestors { get; } Property Value Type Description Boolean SupportsCollections Declaration [IgnoreDataMember] public virtual bool SupportsCollections { get; } Property Value Type Description Boolean SupportsEditingAlbum Declaration [IgnoreDataMember] public virtual bool SupportsEditingAlbum { get; } Property Value Type Description Boolean SupportsExternalTransfer Declaration [IgnoreDataMember] public virtual bool SupportsExternalTransfer { get; } Property Value Type Description Boolean SupportsExtras Declaration [IgnoreDataMember] public virtual bool SupportsExtras { get; } Property Value Type Description Boolean SupportsGenres Declaration [IgnoreDataMember] public virtual bool SupportsGenres { get; } Property Value Type Description Boolean SupportsInheritedParentImages Declaration [IgnoreDataMember] public virtual bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean SupportsLocalTrailers Declaration [IgnoreDataMember] public virtual bool SupportsLocalTrailers { get; } Property Value Type Description Boolean SupportsOwnedItems Declaration [IgnoreDataMember] protected virtual bool SupportsOwnedItems { get; } Property Value Type Description Boolean SupportsPeople Declaration [IgnoreDataMember] public virtual bool SupportsPeople { get; } Property Value Type Description Boolean SupportsRemoteImageDownloading Declaration [IgnoreDataMember] public virtual bool SupportsRemoteImageDownloading { get; } Property Value Type Description Boolean SupportsStudios Declaration [IgnoreDataMember] public virtual bool SupportsStudios { get; } Property Value Type Description Boolean SupportsTags Declaration [IgnoreDataMember] public virtual bool SupportsTags { get; } Property Value Type Description Boolean SupportsThemeMedia Declaration [IgnoreDataMember] public virtual bool SupportsThemeMedia { get; } Property Value Type Description Boolean SupportsUserData Declaration [IgnoreDataMember] public virtual bool SupportsUserData { get; } Property Value Type Description Boolean TagItems Gets or sets the tags. Declaration [IgnoreDataMember] public LinkedItemInfo[] TagItems { get; set; } Property Value Type Description LinkedItemInfo [] The tags. Tagline Declaration [IgnoreDataMember] public string Tagline { get; set; } Property Value Type Description String Tags Declaration [IgnoreDataMember] public string[] Tags { get; set; } Property Value Type Description String [] ThemeSongIds Declaration [IgnoreDataMember] public Guid[] ThemeSongIds { get; } Property Value Type Description Guid [] ThemeVideoIds Declaration [IgnoreDataMember] public Guid[] ThemeVideoIds { get; } Property Value Type Description Guid [] TotalBitrate Declaration [IgnoreDataMember] public int TotalBitrate { get; set; } Property Value Type Description Int32 UserDataKey Declaration [IgnoreDataMember] public string UserDataKey { get; set; } Property Value Type Description String UserDataManager Declaration public static IUserDataManager UserDataManager { get; set; } Property Value Type Description IUserDataManager UserDataSet Declaration [IgnoreDataMember] public bool UserDataSet { get; set; } Property Value Type Description Boolean UserManager Declaration public static IUserManager UserManager { get; set; } Property Value Type Description IUserManager Width Declaration [IgnoreDataMember] public int Width { get; set; } Property Value Type Description Int32 Methods AddCollection(BoxSet) Declaration public bool AddCollection(BoxSet newEntry) Parameters Type Name Description BoxSet newEntry Returns Type Description Boolean AddCollection(LinkedItemInfo) Declaration public void AddCollection(LinkedItemInfo newEntry) Parameters Type Name Description LinkedItemInfo newEntry AddCollection(String) Declaration public LinkedItemInfo AddCollection(string name) Parameters Type Name Description String name Returns Type Description LinkedItemInfo AddCollectionInfo(LinkedItemInfo) Declaration public bool AddCollectionInfo(LinkedItemInfo newEntry) Parameters Type Name Description LinkedItemInfo newEntry Returns Type Description Boolean AddGenre(String) Adds a genre to the item Declaration public void AddGenre(string name) Parameters Type Name Description String name The name. Exceptions Type Condition ArgumentNullException AddImage(FileSystemMetadata, ImageType) Declaration public void AddImage(FileSystemMetadata file, ImageType type) Parameters Type Name Description FileSystemMetadata file ImageType type AddImages(ImageType, List<FileSystemMetadata>, Boolean) Adds the images. Declaration public bool AddImages(ImageType imageType, List<FileSystemMetadata> images, bool deleteMissingImages) Parameters Type Name Description ImageType imageType List < FileSystemMetadata > images Boolean deleteMissingImages Returns Type Description Boolean AddImportedCollections(LinkedItemInfo[]) Declaration public void AddImportedCollections(LinkedItemInfo[] collections) Parameters Type Name Description LinkedItemInfo [] collections AddProviderIdsToName(String, String[]) Declaration protected string AddProviderIdsToName(string name, string[] providerIds) Parameters Type Name Description String name String [] providerIds Returns Type Description String AddStudio(String) Adds a studio to the item Declaration public void AddStudio(string name) Parameters Type Name Description String name The name. Exceptions Type Condition ArgumentNullException AfterMetadataRefresh() Declaration public void AfterMetadataRefresh() AllowEditingField(MetadataFields) Declaration public virtual bool AllowEditingField(MetadataFields field) Parameters Type Name Description MetadataFields field Returns Type Description Boolean AllowsMultipleImages(ImageType) Declaration public bool AllowsMultipleImages(ImageType type) Parameters Type Name Description ImageType type Returns Type Description Boolean BeforeMetadataRefresh(Boolean) This is called before any metadata refresh and returns true or false indicating if changes were made Declaration public virtual bool BeforeMetadataRefresh(bool replaceAllMetdata) Parameters Type Name Description Boolean replaceAllMetdata Returns Type Description Boolean CanDelete(Folder[]) Declaration public virtual bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean CanDelete(User, Folder[]) Declaration public bool CanDelete(User user, Folder[] collectionFolders) Parameters Type Name Description User user Folder [] collectionFolders Returns Type Description Boolean CanDownload() Declaration public virtual bool CanDownload() Returns Type Description Boolean CanDownload(User) Declaration public bool CanDownload(User user) Parameters Type Name Description User user Returns Type Description Boolean CanDownloadAsFolder() Declaration protected virtual bool CanDownloadAsFolder() Returns Type Description Boolean CanDownloadAsSingleMedia() Declaration protected virtual bool CanDownloadAsSingleMedia() Returns Type Description Boolean ContainsTag(String) Declaration public bool ContainsTag(string name) Parameters Type Name Description String name Returns Type Description Boolean CreatePresentationUniqueKey() Declaration public string CreatePresentationUniqueKey() Returns Type Description String CreatePresentationUniqueKey(LibraryOptions) Declaration public virtual string CreatePresentationUniqueKey(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String CreateSortName() Creates the name of the sort. Declaration protected virtual ReadOnlySpan<char> CreateSortName() Returns Type Description ReadOnlySpan < Char > System.String. CreateSortName(ReadOnlySpan<Char>) Declaration protected ReadOnlySpan<char> CreateSortName(ReadOnlySpan<char> text) Parameters Type Name Description ReadOnlySpan < Char > text Returns Type Description ReadOnlySpan < Char > DeleteImage(ImageType, Int32) Deletes the image. Declaration public void DeleteImage(ImageType type, int index) Parameters Type Name Description ImageType type The type. Int32 index The index. EnsureTaggedItemsLoaded() Declaration public void EnsureTaggedItemsLoaded() FillItemLinks(List<(ItemLinkType, String, Int64)>) Declaration public virtual void FillItemLinks(List<(ItemLinkType, string, long)> itemLinks) Parameters Type Name Description List < (T1, T2, T3) < ItemLinkType , String , Int64 >> itemLinks FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Declaration public virtual void FillUserDataDtoValues(UserItemDataDto dto, BaseItemDto itemDto, User user, DtoOptions options, LibraryOptions libraryOptions) Parameters Type Name Description UserItemDataDto dto BaseItemDto itemDto User user DtoOptions options LibraryOptions libraryOptions FindParent<T>() Finds a parent of a given type Declaration public T FindParent<T>() where T : Folder Returns Type Description T ``0. Type Parameters Name Description T GetAdditionalPartIds(Int64) Declaration public static long[] GetAdditionalPartIds(long internalId) Parameters Type Name Description Int64 internalId Returns Type Description Int64 [] GetAdditionalParts(Int64, DtoOptions, User) Declaration public static BaseItem[] GetAdditionalParts(long internalId, DtoOptions options, User user) Parameters Type Name Description Int64 internalId DtoOptions options User user Returns Type Description BaseItem [] GetAllItemsForMediaSources(User, Boolean) Declaration protected virtual List<Tuple<BaseItem, MediaSourceType>> GetAllItemsForMediaSources(User user, bool enableAlternateMediaSources) Parameters Type Name Description User user Boolean enableAlternateMediaSources Returns Type Description List < Tuple < BaseItem , MediaSourceType >> GetAllKnownCollections() Declaration public List<LinkedItemInfo> GetAllKnownCollections() Returns Type Description List < LinkedItemInfo > GetBlockUnratedType() Declaration public virtual UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem GetBlockUnratedValue(UserPolicy) Gets the block unrated value. Declaration protected virtual bool GetBlockUnratedValue(UserPolicy config) Parameters Type Name Description UserPolicy config The configuration. Returns Type Description Boolean true if XXXX, false otherwise. GetClientId() Declaration public string GetClientId() Returns Type Description String GetClientTypeName() Declaration public virtual string GetClientTypeName() Returns Type Description String GetDefaultMediaSourceId() Declaration public string GetDefaultMediaSourceId() Returns Type Description String GetDefaultPresentationUniqueKey() Declaration protected string GetDefaultPresentationUniqueKey() Returns Type Description String GetDefaultPrimaryImageAspectRatio() Declaration public virtual double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double GetDeletePaths(Boolean) Gets the file system path to delete when the item is to be deleted Declaration public virtual List<FileSystemMetadata> GetDeletePaths(bool mediaFilesOnly) Parameters Type Name Description Boolean mediaFilesOnly Returns Type Description List < FileSystemMetadata > GetDisplayExtraIds() Declaration public long[] GetDisplayExtraIds() Returns Type Description Int64 [] GetDisplayOrderIntValue() Declaration public virtual int? GetDisplayOrderIntValue() Returns Type Description Nullable < Int32 > GetEtag(User) Declaration public string GetEtag(User user) Parameters Type Name Description User user Returns Type Description String GetEtagValues(User) Declaration protected virtual List<string> GetEtagValues(User user) Parameters Type Name Description User user Returns Type Description List < String > GetExtraGuids(ExtraType[]) Declaration public Guid[] GetExtraGuids(ExtraType[] extraTypes) Parameters Type Name Description ExtraType [] extraTypes Returns Type Description Guid [] GetExtraIds(ExtraType[]) Declaration public long[] GetExtraIds(ExtraType[] extraTypes) Parameters Type Name Description ExtraType [] extraTypes Returns Type Description Int64 [] GetExtras(ExtraType[]) Declaration public BaseItem[] GetExtras(ExtraType[] extraTypes) Parameters Type Name Description ExtraType [] extraTypes Returns Type Description BaseItem [] GetExtras(Int64, ExtraType[], DtoOptions) Declaration public static BaseItem[] GetExtras(long internalId, ExtraType[] extraTypes, DtoOptions options) Parameters Type Name Description Int64 internalId ExtraType [] extraTypes DtoOptions options Returns Type Description BaseItem [] GetExtras(Int64, String, ExtraType[], DtoOptions) Declaration public static BaseItem[] GetExtras(long internalId, string presentationUniqueKey, ExtraType[] extraTypes, DtoOptions options) Parameters Type Name Description Int64 internalId String presentationUniqueKey ExtraType [] extraTypes DtoOptions options Returns Type Description BaseItem [] GetFileSystemChildren(IDirectoryService) Declaration protected virtual FileSystemMetadata[] GetFileSystemChildren(IDirectoryService directoryService) Parameters Type Name Description IDirectoryService directoryService Returns Type Description FileSystemMetadata [] GetIdsForAncestorQuery() Declaration public virtual IEnumerable<long> GetIdsForAncestorQuery() Returns Type Description IEnumerable < Int64 > GetImageInfo(ImageType, Int32) Gets the image information. Declaration public ItemImageInfo GetImageInfo(ImageType imageType, int imageIndex) Parameters Type Name Description ImageType imageType Type of the image. Int32 imageIndex Index of the image. Returns Type Description ItemImageInfo ItemImageInfo. GetImagePath(ImageType, Int32) Gets the image path. Declaration public string GetImagePath(ImageType imageType, int imageIndex) Parameters Type Name Description ImageType imageType Type of the image. Int32 imageIndex Index of the image. Returns Type Description String System.String. Exceptions Type Condition InvalidOperationException ArgumentNullException item GetImages(ImageType) Declaration public IEnumerable<ItemImageInfo> GetImages(ImageType imageType) Parameters Type Name Description ImageType imageType Returns Type Description IEnumerable < ItemImageInfo > GetImportedCollections() Declaration public LinkedItemInfo[] GetImportedCollections() Returns Type Description LinkedItemInfo [] GetInheritedParentalRatingValue() Only used by plugins at this point Declaration public int? GetInheritedParentalRatingValue() Returns Type Description Nullable < Int32 > GetInternalAncestorIds() Declaration public virtual IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > GetInternalMetadataPath() Declaration public string GetInternalMetadataPath() Returns Type Description String GetInternalMetadataPath(Guid, String) Declaration protected static string GetInternalMetadataPath(Guid itemId, string basePath) Parameters Type Name Description Guid itemId String basePath Returns Type Description String GetInternalMetadataPath(String) Declaration protected virtual string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String GetItemLookupInfo<T>(LibraryOptions) Declaration protected T GetItemLookupInfo<T>(LibraryOptions libraryOptions) where T : ItemLookupInfo, new() Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description T Type Parameters Name Description T GetLocalMetadataFilesToDelete() Declaration protected List<FileSystemMetadata> GetLocalMetadataFilesToDelete() Returns Type Description List < FileSystemMetadata > GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) Declaration protected static string GetMappedPath(string path, MediaProtocol? protocol, LibraryOptions libraryOptions) Parameters Type Name Description String path Nullable < MediaProtocol > protocol LibraryOptions libraryOptions Returns Type Description String GetMediaContainingFolderPath(LibraryOptions) Declaration public virtual string GetMediaContainingFolderPath(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String GetMediaSources(User, Boolean, Boolean, LibraryOptions) Declaration public virtual List<MediaSourceInfo> GetMediaSources(User user, bool enableAlternateMediaSources, bool enablePathSubstitution, LibraryOptions libraryOptions) Parameters Type Name Description User user Boolean enableAlternateMediaSources Boolean enablePathSubstitution LibraryOptions libraryOptions Returns Type Description List < MediaSourceInfo > GetMediaSources(Boolean, Boolean, LibraryOptions) GetMediaSources This overload is for CoverArt Declaration public virtual List<MediaSourceInfo> GetMediaSources(bool enableAlternateMediaSources, bool enablePathSubstitution, LibraryOptions libraryOptions) Parameters Type Name Description Boolean enableAlternateMediaSources Boolean enablePathSubstitution LibraryOptions libraryOptions Returns Type Description List < MediaSourceInfo > GetMediaStreams() Declaration public virtual List<MediaStream> GetMediaStreams() Returns Type Description List < MediaStream > GetNameForMetadataLookup() Declaration protected virtual string GetNameForMetadataLookup() Returns Type Description String GetOwner() Declaration public BaseItem GetOwner() Returns Type Description BaseItem GetParent() Declaration public BaseItem GetParent() Returns Type Description BaseItem GetParentalRatingValue() Declaration public int? GetParentalRatingValue() Returns Type Description Nullable < Int32 > GetParents() Declaration public IEnumerable<BaseItem> GetParents() Returns Type Description IEnumerable < BaseItem > GetPlayAccess(User) Gets the play access. Declaration public PlayAccess GetPlayAccess(User user) Parameters Type Name Description User user The user. Returns Type Description PlayAccess PlayAccess. GetPreferredImageLanguage(LibraryOptions) Declaration public string GetPreferredImageLanguage(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String GetPreferredMetadataCountryCode() Declaration public string GetPreferredMetadataCountryCode() Returns Type Description String GetPreferredMetadataCountryCode(LibraryOptions) Gets the preferred metadata language. Declaration public string GetPreferredMetadataCountryCode(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String System.String. GetPreferredMetadataLanguage() Declaration public string GetPreferredMetadataLanguage() Returns Type Description String GetPreferredMetadataLanguage(LibraryOptions) Gets the preferred metadata language. Declaration public string GetPreferredMetadataLanguage(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String System.String. GetPresentationUniqueKey() Declaration public string GetPresentationUniqueKey() Returns Type Description String GetRefreshProgress() Declaration public virtual double? GetRefreshProgress() Returns Type Description Nullable < Double > GetRelatedUrls() Declaration public virtual List<ExternalUrl> GetRelatedUrls() Returns Type Description List < ExternalUrl > GetRunTimeTicksForPlayState() Declaration public virtual long GetRunTimeTicksForPlayState() Returns Type Description Int64 GetStandaloneDisplayName() Declaration public virtual string GetStandaloneDisplayName() Returns Type Description String GetSupportedItemLinkTypes() Declaration public virtual List<ItemLinkType> GetSupportedItemLinkTypes() Returns Type Description List < ItemLinkType > GetSupportsPositionTicksResume(LibraryOptions) Declaration public virtual bool GetSupportsPositionTicksResume(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean GetThemeSongs() Declaration public BaseItem[] GetThemeSongs() Returns Type Description BaseItem [] GetThemeVideos() Declaration public BaseItem[] GetThemeVideos() Returns Type Description BaseItem [] GetTopParent() Declaration public BaseItem GetTopParent() Returns Type Description BaseItem GetTopParentId() Declaration public long GetTopParentId() Returns Type Description Int64 GetUniquelyIdentifiableProviderIds() Declaration public ProviderIdDictionary GetUniquelyIdentifiableProviderIds() Returns Type Description ProviderIdDictionary GetUserDataKey() Declaration public virtual string GetUserDataKey() Returns Type Description String HasDateModifiedChanged(DateTimeOffset) Declaration public bool HasDateModifiedChanged(DateTimeOffset newValue) Parameters Type Name Description DateTimeOffset newValue Returns Type Description Boolean HasImage(ImageType, Int32) Gets an image Declaration public bool HasImage(ImageType type, int imageIndex) Parameters Type Name Description ImageType type The type. Int32 imageIndex Index of the image. Returns Type Description Boolean true if the specified type has image; otherwise, false . Exceptions Type Condition ArgumentException Backdrops should be accessed using Item.Backdrops IsActiveRecording() Declaration public virtual bool IsActiveRecording() Returns Type Description Boolean IsAuthorizedToDelete(User, Folder[]) Declaration public virtual bool IsAuthorizedToDelete(User user, Folder[] collectionFolders) Parameters Type Name Description User user Folder [] collectionFolders Returns Type Description Boolean IsAuthorizedToDownload(User) Declaration public virtual bool IsAuthorizedToDownload(User user) Parameters Type Name Description User user Returns Type Description Boolean IsFavoriteOrLiked(User) Declaration public bool IsFavoriteOrLiked(User user) Parameters Type Name Description User user Returns Type Description Boolean IsFieldLocked(MetadataFields) Declaration public bool IsFieldLocked(MetadataFields field) Parameters Type Name Description MetadataFields field Returns Type Description Boolean IsGreaterThanDateLastSaved(DateTimeOffset) Declaration public bool IsGreaterThanDateLastSaved(DateTimeOffset newValue) Parameters Type Name Description DateTimeOffset newValue Returns Type Description Boolean IsImageFetcherEnabled(LibraryOptions, String) Declaration public bool IsImageFetcherEnabled(LibraryOptions libraryOptions, string name) Parameters Type Name Description LibraryOptions libraryOptions String name Returns Type Description Boolean IsMetadataFetcherEnabled(LibraryOptions, String) Declaration public bool IsMetadataFetcherEnabled(LibraryOptions libraryOptions, string name) Parameters Type Name Description LibraryOptions libraryOptions String name Returns Type Description Boolean IsParentalAllowed(User) Determines if a given user has access to this item Declaration public bool IsParentalAllowed(User user) Parameters Type Name Description User user The user. Returns Type Description Boolean true if [is parental allowed] [the specified user]; otherwise, false . Exceptions Type Condition ArgumentNullException user IsPathProtocol(MediaProtocol) Declaration public bool IsPathProtocol(MediaProtocol protocol) Parameters Type Name Description MediaProtocol protocol Returns Type Description Boolean IsPlayed(User) Declaration public virtual bool IsPlayed(User user) Parameters Type Name Description User user Returns Type Description Boolean IsSaveLocalMetadataEnabled(LibraryOptions) Declaration public virtual bool IsSaveLocalMetadataEnabled(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean IsSecondaryMergedItemInSameFolder() Declaration protected virtual bool IsSecondaryMergedItemInSameFolder() Returns Type Description Boolean IsUnplayed(User) Declaration public virtual bool IsUnplayed(User user) Parameters Type Name Description User user Returns Type Description Boolean IsVisible(User) Determines if this folder should be visible to a given user. Default is just parental allowed. Can be overridden for more functionality. Declaration public virtual bool IsVisible(User user) Parameters Type Name Description User user The user. Returns Type Description Boolean true if the specified user is visible; otherwise, false . Exceptions Type Condition ArgumentNullException user IsVisibleStandalone(User) Declaration public virtual bool IsVisibleStandalone(User user) Parameters Type Name Description User user Returns Type Description Boolean IsVisibleStandaloneInternal(User) Declaration protected bool IsVisibleStandaloneInternal(User user) Parameters Type Name Description User user Returns Type Description Boolean IsVisibleViaTags(User) Declaration protected virtual bool IsVisibleViaTags(User user) Parameters Type Name Description User user Returns Type Description Boolean MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Marks the played. Declaration public virtual void MarkPlayed(User user, DateTimeOffset? datePlayed, bool resetPosition) Parameters Type Name Description User user The user. Nullable < DateTimeOffset > datePlayed The date played. Boolean resetPosition if set to true [reset position]. Exceptions Type Condition ArgumentNullException MarkTaggedItemsLoaded() Declaration public void MarkTaggedItemsLoaded() MarkUnplayed(User) Marks the unplayed. Declaration public virtual void MarkUnplayed(User user) Parameters Type Name Description User user The user. Exceptions Type Condition ArgumentNullException MoveFiles(String[], String[]) Declaration public void MoveFiles(string[] list1, string[] list2) Parameters Type Name Description String [] list1 String [] list2 RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) Refreshes owned items such as trailers, theme videos, special features, etc. Returns true or false indicating if changes were found. Declaration protected virtual async Task<bool> RefreshedOwnedItems(MetadataRefreshOptions options, LibraryOptions libraryOptions, List<FileSystemMetadata> fileSystemChildren, CancellationToken cancellationToken) Parameters Type Name Description MetadataRefreshOptions options LibraryOptions libraryOptions List < FileSystemMetadata > fileSystemChildren CancellationToken cancellationToken Returns Type Description Task < Boolean > RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) Declaration public async Task<ItemUpdateType> RefreshMetadata(MetadataRefreshOptions options, LibraryOptions libraryOptions, CancellationToken cancellationToken) Parameters Type Name Description MetadataRefreshOptions options LibraryOptions libraryOptions CancellationToken cancellationToken Returns Type Description Task < ItemUpdateType > RefreshMetadata(MetadataRefreshOptions, CancellationToken) Overrides the base implementation to refresh metadata for local trailers Declaration public Task<ItemUpdateType> RefreshMetadata(MetadataRefreshOptions options, CancellationToken cancellationToken) Parameters Type Name Description MetadataRefreshOptions options The options. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < ItemUpdateType > true if a provider reports we changed RefreshMetadata(CancellationToken) Declaration public Task RefreshMetadata(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) Declaration protected Task RefreshMetadataForOwnedItem(BaseItem ownedItem, MetadataRefreshOptions options, LibraryOptions libraryOptions, CancellationToken cancellationToken) Parameters Type Name Description BaseItem ownedItem MetadataRefreshOptions options LibraryOptions libraryOptions CancellationToken cancellationToken Returns Type Description Task RemoveCollection(Int64) Declaration public bool RemoveCollection(long collectionId) Parameters Type Name Description Int64 collectionId Returns Type Description Boolean RemoveImage(ItemImageInfo) Declaration public void RemoveImage(ItemImageInfo image) Parameters Type Name Description ItemImageInfo image RemoveImage(ImageType, String) Declaration public void RemoveImage(ImageType type, string path) Parameters Type Name Description ImageType type String path RemoveImages(List<ItemImageInfo>) Declaration public void RemoveImages(List<ItemImageInfo> deletedImages) Parameters Type Name Description List < ItemImageInfo > deletedImages ReorderImage(ImageType, Int32, Int32) Declaration public void ReorderImage(ImageType type, int originalIndex, int newIndex) Parameters Type Name Description ImageType type Int32 originalIndex Int32 newIndex RequiresRefresh(IDirectoryService) Declaration public virtual bool RequiresRefresh(IDirectoryService directoryService) Parameters Type Name Description IDirectoryService directoryService Returns Type Description Boolean SetCollections(IEnumerable<String>) Declaration public void SetCollections(IEnumerable<string> names) Parameters Type Name Description IEnumerable < String > names SetDisplayOrder(String) Declaration public virtual void SetDisplayOrder(string value) Parameters Type Name Description String value SetGenres(IEnumerable<String>) Declaration public void SetGenres(IEnumerable<string> names) Parameters Type Name Description IEnumerable < String > names SetImage(ItemImageInfo, Int32) Declaration public void SetImage(ItemImageInfo image, int index) Parameters Type Name Description ItemImageInfo image Int32 index SetImage(ItemImageInfo, Int32, Boolean) Declaration public void SetImage(ItemImageInfo image, int index, bool deleteExistingImage) Parameters Type Name Description ItemImageInfo image Int32 index Boolean deleteExistingImage SetParent(Folder) Declaration public void SetParent(Folder parent) Parameters Type Name Description Folder parent SetSortNameDirect(String) An optimization to avoid processing a value that's already been processed Declaration public void SetSortNameDirect(string sortName) Parameters Type Name Description String sortName SetStudios(IEnumerable<String>) Declaration public void SetStudios(IEnumerable<string> names) Parameters Type Name Description IEnumerable < String > names SetTags(IEnumerable<String>) Declaration public void SetTags(IEnumerable<string> names) Parameters Type Name Description IEnumerable < String > names SupportsPlayedStatus(LibraryOptions) Declaration public virtual bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() TriggerOnRefreshComplete() Declaration protected virtual void TriggerOnRefreshComplete() TriggerOnRefreshStart() Declaration protected virtual void TriggerOnRefreshStart() UpdateHideFromResume(User, UserItemData, Boolean) Declaration public virtual void UpdateHideFromResume(User user, UserItemData userData, bool hide) Parameters Type Name Description User user UserItemData userData Boolean hide UpdateRatingToItems(BaseItem[]) Updates the official rating based on content and returns true or false indicating if it changed. Declaration public bool UpdateRatingToItems(BaseItem[] children) Parameters Type Name Description BaseItem [] children Returns Type Description Boolean UpdateToRepository(ItemUpdateType) Declaration public void UpdateToRepository(ItemUpdateType updateReason) Parameters Type Name Description ItemUpdateType updateReason UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) Declaration public virtual void UpdateToRepository(ItemUpdateType updateReason, MetadataRefreshOptions metadataRefreshOptions) Parameters Type Name Description ItemUpdateType updateReason MetadataRefreshOptions metadataRefreshOptions Explicit Interface Implementations IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) Declaration ItemLookupInfo IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description ItemLookupInfo Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.BaseItemExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.BaseItemExtensions.html",
    "title": "Class BaseItemExtensions",
    "keywords": "Class BaseItemExtensions Inheritance Object BaseItemExtensions Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public static class BaseItemExtensions Methods GetImagePath(BaseItem, ImageType) Gets the image path. Declaration public static string GetImagePath(this BaseItem item, ImageType imageType) Parameters Type Name Description BaseItem item The item. ImageType imageType Type of the image. Returns Type Description String System.String. HasImage(BaseItem, ImageType) Declaration public static bool HasImage(this BaseItem item, ImageType imageType) Parameters Type Name Description BaseItem item ImageType imageType Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Book.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Book.html",
    "title": "Class Book",
    "keywords": "Class Book Inheritance Object BaseItem Book Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasLookupInfo < BookInfo > IHasSeries IHasSeriesName Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(Folder[]) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsPeople BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.GetDefaultPrimaryImageAspectRatio() BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public class Book : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasLookupInfo<BookInfo>, IHasSeries, IHasSeriesName Properties MediaType Declaration [IgnoreDataMember] public override string MediaType { get; } Property Value Type Description String Overrides BaseItem.MediaType SeriesId Declaration [IgnoreDataMember] public long SeriesId { get; set; } Property Value Type Description Int64 SeriesName Declaration [IgnoreDataMember] public string SeriesName { get; set; } Property Value Type Description String SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExternalTransfer SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios Methods CanDownload() Declaration public override bool CanDownload() Returns Type Description Boolean Overrides BaseItem.CanDownload() FindSeriesId() Declaration public long FindSeriesId() Returns Type Description Int64 FindSeriesName() Declaration public string FindSeriesName() Returns Type Description String FindSeriesPresentationUniqueKey() Declaration public string FindSeriesPresentationUniqueKey() Returns Type Description String FindSeriesSortName() Declaration public string FindSeriesSortName() Returns Type Description String GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetLookupInfo(LibraryOptions) Declaration public BookInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description BookInfo Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasLookupInfo<TLookupInfoType> IHasSeries IHasSeriesName Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.BoxSet.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.BoxSet.html",
    "title": "Class BoxSet",
    "keywords": "Class BoxSet Inheritance Object BaseItem Folder BoxSet Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IItemByName Inherited Members Folder.UserViewManager Folder.IsPreSorted Folder.IsPhysicalRoot Folder.IsResolvedToFolder Folder.IsTopParent Folder.IsFolder Folder.SupportsCumulativeRunTimeTicks Folder.FileNameWithoutExtension Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.IsVisibleViaTags(User) Folder.IsVisible(User) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.SortChildrenForValidation(BaseItem[]) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetChildCount(User) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SetDisplayOrder(String) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public class BoxSet : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IItemByName Properties ContainingFolderPath Returns the folder containing the item. If the item is a folder, it returns the folder itself Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String The containing folder path. Overrides BaseItem.ContainingFolderPath DisplayOrder Declaration [IgnoreDataMember] public CollectionDisplayOrder DisplayOrder { get; set; } Property Value Type Description CollectionDisplayOrder IsDisplayedAsFolder Declaration [IgnoreDataMember] public override bool IsDisplayedAsFolder { get; } Property Value Type Description Boolean Overrides Folder.IsDisplayedAsFolder SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsCollections Declaration [IgnoreDataMember] public override bool SupportsCollections { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsCollections SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides Folder.SupportsExternalTransfer SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios SupportsTags Declaration [IgnoreDataMember] public override bool SupportsTags { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsTags Methods AllowEditingField(MetadataFields) Declaration public override bool AllowEditingField(MetadataFields field) Parameters Type Name Description MetadataFields field Returns Type Description Boolean Overrides BaseItem.AllowEditingField(MetadataFields) CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides Folder.CanDelete(Folder[]) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetDisplayOrderIntValue() Declaration public override int? GetDisplayOrderIntValue() Returns Type Description Nullable < Int32 > Overrides BaseItem.GetDisplayOrderIntValue() GetInternalAncestorIds() Declaration public override IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetInternalAncestorIds() GetInternalMetadataPath(String) Declaration protected override string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String Overrides BaseItem.GetInternalMetadataPath(String) GetItemIdsInternal(InternalItemsQuery) Declaration protected override long[] GetItemIdsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] Overrides Folder.GetItemIdsInternal(InternalItemsQuery) GetItemsInternal(InternalItemsQuery) Declaration protected override QueryResult<BaseItem> GetItemsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Overrides Folder.GetItemsInternal(InternalItemsQuery) GetMediaContainingFolderPath(LibraryOptions) Declaration public override string GetMediaContainingFolderPath(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.GetMediaContainingFolderPath(LibraryOptions) GetTaggedItems(InternalItemsQuery) Declaration public long[] GetTaggedItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetTaggedItemsResult(InternalItemsQuery) Declaration public QueryResult<BaseItem> GetTaggedItemsResult(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > IsAuthorizedToDelete(User, Folder[]) Declaration public override bool IsAuthorizedToDelete(User user, Folder[] collectionFolders) Parameters Type Name Description User user Folder [] collectionFolders Returns Type Description Boolean Overrides BaseItem.IsAuthorizedToDelete(User, Folder[]) SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Declaration protected override Task ValidateChildrenInternal(IProgress<double> progress, CancellationToken cancellationToken, bool recursive, bool refreshChildMetadata, MetadataRefreshOptions refreshOptions, IDirectoryService directoryService) Parameters Type Name Description IProgress < Double > progress CancellationToken cancellationToken Boolean recursive Boolean refreshChildMetadata MetadataRefreshOptions refreshOptions IDirectoryService directoryService Returns Type Description Task Overrides Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IItemByName Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.CollectionFolder.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.CollectionFolder.html",
    "title": "Class CollectionFolder",
    "keywords": "Class CollectionFolder Specialized Folder class that points to a subset of the physical folders in the system. It is created from the user-specific folders within the system root Inheritance Object BaseItem Folder CollectionFolder Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > ICollectionFolder IHasCollectionType Inherited Members Folder.UserViewManager Folder.IsPreSorted Folder.IsPhysicalRoot Folder.IsResolvedToFolder Folder.IsTopParent Folder.IsFolder Folder.IsDisplayedAsFolder Folder.SupportsCumulativeRunTimeTicks Folder.SupportsExternalTransfer Folder.FileNameWithoutExtension Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.SortChildrenForValidation(BaseItem[]) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetChildCount(User) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class CollectionFolder : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, ICollectionFolder, IHasCollectionType Properties ApplicationHost Declaration public static IServerApplicationHost ApplicationHost { get; set; } Property Value Type Description IServerApplicationHost CollectionType Declaration [IgnoreDataMember] public string CollectionType { get; } Property Value Type Description String DisplayPreferencesId Allow different display preferences for each collection folder Declaration [IgnoreDataMember] public override Guid DisplayPreferencesId { get; } Property Value Type Description Guid The display prefs id. Overrides BaseItem.DisplayPreferencesId EnableItemChangeEvents Declaration [IgnoreDataMember] public bool EnableItemChangeEvents { get; } Property Value Type Description Boolean ForceDefaultAspectRatio Declaration [IgnoreDataMember] public override bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean Overrides BaseItem.ForceDefaultAspectRatio IsHidden Declaration [IgnoreDataMember] public override bool IsHidden { get; } Property Value Type Description Boolean Overrides BaseItem.IsHidden JsonSerializer Declaration public static IJsonSerializer JsonSerializer { get; set; } Property Value Type Description IJsonSerializer PhysicalFolderIds Gets or sets the tags. Declaration [IgnoreDataMember] public long[] PhysicalFolderIds { get; set; } Property Value Type Description Int64 [] The tags. SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsCollections Declaration [IgnoreDataMember] public override bool SupportsCollections { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsCollections SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsTags Declaration [IgnoreDataMember] public override bool SupportsTags { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsTags SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsThemeMedia SupportsUserData Declaration [IgnoreDataMember] public override bool SupportsUserData { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsUserData XmlSerializer Declaration public static IXmlSerializer XmlSerializer { get; set; } Property Value Type Description IXmlSerializer Methods BeforeMetadataRefresh(Boolean) Declaration public override bool BeforeMetadataRefresh(bool replaceAllMetdata) Parameters Type Name Description Boolean replaceAllMetdata Returns Type Description Boolean Overrides BaseItem.BeforeMetadataRefresh(Boolean) CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides Folder.CanDelete(Folder[]) FillItemLinks(List<(ItemLinkType, String, Int64)>) Declaration public override void FillItemLinks(List<(ItemLinkType, string, long)> itemLinks) Parameters Type Name Description List < (T1, T2, T3) < ItemLinkType , String , Int64 >> itemLinks Overrides BaseItem.FillItemLinks(List<(ItemLinkType, String, Int64)>) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetFileSystemChildren(IDirectoryService) Declaration protected override FileSystemMetadata[] GetFileSystemChildren(IDirectoryService directoryService) Parameters Type Name Description IDirectoryService directoryService Returns Type Description FileSystemMetadata [] Overrides BaseItem.GetFileSystemChildren(IDirectoryService) GetItemIdsInternal(InternalItemsQuery) Declaration protected override long[] GetItemIdsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] Overrides Folder.GetItemIdsInternal(InternalItemsQuery) GetItemsInternal(InternalItemsQuery) Declaration protected override QueryResult<BaseItem> GetItemsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Overrides Folder.GetItemsInternal(InternalItemsQuery) GetLatestItemsOrderBy() Declaration public (string, SortOrder)[] GetLatestItemsOrderBy() Returns Type Description (T1, T2) < String , SortOrder >[] GetLibraryOptions() Declaration public LibraryOptions GetLibraryOptions() Returns Type Description LibraryOptions GetLibraryOptions(ReadOnlySpan<Char>, Boolean) Declaration public static LibraryOptions GetLibraryOptions(ReadOnlySpan<char> path, bool createIfNotFound = true) Parameters Type Name Description ReadOnlySpan < Char > path Boolean createIfNotFound Returns Type Description LibraryOptions GetPhysicalFolderIds(User) Declaration public long[] GetPhysicalFolderIds(User user) Parameters Type Name Description User user Returns Type Description Int64 [] GetPhysicalFolders() Declaration public Folder[] GetPhysicalFolders() Returns Type Description Folder [] GetPhysicalFolders(User) Declaration public Folder[] GetPhysicalFolders(User user) Parameters Type Name Description User user Returns Type Description Folder [] GetRefreshProgress() Declaration public override double? GetRefreshProgress() Returns Type Description Nullable < Double > Overrides Folder.GetRefreshProgress() GetSupportedItemLinkTypes() Declaration public override List<ItemLinkType> GetSupportedItemLinkTypes() Returns Type Description List < ItemLinkType > Overrides BaseItem.GetSupportedItemLinkTypes() IsSaveLocalMetadataEnabled(LibraryOptions) Declaration public override bool IsSaveLocalMetadataEnabled(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) IsVisible(User) Declaration public override bool IsVisible(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides Folder.IsVisible(User) IsVisibleViaTags(User) Declaration protected override bool IsVisibleViaTags(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides Folder.IsVisibleViaTags(User) OnCollectionFolderChange() Declaration public static void OnCollectionFolderChange() RequiresRefresh(IDirectoryService) Declaration public override bool RequiresRefresh(IDirectoryService directoryService) Parameters Type Name Description IDirectoryService directoryService Returns Type Description Boolean Overrides BaseItem.RequiresRefresh(IDirectoryService) SaveLibraryOptions(ReadOnlySpan<Char>, LibraryOptions) Declaration public static void SaveLibraryOptions(ReadOnlySpan<char> path, LibraryOptions options) Parameters Type Name Description ReadOnlySpan < Char > path LibraryOptions options SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) UpdateLibraryOptions(LibraryOptions) Declaration public void UpdateLibraryOptions(LibraryOptions options) Parameters Type Name Description LibraryOptions options ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Compare our current children (presumably just read from the repo) with the current state of the file system and adjust for any changes Currently does not contain logic to maintain items that are unavailable in the file system Declaration protected override Task ValidateChildrenInternal(IProgress<double> progress, CancellationToken cancellationToken, bool recursive, bool refreshChildMetadata, MetadataRefreshOptions refreshOptions, IDirectoryService directoryService) Parameters Type Name Description IProgress < Double > progress The progress. CancellationToken cancellationToken The cancellation token. Boolean recursive if set to true [recursive]. Boolean refreshChildMetadata if set to true [refresh child metadata]. MetadataRefreshOptions refreshOptions The refresh options. IDirectoryService directoryService The directory service. Returns Type Description Task Task. Overrides Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Events LibraryOptionsUpdated Declaration public static event EventHandler<GenericEventArgs<Tuple<CollectionFolder, LibraryOptions>>> LibraryOptionsUpdated Event Type Type Description EventHandler < GenericEventArgs < Tuple < CollectionFolder , LibraryOptions >>> Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> ICollectionFolder IHasCollectionType Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.CollectionHelper.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.CollectionHelper.html",
    "title": "Class CollectionHelper",
    "keywords": "Class CollectionHelper Inheritance Object CollectionHelper Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public static class CollectionHelper Methods AddCollection(List<LinkedItemInfo>, LinkedItemInfo) Declaration public static bool AddCollection(List<LinkedItemInfo> current, LinkedItemInfo newEntry) Parameters Type Name Description List < LinkedItemInfo > current LinkedItemInfo newEntry Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.DayOfWeekHelper.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.DayOfWeekHelper.html",
    "title": "Class DayOfWeekHelper",
    "keywords": "Class DayOfWeekHelper Inheritance Object DayOfWeekHelper Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public static class DayOfWeekHelper Methods GetDaysOfWeek(DynamicDayOfWeek) Declaration public static List<DayOfWeek> GetDaysOfWeek(DynamicDayOfWeek day) Parameters Type Name Description DynamicDayOfWeek day Returns Type Description List < DayOfWeek > GetDaysOfWeek(List<DynamicDayOfWeek>) Declaration public static List<DayOfWeek> GetDaysOfWeek(List<DynamicDayOfWeek> days) Parameters Type Name Description List < DynamicDayOfWeek > days Returns Type Description List < DayOfWeek >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Extensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Extensions.html",
    "title": "Class Extensions",
    "keywords": "Class Extensions Class Extensions Inheritance Object Extensions Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public static class Extensions Methods AddTrailerUrl(BaseItem, String) Adds the trailer URL. Declaration public static void AddTrailerUrl(this BaseItem item, string url) Parameters Type Name Description BaseItem item String url"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Folder.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Folder.html",
    "title": "Class Folder",
    "keywords": "Class Folder Class Folder Inheritance Object BaseItem Folder Channel AggregateFolder MusicAlbum MusicArtist BoxSet CollectionFolder GameSystem PhotoAlbum Season Series UserRootFolder UserView Playlist Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsPeople BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.GetDefaultPrimaryImageAspectRatio() BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public class Folder : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo> Properties AllowRecursiveCounts Declaration [IgnoreDataMember] public bool AllowRecursiveCounts { get; } Property Value Type Description Boolean FileNameWithoutExtension Declaration [IgnoreDataMember] public override string FileNameWithoutExtension { get; } Property Value Type Description String Overrides BaseItem.FileNameWithoutExtension IsDisplayedAsFolder Declaration [IgnoreDataMember] public override bool IsDisplayedAsFolder { get; } Property Value Type Description Boolean Overrides BaseItem.IsDisplayedAsFolder IsFolder Gets a value indicating whether this instance is folder. Declaration [IgnoreDataMember] public override bool IsFolder { get; } Property Value Type Description Boolean true if this instance is folder; otherwise, false . Overrides BaseItem.IsFolder IsPhysicalRoot Declaration [IgnoreDataMember] public virtual bool IsPhysicalRoot { get; } Property Value Type Description Boolean IsPreSorted Declaration [IgnoreDataMember] public virtual bool IsPreSorted { get; } Property Value Type Description Boolean IsResolvedToFolder Declaration [IgnoreDataMember] public override bool IsResolvedToFolder { get; } Property Value Type Description Boolean Overrides BaseItem.IsResolvedToFolder IsTopParent Declaration [IgnoreDataMember] public override bool IsTopParent { get; } Property Value Type Description Boolean Overrides BaseItem.IsTopParent MarkDirectlyAsPlayed Declaration [IgnoreDataMember] protected virtual bool MarkDirectlyAsPlayed { get; } Property Value Type Description Boolean SupportsCumulativeRunTimeTicks Declaration [IgnoreDataMember] public virtual bool SupportsCumulativeRunTimeTicks { get; } Property Value Type Description Boolean SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExternalTransfer SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsInheritedParentImages SupportsOwnedItems Declaration [IgnoreDataMember] protected override bool SupportsOwnedItems { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsOwnedItems SupportsShortcutChildren Declaration [IgnoreDataMember] protected virtual bool SupportsShortcutChildren { get; } Property Value Type Description Boolean UserViewManager Declaration public static IUserViewManager UserViewManager { get; set; } Property Value Type Description IUserViewManager Methods AddChild(BaseItem) Adds the child. Declaration public void AddChild(BaseItem item) Parameters Type Name Description BaseItem item The item. CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides BaseItem.CanDelete(Folder[]) FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) Declaration protected virtual void FillPlayedStatus(UserItemDataDto dto, int? recursiveItemCount, User user, DtoOptions options, LibraryOptions libraryOptions) Parameters Type Name Description UserItemDataDto dto Nullable < Int32 > recursiveItemCount User user DtoOptions options LibraryOptions libraryOptions FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Declaration public override void FillUserDataDtoValues(UserItemDataDto dto, BaseItemDto itemDto, User user, DtoOptions options, LibraryOptions libraryOptions) Parameters Type Name Description UserItemDataDto dto BaseItemDto itemDto User user DtoOptions options LibraryOptions libraryOptions Overrides BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) GetChildCount(User) Declaration public virtual int GetChildCount(User user) Parameters Type Name Description User user Returns Type Description Int32 GetChildren(InternalItemsQuery) Declaration public BaseItem[] GetChildren(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description BaseItem [] GetChildren(User) Declaration public BaseItem[] GetChildren(User user) Parameters Type Name Description User user Returns Type Description BaseItem [] GetChildrenIds(InternalItemsQuery) Declaration public long[] GetChildrenIds(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetItemIdList(InternalItemsQuery) Declaration public long[] GetItemIdList(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetItemIdsInternal(InternalItemsQuery) Declaration protected virtual long[] GetItemIdsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetItemList(InternalItemsQuery) Declaration public BaseItem[] GetItemList(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description BaseItem [] GetItems(InternalItemsQuery) Declaration public QueryResult<BaseItem> GetItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > GetItemsInternal(InternalItemsQuery) Declaration protected virtual QueryResult<BaseItem> GetItemsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > GetNonCachedChildren(IDirectoryService, LibraryOptions) Get the children of this folder from the actual file system Declaration protected virtual List<BaseItem> GetNonCachedChildren(IDirectoryService directoryService, LibraryOptions libraryOptions) Parameters Type Name Description IDirectoryService directoryService LibraryOptions libraryOptions Returns Type Description List < BaseItem > GetRecursiveChildCount(User) Declaration public virtual int GetRecursiveChildCount(User user) Parameters Type Name Description User user Returns Type Description Int32 GetRecursiveChildren() Gets the recursive children. Declaration public BaseItem[] GetRecursiveChildren() Returns Type Description BaseItem [] IList{BaseItem}. GetRefreshProgress() Declaration public override double? GetRefreshProgress() Returns Type Description Nullable < Double > Overrides BaseItem.GetRefreshProgress() IsPlayed(User) Declaration public override bool IsPlayed(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides BaseItem.IsPlayed(User) IsUnplayed(User) Declaration public override bool IsUnplayed(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides BaseItem.IsUnplayed(User) IsVisible(User) Declaration public override bool IsVisible(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides BaseItem.IsVisible(User) IsVisibleViaTags(User) Declaration protected override bool IsVisibleViaTags(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides BaseItem.IsVisibleViaTags(User) MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Marks the played. Declaration public override void MarkPlayed(User user, DateTimeOffset? datePlayed, bool resetPosition) Parameters Type Name Description User user The user. Nullable < DateTimeOffset > datePlayed The date played. Boolean resetPosition if set to true [reset position]. Overrides BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) MarkUnplayed(User) Marks the unplayed. Declaration public override void MarkUnplayed(User user) Parameters Type Name Description User user The user. Overrides BaseItem.MarkUnplayed(User) QueryRecursive(InternalItemsQuery) Declaration public QueryResult<BaseItem> QueryRecursive(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > QueryRecursiveForItemIds(InternalItemsQuery) Declaration public long[] QueryRecursiveForItemIds(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] SortChildrenForValidation(BaseItem[]) Declaration protected virtual BaseItem[] SortChildrenForValidation(BaseItem[] children) Parameters Type Name Description BaseItem [] children Returns Type Description BaseItem [] SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides BaseItem.SupportsPlayedStatus(LibraryOptions) TriggerOnRefreshComplete() Declaration protected override void TriggerOnRefreshComplete() Overrides BaseItem.TriggerOnRefreshComplete() TriggerOnRefreshStart() Declaration protected override void TriggerOnRefreshStart() Overrides BaseItem.TriggerOnRefreshStart() ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Validates that the children of the folder still exist Declaration public Task ValidateChildren(IProgress<double> progress, CancellationToken cancellationToken, MetadataRefreshOptions metadataRefreshOptions, bool recursive = true) Parameters Type Name Description IProgress < Double > progress The progress. CancellationToken cancellationToken The cancellation token. MetadataRefreshOptions metadataRefreshOptions The metadata refresh options. Boolean recursive if set to true [recursive]. Returns Type Description Task Task. ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Validates the children internal. Declaration protected virtual async Task ValidateChildrenInternal(IProgress<double> progress, CancellationToken cancellationToken, bool recursive, bool refreshChildMetadata, MetadataRefreshOptions refreshOptions, IDirectoryService directoryService) Parameters Type Name Description IProgress < Double > progress The progress. CancellationToken cancellationToken The cancellation token. Boolean recursive if set to true [recursive]. Boolean refreshChildMetadata if set to true [refresh child metadata]. MetadataRefreshOptions refreshOptions The refresh options. IDirectoryService directoryService The directory service. Returns Type Description Task Task. Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Game.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Game.html",
    "title": "Class Game",
    "keywords": "Class Game Inheritance Object BaseItem Game Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasLookupInfo < GameInfo > IHasGameGenres Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(Folder[]) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.GetDefaultPrimaryImageAspectRatio() BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class Game : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasLookupInfo<GameInfo>, IHasGameGenres Properties MediaType Gets the type of the media. Declaration [IgnoreDataMember] public override string MediaType { get; } Property Value Type Description String The type of the media. Overrides BaseItem.MediaType SupportsEditingAlbum Declaration [IgnoreDataMember] public override bool SupportsEditingAlbum { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsEditingAlbum SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExternalTransfer SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsLocalTrailers Declaration [IgnoreDataMember] public override bool SupportsLocalTrailers { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsLocalTrailers SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsThemeMedia Methods CanDownload() Declaration public override bool CanDownload() Returns Type Description Boolean Overrides BaseItem.CanDownload() GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetDeletePaths(Boolean) Declaration public override List<FileSystemMetadata> GetDeletePaths(bool mediaFilesOnly) Parameters Type Name Description Boolean mediaFilesOnly Returns Type Description List < FileSystemMetadata > Overrides BaseItem.GetDeletePaths(Boolean) GetLookupInfo(LibraryOptions) Declaration public GameInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description GameInfo GetUserDataKey() Declaration public override string GetUserDataKey() Returns Type Description String Overrides BaseItem.GetUserDataKey() Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasLookupInfo<TLookupInfoType> IHasGameGenres Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.GameGenre.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.GameGenre.html",
    "title": "Class GameGenre",
    "keywords": "Class GameGenre Inheritance Object BaseItem GameGenre Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IItemByName Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.SupportsExternalTransfer BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class GameGenre : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IItemByName Properties ContainingFolderPath Returns the folder containing the item. If the item is a folder, it returns the folder itself Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String The containing folder path. Overrides BaseItem.ContainingFolderPath SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsTags Declaration [IgnoreDataMember] public override bool SupportsTags { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsTags Methods AllowEditingField(MetadataFields) Declaration public override bool AllowEditingField(MetadataFields field) Parameters Type Name Description MetadataFields field Returns Type Description Boolean Overrides BaseItem.AllowEditingField(MetadataFields) CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides BaseItem.CanDelete(Folder[]) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetInternalAncestorIds() Declaration public override IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetInternalAncestorIds() GetInternalMetadataPath(String) Declaration protected override string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String Overrides BaseItem.GetInternalMetadataPath(String) GetMediaContainingFolderPath(LibraryOptions) Declaration public override string GetMediaContainingFolderPath(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.GetMediaContainingFolderPath(LibraryOptions) GetTaggedItems(InternalItemsQuery) Declaration public long[] GetTaggedItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetTaggedItemsResult(InternalItemsQuery) Declaration public QueryResult<BaseItem> GetTaggedItemsResult(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IItemByName Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.GameSystem.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.GameSystem.html",
    "title": "Class GameSystem",
    "keywords": "Class GameSystem Class GameSystem Inheritance Object BaseItem Folder GameSystem Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasLookupInfo < GameSystemInfo > IHasGameGenres Inherited Members Folder.UserViewManager Folder.IsPreSorted Folder.IsPhysicalRoot Folder.IsResolvedToFolder Folder.IsTopParent Folder.IsFolder Folder.IsDisplayedAsFolder Folder.SupportsCumulativeRunTimeTicks Folder.SupportsExternalTransfer Folder.CanDelete(Folder[]) Folder.FileNameWithoutExtension Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.IsVisibleViaTags(User) Folder.IsVisible(User) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Folder.SortChildrenForValidation(BaseItem[]) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetChildCount(User) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetItemIdsInternal(InternalItemsQuery) Folder.GetItemsInternal(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.GetDefaultPrimaryImageAspectRatio() BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class GameSystem : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasLookupInfo<GameSystemInfo>, IHasGameGenres Properties DisplayPreferencesId Return the id that should be used to key display prefs for this item. Default is based on the type for everything except actual generic folders. Declaration [IgnoreDataMember] public override Guid DisplayPreferencesId { get; } Property Value Type Description Guid The display prefs id. Overrides BaseItem.DisplayPreferencesId SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople Methods GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetBlockUnratedValue(UserPolicy) Declaration protected override bool GetBlockUnratedValue(UserPolicy config) Parameters Type Name Description UserPolicy config Returns Type Description Boolean Overrides BaseItem.GetBlockUnratedValue(UserPolicy) GetLookupInfo(LibraryOptions) Declaration public GameSystemInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description GameSystemInfo SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasLookupInfo<TLookupInfoType> IHasGameGenres Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Genre.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Genre.html",
    "title": "Class Genre",
    "keywords": "Class Genre Class Genre Inheritance Object BaseItem Genre Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IItemByName Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class Genre : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IItemByName Properties ContainingFolderPath Returns the folder containing the item. If the item is a folder, it returns the folder itself Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String The containing folder path. Overrides BaseItem.ContainingFolderPath IsDisplayedAsFolder Declaration [IgnoreDataMember] public override bool IsDisplayedAsFolder { get; } Property Value Type Description Boolean Overrides BaseItem.IsDisplayedAsFolder SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExternalTransfer SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsTags Declaration [IgnoreDataMember] public override bool SupportsTags { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsTags Methods AllowEditingField(MetadataFields) Declaration public override bool AllowEditingField(MetadataFields field) Parameters Type Name Description MetadataFields field Returns Type Description Boolean Overrides BaseItem.AllowEditingField(MetadataFields) CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides BaseItem.CanDelete(Folder[]) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetInternalAncestorIds() Declaration public override IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetInternalAncestorIds() GetInternalMetadataPath(String) Declaration protected override string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String Overrides BaseItem.GetInternalMetadataPath(String) GetMediaContainingFolderPath(LibraryOptions) Declaration public override string GetMediaContainingFolderPath(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.GetMediaContainingFolderPath(LibraryOptions) GetTaggedItems(InternalItemsQuery) Declaration public long[] GetTaggedItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetTaggedItemsResult(InternalItemsQuery) Declaration public QueryResult<BaseItem> GetTaggedItemsResult(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IItemByName Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.html",
    "title": "Namespace MediaBrowser.Controller.Entities",
    "keywords": "Namespace MediaBrowser.Controller.Entities Classes AggregateFolder Specialized folder that can have items added to it's children by external entities. Used for our RootFolder so plug-ins can add items. BaseItem Class BaseItem BaseItemExtensions Book BoxSet CollectionFolder Specialized Folder class that points to a subset of the physical folders in the system. It is created from the user-specific folders within the system root CollectionHelper DayOfWeekHelper Extensions Class Extensions Folder Class Folder Game GameGenre GameSystem Class GameSystem Genre Class Genre InternalItemsQuery InternalPeopleQuery ItemImageInfo LinkedChild ListItem MusicVideo PeopleHelper Person This is the full Person object that can be retrieved with all of it's data. PersonInfo This is the small Person stub that is attached to BaseItems Photo PhotoAlbum Share Studio Class Studio Tag TagExtensions ThumbnailSetInfo Trailer Class Trailer User Class User UserItemData Class UserItemData UserRootFolder Special class used for User Roots. Children contain actual ones defined for this user PLUS the virtual folders from the physical root (added by plug-ins). UserView Video Class Video Interfaces ICollectionFolder This is just a marker interface to denote top level folders IHasCollectionType IHasGameGenres IHasMediaSources IHasProgramAttributes IHasSeries IHasSeriesName IHasShares IHasStartDate IItemByName Marker interface IMetadataContainer ISupportsBoxSetGrouping Marker interface to denote a class that supports being hidden underneath it's boxset. Just about anything can be placed into a boxset, but movies should also only appear underneath and not outside separately (subject to configuration)."
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.ICollectionFolder.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.ICollectionFolder.html",
    "title": "Interface ICollectionFolder",
    "keywords": "Interface ICollectionFolder This is just a marker interface to denote top level folders Inherited Members IHasCollectionType.CollectionType Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface ICollectionFolder : IHasCollectionType Properties EnableItemChangeEvents Declaration bool EnableItemChangeEvents { get; } Property Value Type Description Boolean Id Declaration Guid Id { get; } Property Value Type Description Guid Name Declaration string Name { get; } Property Value Type Description String Path Declaration string Path { get; } Property Value Type Description String Methods GetLatestItemsOrderBy() Declaration (string, SortOrder)[] GetLatestItemsOrderBy() Returns Type Description (T1, T2) < String , SortOrder >[] GetLibraryOptions() Declaration LibraryOptions GetLibraryOptions() Returns Type Description LibraryOptions"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.IHasCollectionType.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.IHasCollectionType.html",
    "title": "Interface IHasCollectionType",
    "keywords": "Interface IHasCollectionType Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface IHasCollectionType Properties CollectionType Declaration string CollectionType { get; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.IHasGameGenres.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.IHasGameGenres.html",
    "title": "Interface IHasGameGenres",
    "keywords": "Interface IHasGameGenres Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface IHasGameGenres"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.IHasMediaSources.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.IHasMediaSources.html",
    "title": "Interface IHasMediaSources",
    "keywords": "Interface IHasMediaSources Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface IHasMediaSources Properties Id Declaration Guid Id { get; set; } Property Value Type Description Guid Path Declaration string Path { get; } Property Value Type Description String RunTimeTicks Declaration long? RunTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > Methods GetMediaSources(User, Boolean, Boolean, LibraryOptions) Declaration List<MediaSourceInfo> GetMediaSources(User user, bool enableAlternateMediaSources, bool enablePathSubstitution, LibraryOptions libraryOptions) Parameters Type Name Description User user Boolean enableAlternateMediaSources Boolean enablePathSubstitution LibraryOptions libraryOptions Returns Type Description List < MediaSourceInfo > GetMediaStreams() Declaration List<MediaStream> GetMediaStreams() Returns Type Description List < MediaStream >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.IHasProgramAttributes.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.IHasProgramAttributes.html",
    "title": "Interface IHasProgramAttributes",
    "keywords": "Interface IHasProgramAttributes Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface IHasProgramAttributes Properties IsKids Declaration bool IsKids { get; set; } Property Value Type Description Boolean IsMovie Declaration bool IsMovie { get; set; } Property Value Type Description Boolean IsNews Declaration bool IsNews { get; set; } Property Value Type Description Boolean IsRepeat Declaration bool IsRepeat { get; set; } Property Value Type Description Boolean IsSeries Declaration bool IsSeries { get; set; } Property Value Type Description Boolean IsSports Declaration bool IsSports { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.IHasSeries.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.IHasSeries.html",
    "title": "Interface IHasSeries",
    "keywords": "Interface IHasSeries Inherited Members IHasSeriesName.SeriesName Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface IHasSeries : IHasSeriesName Properties SeriesId Declaration long SeriesId { get; set; } Property Value Type Description Int64 SeriesPresentationUniqueKey Declaration string SeriesPresentationUniqueKey { get; set; } Property Value Type Description String Methods FindSeriesId() Declaration long FindSeriesId() Returns Type Description Int64 FindSeriesName() Gets the name of the series. Declaration string FindSeriesName() Returns Type Description String The name of the series. FindSeriesPresentationUniqueKey() Declaration string FindSeriesPresentationUniqueKey() Returns Type Description String FindSeriesSortName() Declaration string FindSeriesSortName() Returns Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.IHasSeriesName.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.IHasSeriesName.html",
    "title": "Interface IHasSeriesName",
    "keywords": "Interface IHasSeriesName Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface IHasSeriesName Properties SeriesName Declaration string SeriesName { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.IHasShares.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.IHasShares.html",
    "title": "Interface IHasShares",
    "keywords": "Interface IHasShares Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface IHasShares Properties Shares Declaration Share[] Shares { get; set; } Property Value Type Description Share []"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.IHasStartDate.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.IHasStartDate.html",
    "title": "Interface IHasStartDate",
    "keywords": "Interface IHasStartDate Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface IHasStartDate Properties StartDate Declaration DateTimeOffset StartDate { get; set; } Property Value Type Description DateTimeOffset"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.IItemByName.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.IItemByName.html",
    "title": "Interface IItemByName",
    "keywords": "Interface IItemByName Marker interface Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface IItemByName Methods GetTaggedItems(InternalItemsQuery) Declaration long[] GetTaggedItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetTaggedItemsResult(InternalItemsQuery) Declaration QueryResult<BaseItem> GetTaggedItemsResult(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.IMetadataContainer.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.IMetadataContainer.html",
    "title": "Interface IMetadataContainer",
    "keywords": "Interface IMetadataContainer Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface IMetadataContainer Methods RefreshAllMetadata(MetadataRefreshOptions, LibraryOptions, IProgress<Double>, CancellationToken) Refreshes all metadata. Declaration Task RefreshAllMetadata(MetadataRefreshOptions refreshOptions, LibraryOptions libraryOptions, IProgress<double> progress, CancellationToken cancellationToken) Parameters Type Name Description MetadataRefreshOptions refreshOptions LibraryOptions libraryOptions IProgress < Double > progress CancellationToken cancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.InternalItemsQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.InternalItemsQuery.html",
    "title": "Class InternalItemsQuery",
    "keywords": "Class InternalItemsQuery Inheritance Object InternalItemsQuery Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class InternalItemsQuery Constructors InternalItemsQuery() Declaration public InternalItemsQuery() InternalItemsQuery(User) Declaration public InternalItemsQuery(User user) Parameters Type Name Description User user Properties AdjacentTo Declaration public long AdjacentTo { get; set; } Property Value Type Description Int64 AlbumArtistIds Declaration public long[] AlbumArtistIds { get; set; } Property Value Type Description Int64 [] AlbumArtistStartsWithOrGreater Declaration public string AlbumArtistStartsWithOrGreater { get; set; } Property Value Type Description String AlbumIds Declaration public long[] AlbumIds { get; set; } Property Value Type Description Int64 [] AllAlbumArtistIds Declaration public long[] AllAlbumArtistIds { get; set; } Property Value Type Description Int64 [] AllowedGlobalItemLinkTypes Declaration public ItemLinkType[] AllowedGlobalItemLinkTypes { get; set; } Property Value Type Description ItemLinkType [] AllowGlobalLists Declaration public bool AllowGlobalLists { get; set; } Property Value Type Description Boolean AllowOwnedItems Declaration public bool AllowOwnedItems { get; set; } Property Value Type Description Boolean AncestorIds Declaration public long[] AncestorIds { get; set; } Property Value Type Description Int64 [] AncestorWithPresentationUniqueKey Declaration public string AncestorWithPresentationUniqueKey { get; set; } Property Value Type Description String AnyProviderIdEquals Declaration public ICollection<KeyValuePair<string, string>> AnyProviderIdEquals { get; set; } Property Value Type Description ICollection < KeyValuePair < String , String >> AppearsInItemIds Declaration public long[] AppearsInItemIds { get; set; } Property Value Type Description Int64 [] ArtistIds Declaration public long[] ArtistIds { get; set; } Property Value Type Description Int64 [] ArtistStartsWithOrGreater Declaration public string ArtistStartsWithOrGreater { get; set; } Property Value Type Description String AudioCodecs Declaration public string[] AudioCodecs { get; set; } Property Value Type Description String [] AudioLanguages Declaration public string[] AudioLanguages { get; set; } Property Value Type Description String [] BlockUnratedItems Declaration public UnratedItem[] BlockUnratedItems { get; set; } Property Value Type Description UnratedItem [] CollectionIds Declaration public long[] CollectionIds { get; set; } Property Value Type Description Int64 [] Containers Declaration public string[] Containers { get; set; } Property Value Type Description String [] ContainsIndexNumber Declaration public int? ContainsIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > ContributingArtistIds Declaration public long[] ContributingArtistIds { get; set; } Property Value Type Description Int64 [] DtoOptions Declaration public DtoOptions DtoOptions { get; set; } Property Value Type Description DtoOptions EnableAutoSort Declaration public bool EnableAutoSort { get; set; } Property Value Type Description Boolean EnableGroupByMetadataKey Declaration public bool EnableGroupByMetadataKey { get; set; } Property Value Type Description Boolean EnableTotalRecordCount Declaration public bool EnableTotalRecordCount { get; set; } Property Value Type Description Boolean ExcludeArtistIds Declaration public long[] ExcludeArtistIds { get; set; } Property Value Type Description Int64 [] ExcludeInheritedTags Declaration public string[] ExcludeInheritedTags { get; set; } Property Value Type Description String [] ExcludeItemIds Declaration public long[] ExcludeItemIds { get; set; } Property Value Type Description Int64 [] ExcludeItemTypes Declaration public string[] ExcludeItemTypes { get; set; } Property Value Type Description String [] ExcludeOwnerIds Declaration public long[] ExcludeOwnerIds { get; set; } Property Value Type Description Int64 [] ExcludeProviderIds Declaration public Dictionary<string, string> ExcludeProviderIds { get; set; } Property Value Type Description Dictionary < String , String > ExcludeTags Declaration public string[] ExcludeTags { get; set; } Property Value Type Description String [] ExternalId Declaration public string ExternalId { get; set; } Property Value Type Description String ExtraTypes Declaration public ExtraType[] ExtraTypes { get; set; } Property Value Type Description ExtraType [] FirstAlbumArtistIds Declaration public long[] FirstAlbumArtistIds { get; set; } Property Value Type Description Int64 [] FixedType Declaration public Type FixedType { get; set; } Property Value Type Description Type ForceOriginalFolders Declaration public bool ForceOriginalFolders { get; set; } Property Value Type Description Boolean GenreIds Declaration public long[] GenreIds { get; set; } Property Value Type Description Int64 [] Genres Declaration public string[] Genres { get; set; } Property Value Type Description String [] GroupByAlbumId Declaration public bool GroupByAlbumId { get; set; } Property Value Type Description Boolean GroupByPresentationUniqueKey Declaration public bool? GroupByPresentationUniqueKey { get; set; } Property Value Type Description Nullable < Boolean > GroupBySeriesPresentationUniqueKey Declaration public bool GroupBySeriesPresentationUniqueKey { get; set; } Property Value Type Description Boolean GroupItemsIntoItemLinkType Declaration public ItemLinkType? GroupItemsIntoItemLinkType { get; set; } Property Value Type Description Nullable < ItemLinkType > GroupProgramsBySeries Declaration public bool GroupProgramsBySeries { get; set; } Property Value Type Description Boolean HasAired Declaration public bool? HasAired { get; set; } Property Value Type Description Nullable < Boolean > HasAnyProviderId Declaration public string[] HasAnyProviderId { get; set; } Property Value Type Description String [] HasChapterImageExtractionFailure Declaration public bool? HasChapterImageExtractionFailure { get; set; } Property Value Type Description Nullable < Boolean > HasChapterImages Declaration public bool? HasChapterImages { get; set; } Property Value Type Description Nullable < Boolean > HasChildIsKids Declaration public bool? HasChildIsKids { get; set; } Property Value Type Description Nullable < Boolean > HasChildIsMovie Declaration public bool? HasChildIsMovie { get; set; } Property Value Type Description Nullable < Boolean > HasChildIsNews Declaration public bool? HasChildIsNews { get; set; } Property Value Type Description Nullable < Boolean > HasChildIsSports Declaration public bool? HasChildIsSports { get; set; } Property Value Type Description Nullable < Boolean > HasContainer Declaration public bool? HasContainer { get; set; } Property Value Type Description Nullable < Boolean > HasDeadParentId Declaration public bool? HasDeadParentId { get; set; } Property Value Type Description Nullable < Boolean > HasExtra Declaration public bool? HasExtra { get; set; } Property Value Type Description Nullable < Boolean > HasExtraType Declaration public bool? HasExtraType { get; set; } Property Value Type Description Nullable < Boolean > HasIndexNumber Declaration public bool? HasIndexNumber { get; set; } Property Value Type Description Nullable < Boolean > HasIntroDetectionFailure Declaration public bool? HasIntroDetectionFailure { get; set; } Property Value Type Description Nullable < Boolean > HasLiveTvContent Declaration public bool HasLiveTvContent { get; } Property Value Type Description Boolean HasNoAudioTrackWithLanguage Declaration public string HasNoAudioTrackWithLanguage { get; set; } Property Value Type Description String HasNoExternalSubtitleTrackWithLanguage Declaration public string HasNoExternalSubtitleTrackWithLanguage { get; set; } Property Value Type Description String HasNoInternalSubtitleTrackWithLanguage Declaration public string HasNoInternalSubtitleTrackWithLanguage { get; set; } Property Value Type Description String HasNoSubtitleTrackWithLanguage Declaration public string HasNoSubtitleTrackWithLanguage { get; set; } Property Value Type Description String HasOfficialRating Declaration public bool? HasOfficialRating { get; set; } Property Value Type Description Nullable < Boolean > HasOverview Declaration public bool? HasOverview { get; set; } Property Value Type Description Nullable < Boolean > HasOwnerId Declaration public bool? HasOwnerId { get; set; } Property Value Type Description Nullable < Boolean > HasParentalRating Declaration public bool? HasParentalRating { get; set; } Property Value Type Description Nullable < Boolean > HasPath Declaration public bool? HasPath { get; set; } Property Value Type Description Nullable < Boolean > HasPrefix Declaration public bool? HasPrefix { get; set; } Property Value Type Description Nullable < Boolean > HasProductionYear Declaration public bool? HasProductionYear { get; set; } Property Value Type Description Nullable < Boolean > HasSameGenresFromItems Declaration public long[] HasSameGenresFromItems { get; set; } Property Value Type Description Int64 [] HasSubtitles Declaration public bool? HasSubtitles { get; set; } Property Value Type Description Nullable < Boolean > HasThemeSong Declaration public bool? HasThemeSong { get; set; } Property Value Type Description Nullable < Boolean > HasThemeVideo Declaration public bool? HasThemeVideo { get; set; } Property Value Type Description Nullable < Boolean > HasTrailer Declaration public bool? HasTrailer { get; set; } Property Value Type Description Nullable < Boolean > ImageTypes Declaration public ImageType[] ImageTypes { get; set; } Property Value Type Description ImageType [] IncludeHiddenUserViews Declaration public bool IncludeHiddenUserViews { get; set; } Property Value Type Description Boolean IncludeInheritedTags Declaration public string[] IncludeInheritedTags { get; set; } Property Value Type Description String [] IncludeItemTypes Declaration public string[] IncludeItemTypes { get; set; } Property Value Type Description String [] IncludeLiveTVView Declaration public bool IncludeLiveTVView { get; set; } Property Value Type Description Boolean IndexNumber Declaration public int? IndexNumber { get; set; } Property Value Type Description Nullable < Int32 > Is3D Declaration public bool? Is3D { get; set; } Property Value Type Description Nullable < Boolean > Is4K Declaration public bool? Is4K { get; set; } Property Value Type Description Nullable < Boolean > IsAiring Declaration public bool? IsAiring { get; set; } Property Value Type Description Nullable < Boolean > IsCollectionItemsQuery Declaration public bool IsCollectionItemsQuery { get; set; } Property Value Type Description Boolean IsDeadItemLink Declaration public bool? IsDeadItemLink { get; set; } Property Value Type Description Nullable < Boolean > IsDeadPerson Declaration public bool? IsDeadPerson { get; set; } Property Value Type Description Nullable < Boolean > IsFavorite Declaration public bool? IsFavorite { get; set; } Property Value Type Description Nullable < Boolean > IsFolder Declaration public bool? IsFolder { get; set; } Property Value Type Description Nullable < Boolean > IsHD Declaration public bool? IsHD { get; set; } Property Value Type Description Nullable < Boolean > IsHiddenFromResume Declaration public bool? IsHiddenFromResume { get; set; } Property Value Type Description Nullable < Boolean > IsInProgress Declaration public bool? IsInProgress { get; set; } Property Value Type Description Nullable < Boolean > IsInSeasonWithMultipleEpisodes Declaration public bool IsInSeasonWithMultipleEpisodes { get; set; } Property Value Type Description Boolean IsKids Declaration public bool? IsKids { get; set; } Property Value Type Description Nullable < Boolean > IsLiked Declaration public bool? IsLiked { get; set; } Property Value Type Description Nullable < Boolean > IsLocked Declaration public bool? IsLocked { get; set; } Property Value Type Description Nullable < Boolean > IsMovie Declaration public bool? IsMovie { get; set; } Property Value Type Description Nullable < Boolean > IsNews Declaration public bool? IsNews { get; set; } Property Value Type Description Nullable < Boolean > IsNextUpQuery Declaration public bool IsNextUpQuery { get; set; } Property Value Type Description Boolean IsPlayed Declaration public bool? IsPlayed { get; set; } Property Value Type Description Nullable < Boolean > IsResumable Declaration public bool? IsResumable { get; set; } Property Value Type Description Nullable < Boolean > IsSeries Declaration public bool? IsSeries { get; set; } Property Value Type Description Nullable < Boolean > IsSingleColumnQuery Declaration public bool IsSingleColumnQuery { get; set; } Property Value Type Description Boolean IsSpecialSeason Declaration public bool? IsSpecialSeason { get; set; } Property Value Type Description Nullable < Boolean > IsSports Declaration public bool? IsSports { get; set; } Property Value Type Description Nullable < Boolean > IsUnaired Declaration public bool? IsUnaired { get; set; } Property Value Type Description Nullable < Boolean > IsVirtualItem Declaration public bool? IsVirtualItem { get; set; } Property Value Type Description Nullable < Boolean > ItemIds Declaration public long[] ItemIds { get; set; } Property Value Type Description Int64 [] Limit Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > ListIds Declaration public long[] ListIds { get; set; } Property Value Type Description Int64 [] ListItemIds Declaration public long[] ListItemIds { get; set; } Property Value Type Description Int64 [] MaxDateCreated Declaration public DateTimeOffset? MaxDateCreated { get; set; } Property Value Type Description Nullable < DateTimeOffset > MaxDateLastSaved Declaration public DateTimeOffset? MaxDateLastSaved { get; set; } Property Value Type Description Nullable < DateTimeOffset > MaxEndDate Declaration public DateTimeOffset? MaxEndDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > MaxHeight Declaration public int? MaxHeight { get; set; } Property Value Type Description Nullable < Int32 > MaxListOrder Declaration public int? MaxListOrder { get; set; } Property Value Type Description Nullable < Int32 > MaxParentalRating Declaration public int? MaxParentalRating { get; set; } Property Value Type Description Nullable < Int32 > MaxPlayers Declaration public int? MaxPlayers { get; set; } Property Value Type Description Nullable < Int32 > MaxPremiereDate Declaration public DateTimeOffset? MaxPremiereDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > MaxStartDate Declaration public DateTimeOffset? MaxStartDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > MaxWidth Declaration public int? MaxWidth { get; set; } Property Value Type Description Nullable < Int32 > MediaTypes Declaration public string[] MediaTypes { get; set; } Property Value Type Description String [] MinCommunityRating Declaration public double? MinCommunityRating { get; set; } Property Value Type Description Nullable < Double > MinCriticRating Declaration public double? MinCriticRating { get; set; } Property Value Type Description Nullable < Double > MinDateCreated Declaration public DateTimeOffset? MinDateCreated { get; set; } Property Value Type Description Nullable < DateTimeOffset > MinDateLastSaved Declaration public DateTimeOffset? MinDateLastSaved { get; set; } Property Value Type Description Nullable < DateTimeOffset > MinDateLastSavedForUser Declaration public DateTimeOffset? MinDateLastSavedForUser { get; set; } Property Value Type Description Nullable < DateTimeOffset > MinEndDate Declaration public DateTimeOffset? MinEndDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > MinHeight Declaration public int? MinHeight { get; set; } Property Value Type Description Nullable < Int32 > MinIndexNumber Declaration public int? MinIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > MinParentalRating Declaration public int? MinParentalRating { get; set; } Property Value Type Description Nullable < Int32 > MinPlayers Declaration public int? MinPlayers { get; set; } Property Value Type Description Nullable < Int32 > MinPremiereDate Declaration public DateTimeOffset? MinPremiereDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > MinRunTimeTicks Declaration public long? MinRunTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > MinSimilarityScore Declaration public int MinSimilarityScore { get; set; } Property Value Type Description Int32 MinSortIndexNumber Declaration public int? MinSortIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > MinSortName Declaration public string MinSortName { get; set; } Property Value Type Description String MinStartDate Declaration public DateTimeOffset? MinStartDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > MinWidth Declaration public int? MinWidth { get; set; } Property Value Type Description Nullable < Int32 > MissingAllProviderIds Declaration public string[] MissingAllProviderIds { get; set; } Property Value Type Description String [] MissingAnyProviderId Declaration public string[] MissingAnyProviderId { get; set; } Property Value Type Description String [] Name Declaration public string Name { get; set; } Property Value Type Description String NameContains Declaration public string NameContains { get; set; } Property Value Type Description String NameLessThan Declaration public string NameLessThan { get; set; } Property Value Type Description String NameStartsWith Declaration public string NameStartsWith { get; set; } Property Value Type Description String NameStartsWithOrGreater Declaration public string NameStartsWithOrGreater { get; set; } Property Value Type Description String NotSyncedToTargetId Declaration public string NotSyncedToTargetId { get; set; } Property Value Type Description String OfficialRatings Declaration public string[] OfficialRatings { get; set; } Property Value Type Description String [] OrderBy Declaration public (string, SortOrder)[] OrderBy { get; set; } Property Value Type Description (T1, T2) < String , SortOrder >[] OuterItemIds Declaration public long[] OuterItemIds { get; set; } Property Value Type Description Int64 [] OverviewContains Declaration public string OverviewContains { get; set; } Property Value Type Description String OwnerId Declaration public long OwnerId { get; set; } Property Value Type Description Int64 OwnerWithPresentationUniqueKey Declaration public string OwnerWithPresentationUniqueKey { get; set; } Property Value Type Description String OwnerWithPresentationUniqueKeyFromItemId Declaration public long OwnerWithPresentationUniqueKeyFromItemId { get; set; } Property Value Type Description Int64 Parent Declaration public BaseItem Parent { set; } Property Value Type Description BaseItem ParentIds Declaration public long[] ParentIds { get; set; } Property Value Type Description Int64 [] ParentIndexNumber Declaration public int? ParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > ParentIndexNumberNotEquals Declaration public int? ParentIndexNumberNotEquals { get; set; } Property Value Type Description Nullable < Int32 > ParentIndexNumberOrAncestorWithPresentationUniqueKey Declaration public Tuple<int?, string> ParentIndexNumberOrAncestorWithPresentationUniqueKey { get; set; } Property Value Type Description Tuple < Nullable < Int32 >, String > ParentType Declaration public string ParentType { get; set; } Property Value Type Description String Path Declaration public string Path { get; set; } Property Value Type Description String PathNotStartsWith Declaration public string PathNotStartsWith { get; set; } Property Value Type Description String PathStartsWith Declaration public string PathStartsWith { get; set; } Property Value Type Description String PersonIds Declaration public long[] PersonIds { get; set; } Property Value Type Description Int64 [] PersonTypes Declaration public PersonType[] PersonTypes { get; set; } Property Value Type Description PersonType [] PresentationUniqueKey Declaration public string PresentationUniqueKey { get; set; } Property Value Type Description String PresentationUniqueKeyNotEquals Declaration public string PresentationUniqueKeyNotEquals { get; set; } Property Value Type Description String Recursive Declaration public bool Recursive { get; set; } Property Value Type Description Boolean RecursiveTaggedItems Declaration public bool RecursiveTaggedItems { get; } Property Value Type Description Boolean SearchTerm Declaration public string SearchTerm { get; set; } Property Value Type Description String SeriesNameOrNameContains Declaration public string SeriesNameOrNameContains { get; set; } Property Value Type Description String SeriesPresentationUniqueKey Declaration public string SeriesPresentationUniqueKey { get; set; } Property Value Type Description String SeriesStatuses Declaration public SeriesStatus[] SeriesStatuses { get; set; } Property Value Type Description SeriesStatus [] SeriesTimerId Declaration public string SeriesTimerId { get; set; } Property Value Type Description String SimilarTo Declaration public BaseItem SimilarTo { get; set; } Property Value Type Description BaseItem SortParentIndexNumber Declaration public int? SortParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > SortParentIndexNumberNotEquals Declaration public int? SortParentIndexNumberNotEquals { get; set; } Property Value Type Description Nullable < Int32 > SortParentIndexNumberOrAncestorWithPresentationUniqueKey Declaration public Tuple<int?, string> SortParentIndexNumberOrAncestorWithPresentationUniqueKey { get; set; } Property Value Type Description Tuple < Nullable < Int32 >, String > StartIndex Declaration public int? StartIndex { get; set; } Property Value Type Description Nullable < Int32 > StudioIds Declaration public long[] StudioIds { get; set; } Property Value Type Description Int64 [] SubtitleCodecs Declaration public string[] SubtitleCodecs { get; set; } Property Value Type Description String [] SubtitleLanguages Declaration public string[] SubtitleLanguages { get; set; } Property Value Type Description String [] TagIds Declaration public long[] TagIds { get; set; } Property Value Type Description Int64 [] TagNamesCached Declaration public bool TagNamesCached { get; set; } Property Value Type Description Boolean Tags Declaration public string[] Tags { get; set; } Property Value Type Description String [] TopParentIds Declaration public long[] TopParentIds { get; set; } Property Value Type Description Int64 [] User Declaration public User User { get; set; } Property Value Type Description User VideoCodecs Declaration public string[] VideoCodecs { get; set; } Property Value Type Description String [] WithImportedCollectionMatchingProviderId Declaration public Dictionary<string, string> WithImportedCollectionMatchingProviderId { get; set; } Property Value Type Description Dictionary < String , String > WithImportedCollectionName Declaration public string WithImportedCollectionName { get; set; } Property Value Type Description String WithoutChapterMarkers Declaration public MarkerType[] WithoutChapterMarkers { get; set; } Property Value Type Description MarkerType [] Years Declaration public int[] Years { get; set; } Property Value Type Description Int32 [] Methods SetUser(User) Declaration public void SetUser(User user) Parameters Type Name Description User user"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.InternalPeopleQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.InternalPeopleQuery.html",
    "title": "Class InternalPeopleQuery",
    "keywords": "Class InternalPeopleQuery Inheritance Object InternalPeopleQuery Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class InternalPeopleQuery Constructors InternalPeopleQuery() Declaration public InternalPeopleQuery() Properties EnableGroupByName Declaration public bool EnableGroupByName { get; set; } Property Value Type Description Boolean EnableGuids Declaration public bool EnableGuids { get; set; } Property Value Type Description Boolean EnableIds Declaration public bool EnableIds { get; set; } Property Value Type Description Boolean EnableImages Declaration public bool EnableImages { get; set; } Property Value Type Description Boolean EnableProviderIds Declaration public bool EnableProviderIds { get; set; } Property Value Type Description Boolean ItemIds Declaration public long[] ItemIds { get; set; } Property Value Type Description Int64 [] MaxListOrder Declaration public int? MaxListOrder { get; set; } Property Value Type Description Nullable < Int32 > PersonTypes Declaration public PersonType[] PersonTypes { get; set; } Property Value Type Description PersonType []"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.ISupportsBoxSetGrouping.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.ISupportsBoxSetGrouping.html",
    "title": "Interface ISupportsBoxSetGrouping",
    "keywords": "Interface ISupportsBoxSetGrouping Marker interface to denote a class that supports being hidden underneath it's boxset. Just about anything can be placed into a boxset, but movies should also only appear underneath and not outside separately (subject to configuration). Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public interface ISupportsBoxSetGrouping"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.ItemImageInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.ItemImageInfo.html",
    "title": "Class ItemImageInfo",
    "keywords": "Class ItemImageInfo Inheritance Object ItemImageInfo Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class ItemImageInfo Properties DateModified Gets or sets the date modified. Declaration public DateTimeOffset DateModified { get; set; } Property Value Type Description DateTimeOffset The date modified. Height Declaration public int Height { get; set; } Property Value Type Description Int32 IsLocalFile Declaration [IgnoreDataMember] public bool IsLocalFile { get; } Property Value Type Description Boolean Orientation Declaration public ImageOrientation? Orientation { get; set; } Property Value Type Description Nullable < ImageOrientation > Path Gets or sets the path. Declaration public string Path { get; set; } Property Value Type Description String The path. Type Gets or sets the type. Declaration public ImageType Type { get; set; } Property Value Type Description ImageType The type. Width Declaration public int Width { get; set; } Property Value Type Description Int32 Methods GetDisplayAspectRatio() Declaration public double GetDisplayAspectRatio() Returns Type Description Double GetDisplayAspectRatio(ImageSize, Nullable<ImageOrientation>) Declaration public static double GetDisplayAspectRatio(ImageSize size, ImageOrientation? orientation) Parameters Type Name Description ImageSize size Nullable < ImageOrientation > orientation Returns Type Description Double Reset(FileSystemMetadata) Declaration public void Reset(FileSystemMetadata file) Parameters Type Name Description FileSystemMetadata file"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.LinkedChild.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.LinkedChild.html",
    "title": "Class LinkedChild",
    "keywords": "Class LinkedChild Inheritance Object LinkedChild Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class LinkedChild Properties LibraryItemId Declaration public Guid LibraryItemId { get; set; } Property Value Type Description Guid Path Declaration public string Path { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.ListItem.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.ListItem.html",
    "title": "Class ListItem",
    "keywords": "Class ListItem Inheritance Object ListItem Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class ListItem Properties ListItemEntryId Declaration public long ListItemEntryId { get; set; } Property Value Type Description Int64 ListItemId Declaration public long ListItemId { get; set; } Property Value Type Description Int64"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Movies.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Movies.html",
    "title": "Namespace MediaBrowser.Controller.Entities.Movies",
    "keywords": "Namespace MediaBrowser.Controller.Entities.Movies Classes Movie Class Movie"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Movies.Movie.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Movies.Movie.html",
    "title": "Class Movie",
    "keywords": "Class Movie Class Movie Inheritance Object BaseItem Video Movie Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasMediaSources IHasLookupInfo < MovieInfo > ISupportsBoxSetGrouping Inherited Members Video.Video3DFormat Video.SupportsPlayedStatus(LibraryOptions) Video.SupportsPeople Video.SupportsStudios Video.SupportsGenres Video.SupportsThemeMedia Video.SupportsLocalTrailers Video.SupportsExtras Video.GetSupportsPositionTicksResume(LibraryOptions) Video.SplitVersion() Video.CreatePresentationUniqueKey(LibraryOptions) Video.GetRelatedUrls() Video.CanDownload() Video.SupportsExternalTransfer Video.LiveTvManager Video.IsActiveRecording() Video.GetRunTimeTicksForPlayState() Video.EnableDefaultVideoUserDataKeys Video.GetUserDataKey() Video.GetUserDataKey(BaseItem) Video.ContainingFolderPath Video.IsResolvedToFolder Video.FileNameWithoutExtension Video.Is3D Video.MediaType Video.GetDeletePaths(Boolean) Video.GetDefaultVideoStream() Video.GetAlternateVersionIds() Video.IsSecondaryMergedItemInSameFolder() Video.GetAllItemsForMediaSources(User, Boolean) Video.SupportsThumbnails Video.EnableAlternateVersions Video.GetMetadataFolderThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService) Video.GetLocalThumbnailSetInfos(ReadOnlySpan<Char>, IDirectoryService) Video.GetThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService) Video.GetThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService, Int32, Boolean) Video.CreateBif(Stream, Int32, List<FileSystemMetadata>) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(Folder[]) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.CreatePresentationUniqueKey() BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities.Movies Assembly : MediaBrowser.Controller.dll Syntax public class Movie : Video, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasMediaSources, IHasLookupInfo<MovieInfo>, ISupportsBoxSetGrouping Properties ForceDefaultAspectRatio Declaration [IgnoreDataMember] public override bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean Overrides BaseItem.ForceDefaultAspectRatio Methods BeforeMetadataRefresh(Boolean) Declaration public override bool BeforeMetadataRefresh(bool replaceAllMetdata) Parameters Type Name Description Boolean replaceAllMetdata Returns Type Description Boolean Overrides BaseItem.BeforeMetadataRefresh(Boolean) GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetLookupInfo(LibraryOptions) Declaration public MovieInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description MovieInfo Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasMediaSources IHasLookupInfo<TLookupInfoType> ISupportsBoxSetGrouping Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.MusicVideo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.MusicVideo.html",
    "title": "Class MusicVideo",
    "keywords": "Class MusicVideo Inheritance Object BaseItem Video MusicVideo Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasMediaSources IHasArtist IHasAlbum IHasMusicGenres IHasLookupInfo < MusicVideoInfo > Inherited Members Video.Video3DFormat Video.SupportsPlayedStatus(LibraryOptions) Video.SupportsPeople Video.SupportsStudios Video.SupportsGenres Video.SupportsThemeMedia Video.SupportsLocalTrailers Video.SupportsExtras Video.GetSupportsPositionTicksResume(LibraryOptions) Video.SplitVersion() Video.CreatePresentationUniqueKey(LibraryOptions) Video.GetRelatedUrls() Video.CanDownload() Video.SupportsExternalTransfer Video.LiveTvManager Video.IsActiveRecording() Video.GetRunTimeTicksForPlayState() Video.EnableDefaultVideoUserDataKeys Video.GetUserDataKey() Video.GetUserDataKey(BaseItem) Video.ContainingFolderPath Video.IsResolvedToFolder Video.FileNameWithoutExtension Video.Is3D Video.MediaType Video.GetDeletePaths(Boolean) Video.GetDefaultVideoStream() Video.GetAlternateVersionIds() Video.IsSecondaryMergedItemInSameFolder() Video.GetAllItemsForMediaSources(User, Boolean) Video.SupportsThumbnails Video.EnableAlternateVersions Video.GetMetadataFolderThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService) Video.GetLocalThumbnailSetInfos(ReadOnlySpan<Char>, IDirectoryService) Video.GetThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService) Video.GetThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService, Int32, Boolean) Video.CreateBif(Stream, Int32, List<FileSystemMetadata>) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(Folder[]) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.CreatePresentationUniqueKey() BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class MusicVideo : Video, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasMediaSources, IHasArtist, IHasAlbum, IHasMusicGenres, IHasLookupInfo<MusicVideoInfo> Constructors MusicVideo() Declaration public MusicVideo() Properties ArtistItems Gets or sets the artists. Declaration [IgnoreDataMember] public LinkedItemInfo[] ArtistItems { get; set; } Property Value Type Description LinkedItemInfo [] The artists. Artists Declaration [IgnoreDataMember] public string[] Artists { get; set; } Property Value Type Description String [] Composers Gets or sets the composers. Declaration [IgnoreDataMember] public LinkedItemInfo[] Composers { get; set; } Property Value Type Description LinkedItemInfo [] The composers. Methods BeforeMetadataRefresh(Boolean) Declaration public override bool BeforeMetadataRefresh(bool replaceAllMetdata) Parameters Type Name Description Boolean replaceAllMetdata Returns Type Description Boolean Overrides BaseItem.BeforeMetadataRefresh(Boolean) GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetLookupInfo(LibraryOptions) Declaration public MusicVideoInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description MusicVideoInfo Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasMediaSources IHasArtist IHasAlbum IHasMusicGenres IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String) HasArtistExtensions.SetArtists(IHasArtist, IEnumerable<String>) HasArtistExtensions.AddArtist(IHasArtist, String) HasArtistExtensions.SetComposers(IHasArtist, IEnumerable<String>)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.PeopleHelper.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.PeopleHelper.html",
    "title": "Class PeopleHelper",
    "keywords": "Class PeopleHelper Inheritance Object PeopleHelper Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public static class PeopleHelper Methods AddPerson(List<PersonInfo>, PersonInfo) Declaration public static void AddPerson(List<PersonInfo> people, PersonInfo person) Parameters Type Name Description List < PersonInfo > people PersonInfo person ContainsPerson(List<PersonInfo>, String) Declaration public static bool ContainsPerson(List<PersonInfo> people, string name) Parameters Type Name Description List < PersonInfo > people String name Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Person.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Person.html",
    "title": "Class Person",
    "keywords": "Class Person This is the full Person object that can be retrieved with all of it's data. Inheritance Object BaseItem Person Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IItemByName IHasLookupInfo < PersonLookupInfo > Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.SupportsExternalTransfer BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class Person : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IItemByName, IHasLookupInfo<PersonLookupInfo> Properties ContainingFolderPath Returns the folder containing the item. If the item is a folder, it returns the folder itself Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String The containing folder path. Overrides BaseItem.ContainingFolderPath EnableAlphaNumericSorting Declaration [IgnoreDataMember] public override bool EnableAlphaNumericSorting { get; } Property Value Type Description Boolean Overrides BaseItem.EnableAlphaNumericSorting ForceDefaultAspectRatio Declaration [IgnoreDataMember] public override bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean Overrides BaseItem.ForceDefaultAspectRatio SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople Methods AllowEditingField(MetadataFields) Declaration public override bool AllowEditingField(MetadataFields field) Parameters Type Name Description MetadataFields field Returns Type Description Boolean Overrides BaseItem.AllowEditingField(MetadataFields) CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides BaseItem.CanDelete(Folder[]) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetInternalAncestorIds() Declaration public override IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetInternalAncestorIds() GetInternalMetadataPath(String) Declaration protected override string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String Overrides BaseItem.GetInternalMetadataPath(String) GetLookupInfo(LibraryOptions) Declaration public PersonLookupInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description PersonLookupInfo GetMediaContainingFolderPath(LibraryOptions) Declaration public override string GetMediaContainingFolderPath(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.GetMediaContainingFolderPath(LibraryOptions) GetTaggedItems(InternalItemsQuery) Declaration public long[] GetTaggedItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetTaggedItemsResult(InternalItemsQuery) Declaration public QueryResult<BaseItem> GetTaggedItemsResult(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > GetUserDataKey() Declaration public override string GetUserDataKey() Returns Type Description String Overrides BaseItem.GetUserDataKey() Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IItemByName IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.PersonInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.PersonInfo.html",
    "title": "Class PersonInfo",
    "keywords": "Class PersonInfo This is the small Person stub that is attached to BaseItems Inheritance Object PersonInfo Implements IHasProviderIds Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class PersonInfo : IHasProviderIds Properties Guid Declaration public Guid Guid { get; set; } Property Value Type Description Guid Id Declaration public long Id { get; set; } Property Value Type Description Int64 ImageInfos Declaration public ItemImageInfo[] ImageInfos { get; set; } Property Value Type Description ItemImageInfo [] ImageUrl Declaration public string ImageUrl { get; set; } Property Value Type Description String ItemId Declaration public long ItemId { get; set; } Property Value Type Description Int64 Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. ProviderIds Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary Role Gets or sets the role. Declaration public string Role { get; set; } Property Value Type Description String The role. Type Gets or sets the type. Declaration public PersonType Type { get; set; } Property Value Type Description PersonType The type. Methods IsType(PersonType) Declaration public bool IsType(PersonType type) Parameters Type Name Description PersonType type Returns Type Description Boolean ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Photo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Photo.html",
    "title": "Class Photo",
    "keywords": "Class Photo Inheritance Object BaseItem Photo Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasAlbum Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(Folder[]) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsPeople BaseItem.SupportsStudios BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class Photo : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasAlbum Properties AlbumEntity Declaration [IgnoreDataMember] public PhotoAlbum AlbumEntity { get; } Property Value Type Description PhotoAlbum Altitude Declaration public double? Altitude { get; set; } Property Value Type Description Nullable < Double > Aperture Declaration public double? Aperture { get; set; } Property Value Type Description Nullable < Double > CameraMake Declaration public string CameraMake { get; set; } Property Value Type Description String CameraModel Declaration public string CameraModel { get; set; } Property Value Type Description String ExposureTime Declaration public double? ExposureTime { get; set; } Property Value Type Description Nullable < Double > FocalLength Declaration public double? FocalLength { get; set; } Property Value Type Description Nullable < Double > ForceDefaultAspectRatio Declaration [IgnoreDataMember] public override bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean Overrides BaseItem.ForceDefaultAspectRatio IsoSpeedRating Declaration public int? IsoSpeedRating { get; set; } Property Value Type Description Nullable < Int32 > Latitude Declaration public double? Latitude { get; set; } Property Value Type Description Nullable < Double > Longitude Declaration public double? Longitude { get; set; } Property Value Type Description Nullable < Double > MediaType Declaration [IgnoreDataMember] public override string MediaType { get; } Property Value Type Description String Overrides BaseItem.MediaType Orientation Declaration public ImageOrientation? Orientation { get; set; } Property Value Type Description Nullable < ImageOrientation > ShutterSpeed Declaration public double? ShutterSpeed { get; set; } Property Value Type Description Nullable < Double > Software Declaration public string Software { get; set; } Property Value Type Description String SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExternalTransfer SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsInheritedParentImages Methods CanDownload() Declaration public override bool CanDownload() Returns Type Description Boolean Overrides BaseItem.CanDownload() GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasAlbum Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.PhotoAlbum.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.PhotoAlbum.html",
    "title": "Class PhotoAlbum",
    "keywords": "Class PhotoAlbum Inheritance Object BaseItem Folder PhotoAlbum Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > Inherited Members Folder.UserViewManager Folder.IsPreSorted Folder.IsPhysicalRoot Folder.IsResolvedToFolder Folder.IsTopParent Folder.IsFolder Folder.IsDisplayedAsFolder Folder.SupportsCumulativeRunTimeTicks Folder.SupportsExternalTransfer Folder.CanDelete(Folder[]) Folder.FileNameWithoutExtension Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.IsVisibleViaTags(User) Folder.IsVisible(User) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Folder.SortChildrenForValidation(BaseItem[]) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetChildCount(User) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetItemIdsInternal(InternalItemsQuery) Folder.GetItemsInternal(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsPeople BaseItem.SupportsStudios BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class PhotoAlbum : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo> Properties SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages Methods GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Share.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Share.html",
    "title": "Class Share",
    "keywords": "Class Share Inheritance Object Share Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class Share Properties CanEdit Declaration public bool CanEdit { get; set; } Property Value Type Description Boolean UserId Declaration public string UserId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Studio.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Studio.html",
    "title": "Class Studio",
    "keywords": "Class Studio Class Studio Inheritance Object BaseItem Studio Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IItemByName Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.SupportsExternalTransfer BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class Studio : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IItemByName Properties ContainingFolderPath Returns the folder containing the item. If the item is a folder, it returns the folder itself Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String The containing folder path. Overrides BaseItem.ContainingFolderPath ForceDefaultAspectRatio Declaration [IgnoreDataMember] public override bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean Overrides BaseItem.ForceDefaultAspectRatio IsDisplayedAsFolder Declaration [IgnoreDataMember] public override bool IsDisplayedAsFolder { get; } Property Value Type Description Boolean Overrides BaseItem.IsDisplayedAsFolder SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsTags Declaration [IgnoreDataMember] public override bool SupportsTags { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsTags Methods AllowEditingField(MetadataFields) Declaration public override bool AllowEditingField(MetadataFields field) Parameters Type Name Description MetadataFields field Returns Type Description Boolean Overrides BaseItem.AllowEditingField(MetadataFields) CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides BaseItem.CanDelete(Folder[]) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetInternalAncestorIds() Declaration public override IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetInternalAncestorIds() GetInternalMetadataPath(String) Declaration protected override string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String Overrides BaseItem.GetInternalMetadataPath(String) GetMediaContainingFolderPath(LibraryOptions) Declaration public override string GetMediaContainingFolderPath(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.GetMediaContainingFolderPath(LibraryOptions) GetTaggedItems(InternalItemsQuery) Declaration public long[] GetTaggedItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetTaggedItemsResult(InternalItemsQuery) Declaration public QueryResult<BaseItem> GetTaggedItemsResult(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IItemByName Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Tag.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Tag.html",
    "title": "Class Tag",
    "keywords": "Class Tag Inheritance Object BaseItem Tag Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IItemByName Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class Tag : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IItemByName Properties ContainingFolderPath Returns the folder containing the item. If the item is a folder, it returns the folder itself Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String The containing folder path. Overrides BaseItem.ContainingFolderPath IsDisplayedAsFolder Declaration [IgnoreDataMember] public override bool IsDisplayedAsFolder { get; } Property Value Type Description Boolean Overrides BaseItem.IsDisplayedAsFolder SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsCollections Declaration [IgnoreDataMember] public override bool SupportsCollections { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsCollections SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExternalTransfer SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios SupportsTags Declaration [IgnoreDataMember] public override bool SupportsTags { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsTags Methods AllowEditingField(MetadataFields) Declaration public override bool AllowEditingField(MetadataFields field) Parameters Type Name Description MetadataFields field Returns Type Description Boolean Overrides BaseItem.AllowEditingField(MetadataFields) CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides BaseItem.CanDelete(Folder[]) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetInternalAncestorIds() Declaration public override IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetInternalAncestorIds() GetInternalMetadataPath(String) Declaration protected override string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String Overrides BaseItem.GetInternalMetadataPath(String) GetMediaContainingFolderPath(LibraryOptions) Declaration public override string GetMediaContainingFolderPath(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.GetMediaContainingFolderPath(LibraryOptions) GetTaggedItems(InternalItemsQuery) Declaration public long[] GetTaggedItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetTaggedItemsResult(InternalItemsQuery) Declaration public QueryResult<BaseItem> GetTaggedItemsResult(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IItemByName Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.TagExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.TagExtensions.html",
    "title": "Class TagExtensions",
    "keywords": "Class TagExtensions Inheritance Object TagExtensions Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public static class TagExtensions Methods AddTag(BaseItem, String) Declaration public static void AddTag(this BaseItem item, string name) Parameters Type Name Description BaseItem item String name RemoveTag(BaseItem, String) Declaration public static void RemoveTag(this BaseItem item, string name) Parameters Type Name Description BaseItem item String name"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.ThumbnailSetInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.ThumbnailSetInfo.html",
    "title": "Class ThumbnailSetInfo",
    "keywords": "Class ThumbnailSetInfo Inheritance Object ThumbnailSetInfo Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class ThumbnailSetInfo Properties IntervalSeconds Declaration public int IntervalSeconds { get; set; } Property Value Type Description Int32 Path Declaration public string Path { get; set; } Property Value Type Description String Width Declaration public int Width { get; set; } Property Value Type Description Int32"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Trailer.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Trailer.html",
    "title": "Class Trailer",
    "keywords": "Class Trailer Class Trailer Inheritance Object BaseItem Video Trailer Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasMediaSources IHasLookupInfo < TrailerInfo > Inherited Members Video.Video3DFormat Video.SupportsPlayedStatus(LibraryOptions) Video.SupportsPeople Video.GetSupportsPositionTicksResume(LibraryOptions) Video.SplitVersion() Video.CreatePresentationUniqueKey(LibraryOptions) Video.GetRelatedUrls() Video.CanDownload() Video.SupportsExternalTransfer Video.LiveTvManager Video.IsActiveRecording() Video.GetRunTimeTicksForPlayState() Video.EnableDefaultVideoUserDataKeys Video.GetUserDataKey() Video.GetUserDataKey(BaseItem) Video.ContainingFolderPath Video.IsResolvedToFolder Video.FileNameWithoutExtension Video.Is3D Video.MediaType Video.GetDeletePaths(Boolean) Video.GetDefaultVideoStream() Video.GetAlternateVersionIds() Video.IsSecondaryMergedItemInSameFolder() Video.GetAllItemsForMediaSources(User, Boolean) Video.SupportsThumbnails Video.EnableAlternateVersions Video.GetMetadataFolderThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService) Video.GetLocalThumbnailSetInfos(ReadOnlySpan<Char>, IDirectoryService) Video.GetThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService) Video.GetThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService, Int32, Boolean) Video.CreateBif(Stream, Int32, List<FileSystemMetadata>) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(Folder[]) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.CreatePresentationUniqueKey() BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class Trailer : Video, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasMediaSources, IHasLookupInfo<TrailerInfo> Properties ForceDefaultAspectRatio Declaration [IgnoreDataMember] public override bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean Overrides BaseItem.ForceDefaultAspectRatio SupportsExtras Declaration [IgnoreDataMember] public override bool SupportsExtras { get; } Property Value Type Description Boolean Overrides Video.SupportsExtras SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides Video.SupportsGenres SupportsLocalTrailers Declaration [IgnoreDataMember] public override bool SupportsLocalTrailers { get; } Property Value Type Description Boolean Overrides Video.SupportsLocalTrailers SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides Video.SupportsStudios SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides Video.SupportsThemeMedia Methods BeforeMetadataRefresh(Boolean) Declaration public override bool BeforeMetadataRefresh(bool replaceAllMetdata) Parameters Type Name Description Boolean replaceAllMetdata Returns Type Description Boolean Overrides BaseItem.BeforeMetadataRefresh(Boolean) GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetLookupInfo(LibraryOptions) Declaration public TrailerInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description TrailerInfo Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasMediaSources IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.TV.Episode.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.TV.Episode.html",
    "title": "Class Episode",
    "keywords": "Class Episode Class Episode Inheritance Object BaseItem Video Episode Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasMediaSources IHasLookupInfo < EpisodeInfo > IHasSeries IHasSeriesName Inherited Members Video.Video3DFormat Video.SupportsPlayedStatus(LibraryOptions) Video.SupportsPeople Video.GetSupportsPositionTicksResume(LibraryOptions) Video.SplitVersion() Video.GetRelatedUrls() Video.CanDownload() Video.SupportsExternalTransfer Video.LiveTvManager Video.IsActiveRecording() Video.GetRunTimeTicksForPlayState() Video.GetUserDataKey(BaseItem) Video.ContainingFolderPath Video.IsResolvedToFolder Video.FileNameWithoutExtension Video.Is3D Video.MediaType Video.GetDefaultVideoStream() Video.GetAlternateVersionIds() Video.IsSecondaryMergedItemInSameFolder() Video.GetAllItemsForMediaSources(User, Boolean) Video.SupportsThumbnails Video.GetMetadataFolderThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService) Video.GetLocalThumbnailSetInfos(ReadOnlySpan<Char>, IDirectoryService) Video.GetThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService) Video.GetThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService, Int32, Boolean) Video.CreateBif(Stream, Int32, List<FileSystemMetadata>) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(Folder[]) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.CreatePresentationUniqueKey() BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities.TV Assembly : MediaBrowser.Controller.dll Syntax public sealed class Episode : Video, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasMediaSources, IHasLookupInfo<EpisodeInfo>, IHasSeries, IHasSeriesName Properties DisplayParentId Declaration [IgnoreDataMember] public override long DisplayParentId { get; } Property Value Type Description Int64 Overrides BaseItem.DisplayParentId EnableAlternateVersions Declaration [IgnoreDataMember] protected override bool EnableAlternateVersions { get; } Property Value Type Description Boolean Overrides Video.EnableAlternateVersions EnableDefaultVideoUserDataKeys Declaration [IgnoreDataMember] protected override bool EnableDefaultVideoUserDataKeys { get; } Property Value Type Description Boolean Overrides Video.EnableDefaultVideoUserDataKeys ForceDefaultAspectRatio Declaration [IgnoreDataMember] public override bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean Overrides BaseItem.ForceDefaultAspectRatio IndexNumberEnd This is the ending episode number for double episodes. Declaration [IgnoreDataMember] public int? IndexNumberEnd { get; set; } Property Value Type Description Nullable < Int32 > The index number. IsInSeasonFolder Declaration [IgnoreDataMember] public bool IsInSeasonFolder { get; } Property Value Type Description Boolean IsMissingEpisode Declaration [IgnoreDataMember] public bool IsMissingEpisode { get; } Property Value Type Description Boolean LatestItemsContainerId Declaration [IgnoreDataMember] public override long LatestItemsContainerId { get; } Property Value Type Description Int64 Overrides BaseItem.LatestItemsContainerId LocationType Gets or sets the type of the location. Declaration [IgnoreDataMember] public override LocationType LocationType { get; } Property Value Type Description LocationType The type of the location. Overrides BaseItem.LocationType Season Declaration [IgnoreDataMember] public Season Season { get; } Property Value Type Description Season SeasonFolder Declaration [IgnoreDataMember] public Season SeasonFolder { get; } Property Value Type Description Season Series This Episode's Series Instance Declaration [IgnoreDataMember] public Series Series { get; } Property Value Type Description Series The series. SeriesId Declaration [IgnoreDataMember] public long SeriesId { get; set; } Property Value Type Description Int64 SeriesName Declaration [IgnoreDataMember] public string SeriesName { get; set; } Property Value Type Description String SortIndexNumber Gets the season in which it aired. Declaration [IgnoreDataMember] public int? SortIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > The aired season. SortParentIndexNumber Declaration [IgnoreDataMember] public int? SortParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > SupportsExtras Declaration [IgnoreDataMember] public override bool SupportsExtras { get; } Property Value Type Description Boolean Overrides Video.SupportsExtras SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides Video.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsInheritedParentImages SupportsLocalTrailers Declaration [IgnoreDataMember] public override bool SupportsLocalTrailers { get; } Property Value Type Description Boolean Overrides Video.SupportsLocalTrailers SupportsOwnedItems Declaration [IgnoreDataMember] protected override bool SupportsOwnedItems { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsOwnedItems SupportsRemoteImageDownloading Declaration [IgnoreDataMember] public override bool SupportsRemoteImageDownloading { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsRemoteImageDownloading SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides Video.SupportsStudios SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides Video.SupportsThemeMedia Methods BeforeMetadataRefresh(Boolean) Declaration public override bool BeforeMetadataRefresh(bool replaceAllMetdata) Parameters Type Name Description Boolean replaceAllMetdata Returns Type Description Boolean Overrides BaseItem.BeforeMetadataRefresh(Boolean) ContainsEpisodeNumber(Int32) Determines whether [contains episode number] [the specified number]. Declaration public bool ContainsEpisodeNumber(int number) Parameters Type Name Description Int32 number The number. Returns Type Description Boolean true if [contains episode number] [the specified number]; otherwise, false . ConvertSpecialEpisodeNumbers(LegacySpecialEpisodeNumbers) Declaration public static SpecialEpisodeNumbers ConvertSpecialEpisodeNumbers(LegacySpecialEpisodeNumbers legacySpecialEpisodeNumbers) Parameters Type Name Description LegacySpecialEpisodeNumbers legacySpecialEpisodeNumbers Returns Type Description SpecialEpisodeNumbers CreatePresentationUniqueKey(LibraryOptions) Declaration public override string CreatePresentationUniqueKey(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides Video.CreatePresentationUniqueKey(LibraryOptions) FindSeasonId() Declaration public long FindSeasonId() Returns Type Description Int64 FindSeasonName() Declaration public string FindSeasonName() Returns Type Description String FindSeriesId() Declaration public long FindSeriesId() Returns Type Description Int64 FindSeriesName() Declaration public string FindSeriesName() Returns Type Description String FindSeriesPresentationUniqueKey() Declaration public string FindSeriesPresentationUniqueKey() Returns Type Description String FindSeriesSortName() Declaration public string FindSeriesSortName() Returns Type Description String GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetDeletePaths(Boolean) Declaration public override List<FileSystemMetadata> GetDeletePaths(bool mediaFilesOnly) Parameters Type Name Description Boolean mediaFilesOnly Returns Type Description List < FileSystemMetadata > Overrides Video.GetDeletePaths(Boolean) GetInternalAncestorIds() Declaration public override IEnumerable<long> GetInternalAncestorIds() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetInternalAncestorIds() GetLookupInfo(LibraryOptions) Declaration public EpisodeInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description EpisodeInfo GetUserDataKey() Declaration public override string GetUserDataKey() Returns Type Description String Overrides Video.GetUserDataKey() ImportSpecialEpisodeNumbers(SpecialEpisodeNumbers) Declaration public void ImportSpecialEpisodeNumbers(SpecialEpisodeNumbers specialEpisodeNumbers) Parameters Type Name Description SpecialEpisodeNumbers specialEpisodeNumbers ImportSpecialEpisodeNumbers(SpecialEpisodeNumbers, LegacySpecialEpisodeNumbers) Declaration public void ImportSpecialEpisodeNumbers(SpecialEpisodeNumbers specialEpisodeNumbers, LegacySpecialEpisodeNumbers legacySpecialEpisodeNumbers) Parameters Type Name Description SpecialEpisodeNumbers specialEpisodeNumbers LegacySpecialEpisodeNumbers legacySpecialEpisodeNumbers UpdateHideFromResume(User, UserItemData, Boolean) Declaration public override void UpdateHideFromResume(User user, UserItemData userData, bool hide) Parameters Type Name Description User user UserItemData userData Boolean hide Overrides BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasMediaSources IHasLookupInfo<TLookupInfoType> IHasSeries IHasSeriesName Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.TV.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.TV.html",
    "title": "Namespace MediaBrowser.Controller.Entities.TV",
    "keywords": "Namespace MediaBrowser.Controller.Entities.TV Classes Episode Class Episode LegacySpecialEpisodeNumbers Season Class Season Series Class Series SpecialEpisodeNumbers"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.TV.LegacySpecialEpisodeNumbers.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.TV.LegacySpecialEpisodeNumbers.html",
    "title": "Class LegacySpecialEpisodeNumbers",
    "keywords": "Class LegacySpecialEpisodeNumbers Inheritance Object LegacySpecialEpisodeNumbers Namespace : MediaBrowser.Controller.Entities.TV Assembly : MediaBrowser.Controller.dll Syntax public class LegacySpecialEpisodeNumbers Properties AirsAfterSeasonNumber Declaration public int? AirsAfterSeasonNumber { get; set; } Property Value Type Description Nullable < Int32 > AirsBeforeEpisodeNumber Declaration public int? AirsBeforeEpisodeNumber { get; set; } Property Value Type Description Nullable < Int32 > AirsBeforeSeasonNumber Declaration public int? AirsBeforeSeasonNumber { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.TV.Season.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.TV.Season.html",
    "title": "Class Season",
    "keywords": "Class Season Class Season Inheritance Object BaseItem Folder Season Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasSeries IHasSeriesName IHasLookupInfo < SeasonInfo > Inherited Members Folder.UserViewManager Folder.IsPhysicalRoot Folder.IsResolvedToFolder Folder.IsTopParent Folder.IsFolder Folder.IsDisplayedAsFolder Folder.SupportsCumulativeRunTimeTicks Folder.SupportsExternalTransfer Folder.CanDelete(Folder[]) Folder.FileNameWithoutExtension Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.IsVisibleViaTags(User) Folder.IsVisible(User) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Folder.SortChildrenForValidation(BaseItem[]) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.CreatePresentationUniqueKey() BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities.TV Assembly : MediaBrowser.Controller.dll Syntax public sealed class Season : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasSeries, IHasSeriesName, IHasLookupInfo<SeasonInfo> Properties DisplayParentId Declaration [IgnoreDataMember] public override long DisplayParentId { get; } Property Value Type Description Int64 Overrides BaseItem.DisplayParentId IsPreSorted Declaration [IgnoreDataMember] public override bool IsPreSorted { get; } Property Value Type Description Boolean Overrides Folder.IsPreSorted LocationType Gets or sets the type of the location. Declaration [IgnoreDataMember] public override LocationType LocationType { get; } Property Value Type Description LocationType The type of the location. Overrides BaseItem.LocationType Series This Episode's Series Instance Declaration [IgnoreDataMember] public Series Series { get; } Property Value Type Description Series The series. SeriesId Declaration [IgnoreDataMember] public long SeriesId { get; set; } Property Value Type Description Int64 SeriesName Declaration [IgnoreDataMember] public string SeriesName { get; set; } Property Value Type Description String SeriesPath Declaration [IgnoreDataMember] public string SeriesPath { get; } Property Value Type Description String SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsThemeMedia Methods BeforeMetadataRefresh(Boolean) This is called before any metadata refresh and returns true or false indicating if changes were made Declaration public override bool BeforeMetadataRefresh(bool replaceAllMetdata) Parameters Type Name Description Boolean replaceAllMetdata Returns Type Description Boolean true if XXXX, false otherwise. Overrides BaseItem.BeforeMetadataRefresh(Boolean) CreatePresentationUniqueKey(LibraryOptions) Declaration public override string CreatePresentationUniqueKey(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.CreatePresentationUniqueKey(LibraryOptions) FindSeriesId() Declaration public long FindSeriesId() Returns Type Description Int64 FindSeriesName() Declaration public string FindSeriesName() Returns Type Description String FindSeriesPresentationUniqueKey() Declaration public string FindSeriesPresentationUniqueKey() Returns Type Description String FindSeriesSortName() Declaration public string FindSeriesSortName() Returns Type Description String GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetBlockUnratedValue(UserPolicy) Declaration protected override bool GetBlockUnratedValue(UserPolicy config) Parameters Type Name Description UserPolicy config Returns Type Description Boolean Overrides BaseItem.GetBlockUnratedValue(UserPolicy) GetChildCount(User) Declaration public override int GetChildCount(User user) Parameters Type Name Description User user Returns Type Description Int32 Overrides Folder.GetChildCount(User) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetEpisodes() Declaration public QueryResult<BaseItem> GetEpisodes() Returns Type Description QueryResult < BaseItem > GetEpisodes(InternalItemsQuery) Gets the episodes. Declaration public QueryResult<BaseItem> GetEpisodes(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > GetItemIdsInternal(InternalItemsQuery) Declaration protected override long[] GetItemIdsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] Overrides Folder.GetItemIdsInternal(InternalItemsQuery) GetItemsInternal(InternalItemsQuery) Declaration protected override QueryResult<BaseItem> GetItemsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Overrides Folder.GetItemsInternal(InternalItemsQuery) GetLookupInfo(LibraryOptions) Gets the lookup information. Declaration public SeasonInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description SeasonInfo SeasonInfo. GetUserDataKey() Declaration public override string GetUserDataKey() Returns Type Description String Overrides BaseItem.GetUserDataKey() SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasSeries IHasSeriesName IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.TV.Series.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.TV.Series.html",
    "title": "Class Series",
    "keywords": "Class Series Class Series Inheritance Object BaseItem Folder Series Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasLookupInfo < SeriesInfo > IMetadataContainer Inherited Members Folder.UserViewManager Folder.IsPhysicalRoot Folder.IsResolvedToFolder Folder.IsTopParent Folder.IsFolder Folder.IsDisplayedAsFolder Folder.SupportsCumulativeRunTimeTicks Folder.SupportsExternalTransfer Folder.CanDelete(Folder[]) Folder.FileNameWithoutExtension Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.IsVisibleViaTags(User) Folder.IsVisible(User) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Folder.SortChildrenForValidation(BaseItem[]) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetChildCount(User) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.CreatePresentationUniqueKey() BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities.TV Assembly : MediaBrowser.Controller.dll Syntax public sealed class Series : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasLookupInfo<SeriesInfo>, IMetadataContainer Properties AirDays Declaration public DayOfWeek[] AirDays { get; set; } Property Value Type Description DayOfWeek [] AirTime Declaration public string AirTime { get; set; } Property Value Type Description String DisplayOrder airdate, dvd or absolute Declaration [IgnoreDataMember] public SeriesDisplayOrder DisplayOrder { get; set; } Property Value Type Description SeriesDisplayOrder IsPreSorted Declaration [IgnoreDataMember] public override bool IsPreSorted { get; } Property Value Type Description Boolean Overrides Folder.IsPreSorted Status Gets or sets the status. Declaration [IgnoreDataMember] public SeriesStatus? Status { get; set; } Property Value Type Description Nullable < SeriesStatus > The status. SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages SupportsLocalTrailers Declaration [IgnoreDataMember] public override bool SupportsLocalTrailers { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsLocalTrailers SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsThemeMedia Methods BeforeMetadataRefresh(Boolean) Declaration public override bool BeforeMetadataRefresh(bool replaceAllMetadata) Parameters Type Name Description Boolean replaceAllMetadata Returns Type Description Boolean Overrides BaseItem.BeforeMetadataRefresh(Boolean) CreatePresentationUniqueKey(LibraryOptions) Declaration public override string CreatePresentationUniqueKey(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.CreatePresentationUniqueKey(LibraryOptions) GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetBlockUnratedValue(UserPolicy) Declaration protected override bool GetBlockUnratedValue(UserPolicy config) Parameters Type Name Description UserPolicy config Returns Type Description Boolean Overrides BaseItem.GetBlockUnratedValue(UserPolicy) GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetDisplayOrderIntValue() Declaration public override int? GetDisplayOrderIntValue() Returns Type Description Nullable < Int32 > Overrides BaseItem.GetDisplayOrderIntValue() GetItemIdsInternal(InternalItemsQuery) Declaration protected override long[] GetItemIdsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] Overrides Folder.GetItemIdsInternal(InternalItemsQuery) GetItemsInternal(InternalItemsQuery) Declaration protected override QueryResult<BaseItem> GetItemsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Overrides Folder.GetItemsInternal(InternalItemsQuery) GetLookupInfo(LibraryOptions) Declaration public SeriesInfo GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description SeriesInfo GetRelatedUrls() Declaration public override List<ExternalUrl> GetRelatedUrls() Returns Type Description List < ExternalUrl > Overrides BaseItem.GetRelatedUrls() GetSeasonEpisodeIds(Season, InternalItemsQuery) Declaration public long[] GetSeasonEpisodeIds(Season parentSeason, InternalItemsQuery query) Parameters Type Name Description Season parentSeason InternalItemsQuery query Returns Type Description Int64 [] GetSeasonEpisodes(Season, InternalItemsQuery) Declaration public QueryResult<BaseItem> GetSeasonEpisodes(Season parentSeason, InternalItemsQuery query) Parameters Type Name Description Season parentSeason InternalItemsQuery query Returns Type Description QueryResult < BaseItem > GetUserDataKey() Declaration public override string GetUserDataKey() Returns Type Description String Overrides BaseItem.GetUserDataKey() RefreshAllMetadata(MetadataRefreshOptions, LibraryOptions, IProgress<Double>, CancellationToken) Declaration public async Task RefreshAllMetadata(MetadataRefreshOptions refreshOptions, LibraryOptions libraryOptions, IProgress<double> progress, CancellationToken cancellationToken) Parameters Type Name Description MetadataRefreshOptions refreshOptions LibraryOptions libraryOptions IProgress < Double > progress CancellationToken cancellationToken Returns Type Description Task SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasLookupInfo<TLookupInfoType> IMetadataContainer Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.TV.SpecialEpisodeNumbers.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.TV.SpecialEpisodeNumbers.html",
    "title": "Class SpecialEpisodeNumbers",
    "keywords": "Class SpecialEpisodeNumbers Inheritance Object SpecialEpisodeNumbers Namespace : MediaBrowser.Controller.Entities.TV Assembly : MediaBrowser.Controller.dll Syntax public sealed class SpecialEpisodeNumbers Properties SortIndexNumber Declaration public int? SortIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > SortParentIndexNumber Declaration public int? SortParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.User.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.User.html",
    "title": "Class User",
    "keywords": "Class User Class User Inheritance Object BaseItem User Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(Folder[]) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.SupportsExternalTransfer BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class User : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo> Properties Configuration Declaration [IgnoreDataMember] public UserConfiguration Configuration { get; set; } Property Value Type Description UserConfiguration ConfigurationDirectoryPath Gets the path to the user's configuration directory Declaration [IgnoreDataMember] public string ConfigurationDirectoryPath { get; } Property Value Type Description String The configuration directory path. ConnectAccessKey Declaration public string ConnectAccessKey { get; set; } Property Value Type Description String ConnectLinkType Declaration public UserLinkType? ConnectLinkType { get; set; } Property Value Type Description Nullable < UserLinkType > ConnectUserId Declaration public string ConnectUserId { get; set; } Property Value Type Description String ConnectUserName Declaration public string ConnectUserName { get; set; } Property Value Type Description String ContainingFolderPath Returns the folder containing the item. If the item is a folder, it returns the folder itself Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String The containing folder path. Overrides BaseItem.ContainingFolderPath EasyPassword Declaration public string EasyPassword { get; set; } Property Value Type Description String EnableInternalIdsExternally Declaration [IgnoreDataMember] public override bool EnableInternalIdsExternally { get; } Property Value Type Description Boolean Overrides BaseItem.EnableInternalIdsExternally ImageInfos Declaration public override ItemImageInfo[] ImageInfos { get; set; } Property Value Type Description ItemImageInfo [] Overrides BaseItem.ImageInfos LastActivityDate Gets or sets the last activity date. Declaration public DateTimeOffset? LastActivityDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The last activity date. LastLoginDate Gets or sets the last login date. Declaration public DateTimeOffset? LastLoginDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The last login date. Name Gets or sets the name. Declaration public override string Name { get; set; } Property Value Type Description String The name. Overrides BaseItem.Name Password Gets or sets the password. Declaration public string Password { get; set; } Property Value Type Description String The password. Path Gets or sets the path. Declaration [IgnoreDataMember] public override string Path { get; set; } Property Value Type Description String The path. Overrides BaseItem.Path Policy Declaration [IgnoreDataMember] public UserPolicy Policy { get; set; } Property Value Type Description UserPolicy Salt Declaration public string Salt { get; set; } Property Value Type Description String SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople UsesIdForConfigurationPath From now on all user paths will be Id-based. This is for backwards compatibility. Declaration public bool UsesIdForConfigurationPath { get; set; } Property Value Type Description Boolean Methods GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() IsParentalScheduleAllowed() Declaration public bool IsParentalScheduleAllowed() Returns Type Description Boolean IsParentalScheduleAllowed(DateTimeOffset) Declaration public bool IsParentalScheduleAllowed(DateTimeOffset date) Parameters Type Name Description DateTimeOffset date Returns Type Description Boolean Rename(String) Renames the user. Declaration public Task Rename(string newName) Parameters Type Name Description String newName The new name. Returns Type Description Task Task. Exceptions Type Condition ArgumentNullException UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) Declaration public override void UpdateToRepository(ItemUpdateType updateReason, MetadataRefreshOptions metadataRefreshOptions) Parameters Type Name Description ItemUpdateType updateReason MetadataRefreshOptions metadataRefreshOptions Overrides BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.UserItemData.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.UserItemData.html",
    "title": "Class UserItemData",
    "keywords": "Class UserItemData Class UserItemData Inheritance Object UserItemData Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class UserItemData Properties AudioStreamIndex Gets or sets the index of the audio stream. Declaration public int? AudioStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > The index of the audio stream. HideFromResume Declaration public bool HideFromResume { get; set; } Property Value Type Description Boolean IsFavorite Gets or sets a value indicating whether this instance is favorite. Declaration public bool IsFavorite { get; set; } Property Value Type Description Boolean true if this instance is favorite; otherwise, false . Key Gets or sets the key. Declaration public string Key { get; set; } Property Value Type Description String The key. LastPlayedDate Gets or sets the last played date. Declaration public DateTimeOffset? LastPlayedDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The last played date. PlaybackPositionTicks Gets or sets the playback position ticks. Declaration public long PlaybackPositionTicks { get; set; } Property Value Type Description Int64 The playback position ticks. PlayCount Gets or sets the play count. Declaration public int PlayCount { get; set; } Property Value Type Description Int32 The play count. Played Gets or sets a value indicating whether this UserItemData is played. Declaration public bool Played { get; set; } Property Value Type Description Boolean true if played; otherwise, false . PlaystateLastModified Declaration public DateTimeOffset? PlaystateLastModified { get; set; } Property Value Type Description Nullable < DateTimeOffset > Rating Declaration public double? Rating { get; set; } Property Value Type Description Nullable < Double > RatingLastModified Declaration public DateTimeOffset? RatingLastModified { get; set; } Property Value Type Description Nullable < DateTimeOffset > SubtitleStreamIndex Gets or sets the index of the subtitle stream. Declaration public int? SubtitleStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > The index of the subtitle stream."
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.UserRootFolder.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.UserRootFolder.html",
    "title": "Class UserRootFolder",
    "keywords": "Class UserRootFolder Special class used for User Roots. Children contain actual ones defined for this user PLUS the virtual folders from the physical root (added by plug-ins). Inheritance Object BaseItem Folder UserRootFolder Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > Inherited Members Folder.UserViewManager Folder.IsPhysicalRoot Folder.IsResolvedToFolder Folder.IsTopParent Folder.IsFolder Folder.IsDisplayedAsFolder Folder.SupportsCumulativeRunTimeTicks Folder.SupportsExternalTransfer Folder.CanDelete(Folder[]) Folder.FileNameWithoutExtension Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.SortChildrenForValidation(BaseItem[]) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetChildCount(User) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsPeople BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.GetDefaultPrimaryImageAspectRatio() BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class UserRootFolder : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo> Properties IsPreSorted Declaration [IgnoreDataMember] public override bool IsPreSorted { get; } Property Value Type Description Boolean Overrides Folder.IsPreSorted SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsCollections Declaration [IgnoreDataMember] public override bool SupportsCollections { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsCollections SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages SupportsShortcutChildren Declaration [IgnoreDataMember] protected override bool SupportsShortcutChildren { get; } Property Value Type Description Boolean Overrides Folder.SupportsShortcutChildren SupportsTags Declaration [IgnoreDataMember] public override bool SupportsTags { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsTags SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsThemeMedia SupportsUserData Declaration [IgnoreDataMember] public override bool SupportsUserData { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsUserData Methods GetItemIdsInternal(InternalItemsQuery) Declaration protected override long[] GetItemIdsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] Overrides Folder.GetItemIdsInternal(InternalItemsQuery) GetItemsInternal(InternalItemsQuery) Declaration protected override QueryResult<BaseItem> GetItemsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Overrides Folder.GetItemsInternal(InternalItemsQuery) IsVisible(User) Declaration public override bool IsVisible(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides Folder.IsVisible(User) IsVisibleStandalone(User) Declaration public override bool IsVisibleStandalone(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides BaseItem.IsVisibleStandalone(User) IsVisibleViaTags(User) Declaration protected override bool IsVisibleViaTags(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides Folder.IsVisibleViaTags(User) SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Declaration protected override async Task ValidateChildrenInternal(IProgress<double> progress, CancellationToken cancellationToken, bool recursive, bool refreshChildMetadata, MetadataRefreshOptions refreshOptions, IDirectoryService directoryService) Parameters Type Name Description IProgress < Double > progress CancellationToken cancellationToken Boolean recursive Boolean refreshChildMetadata MetadataRefreshOptions refreshOptions IDirectoryService directoryService Returns Type Description Task Overrides Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.UserView.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.UserView.html",
    "title": "Class UserView",
    "keywords": "Class UserView Inheritance Object BaseItem Folder UserView Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasCollectionType Inherited Members Folder.UserViewManager Folder.IsPreSorted Folder.IsPhysicalRoot Folder.IsResolvedToFolder Folder.IsFolder Folder.IsDisplayedAsFolder Folder.SupportsCumulativeRunTimeTicks Folder.SupportsExternalTransfer Folder.FileNameWithoutExtension Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.IsVisible(User) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.SortChildrenForValidation(BaseItem[]) Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) Folder.GetChildCount(User) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.MediaType BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsGenres BaseItem.SupportsStudios BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.GetDefaultPrimaryImageAspectRatio() BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.SupportsAncestors BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public sealed class UserView : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasCollectionType Properties CollectionType Declaration [IgnoreDataMember] public string CollectionType { get; } Property Value Type Description String IsTopParent Declaration [IgnoreDataMember] public override bool IsTopParent { get; } Property Value Type Description Boolean Overrides Folder.IsTopParent SupportsCollections Declaration [IgnoreDataMember] public override bool SupportsCollections { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsCollections SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsTags Declaration [IgnoreDataMember] public override bool SupportsTags { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsTags SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsThemeMedia SupportsUserData Declaration [IgnoreDataMember] public override bool SupportsUserData { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsUserData ViewType Declaration [IgnoreDataMember] public string ViewType { get; set; } Property Value Type Description String Methods CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides Folder.CanDelete(Folder[]) GetIdsForAncestorQuery() Declaration public override IEnumerable<long> GetIdsForAncestorQuery() Returns Type Description IEnumerable < Int64 > Overrides BaseItem.GetIdsForAncestorQuery() GetItemIdsInternal(InternalItemsQuery) Declaration protected override long[] GetItemIdsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] Overrides Folder.GetItemIdsInternal(InternalItemsQuery) GetItemsInternal(InternalItemsQuery) Declaration protected override QueryResult<BaseItem> GetItemsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Overrides Folder.GetItemsInternal(InternalItemsQuery) IsSaveLocalMetadataEnabled(LibraryOptions) Declaration public override bool IsSaveLocalMetadataEnabled(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) IsVisibleViaTags(User) Declaration protected override bool IsVisibleViaTags(User user) Parameters Type Name Description User user Returns Type Description Boolean Overrides Folder.IsVisibleViaTags(User) SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Declaration protected override Task ValidateChildrenInternal(IProgress<double> progress, CancellationToken cancellationToken, bool recursive, bool refreshChildMetadata, MetadataRefreshOptions refreshOptions, IDirectoryService directoryService) Parameters Type Name Description IProgress < Double > progress CancellationToken cancellationToken Boolean recursive Boolean refreshChildMetadata MetadataRefreshOptions refreshOptions IDirectoryService directoryService Returns Type Description Task Overrides Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasCollectionType Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Entities.Video.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Entities.Video.html",
    "title": "Class Video",
    "keywords": "Class Video Class Video Inheritance Object BaseItem Video Movie MusicVideo Trailer Episode Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasMediaSources Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(Folder[]) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsOwnedItems BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.GetDefaultPrimaryImageAspectRatio() BaseItem.CreatePresentationUniqueKey() BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.SupportsInheritedParentImages BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Entities Assembly : MediaBrowser.Controller.dll Syntax public class Video : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasMediaSources Properties ContainingFolderPath Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String Overrides BaseItem.ContainingFolderPath EnableAlternateVersions Declaration [IgnoreDataMember] protected virtual bool EnableAlternateVersions { get; } Property Value Type Description Boolean EnableDefaultVideoUserDataKeys Declaration [IgnoreDataMember] protected virtual bool EnableDefaultVideoUserDataKeys { get; } Property Value Type Description Boolean FileNameWithoutExtension Declaration [IgnoreDataMember] public override string FileNameWithoutExtension { get; } Property Value Type Description String Overrides BaseItem.FileNameWithoutExtension Is3D Gets a value indicating whether [is3 D]. Declaration [IgnoreDataMember] public bool Is3D { get; } Property Value Type Description Boolean true if [is3 D]; otherwise, false . IsResolvedToFolder Declaration [IgnoreDataMember] public override bool IsResolvedToFolder { get; } Property Value Type Description Boolean Overrides BaseItem.IsResolvedToFolder LiveTvManager Declaration public static ILiveTvManager LiveTvManager { get; set; } Property Value Type Description ILiveTvManager MediaType Gets the type of the media. Declaration [IgnoreDataMember] public override string MediaType { get; } Property Value Type Description String The type of the media. Overrides BaseItem.MediaType SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExternalTransfer SupportsExtras Declaration [IgnoreDataMember] public override bool SupportsExtras { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExtras SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsLocalTrailers Declaration [IgnoreDataMember] public override bool SupportsLocalTrailers { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsLocalTrailers SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsThemeMedia SupportsThumbnails Declaration [IgnoreDataMember] public bool SupportsThumbnails { get; } Property Value Type Description Boolean Video3DFormat Gets or sets the video3 D format. Declaration [IgnoreDataMember] public Video3DFormat? Video3DFormat { get; set; } Property Value Type Description Nullable < Video3DFormat > The video3 D format. Methods CanDownload() Declaration public override bool CanDownload() Returns Type Description Boolean Overrides BaseItem.CanDownload() CreateBif(Stream, Int32, List<FileSystemMetadata>) Declaration public static async Task CreateBif(Stream stream, int intervalMs, List<FileSystemMetadata> images) Parameters Type Name Description Stream stream Int32 intervalMs List < FileSystemMetadata > images Returns Type Description Task CreatePresentationUniqueKey(LibraryOptions) Declaration public override string CreatePresentationUniqueKey(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.CreatePresentationUniqueKey(LibraryOptions) GetAllItemsForMediaSources(User, Boolean) Declaration protected override List<Tuple<BaseItem, MediaSourceType>> GetAllItemsForMediaSources(User user, bool enableAlternateMediaSources) Parameters Type Name Description User user Boolean enableAlternateMediaSources Returns Type Description List < Tuple < BaseItem , MediaSourceType >> Overrides BaseItem.GetAllItemsForMediaSources(User, Boolean) GetAlternateVersionIds() Declaration public List<long> GetAlternateVersionIds() Returns Type Description List < Int64 > GetDefaultVideoStream() Declaration public MediaStream GetDefaultVideoStream() Returns Type Description MediaStream GetDeletePaths(Boolean) Declaration public override List<FileSystemMetadata> GetDeletePaths(bool mediaFilesOnly) Parameters Type Name Description Boolean mediaFilesOnly Returns Type Description List < FileSystemMetadata > Overrides BaseItem.GetDeletePaths(Boolean) GetLocalThumbnailSetInfos(ReadOnlySpan<Char>, IDirectoryService) Declaration public static List<ThumbnailSetInfo> GetLocalThumbnailSetInfos(ReadOnlySpan<char> videoPath, IDirectoryService directoryService) Parameters Type Name Description ReadOnlySpan < Char > videoPath IDirectoryService directoryService Returns Type Description List < ThumbnailSetInfo > GetMetadataFolderThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService) Declaration public static List<ThumbnailSetInfo> GetMetadataFolderThumbnailSetInfos(ReadOnlySpan<char> videoPath, Guid itemGuid, IDirectoryService directoryService) Parameters Type Name Description ReadOnlySpan < Char > videoPath Guid itemGuid IDirectoryService directoryService Returns Type Description List < ThumbnailSetInfo > GetRelatedUrls() Declaration public override List<ExternalUrl> GetRelatedUrls() Returns Type Description List < ExternalUrl > Overrides BaseItem.GetRelatedUrls() GetRunTimeTicksForPlayState() Declaration public override long GetRunTimeTicksForPlayState() Returns Type Description Int64 Overrides BaseItem.GetRunTimeTicksForPlayState() GetSupportsPositionTicksResume(LibraryOptions) Declaration public override bool GetSupportsPositionTicksResume(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides BaseItem.GetSupportsPositionTicksResume(LibraryOptions) GetThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService) Declaration public static List<ThumbnailSetInfo> GetThumbnailSetInfos(ReadOnlySpan<char> videoPath, Guid itemGuid, IDirectoryService directoryService) Parameters Type Name Description ReadOnlySpan < Char > videoPath Guid itemGuid IDirectoryService directoryService Returns Type Description List < ThumbnailSetInfo > GetThumbnailSetInfos(ReadOnlySpan<Char>, Guid, IDirectoryService, Int32, Boolean) Declaration public static List<ThumbnailSetInfo> GetThumbnailSetInfos(ReadOnlySpan<char> videoPath, Guid itemGuid, IDirectoryService directoryService, int maxWidth, bool enableStrictWidthRequirement) Parameters Type Name Description ReadOnlySpan < Char > videoPath Guid itemGuid IDirectoryService directoryService Int32 maxWidth Boolean enableStrictWidthRequirement Returns Type Description List < ThumbnailSetInfo > GetUserDataKey() Declaration public override string GetUserDataKey() Returns Type Description String Overrides BaseItem.GetUserDataKey() GetUserDataKey(BaseItem) Declaration public static string GetUserDataKey(BaseItem item) Parameters Type Name Description BaseItem item Returns Type Description String IsActiveRecording() Declaration public override bool IsActiveRecording() Returns Type Description Boolean Overrides BaseItem.IsActiveRecording() IsSecondaryMergedItemInSameFolder() Declaration protected override bool IsSecondaryMergedItemInSameFolder() Returns Type Description Boolean Overrides BaseItem.IsSecondaryMergedItemInSameFolder() SplitVersion() Declaration public void SplitVersion() SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides BaseItem.SupportsPlayedStatus(LibraryOptions) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasMediaSources Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Extensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Extensions.html",
    "title": "Namespace MediaBrowser.Controller.Extensions",
    "keywords": "Namespace MediaBrowser.Controller.Extensions Classes StringExtensions Class BaseExtensions"
  },
  "reference/pluginapi/MediaBrowser.Controller.Extensions.StringExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Extensions.StringExtensions.html",
    "title": "Class StringExtensions",
    "keywords": "Class StringExtensions Class BaseExtensions Inheritance Object StringExtensions Namespace : MediaBrowser.Controller.Extensions Assembly : MediaBrowser.Controller.dll Syntax public static class StringExtensions Properties LocalizationManager Declaration public static ILocalizationManager LocalizationManager { get; set; } Property Value Type Description ILocalizationManager Methods RemoveDiacritics(String) Declaration public static string RemoveDiacritics(this string text) Parameters Type Name Description String text Returns Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.html",
    "title": "Namespace MediaBrowser.Controller",
    "keywords": "Namespace MediaBrowser.Controller Interfaces IResourceFileManager IServerApplicationHost Interface IServerApplicationHost IServerApplicationPaths"
  },
  "reference/pluginapi/MediaBrowser.Controller.IO.FileData.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.IO.FileData.html",
    "title": "Class FileData",
    "keywords": "Class FileData Provides low level File access that is much faster than the File/Directory api's Inheritance Object FileData Namespace : MediaBrowser.Controller.IO Assembly : MediaBrowser.Controller.dll Syntax public static class FileData Methods GetFilteredFileSystemEntries(IDirectoryService, String, IFileSystem, IServerApplicationHost, ILogger, ItemResolveArgs, Int32, Boolean) Gets the filtered file system entries. Declaration public static FileSystemMetadata[] GetFilteredFileSystemEntries(IDirectoryService directoryService, string path, IFileSystem fileSystem, IServerApplicationHost appHost, ILogger logger, ItemResolveArgs args, int flattenFolderDepth = 0, bool resolveShortcuts = true) Parameters Type Name Description IDirectoryService directoryService The directory service. String path The path. IFileSystem fileSystem The file system. IServerApplicationHost appHost The application host. ILogger logger The logger. ItemResolveArgs args The args. Int32 flattenFolderDepth The flatten folder depth. Boolean resolveShortcuts if set to true [resolve shortcuts]. Returns Type Description FileSystemMetadata [] Dictionary{System.StringFileSystemInfo}. Exceptions Type Condition ArgumentNullException path"
  },
  "reference/pluginapi/MediaBrowser.Controller.IO.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.IO.html",
    "title": "Namespace MediaBrowser.Controller.IO",
    "keywords": "Namespace MediaBrowser.Controller.IO Classes FileData Provides low level File access that is much faster than the File/Directory api's Interfaces IIOManager"
  },
  "reference/pluginapi/MediaBrowser.Controller.IO.IIOManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.IO.IIOManager.html",
    "title": "Interface IIOManager",
    "keywords": "Interface IIOManager Namespace : MediaBrowser.Controller.IO Assembly : MediaBrowser.Controller.dll Syntax public interface IIOManager Methods GetConnectionContext(HttpRequestOptions, MediaProtocol) Declaration IDisposable GetConnectionContext(HttpRequestOptions options, MediaProtocol protocol) Parameters Type Name Description HttpRequestOptions options MediaProtocol protocol Returns Type Description IDisposable GetLastWriteTimeUtc(ReadOnlySpan<Char>, MediaProtocol, Boolean) Declaration DateTimeOffset? GetLastWriteTimeUtc(ReadOnlySpan<char> path, MediaProtocol protocol, bool fileExists) Parameters Type Name Description ReadOnlySpan < Char > path MediaProtocol protocol Boolean fileExists Returns Type Description Nullable < DateTimeOffset > GetPathProtocol(ReadOnlySpan<Char>) Declaration MediaProtocol GetPathProtocol(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path Returns Type Description MediaProtocol GetResponse(HttpRequestOptions) Declaration Task<HttpResponseInfo> GetResponse(HttpRequestOptions options) Parameters Type Name Description HttpRequestOptions options Returns Type Description Task < HttpResponseInfo > GetResponse(HttpRequestOptions, MediaProtocol) Declaration Task<HttpResponseInfo> GetResponse(HttpRequestOptions options, MediaProtocol protocol) Parameters Type Name Description HttpRequestOptions options MediaProtocol protocol Returns Type Description Task < HttpResponseInfo > MakeAbsolute(String, String, MediaProtocol) Declaration string MakeAbsolute(string url, string parentUrl, MediaProtocol parentProtocol) Parameters Type Name Description String url String parentUrl MediaProtocol parentProtocol Returns Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.IResourceFileManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.IResourceFileManager.html",
    "title": "Interface IResourceFileManager",
    "keywords": "Interface IResourceFileManager Namespace : MediaBrowser.Controller Assembly : MediaBrowser.Controller.dll Syntax public interface IResourceFileManager Methods GetResourceFileStream(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Int64) Declaration StreamHandler GetResourceFileStream(ReadOnlySpan<char> basePath, ReadOnlySpan<char> virtualPath, long offset) Parameters Type Name Description ReadOnlySpan < Char > basePath ReadOnlySpan < Char > virtualPath Int64 offset Returns Type Description StreamHandler GetStaticFileResult(IRequest, ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, String, String, Guid, Nullable<TimeSpan>) Declaration Task<object> GetStaticFileResult(IRequest request, ReadOnlyMemory<char> basePath, ReadOnlyMemory<char> virtualPath, string contentType, string contentEncoding, Guid cacheKey, TimeSpan? cacheDuration) Parameters Type Name Description IRequest request ReadOnlyMemory < Char > basePath ReadOnlyMemory < Char > virtualPath String contentType String contentEncoding Guid cacheKey Nullable < TimeSpan > cacheDuration Returns Type Description Task < Object >"
  },
  "reference/pluginapi/MediaBrowser.Controller.IServerApplicationHost.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.IServerApplicationHost.html",
    "title": "Interface IServerApplicationHost",
    "keywords": "Interface IServerApplicationHost Interface IServerApplicationHost Inherited Members IApplicationHost.OperatingSystemDisplayName IApplicationHost.Name IApplicationHost.SystemId IApplicationHost.ApplicationUpdated IApplicationHost.HasPendingRestart IApplicationHost.IsShuttingDown IApplicationHost.IsStartupComplete IApplicationHost.CanSelfRestart IApplicationHost.HasPendingRestartChanged IApplicationHost.NotifyPendingRestart() IApplicationHost.Restart() IApplicationHost.ApplicationVersion IApplicationHost.CanSelfUpdate IApplicationHost.GetExports<T>(Boolean) IApplicationHost.CheckForApplicationUpdate(CancellationToken, IProgress<Double>) IApplicationHost.UpdateApplication(PackageVersionInfo, CancellationToken, IProgress<Double>) IApplicationHost.Resolve<T>() IApplicationHost.TryResolve<T>() IApplicationHost.Shutdown() IApplicationHost.Plugins IApplicationHost.RemovePlugin(IPlugin) IApplicationHost.Init() IApplicationHost.CreateInstance(Type) IApplicationHost.SystemUpdateLevel IApplicationHost.ContainsStartupOption(String) Namespace : MediaBrowser.Controller Assembly : MediaBrowser.Controller.dll Syntax public interface IServerApplicationHost : IApplicationHost Properties CanLaunchWebBrowser Declaration bool CanLaunchWebBrowser { get; } Property Value Type Description Boolean CodecProviders Gets the codec providers. Declaration ICodecProvider[] CodecProviders { get; } Property Value Type Description ICodecProvider [] The codec providers. EnableHttps Gets a value indicating whether [supports HTTPS]. Declaration bool EnableHttps { get; } Property Value Type Description Boolean true if [supports HTTPS]; otherwise, false . FriendlyName Gets the name of the friendly. Declaration string FriendlyName { get; } Property Value Type Description String The name of the friendly. HardwareAccelerationRequiresPremiere Declaration bool HardwareAccelerationRequiresPremiere { get; } Property Value Type Description Boolean HasUpdateAvailable Gets a value indicating whether this instance has update available. Declaration bool HasUpdateAvailable { get; } Property Value Type Description Boolean true if this instance has update available; otherwise, false . HttpPort Gets the HTTP server port. Declaration int HttpPort { get; } Property Value Type Description Int32 The HTTP server port. HttpsPort Gets the HTTPS port. Declaration int HttpsPort { get; } Property Value Type Description Int32 The HTTPS port. PluginConfigurationPages Gets or sets the plugin configuration pages. Declaration IPluginConfigurationPage[] PluginConfigurationPages { get; } Property Value Type Description IPluginConfigurationPage [] The plugin configuration pages. SupportsAutoRunAtStartup Gets a value indicating whether [supports automatic run at startup]. Declaration bool SupportsAutoRunAtStartup { get; } Property Value Type Description Boolean true if [supports automatic run at startup]; otherwise, false . Methods ExpandVirtualPath(String) Declaration string ExpandVirtualPath(string path) Parameters Type Name Description String path Returns Type Description String GetLocalApiUrl(IPAddress) Gets the local API URL. Declaration string GetLocalApiUrl(IPAddress address) Parameters Type Name Description IPAddress address Returns Type Description String GetLocalApiUrl(String) Gets the local API URL. Declaration string GetLocalApiUrl(string host) Parameters Type Name Description String host The host. Returns Type Description String System.String. GetLocalApiUrl(CancellationToken) Gets the local API URL. Declaration Task<string> GetLocalApiUrl(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < String > The local API URL. GetLocalIpAddresses(AddressFamily, CancellationToken) Declaration Task<List<IPAddress>> GetLocalIpAddresses(AddressFamily family, CancellationToken cancellationToken) Parameters Type Name Description AddressFamily family CancellationToken cancellationToken Returns Type Description Task < List < IPAddress >> GetLocalIpAddresses(CancellationToken) Gets the local ip address. Declaration Task<List<IPAddress>> GetLocalIpAddresses(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < List < IPAddress >> The local ip address. GetLocalIpAddressForRemoteAddress(IPAddress, CancellationToken) Declaration Task<IPAddress> GetLocalIpAddressForRemoteAddress(IPAddress address, CancellationToken cancellationToken) Parameters Type Name Description IPAddress address CancellationToken cancellationToken Returns Type Description Task < IPAddress > GetPublicSystemInfo(IPAddress, AuthorizationInfo, CancellationToken) Declaration Task<PublicSystemInfo> GetPublicSystemInfo(IPAddress remoteAddress, AuthorizationInfo authorizationInfo, CancellationToken cancellationToken) Parameters Type Name Description IPAddress remoteAddress AuthorizationInfo authorizationInfo CancellationToken cancellationToken Returns Type Description Task < PublicSystemInfo > GetPublicSystemInfo(CancellationToken) Declaration Task<PublicSystemInfo> GetPublicSystemInfo(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < PublicSystemInfo > GetReleaseNotes(String, CancellationToken) Declaration Task<PackageVersionInfo> GetReleaseNotes(string version, CancellationToken cancellationToken) Parameters Type Name Description String version CancellationToken cancellationToken Returns Type Description Task < PackageVersionInfo > GetReleaseNotesVersions(CancellationToken) Declaration Task<PackageVersionInfo[]> GetReleaseNotesVersions(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < PackageVersionInfo []> GetSystemInfo(IPAddress, CancellationToken) Gets the system info. Declaration Task<SystemInfo> GetSystemInfo(IPAddress remoteAddress, CancellationToken cancellationToken) Parameters Type Name Description IPAddress remoteAddress CancellationToken cancellationToken Returns Type Description Task < SystemInfo > SystemInfo. GetWakeOnLanInfo() Declaration WakeOnLanInfo[] GetWakeOnLanInfo() Returns Type Description WakeOnLanInfo [] LaunchUrl(String) Declaration void LaunchUrl(string url) Parameters Type Name Description String url ReverseVirtualPath(String) Declaration string ReverseVirtualPath(string path) Parameters Type Name Description String path Returns Type Description String Events HasUpdateAvailableChanged Declaration event EventHandler HasUpdateAvailableChanged Event Type Type Description EventHandler"
  },
  "reference/pluginapi/MediaBrowser.Controller.IServerApplicationPaths.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.IServerApplicationPaths.html",
    "title": "Interface IServerApplicationPaths",
    "keywords": "Interface IServerApplicationPaths Inherited Members IApplicationPaths.ProgramDataPath IApplicationPaths.ProgramSystemPath IApplicationPaths.DataPath IApplicationPaths.VirtualDataPath IApplicationPaths.GetImageCachePath() IApplicationPaths.PluginsPath IApplicationPaths.PluginConfigurationsPath IApplicationPaths.TempUpdatePath IApplicationPaths.LogDirectoryPath IApplicationPaths.ConfigurationDirectoryPath IApplicationPaths.SystemConfigurationFilePath IApplicationPaths.CachePath IApplicationPaths.GetCachePath() IApplicationPaths.TempDirectory Namespace : MediaBrowser.Controller Assembly : MediaBrowser.Controller.dll Syntax public interface IServerApplicationPaths : IApplicationPaths Properties ApplicationResourcesPath Gets the application resources path. This is the path to the folder containing resources that are deployed as part of the application For example, this folder contains dashboard-ui and swagger-ui Declaration string ApplicationResourcesPath { get; } Property Value Type Description String The application resources path. DefaultUserViewsPath Gets the path to the default user view directory. Used if no specific user view is defined. Declaration string DefaultUserViewsPath { get; } Property Value Type Description String The default user views path. GameGenrePath Gets the game genre path. Declaration string GameGenrePath { get; } Property Value Type Description String The game genre path. GeneralPath Gets the path to the General IBN directory Declaration string GeneralPath { get; } Property Value Type Description String The general path. GenrePath Gets the path to the Genre directory Declaration string GenrePath { get; } Property Value Type Description String The genre path. InternalMetadataPath Gets the internal metadata path. Declaration string InternalMetadataPath { get; } Property Value Type Description String The internal metadata path. MediaInfoImagesPath Gets the media info images path. Declaration string MediaInfoImagesPath { get; } Property Value Type Description String The media info images path. MusicGenrePath Gets the music genre path. Declaration string MusicGenrePath { get; } Property Value Type Description String The music genre path. OcrDataPath Gets the ocr model path. Declaration string OcrDataPath { get; } Property Value Type Description String The ocr model path. RatingsPath Gets the path to the Ratings IBN directory Declaration string RatingsPath { get; } Property Value Type Description String The ratings path. RootFolderPath Gets the path to the base root media directory Declaration string RootFolderPath { get; } Property Value Type Description String The root folder path. StudioPath Gets the path to the Studio directory Declaration string StudioPath { get; } Property Value Type Description String The studio path. SubtitleFontsPath Gets the subtitle fonts path. Declaration string SubtitleFontsPath { get; } Property Value Type Description String The subtitle fonts path. TranscodingTempPath Gets the transcoding temporary path. Declaration string TranscodingTempPath { get; } Property Value Type Description String The transcoding temporary path. UserConfigurationDirectoryPath Gets the path to the user configuration directory Declaration string UserConfigurationDirectoryPath { get; } Property Value Type Description String The user configuration directory path. VirtualInternalMetadataPath Declaration string VirtualInternalMetadataPath { get; } Property Value Type Description String VirtualRootFolderPath Declaration string VirtualRootFolderPath { get; } Property Value Type Description String YearPath Gets the path to the Year directory Declaration string YearPath { get; } Property Value Type Description String The year path. Methods GetTranscodingTempPath() Declaration string GetTranscodingTempPath() Returns Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.DeleteOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.DeleteOptions.html",
    "title": "Class DeleteOptions",
    "keywords": "Class DeleteOptions Inheritance Object DeleteOptions Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public sealed class DeleteOptions Constructors DeleteOptions() Declaration public DeleteOptions() Properties DeleteFileLocation Declaration public bool DeleteFileLocation { get; set; } Property Value Type Description Boolean DeleteFromExternalProvider Declaration public bool DeleteFromExternalProvider { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.html",
    "title": "Namespace MediaBrowser.Controller.Library",
    "keywords": "Namespace MediaBrowser.Controller.Library Classes DeleteOptions IntroInfo ItemChangeEventArgs Class ItemChangeEventArgs ItemResolveArgs These are arguments relating to the file system that are collected once and then referred to whenever needed. Primarily for entity resolution. LibraryManagerExtensions MetadataConfigurationExtensions MetadataConfigurationStore PlaybackProgressEventArgs Holds information about a playback progress event PlaybackStopEventArgs Profiler Class Profiler ResolverHelper Class ResolverHelper UserDataSaveEventArgs Class UserDataSaveEventArgs Interfaces IConfigurableProvider IDirectStreamProvider IIntroProvider Class BaseIntroProvider ILibraryManager Interface ILibraryManager ILibraryMonitor ILibraryPostScanTask An interface for tasks that run after the media library scan ILiveStream IMediaSourceManager IMediaSourceProvider IMetadataSaver Interface IMetadataSaver IMusicManager IUserDataManager Interface IUserDataManager IUserManager Interface IUserManager IUserViewManager Enums ItemLinkType ItemUpdateType"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.IConfigurableProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.IConfigurableProvider.html",
    "title": "Interface IConfigurableProvider",
    "keywords": "Interface IConfigurableProvider Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface IConfigurableProvider Properties IsEnabled Declaration bool IsEnabled { get; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.IDirectStreamProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.IDirectStreamProvider.html",
    "title": "Interface IDirectStreamProvider",
    "keywords": "Interface IDirectStreamProvider Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface IDirectStreamProvider Methods CopyToAsync(PipeWriter, CancellationToken) Declaration Task CopyToAsync(PipeWriter writer, CancellationToken cancellationToken) Parameters Type Name Description PipeWriter writer CancellationToken cancellationToken Returns Type Description Task CopyToAsync(Stream, CancellationToken) Declaration Task CopyToAsync(Stream writer, CancellationToken cancellationToken) Parameters Type Name Description Stream writer CancellationToken cancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.IIntroProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.IIntroProvider.html",
    "title": "Interface IIntroProvider",
    "keywords": "Interface IIntroProvider Class BaseIntroProvider Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface IIntroProvider Properties Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. Methods GetAllIntroFiles() Gets all intro files. Declaration IEnumerable<string> GetAllIntroFiles() Returns Type Description IEnumerable < String > IEnumerable{System.String}. GetIntros(BaseItem, User) Gets the intros. Declaration Task<IEnumerable<IntroInfo>> GetIntros(BaseItem item, User user) Parameters Type Name Description BaseItem item The item. User user The user. Returns Type Description Task < IEnumerable < IntroInfo >> IEnumerable{System.String}."
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.ILibraryManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.ILibraryManager.html",
    "title": "Interface ILibraryManager",
    "keywords": "Interface ILibraryManager Interface ILibraryManager Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface ILibraryManager Properties IsScanRunning Declaration bool IsScanRunning { get; } Property Value Type Description Boolean RootFolder Gets the root folder. Declaration AggregateFolder RootFolder { get; } Property Value Type Description AggregateFolder The root folder. RootFolderId Declaration long RootFolderId { get; } Property Value Type Description Int64 Methods AddDatabase(ILibraryDatabase) Declaration void AddDatabase(ILibraryDatabase db) Parameters Type Name Description ILibraryDatabase db AddExternalSubtitleStreams(List<MediaStream>, ReadOnlySpan<Char>, Boolean, FileSystemMetadata[]) Declaration void AddExternalSubtitleStreams(List<MediaStream> streams, ReadOnlySpan<char> mediaPath, bool isAudio, FileSystemMetadata[] files) Parameters Type Name Description List < MediaStream > streams ReadOnlySpan < Char > mediaPath Boolean isAudio FileSystemMetadata [] files AddListItems(BaseItem, ListItem[], Boolean) Declaration bool AddListItems(BaseItem list, ListItem[] items, bool uniqueByItemId) Parameters Type Name Description BaseItem list ListItem [] items Boolean uniqueByItemId Returns Type Description Boolean AddMediaPath(Int64, MediaPathInfo) Declaration void AddMediaPath(long virtualFolderId, MediaPathInfo path) Parameters Type Name Description Int64 virtualFolderId MediaPathInfo path AddParts(IEnumerable<IItemResolver>, IEnumerable<IIntroProvider>, IEnumerable<ILibraryPostScanTask>, IEnumerable<ILazyImageProvider>) Adds the parts. Declaration void AddParts(IEnumerable<IItemResolver> resolvers, IEnumerable<IIntroProvider> introProviders, IEnumerable<ILibraryPostScanTask> postscanTasks, IEnumerable<ILazyImageProvider> lazyImageProviders) Parameters Type Name Description IEnumerable < IItemResolver > resolvers IEnumerable < IIntroProvider > introProviders IEnumerable < ILibraryPostScanTask > postscanTasks IEnumerable < ILazyImageProvider > lazyImageProviders AddVirtualFolder(String, LibraryOptions, Boolean) Declaration Task AddVirtualFolder(string name, LibraryOptions options, bool refreshLibrary) Parameters Type Name Description String name LibraryOptions options Boolean refreshLibrary Returns Type Description Task ConvertImageToLocal(BaseItem, ItemImageInfo, Int32, CancellationToken) Converts the image to local. Declaration Task<ItemImageInfo> ConvertImageToLocal(BaseItem item, ItemImageInfo image, int imageIndex, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item ItemImageInfo image Int32 imageIndex CancellationToken cancellationToken Returns Type Description Task < ItemImageInfo > CreateItem(BaseItem, BaseItem) Creates the item. Declaration void CreateItem(BaseItem item, BaseItem parent) Parameters Type Name Description BaseItem item BaseItem parent CreateItems(List<BaseItem>, BaseItem, MetadataRefreshOptions, CancellationToken) Creates the items. Declaration void CreateItems(List<BaseItem> items, BaseItem parent, MetadataRefreshOptions metadataRefreshOptions, CancellationToken cancellationToken) Parameters Type Name Description List < BaseItem > items BaseItem parent MetadataRefreshOptions metadataRefreshOptions CancellationToken cancellationToken DeleteItem(BaseItem, DeleteOptions) Deletes the item. Declaration void DeleteItem(BaseItem item, DeleteOptions options) Parameters Type Name Description BaseItem item DeleteOptions options DeleteItem(BaseItem, DeleteOptions, BaseItem, Boolean) Deletes the item. Declaration void DeleteItem(BaseItem item, DeleteOptions options, BaseItem parent, bool notifyParentItem) Parameters Type Name Description BaseItem item DeleteOptions options BaseItem parent Boolean notifyParentItem DeleteItem(BaseItem, DeleteOptions, Boolean) Deletes the item. Declaration void DeleteItem(BaseItem item, DeleteOptions options, bool notifyParentItem) Parameters Type Name Description BaseItem item DeleteOptions options Boolean notifyParentItem DeleteItems(Int64[]) Declaration void DeleteItems(long[] ids) Parameters Type Name Description Int64 [] ids FillMissingEpisodeNumbersFromPath(Episode, Boolean) Fills the missing episode numbers from path. Declaration bool FillMissingEpisodeNumbersFromPath(Episode episode, bool forceRefresh) Parameters Type Name Description Episode episode Boolean forceRefresh Returns Type Description Boolean FindByPath(String, Nullable<Boolean>) Finds the by path. Declaration BaseItem FindByPath(string path, bool? isFolder) Parameters Type Name Description String path The path. Nullable < Boolean > isFolder The is folder. Returns Type Description BaseItem BaseItem. FindExtras(BaseItem, List<FileSystemMetadata>, IDirectoryService) Finds the extras. Declaration IEnumerable<BaseItem> FindExtras(BaseItem owner, List<FileSystemMetadata> fileSystemChildren, IDirectoryService directoryService) Parameters Type Name Description BaseItem owner The owner. List < FileSystemMetadata > fileSystemChildren The file system children. IDirectoryService directoryService The directory service. Returns Type Description IEnumerable < BaseItem > FindIdByPath(String, Nullable<Boolean>) Declaration long FindIdByPath(string path, bool? isFolder) Parameters Type Name Description String path Nullable < Boolean > isFolder Returns Type Description Int64 GetAllArtists(BaseItem) Declaration List<BaseItem> GetAllArtists(BaseItem item) Parameters Type Name Description BaseItem item Returns Type Description List < BaseItem > GetAllIntroFiles() Gets all intro files. Declaration List<string> GetAllIntroFiles() Returns Type Description List < String > IEnumerable{System.String}. GetArtistPrefixes(InternalItemsQuery, ItemLinkType[]) Declaration string[] GetArtistPrefixes(InternalItemsQuery query, ItemLinkType[] artistTypes) Parameters Type Name Description InternalItemsQuery query ItemLinkType [] artistTypes Returns Type Description String [] GetArtists(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetArtists(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetArtists(InternalItemsQuery, ItemLinkType[]) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetArtists(InternalItemsQuery query, ItemLinkType[] artistTypes) Parameters Type Name Description InternalItemsQuery query ItemLinkType [] artistTypes Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetAudioCodecs(InternalItemsQuery) Declaration QueryResult<string> GetAudioCodecs(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < String > GetCollectionFolders(BaseItem) Gets the collection folders. Declaration Folder[] GetCollectionFolders(BaseItem item) Parameters Type Name Description BaseItem item The item. Returns Type Description Folder [] GetContainers(InternalItemsQuery) Declaration QueryResult<string> GetContainers(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < String > GetExcludedSubFolders(User, CollectionFolder) Declaration long[] GetExcludedSubFolders(User user, CollectionFolder folder) Parameters Type Name Description User user CollectionFolder folder Returns Type Description Int64 [] GetExternalSubtitleFiles(Int64) Declaration List<string> GetExternalSubtitleFiles(long itemId) Parameters Type Name Description Int64 itemId Returns Type Description List < String > GetGameGenres(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetGameGenres(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetGenres(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetGenres(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetGuid(Int64) Declaration Guid GetGuid(long id) Parameters Type Name Description Int64 id Returns Type Description Guid GetGuidAndPath(Int64) Declaration Tuple<Guid, string> GetGuidAndPath(long itemId) Parameters Type Name Description Int64 itemId Returns Type Description Tuple < Guid , String > GetIdGuidPairs(InternalItemsQuery) Declaration (long, Guid)[] GetIdGuidPairs(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description (T1, T2) < Int64 , Guid >[] GetImageInfo(Int64, ImageType, Int32) Declaration ItemImageInfo GetImageInfo(long itemId, ImageType imageType, int index) Parameters Type Name Description Int64 itemId ImageType imageType Int32 index Returns Type Description ItemImageInfo GetImportedCollections(Int64) Declaration LinkedItemInfo[] GetImportedCollections(long itemId) Parameters Type Name Description Int64 itemId Returns Type Description LinkedItemInfo [] GetInternalId(Guid) Declaration long GetInternalId(Guid id) Parameters Type Name Description Guid id Returns Type Description Int64 GetInternalId(ReadOnlySpan<Char>) Declaration long GetInternalId(ReadOnlySpan<char> id) Parameters Type Name Description ReadOnlySpan < Char > id Returns Type Description Int64 GetInternalId(String) Declaration long GetInternalId(string id) Parameters Type Name Description String id Returns Type Description Int64 GetInternalItemIds(InternalItemsQuery) Declaration long[] GetInternalItemIds(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetIntros(BaseItem, User) Gets the intros. Declaration Task<IEnumerable<Video>> GetIntros(BaseItem item, User user) Parameters Type Name Description BaseItem item The item. User user The user. Returns Type Description Task < IEnumerable < Video >> GetItemById(Guid) Gets the item by id. Declaration BaseItem GetItemById(Guid id) Parameters Type Name Description Guid id The id. Returns Type Description BaseItem BaseItem. GetItemById(Int64) Declaration BaseItem GetItemById(long id) Parameters Type Name Description Int64 id Returns Type Description BaseItem GetItemIds(InternalItemsQuery) Gets the item ids. Declaration Guid[] GetItemIds(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query The query. Returns Type Description Guid [] List<Guid>. GetItemLinks(Int64, List<ItemLinkType>) Declaration List<(ItemLinkType, string, long)> GetItemLinks(long itemId, List<ItemLinkType> types) Parameters Type Name Description Int64 itemId List < ItemLinkType > types Returns Type Description List < (T1, T2, T3) < ItemLinkType , String , Int64 >> GetItemList(InternalItemsQuery) Gets the items. Declaration BaseItem[] GetItemList(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query The query. Returns Type Description BaseItem [] QueryResult<BaseItem>. GetItemList(InternalItemsQuery, BaseItem[]) Gets the items. Declaration BaseItem[] GetItemList(InternalItemsQuery query, BaseItem[] parents) Parameters Type Name Description InternalItemsQuery query BaseItem [] parents Returns Type Description BaseItem [] GetItemList(InternalItemsQuery, Boolean) Declaration BaseItem[] GetItemList(InternalItemsQuery query, bool allowExternalContent) Parameters Type Name Description InternalItemsQuery query Boolean allowExternalContent Returns Type Description BaseItem [] GetItemPeople(BaseItem) Gets the people. Declaration List<PersonInfo> GetItemPeople(BaseItem item) Parameters Type Name Description BaseItem item Returns Type Description List < PersonInfo > GetItemPeople(InternalPeopleQuery) Gets the people. Declaration List<PersonInfo> GetItemPeople(InternalPeopleQuery query) Parameters Type Name Description InternalPeopleQuery query Returns Type Description List < PersonInfo > GetItemsResult(InternalItemsQuery) Gets the items result. Declaration QueryResult<BaseItem> GetItemsResult(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query The query. Returns Type Description QueryResult < BaseItem > QueryResult<BaseItem>. GetItemTypes(InternalItemsQuery) Declaration string[] GetItemTypes(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description String [] GetLibraryOptions(BaseItem) Declaration LibraryOptions GetLibraryOptions(BaseItem item) Parameters Type Name Description BaseItem item Returns Type Description LibraryOptions GetMusicAlbums(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetMusicAlbums(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetMusicGenres(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetMusicGenres(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetNamedView(ReadOnlySpan<Char>, ReadOnlySpan<Char>) Gets the named view. Declaration UserView GetNamedView(ReadOnlySpan<char> name, ReadOnlySpan<char> viewType) Parameters Type Name Description ReadOnlySpan < Char > name The name. ReadOnlySpan < Char > viewType Type of the view. Returns Type Description UserView GetNameIdPairs(InternalItemsQuery) Declaration (string, long)[] GetNameIdPairs(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description (T1, T2) < String , Int64 >[] GetNewItemId(String, Type) Gets the new item identifier. Declaration Guid GetNewItemId(string key, Type type) Parameters Type Name Description String key The key. Type type The type. Returns Type Description Guid Guid. GetOfficialRatings(InternalItemsQuery) Declaration QueryResult<string> GetOfficialRatings(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < String > GetPathAfterNetworkSubstitution(ReadOnlySpan<Char>, LibraryOptions) Declaration string GetPathAfterNetworkSubstitution(ReadOnlySpan<char> path, LibraryOptions libraryOptions) Parameters Type Name Description ReadOnlySpan < Char > path LibraryOptions libraryOptions Returns Type Description String GetPaths(InternalItemsQuery) Declaration string[] GetPaths(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description String [] GetPeople(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetPeople(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetPrefixes(InternalItemsQuery) Declaration string[] GetPrefixes(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description String [] GetProviderIds(Int64) Declaration ProviderIdDictionary GetProviderIds(long itemId) Parameters Type Name Description Int64 itemId Returns Type Description ProviderIdDictionary GetSeasonNumberFromPath(ReadOnlySpan<Char>) Gets the season number from path. Declaration int? GetSeasonNumberFromPath(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path The path. Returns Type Description Nullable < Int32 > System.Nullable<System.Int32>. GetStreamLanguages(InternalItemsQuery, MediaStreamType) Declaration QueryResult<string> GetStreamLanguages(InternalItemsQuery query, MediaStreamType streamType) Parameters Type Name Description InternalItemsQuery query MediaStreamType streamType Returns Type Description QueryResult < String > GetStudios(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetStudios(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetSubtitleCodecs(InternalItemsQuery) Declaration QueryResult<string> GetSubtitleCodecs(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < String > GetSubviews(InternalItemsQuery, String) Declaration List<string> GetSubviews(InternalItemsQuery query, string contentType) Parameters Type Name Description InternalItemsQuery query String contentType Returns Type Description List < String > GetTagPrefixes(InternalItemsQuery) Declaration string[] GetTagPrefixes(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description String [] GetTags(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetTags(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetTopParentIdsForQuery(BaseItem, User) Declaration long[] GetTopParentIdsForQuery(BaseItem item, User user) Parameters Type Name Description BaseItem item User user Returns Type Description Int64 [] GetUserRootFolder() Gets the user root folder. Declaration Folder GetUserRootFolder() Returns Type Description Folder UserRootFolder. GetVideoCodecs(InternalItemsQuery) Declaration QueryResult<string> GetVideoCodecs(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < String > GetVirtualFolders() Gets the default view. Declaration List<VirtualFolderInfo> GetVirtualFolders() Returns Type Description List < VirtualFolderInfo > GetVirtualFolders(Boolean) Declaration List<VirtualFolderInfo> GetVirtualFolders(bool includeRefreshState) Parameters Type Name Description Boolean includeRefreshState Returns Type Description List < VirtualFolderInfo > GetYears(InternalItemsQuery) Declaration QueryResult<int> GetYears(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Int32 > IgnoreFile(FileSystemMetadata, BaseItem, LibraryOptions) Ignores the file. Declaration bool IgnoreFile(FileSystemMetadata file, BaseItem parent, LibraryOptions libraryOptions) Parameters Type Name Description FileSystemMetadata file BaseItem parent LibraryOptions libraryOptions Returns Type Description Boolean IsAudioFile(ReadOnlySpan<Char>) Determines whether [is audio file] [the specified path]. Declaration bool IsAudioFile(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path The path. Returns Type Description Boolean true if [is audio file] [the specified path]; otherwise, false . IsAudioFile(ReadOnlySpan<Char>, LibraryOptions) Declaration bool IsAudioFile(ReadOnlySpan<char> path, LibraryOptions libraryOptions) Parameters Type Name Description ReadOnlySpan < Char > path LibraryOptions libraryOptions Returns Type Description Boolean IsLyricsFile(ReadOnlySpan<Char>) Declaration bool IsLyricsFile(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path Returns Type Description Boolean IsMultiDiscAlbumFolder(String) Declaration bool IsMultiDiscAlbumFolder(string path) Parameters Type Name Description String path Returns Type Description Boolean IsSubtitleFile(ReadOnlySpan<Char>) Declaration bool IsSubtitleFile(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path Returns Type Description Boolean IsVideoFile(ReadOnlySpan<Char>) Determines whether [is video file] [the specified path]. Declaration bool IsVideoFile(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path The path. Returns Type Description Boolean true if [is video file] [the specified path]; otherwise, false . IsVideoFile(ReadOnlySpan<Char>, LibraryOptions) Declaration bool IsVideoFile(ReadOnlySpan<char> path, LibraryOptions libraryOptions) Parameters Type Name Description ReadOnlySpan < Char > path LibraryOptions libraryOptions Returns Type Description Boolean MergeItems(BaseItem[]) Declaration void MergeItems(BaseItem[] items) Parameters Type Name Description BaseItem [] items MoveListItem(BaseItem, Int64, Int32) Declaration void MoveListItem(BaseItem list, long entryId, int newIndex) Parameters Type Name Description BaseItem list Int64 entryId Int32 newIndex NormalizeRootPathList(FileSystemMetadata[]) Normalizes the root path list. Declaration List<FileSystemMetadata> NormalizeRootPathList(FileSystemMetadata[] paths) Parameters Type Name Description FileSystemMetadata [] paths The paths. Returns Type Description List < FileSystemMetadata > ParseName(ReadOnlySpan<Char>) Parses the name. Declaration ItemLookupInfo ParseName(ReadOnlySpan<char> name) Parameters Type Name Description ReadOnlySpan < Char > name The name. Returns Type Description ItemLookupInfo ItemInfo. ParseSxxExxEpisodeNumberSystem(String) Declaration Tuple<int?, int?, int?> ParseSxxExxEpisodeNumberSystem(string value) Parameters Type Name Description String value Returns Type Description Tuple < Nullable < Int32 >, Nullable < Int32 >, Nullable < Int32 >> QueryItems(InternalItemsQuery) Queries the items. Declaration QueryResult<BaseItem> QueryItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query The query. Returns Type Description QueryResult < BaseItem > QueryResult<BaseItem>. QueueLibraryScan() Queues the library scan. Declaration void QueueLibraryScan() RefreshThumbnailImages(Video, MediaStream, LibraryOptions, MetadataRefreshOptions, List<ChapterInfo>, Boolean, Boolean, CancellationToken) Declaration Task<bool> RefreshThumbnailImages(Video item, MediaStream videoStream, LibraryOptions libraryOptions, MetadataRefreshOptions metadataRefreshOptions, List<ChapterInfo> chapters, bool extractImages, bool saveChapters, CancellationToken cancellationToken) Parameters Type Name Description Video item MediaStream videoStream LibraryOptions libraryOptions MetadataRefreshOptions metadataRefreshOptions List < ChapterInfo > chapters Boolean extractImages Boolean saveChapters CancellationToken cancellationToken Returns Type Description Task < Boolean > RemoveListItemsByListItemEntryIds(BaseItem, Int64[]) Declaration Task RemoveListItemsByListItemEntryIds(BaseItem list, long[] listItemIds) Parameters Type Name Description BaseItem list Int64 [] listItemIds Returns Type Description Task RemoveMediaPath(Int64, String) Declaration void RemoveMediaPath(long virtualFolderId, string path) Parameters Type Name Description Int64 virtualFolderId String path RemoveVirtualFolder(Int64, Boolean) Declaration Task RemoveVirtualFolder(long id, bool refreshLibrary) Parameters Type Name Description Int64 id Boolean refreshLibrary Returns Type Description Task ResolvePath(FileSystemMetadata, Folder) Resolves the path. Declaration BaseItem ResolvePath(FileSystemMetadata fileInfo, Folder parent = null) Parameters Type Name Description FileSystemMetadata fileInfo The file information. Folder parent The parent. Returns Type Description BaseItem BaseItem. ResolvePaths(FileSystemMetadata[], IDirectoryService, Folder, LibraryOptions) Resolves a set of files into a list of BaseItem Declaration List<BaseItem> ResolvePaths(FileSystemMetadata[] files, IDirectoryService directoryService, Folder parent, LibraryOptions libraryOptions) Parameters Type Name Description FileSystemMetadata [] files IDirectoryService directoryService Folder parent LibraryOptions libraryOptions Returns Type Description List < BaseItem > SetSortIndexNumbers(List<Tuple<Int64, Int32>>) Declaration void SetSortIndexNumbers(List<Tuple<long, int>> values) Parameters Type Name Description List < Tuple < Int64 , Int32 >> values SplitItems(BaseItem) Declaration void SplitItems(BaseItem item) Parameters Type Name Description BaseItem item SubstitutePath(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) Substitutes the path. Declaration string SubstitutePath(ReadOnlySpan<char> path, ReadOnlySpan<char> from, ReadOnlySpan<char> to) Parameters Type Name Description ReadOnlySpan < Char > path The path. ReadOnlySpan < Char > from From. ReadOnlySpan < Char > to To. Returns Type Description String System.String. UpdateImages(BaseItem) Declaration void UpdateImages(BaseItem item) Parameters Type Name Description BaseItem item UpdateItem(BaseItem, BaseItem, ItemUpdateType) Declaration void UpdateItem(BaseItem item, BaseItem parent, ItemUpdateType updateReason) Parameters Type Name Description BaseItem item BaseItem parent ItemUpdateType updateReason UpdateItem(BaseItem, BaseItem, ItemUpdateType, MetadataRefreshOptions) Declaration void UpdateItem(BaseItem item, BaseItem parent, ItemUpdateType updateReason, MetadataRefreshOptions metadataRefreshOptions) Parameters Type Name Description BaseItem item BaseItem parent ItemUpdateType updateReason MetadataRefreshOptions metadataRefreshOptions UpdateItems(List<BaseItem>, BaseItem, ItemUpdateType, MetadataRefreshOptions, CancellationToken) Updates the item. Declaration void UpdateItems(List<BaseItem> items, BaseItem parent, ItemUpdateType updateReason, MetadataRefreshOptions metadataRefreshOptions, CancellationToken cancellationToken) Parameters Type Name Description List < BaseItem > items BaseItem parent ItemUpdateType updateReason MetadataRefreshOptions metadataRefreshOptions CancellationToken cancellationToken UpdateItems(List<BaseItem>, BaseItem, ItemUpdateType, Boolean, Boolean, MetadataRefreshOptions, CancellationToken) Declaration void UpdateItems(List<BaseItem> items, BaseItem parent, ItemUpdateType updateReason, bool setDateLastSaved, bool saveMetadata, MetadataRefreshOptions metadataRefreshOptions, CancellationToken cancellationToken) Parameters Type Name Description List < BaseItem > items BaseItem parent ItemUpdateType updateReason Boolean setDateLastSaved Boolean saveMetadata MetadataRefreshOptions metadataRefreshOptions CancellationToken cancellationToken UpdateListItems(BaseItem, LinkedChild[]) Declaration void UpdateListItems(BaseItem list, LinkedChild[] items) Parameters Type Name Description BaseItem list LinkedChild [] items UpdateMediaPath(Int64, MediaPathInfo) Declaration void UpdateMediaPath(long virtualFolderId, MediaPathInfo path) Parameters Type Name Description Int64 virtualFolderId MediaPathInfo path UpdatePeople(BaseItem, List<PersonInfo>, Boolean) Updates the people. Declaration void UpdatePeople(BaseItem item, List<PersonInfo> people, bool isNewItem = false) Parameters Type Name Description BaseItem item List < PersonInfo > people Boolean isNewItem ValidateMediaLibrary(IProgress<Double>, CancellationToken) Reloads the root media folder Declaration Task ValidateMediaLibrary(IProgress<double> progress, CancellationToken cancellationToken) Parameters Type Name Description IProgress < Double > progress The progress. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. ValidatePeople(CancellationToken, IProgress<Double>) Validate and refresh the People sub-set of the IBN. The items are stored in the db but not loaded into memory until actually requested by an operation. Declaration Task ValidatePeople(CancellationToken cancellationToken, IProgress<double> progress) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. IProgress < Double > progress The progress. Returns Type Description Task Task. Events ItemAdded Occurs when [item added]. Declaration event EventHandler<ItemChangeEventArgs> ItemAdded Event Type Type Description EventHandler < ItemChangeEventArgs > ItemRemoved Occurs when [item removed]. Declaration event EventHandler<ItemChangeEventArgs> ItemRemoved Event Type Type Description EventHandler < ItemChangeEventArgs > ItemUpdated Occurs when [item updated]. Declaration event EventHandler<ItemChangeEventArgs> ItemUpdated Event Type Type Description EventHandler < ItemChangeEventArgs > Extension Methods LibraryManagerExtensions.GetItemById(ILibraryManager, String) LibraryManagerExtensions.GetItemById(ILibraryManager, ReadOnlySpan<Char>)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.ILibraryMonitor.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.ILibraryMonitor.html",
    "title": "Interface ILibraryMonitor",
    "keywords": "Interface ILibraryMonitor Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface ILibraryMonitor : IDisposable Methods IsPathLocked(ReadOnlySpan<Char>) Determines whether [is path locked] [the specified path]. Declaration bool IsPathLocked(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path The path. Returns Type Description Boolean true if [is path locked] [the specified path]; otherwise, false . ReportFileSystemChangeBeginning(String) Reports the file system change beginning. Declaration void ReportFileSystemChangeBeginning(string path) Parameters Type Name Description String path The path. ReportFileSystemChangeComplete(String, Boolean) Reports the file system change complete. Declaration void ReportFileSystemChangeComplete(string path, bool refreshPath) Parameters Type Name Description String path The path. Boolean refreshPath if set to true [refresh path]. ReportFileSystemChanged(String) Reports the file system changed. Declaration void ReportFileSystemChanged(string path) Parameters Type Name Description String path The path. Start() Starts this instance. Declaration void Start() Stop() Stops this instance. Declaration void Stop()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.ILibraryPostScanTask.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.ILibraryPostScanTask.html",
    "title": "Interface ILibraryPostScanTask",
    "keywords": "Interface ILibraryPostScanTask An interface for tasks that run after the media library scan Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface ILibraryPostScanTask Methods Run(IProgress<Double>, CancellationToken) Runs the specified progress. Declaration Task Run(IProgress<double> progress, CancellationToken cancellationToken) Parameters Type Name Description IProgress < Double > progress The progress. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task."
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.ILiveStream.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.ILiveStream.html",
    "title": "Interface ILiveStream",
    "keywords": "Interface ILiveStream Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface ILiveStream Properties ConsumerCount Declaration int ConsumerCount { get; set; } Property Value Type Description Int32 EnableStreamSharing Declaration bool EnableStreamSharing { get; } Property Value Type Description Boolean MediaSource Declaration MediaSourceInfo MediaSource { get; set; } Property Value Type Description MediaSourceInfo OriginalStreamId Declaration string OriginalStreamId { get; set; } Property Value Type Description String TunerHostId Declaration string TunerHostId { get; } Property Value Type Description String UniqueId Declaration string UniqueId { get; } Property Value Type Description String Methods Close() Declaration Task Close() Returns Type Description Task Open(CancellationToken) Declaration Task Open(CancellationToken openCancellationToken) Parameters Type Name Description CancellationToken openCancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.IMediaSourceManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.IMediaSourceManager.html",
    "title": "Interface IMediaSourceManager",
    "keywords": "Interface IMediaSourceManager Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface IMediaSourceManager Methods AddMediaInfoWithProbe(MediaSourceInfo, Boolean, Boolean, CancellationToken) Declaration Task AddMediaInfoWithProbe(MediaSourceInfo mediaSource, bool isAudio, bool addProbeDelay, CancellationToken cancellationToken) Parameters Type Name Description MediaSourceInfo mediaSource Boolean isAudio Boolean addProbeDelay CancellationToken cancellationToken Returns Type Description Task AddMediaInfoWithProbe(MediaSourceInfo, Boolean, ReadOnlyMemory<Char>, Boolean, CancellationToken) Declaration Task AddMediaInfoWithProbe(MediaSourceInfo mediaSource, bool isAudio, ReadOnlyMemory<char> cacheKey, bool addProbeDelay, CancellationToken cancellationToken) Parameters Type Name Description MediaSourceInfo mediaSource Boolean isAudio ReadOnlyMemory < Char > cacheKey Boolean addProbeDelay CancellationToken cancellationToken Returns Type Description Task AddParts(IEnumerable<IMediaSourceProvider>) Adds the parts. Declaration void AddParts(IEnumerable<IMediaSourceProvider> providers) Parameters Type Name Description IEnumerable < IMediaSourceProvider > providers The providers. CloseLiveStream(String) Closes the media source. Declaration Task CloseLiveStream(string id) Parameters Type Name Description String id The live stream identifier. Returns Type Description Task Task. GetDirectStreamProviderByUniqueId(String, CancellationToken) Declaration Task<IDirectStreamProvider> GetDirectStreamProviderByUniqueId(string uniqueId, CancellationToken cancellationToken) Parameters Type Name Description String uniqueId CancellationToken cancellationToken Returns Type Description Task < IDirectStreamProvider > GetLiveStream(String, CancellationToken) Gets the live stream. Declaration Task<MediaSourceInfo> GetLiveStream(string id, CancellationToken cancellationToken) Parameters Type Name Description String id The identifier. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < MediaSourceInfo > Task<MediaSourceInfo>. GetLiveStreamMediaInfo(String, CancellationToken) Declaration Task<MediaSourceInfo> GetLiveStreamMediaInfo(string id, CancellationToken cancellationToken) Parameters Type Name Description String id CancellationToken cancellationToken Returns Type Description Task < MediaSourceInfo > GetLiveStreamWithDirectStreamProvider(String, CancellationToken) Declaration Task<Tuple<MediaSourceInfo, IDirectStreamProvider>> GetLiveStreamWithDirectStreamProvider(string id, CancellationToken cancellationToken) Parameters Type Name Description String id CancellationToken cancellationToken Returns Type Description Task < Tuple < MediaSourceInfo , IDirectStreamProvider >> GetMediaSource(BaseItem, String, String, Boolean, CancellationToken) Gets the static media source. Declaration Task<MediaSourceInfo> GetMediaSource(BaseItem item, string mediaSourceId, string liveStreamId, bool enablePathSubstitution, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item String mediaSourceId String liveStreamId Boolean enablePathSubstitution CancellationToken cancellationToken Returns Type Description Task < MediaSourceInfo > GetMediaStreams(MediaStreamQuery) Gets the media streams. Declaration List<MediaStream> GetMediaStreams(MediaStreamQuery query) Parameters Type Name Description MediaStreamQuery query The query. Returns Type Description List < MediaStream > GetMediaStreams(Int64) Gets the media streams. Declaration List<MediaStream> GetMediaStreams(long itemId) Parameters Type Name Description Int64 itemId The item identifier. Returns Type Description List < MediaStream > GetPathProtocol(ReadOnlySpan<Char>) Declaration MediaProtocol GetPathProtocol(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path Returns Type Description MediaProtocol GetPlayackMediaSources(BaseItem, User, Boolean, Boolean, CancellationToken) Declaration Task<List<MediaSourceInfo>> GetPlayackMediaSources(BaseItem item, User user, bool allowMediaProbe, bool enablePathSubstitution, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item User user Boolean allowMediaProbe Boolean enablePathSubstitution CancellationToken cancellationToken Returns Type Description Task < List < MediaSourceInfo >> GetPlayackMediaSources(BaseItem, User, Boolean, String, Boolean, CancellationToken) Declaration Task<List<MediaSourceInfo>> GetPlayackMediaSources(BaseItem item, User user, bool allowMediaProbe, string probeMediaSourceId, bool enablePathSubstitution, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item User user Boolean allowMediaProbe String probeMediaSourceId Boolean enablePathSubstitution CancellationToken cancellationToken Returns Type Description Task < List < MediaSourceInfo >> GetStaticMediaSources(BaseItem, Boolean, User) Gets the static media sources. Declaration List<MediaSourceInfo> GetStaticMediaSources(BaseItem item, bool enablePathSubstitution, User user = null) Parameters Type Name Description BaseItem item Boolean enablePathSubstitution User user Returns Type Description List < MediaSourceInfo > GetStaticMediaSources(BaseItem, Boolean, Boolean, LibraryOptions, User) Declaration List<MediaSourceInfo> GetStaticMediaSources(BaseItem item, bool enableAlternateMediaSources, bool enablePathSubstitution, LibraryOptions libraryOptions, User user = null) Parameters Type Name Description BaseItem item Boolean enableAlternateMediaSources Boolean enablePathSubstitution LibraryOptions libraryOptions User user Returns Type Description List < MediaSourceInfo > NormalizePreferredLanguages(String) Declaration string[] NormalizePreferredLanguages(string preferredLanguage) Parameters Type Name Description String preferredLanguage Returns Type Description String [] OpenLiveStream(LiveStreamRequest, CancellationToken) Opens the media source. Declaration Task<LiveStreamResponse> OpenLiveStream(LiveStreamRequest request, CancellationToken cancellationToken) Parameters Type Name Description LiveStreamRequest request The request. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < LiveStreamResponse > Task<MediaSourceInfo>. OpenLiveStreamInternal(LiveStreamRequest, CancellationToken) Declaration Task<Tuple<LiveStreamResponse, IDirectStreamProvider>> OpenLiveStreamInternal(LiveStreamRequest request, CancellationToken cancellationToken) Parameters Type Name Description LiveStreamRequest request CancellationToken cancellationToken Returns Type Description Task < Tuple < LiveStreamResponse , IDirectStreamProvider >> SetDefaultAudioAndSubtitleStreamIndexes(BaseItem, MediaSourceInfo[], User) Declaration void SetDefaultAudioAndSubtitleStreamIndexes(BaseItem item, MediaSourceInfo[] sources, User user) Parameters Type Name Description BaseItem item MediaSourceInfo [] sources User user SupportsDirectStream(ReadOnlySpan<Char>, MediaProtocol) Declaration bool SupportsDirectStream(ReadOnlySpan<char> path, MediaProtocol protocol) Parameters Type Name Description ReadOnlySpan < Char > path MediaProtocol protocol Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.IMediaSourceProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.IMediaSourceProvider.html",
    "title": "Interface IMediaSourceProvider",
    "keywords": "Interface IMediaSourceProvider Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface IMediaSourceProvider Methods GetMediaSources(BaseItem, CancellationToken) Gets the media sources. Declaration Task<List<MediaSourceInfo>> GetMediaSources(BaseItem item, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item The item. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < List < MediaSourceInfo >> OpenMediaSource(String, List<ILiveStream>, CancellationToken) Opens the media source. Declaration Task<ILiveStream> OpenMediaSource(string openToken, List<ILiveStream> currentLiveStreams, CancellationToken cancellationToken) Parameters Type Name Description String openToken List < ILiveStream > currentLiveStreams CancellationToken cancellationToken Returns Type Description Task < ILiveStream >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.IMetadataSaver.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.IMetadataSaver.html",
    "title": "Interface IMetadataSaver",
    "keywords": "Interface IMetadataSaver Interface IMetadataSaver Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface IMetadataSaver Properties Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. Methods IsEnabledFor(BaseItem, ItemUpdateType) Determines whether [is enabled for] [the specified item]. Declaration bool IsEnabledFor(BaseItem item, ItemUpdateType updateType) Parameters Type Name Description BaseItem item The item. ItemUpdateType updateType Type of the update. Returns Type Description Boolean true if [is enabled for] [the specified item]; otherwise, false . Save(BaseItem, LibraryOptions, CancellationToken) Saves the specified item. Declaration Task Save(BaseItem item, LibraryOptions libraryOptions, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item The item. LibraryOptions libraryOptions CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task."
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.IMusicManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.IMusicManager.html",
    "title": "Interface IMusicManager",
    "keywords": "Interface IMusicManager Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface IMusicManager Methods GetInstantMixFromGenres(String[], User, Nullable<Int32>, DtoOptions) Gets the instant mix from genre. Declaration BaseItem[] GetInstantMixFromGenres(string[] genres, User user, int? limit, DtoOptions dtoOptions) Parameters Type Name Description String [] genres User user Nullable < Int32 > limit DtoOptions dtoOptions Returns Type Description BaseItem [] GetInstantMixFromItem(BaseItem, User, Nullable<Int32>, DtoOptions) Gets the instant mix from song. Declaration BaseItem[] GetInstantMixFromItem(BaseItem item, User user, int? limit, DtoOptions dtoOptions) Parameters Type Name Description BaseItem item User user Nullable < Int32 > limit DtoOptions dtoOptions Returns Type Description BaseItem [] GetInstantMixIdsFromItem(BaseItem, User, Nullable<Int32>) Declaration long[] GetInstantMixIdsFromItem(BaseItem item, User user, int? limit) Parameters Type Name Description BaseItem item User user Nullable < Int32 > limit Returns Type Description Int64 [] GetNextUp(NextUpQuery, User, DtoOptions) Declaration QueryResult<BaseItem> GetNextUp(NextUpQuery query, User user, DtoOptions options) Parameters Type Name Description NextUpQuery query User user DtoOptions options Returns Type Description QueryResult < BaseItem >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.IntroInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.IntroInfo.html",
    "title": "Class IntroInfo",
    "keywords": "Class IntroInfo Inheritance Object IntroInfo Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public sealed class IntroInfo Properties ItemId Gets or sets the item id. Declaration public long ItemId { get; set; } Property Value Type Description Int64 The item id. Path Gets or sets the path. Declaration public string Path { get; set; } Property Value Type Description String The path."
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.ItemChangeEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.ItemChangeEventArgs.html",
    "title": "Class ItemChangeEventArgs",
    "keywords": "Class ItemChangeEventArgs Class ItemChangeEventArgs Inheritance Object ItemChangeEventArgs Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public sealed class ItemChangeEventArgs Properties Item Gets or sets the item. Declaration public BaseItem Item { get; set; } Property Value Type Description BaseItem The item. Parent Declaration public BaseItem Parent { get; set; } Property Value Type Description BaseItem UpdateReason Gets or sets the item. Declaration public ItemUpdateType UpdateReason { get; set; } Property Value Type Description ItemUpdateType The item."
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.ItemLinkType.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.ItemLinkType.html",
    "title": "Enum ItemLinkType",
    "keywords": "Enum ItemLinkType Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public enum ItemLinkType Fields Name Description AlbumArtists Albums Artists CollectionFolders Collections Composers Genres Studios Tags Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ItemLinkType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.ItemResolveArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.ItemResolveArgs.html",
    "title": "Class ItemResolveArgs",
    "keywords": "Class ItemResolveArgs These are arguments relating to the file system that are collected once and then referred to whenever needed. Primarily for entity resolution. Inheritance Object EventArgs ItemResolveArgs Inherited Members EventArgs.Empty Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public sealed class ItemResolveArgs : EventArgs Constructors ItemResolveArgs(IServerApplicationPaths, IDirectoryService) Initializes a new instance of the ItemResolveArgs class. Declaration public ItemResolveArgs(IServerApplicationPaths appPaths, IDirectoryService directoryService) Parameters Type Name Description IServerApplicationPaths appPaths The app paths. IDirectoryService directoryService The directory service. Properties CollectionType Declaration public string CollectionType { get; } Property Value Type Description String DirectoryService Declaration public IDirectoryService DirectoryService { get; } Property Value Type Description IDirectoryService FileInfo Gets or sets the file info. Declaration public FileSystemMetadata FileInfo { get; set; } Property Value Type Description FileSystemMetadata The file info. FileSystemChildren Gets the file system children. Declaration public FileSystemMetadata[] FileSystemChildren { get; set; } Property Value Type Description FileSystemMetadata [] The file system children. IsDirectory Gets a value indicating whether this instance is directory. Declaration public bool IsDirectory { get; } Property Value Type Description Boolean true if this instance is directory; otherwise, false . IsPhysicalRoot Gets a value indicating whether this instance is physical root. Declaration public bool IsPhysicalRoot { get; } Property Value Type Description Boolean true if this instance is physical root; otherwise, false . IsVf Gets a value indicating whether this instance is vf. Declaration public bool IsVf { get; } Property Value Type Description Boolean true if this instance is vf; otherwise, false . LibraryOptions Declaration public LibraryOptions LibraryOptions { get; set; } Property Value Type Description LibraryOptions Parent Gets or sets the parent. Declaration public Folder Parent { get; set; } Property Value Type Description Folder The parent. Path Gets or sets the path. Declaration public string Path { get; set; } Property Value Type Description String The path. PhysicalLocations Gets the physical locations. Declaration public string[] PhysicalLocations { get; } Property Value Type Description String [] The physical locations. Methods AddAdditionalLocation(String) Adds the additional location. Declaration public void AddAdditionalLocation(string path) Parameters Type Name Description String path The path. Exceptions Type Condition ArgumentNullException ContainsFileSystemEntryByName(String) Determines whether [contains file system entry by name] [the specified name]. Declaration public bool ContainsFileSystemEntryByName(string name) Parameters Type Name Description String name The name. Returns Type Description Boolean true if [contains file system entry by name] [the specified name]; otherwise, false . GetCollectionType() Declaration public string GetCollectionType() Returns Type Description String GetFileSystemEntryByPath(ReadOnlySpan<Char>) Gets the file system entry by path. Declaration public FileSystemMetadata GetFileSystemEntryByPath(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path The path. Returns Type Description FileSystemMetadata FileSystemInfo. Exceptions Type Condition ArgumentNullException GetLibraryOptions() Declaration public LibraryOptions GetLibraryOptions() Returns Type Description LibraryOptions HasParent<T>() Declaration public bool HasParent<T>() where T : Folder Returns Type Description Boolean Type Parameters Name Description T"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.ItemUpdateType.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.ItemUpdateType.html",
    "title": "Enum ItemUpdateType",
    "keywords": "Enum ItemUpdateType Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax [Flags] public enum ItemUpdateType Fields Name Description ImageUpdate MetadataDownload MetadataEdit MetadataImport None Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ItemUpdateType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.IUserDataManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.IUserDataManager.html",
    "title": "Interface IUserDataManager",
    "keywords": "Interface IUserDataManager Interface IUserDataManager Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface IUserDataManager Methods ClearTrackSelections(Int64, MediaStreamType) Declaration void ClearTrackSelections(long userId, MediaStreamType trackType) Parameters Type Name Description Int64 userId MediaStreamType trackType GetAllUserData(Int64) Get all user data for the given user Declaration List<UserItemData> GetAllUserData(long userId) Parameters Type Name Description Int64 userId Returns Type Description List < UserItemData > GetUserData(User, BaseItem) Declaration UserItemData GetUserData(User user, BaseItem item) Parameters Type Name Description User user BaseItem item Returns Type Description UserItemData GetUserData(User, Int64) Declaration UserItemData GetUserData(User user, long itemId) Parameters Type Name Description User user Int64 itemId Returns Type Description UserItemData GetUserData(Int64, BaseItem) Declaration UserItemData GetUserData(long userId, BaseItem item) Parameters Type Name Description Int64 userId BaseItem item Returns Type Description UserItemData GetUserData(Int64, Int64, UserDataFields[]) Declaration UserItemData GetUserData(long userId, long itemId, UserDataFields[] fields) Parameters Type Name Description Int64 userId Int64 itemId UserDataFields [] fields Returns Type Description UserItemData GetUserData(ReadOnlySpan<Char>, BaseItem) Declaration UserItemData GetUserData(ReadOnlySpan<char> userId, BaseItem item) Parameters Type Name Description ReadOnlySpan < Char > userId BaseItem item Returns Type Description UserItemData GetUserData(String, BaseItem) Declaration UserItemData GetUserData(string userId, BaseItem item) Parameters Type Name Description String userId BaseItem item Returns Type Description UserItemData GetUserDataDto(BaseItem, User) Gets the user data dto. Declaration UserItemDataDto GetUserDataDto(BaseItem item, User user) Parameters Type Name Description BaseItem item User user Returns Type Description UserItemDataDto GetUserDataDto(BaseItem, User, LibraryOptions) Declaration UserItemDataDto GetUserDataDto(BaseItem item, User user, LibraryOptions libraryOptions) Parameters Type Name Description BaseItem item User user LibraryOptions libraryOptions Returns Type Description UserItemDataDto GetUserDataDto(BaseItem, BaseItemDto, User, DtoOptions, LibraryOptions) Declaration UserItemDataDto GetUserDataDto(BaseItem item, BaseItemDto itemDto, User user, DtoOptions options, LibraryOptions libraryOptions) Parameters Type Name Description BaseItem item BaseItemDto itemDto User user DtoOptions options LibraryOptions libraryOptions Returns Type Description UserItemDataDto SaveAllUserData(Int64, UserItemData[], CancellationToken) Save the all provided user data for the given user Declaration void SaveAllUserData(long userId, UserItemData[] userData, CancellationToken cancellationToken) Parameters Type Name Description Int64 userId UserItemData [] userData CancellationToken cancellationToken SaveUserData(User, BaseItem, UserItemData, UserDataSaveReason, CancellationToken) Declaration void SaveUserData(User user, BaseItem item, UserItemData userData, UserDataSaveReason reason, CancellationToken cancellationToken) Parameters Type Name Description User user BaseItem item UserItemData userData UserDataSaveReason reason CancellationToken cancellationToken SaveUserData(Int64, BaseItem, UserItemData, UserDataSaveReason, CancellationToken) Saves the user data. Declaration void SaveUserData(long userId, BaseItem item, UserItemData userData, UserDataSaveReason reason, CancellationToken cancellationToken) Parameters Type Name Description Int64 userId The user id. BaseItem item The item. UserItemData userData The user data. UserDataSaveReason reason The reason. CancellationToken cancellationToken The cancellation token. UnhideSeriesFromResume(Int64, String) Declaration void UnhideSeriesFromResume(long userId, string seriesPresentationUniqueKey) Parameters Type Name Description Int64 userId String seriesPresentationUniqueKey UpdatePlayState(BaseItem, UserItemData, Nullable<Int64>) Updates playstate for an item and returns true or false indicating if it was played to completion Declaration bool UpdatePlayState(BaseItem item, UserItemData data, long? positionTicks) Parameters Type Name Description BaseItem item UserItemData data Nullable < Int64 > positionTicks Returns Type Description Boolean Events UserDataSaved Occurs when [user data saved]. Declaration event EventHandler<UserDataSaveEventArgs> UserDataSaved Event Type Type Description EventHandler < UserDataSaveEventArgs >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.IUserManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.IUserManager.html",
    "title": "Interface IUserManager",
    "keywords": "Interface IUserManager Interface IUserManager Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface IUserManager Properties Users Gets the users. Declaration [Obsolete(\"Use GetUsers, GetUserList, GetUserIds, GetUserIdList, or GetUserCount to get a list of users based on a filter set. Avoid working with the entire user list all at once.\")] User[] Users { get; } Property Value Type Description User [] The users. Methods AddParts(IEnumerable<IAuthenticationProvider>) Declaration void AddParts(IEnumerable<IAuthenticationProvider> authenticationProviders) Parameters Type Name Description IEnumerable < IAuthenticationProvider > authenticationProviders AuthenticateUser(String, String, Boolean, Boolean, CancellationToken) Authenticates the user. Declaration Task<User> AuthenticateUser(string username, string password, bool isInLocalNetwork, bool isUserSession, CancellationToken cancellationToken) Parameters Type Name Description String username String password Boolean isInLocalNetwork Boolean isUserSession CancellationToken cancellationToken Returns Type Description Task < User > ChangeEasyPassword(User, String) Changes the easy password. Declaration void ChangeEasyPassword(User user, string newPassword) Parameters Type Name Description User user String newPassword ChangePassword(User, String) Changes the password. Declaration Task ChangePassword(User user, string newPassword) Parameters Type Name Description User user String newPassword Returns Type Description Task CreateUser(String, UserPolicy) Creates the user. Declaration Task<User> CreateUser(string name, UserPolicy userPolicy) Parameters Type Name Description String name The name. UserPolicy userPolicy The user policy. Returns Type Description Task < User > User. Exceptions Type Condition ArgumentNullException name ArgumentException DeleteUser(User) Deletes the user. Declaration Task DeleteUser(User user) Parameters Type Name Description User user The user. Returns Type Description Task Task. Exceptions Type Condition ArgumentNullException user ArgumentException GetAuthenticationProviders() Declaration NameIdPair[] GetAuthenticationProviders() Returns Type Description NameIdPair [] GetGuid(Int64) Declaration Guid GetGuid(long id) Parameters Type Name Description Int64 id Returns Type Description Guid GetGuid(ReadOnlySpan<Char>) Declaration Guid GetGuid(ReadOnlySpan<char> id) Parameters Type Name Description ReadOnlySpan < Char > id Returns Type Description Guid GetInternalId(Guid) Declaration long GetInternalId(Guid id) Parameters Type Name Description Guid id Returns Type Description Int64 GetInternalId(ReadOnlySpan<Char>) Declaration long GetInternalId(ReadOnlySpan<char> id) Parameters Type Name Description ReadOnlySpan < Char > id Returns Type Description Int64 GetUserById(Guid) Gets a User by Id Declaration User GetUserById(Guid id) Parameters Type Name Description Guid id The id. Returns Type Description User User. Exceptions Type Condition ArgumentNullException GetUserById(Int64) Declaration User GetUserById(long id) Parameters Type Name Description Int64 id Returns Type Description User GetUserById(ReadOnlySpan<Char>) Declaration User GetUserById(ReadOnlySpan<char> id) Parameters Type Name Description ReadOnlySpan < Char > id Returns Type Description User GetUserById(String) Gets the user by identifier. Declaration User GetUserById(string id) Parameters Type Name Description String id The identifier. Returns Type Description User User. GetUserByName(ReadOnlySpan<Char>) Gets the name of the user by. Declaration User GetUserByName(ReadOnlySpan<char> name) Parameters Type Name Description ReadOnlySpan < Char > name The name. Returns Type Description User User. GetUserConfiguration(User) Gets the user configuration. Declaration UserConfiguration GetUserConfiguration(User user) Parameters Type Name Description User user The user. Returns Type Description UserConfiguration UserConfiguration. GetUserCount(UserQuery) Declaration int GetUserCount(UserQuery query) Parameters Type Name Description UserQuery query Returns Type Description Int32 GetUserDto(User, Boolean) Gets the user dto. Declaration UserDto GetUserDto(User user, bool isInLocalNetwork = false) Parameters Type Name Description User user The user. Boolean isInLocalNetwork if set to true [is in local network]. Returns Type Description UserDto UserDto. GetUserDto(User, Boolean, Boolean) Declaration UserDto GetUserDto(User user, bool isAuthenticated, bool isInLocalNetwork = false) Parameters Type Name Description User user Boolean isAuthenticated Boolean isInLocalNetwork Returns Type Description UserDto GetUserIdList(UserQuery) Declaration long[] GetUserIdList(UserQuery query) Parameters Type Name Description UserQuery query Returns Type Description Int64 [] GetUserIds(UserQuery) Declaration QueryResult<long> GetUserIds(UserQuery query) Parameters Type Name Description UserQuery query Returns Type Description QueryResult < Int64 > GetUserList(UserQuery) Declaration User[] GetUserList(UserQuery query) Parameters Type Name Description UserQuery query Returns Type Description User [] GetUserPolicy(User) Gets the user policy. Declaration UserPolicy GetUserPolicy(User user) Parameters Type Name Description User user The user. Returns Type Description UserPolicy UserPolicy. GetUsers(UserQuery) Declaration QueryResult<User> GetUsers(UserQuery query) Parameters Type Name Description UserQuery query Returns Type Description QueryResult < User > MakeValidUsername(String) Makes the valid username. Declaration string MakeValidUsername(string username) Parameters Type Name Description String username The username. Returns Type Description String System.String. RedeemPasswordResetPin(String) Redeems the password reset pin. Declaration Task<PinRedeemResult> RedeemPasswordResetPin(string pin) Parameters Type Name Description String pin The pin. Returns Type Description Task < PinRedeemResult > true if XXXX, false otherwise. RefreshUsersMetadata(CancellationToken) Refreshes metadata for each user Declaration Task RefreshUsersMetadata(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. RenameUser(User, String) Renames the user. Declaration Task RenameUser(User user, string newName) Parameters Type Name Description User user The user. String newName The new name. Returns Type Description Task Task. Exceptions Type Condition ArgumentNullException user ArgumentException ResetEasyPassword(User) Resets the easy password. Declaration void ResetEasyPassword(User user) Parameters Type Name Description User user The user. ResetPassword(User) Resets the password. Declaration Task ResetPassword(User user) Parameters Type Name Description User user The user. Returns Type Description Task Task. StartForgotPasswordProcess(String, Boolean) Starts the forgot password process. Declaration Task<ForgotPasswordResult> StartForgotPasswordProcess(string enteredUsername, bool isInNetwork) Parameters Type Name Description String enteredUsername The entered username. Boolean isInNetwork if set to true [is in network]. Returns Type Description Task < ForgotPasswordResult > ForgotPasswordResult. UpdateConfiguration(User, UserConfiguration) Declaration void UpdateConfiguration(User user, UserConfiguration newConfiguration) Parameters Type Name Description User user UserConfiguration newConfiguration UpdateConfiguration(Int64, UserConfiguration) Updates the configuration. Declaration void UpdateConfiguration(long userId, UserConfiguration newConfiguration) Parameters Type Name Description Int64 userId The user identifier. UserConfiguration newConfiguration The new configuration. UpdateUser(User) Updates the user. Declaration void UpdateUser(User user) Parameters Type Name Description User user The user. Exceptions Type Condition ArgumentNullException user ArgumentException UpdateUser(User, Boolean) Declaration void UpdateUser(User user, bool triggerEvent) Parameters Type Name Description User user Boolean triggerEvent UpdateUserPolicy(Int64, UserPolicy) Updates the user policy. Declaration void UpdateUserPolicy(long userId, UserPolicy userPolicy) Parameters Type Name Description Int64 userId The user identifier. UserPolicy userPolicy The user policy. Events UserConfigurationUpdated Declaration event EventHandler<GenericEventArgs<User>> UserConfigurationUpdated Event Type Type Description EventHandler < GenericEventArgs < User >> UserCreated Declaration event EventHandler<GenericEventArgs<User>> UserCreated Event Type Type Description EventHandler < GenericEventArgs < User >> UserDeleted Occurs when [user deleted]. Declaration event EventHandler<GenericEventArgs<User>> UserDeleted Event Type Type Description EventHandler < GenericEventArgs < User >> UserLockedOut Declaration event EventHandler<GenericEventArgs<User>> UserLockedOut Event Type Type Description EventHandler < GenericEventArgs < User >> UserPasswordChanged Declaration event EventHandler<GenericEventArgs<User>> UserPasswordChanged Event Type Type Description EventHandler < GenericEventArgs < User >> UserPolicyUpdated Declaration event EventHandler<GenericEventArgs<User>> UserPolicyUpdated Event Type Type Description EventHandler < GenericEventArgs < User >> UserUpdated Occurs when [user updated]. Declaration event EventHandler<GenericEventArgs<User>> UserUpdated Event Type Type Description EventHandler < GenericEventArgs < User >>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.IUserViewManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.IUserViewManager.html",
    "title": "Interface IUserViewManager",
    "keywords": "Interface IUserViewManager Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public interface IUserViewManager Methods GetLatestItems(LatestItemsQuery, DtoOptions) Declaration BaseItem[] GetLatestItems(LatestItemsQuery request, DtoOptions options) Parameters Type Name Description LatestItemsQuery request DtoOptions options Returns Type Description BaseItem [] GetUserViews(UserViewQuery) Declaration Folder[] GetUserViews(UserViewQuery query) Parameters Type Name Description UserViewQuery query Returns Type Description Folder [] GetUserViews(UserViewQuery, User, List<Folder>) Declaration Folder[] GetUserViews(UserViewQuery query, User user, List<Folder> folders) Parameters Type Name Description UserViewQuery query User user List < Folder > folders Returns Type Description Folder []"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.LibraryManagerExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.LibraryManagerExtensions.html",
    "title": "Class LibraryManagerExtensions",
    "keywords": "Class LibraryManagerExtensions Inheritance Object LibraryManagerExtensions Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public static class LibraryManagerExtensions Methods GetItemById(ILibraryManager, ReadOnlySpan<Char>) Declaration public static BaseItem GetItemById(this ILibraryManager manager, ReadOnlySpan<char> id) Parameters Type Name Description ILibraryManager manager ReadOnlySpan < Char > id Returns Type Description BaseItem GetItemById(ILibraryManager, String) Declaration public static BaseItem GetItemById(this ILibraryManager manager, string id) Parameters Type Name Description ILibraryManager manager String id Returns Type Description BaseItem"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.MetadataConfigurationExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.MetadataConfigurationExtensions.html",
    "title": "Class MetadataConfigurationExtensions",
    "keywords": "Class MetadataConfigurationExtensions Inheritance Object MetadataConfigurationExtensions Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public static class MetadataConfigurationExtensions Methods GetMetadataConfiguration(IConfigurationManager) Declaration public static MetadataConfiguration GetMetadataConfiguration(this IConfigurationManager config) Parameters Type Name Description IConfigurationManager config Returns Type Description MetadataConfiguration"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.MetadataConfigurationStore.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.MetadataConfigurationStore.html",
    "title": "Class MetadataConfigurationStore",
    "keywords": "Class MetadataConfigurationStore Inheritance Object MetadataConfigurationStore Implements IConfigurationFactory Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public sealed class MetadataConfigurationStore : IConfigurationFactory Methods GetConfigurations() Declaration public IEnumerable<ConfigurationStore> GetConfigurations() Returns Type Description IEnumerable < ConfigurationStore > Implements IConfigurationFactory"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.PlaybackProgressEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.PlaybackProgressEventArgs.html",
    "title": "Class PlaybackProgressEventArgs",
    "keywords": "Class PlaybackProgressEventArgs Holds information about a playback progress event Inheritance Object EventArgs PlaybackProgressEventArgs PlaybackStopEventArgs Inherited Members EventArgs.Empty Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public class PlaybackProgressEventArgs : EventArgs Constructors PlaybackProgressEventArgs() Declaration public PlaybackProgressEventArgs() Properties ClientName Declaration public string ClientName { get; set; } Property Value Type Description String DeviceId Declaration public string DeviceId { get; set; } Property Value Type Description String DeviceName Declaration public string DeviceName { get; set; } Property Value Type Description String EventName Declaration public ProgressEvent EventName { get; set; } Property Value Type Description ProgressEvent IsAutomated Declaration public bool IsAutomated { get; set; } Property Value Type Description Boolean IsPaused Declaration public bool IsPaused { get; set; } Property Value Type Description Boolean Item Declaration public BaseItem Item { get; set; } Property Value Type Description BaseItem MediaInfo Declaration public BaseItemDto MediaInfo { get; set; } Property Value Type Description BaseItemDto MediaSourceId Declaration public string MediaSourceId { get; set; } Property Value Type Description String PlaybackPositionTicks Declaration public long? PlaybackPositionTicks { get; set; } Property Value Type Description Nullable < Int64 > PlaylistItemIds Declaration public string[] PlaylistItemIds { get; set; } Property Value Type Description String [] PlaySessionId Declaration public string PlaySessionId { get; set; } Property Value Type Description String Session Declaration public SessionInfo Session { get; set; } Property Value Type Description SessionInfo Users Declaration public List<User> Users { get; set; } Property Value Type Description List < User >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.PlaybackStopEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.PlaybackStopEventArgs.html",
    "title": "Class PlaybackStopEventArgs",
    "keywords": "Class PlaybackStopEventArgs Inheritance Object EventArgs PlaybackProgressEventArgs PlaybackStopEventArgs Inherited Members PlaybackProgressEventArgs.Users PlaybackProgressEventArgs.PlaybackPositionTicks PlaybackProgressEventArgs.Item PlaybackProgressEventArgs.MediaInfo PlaybackProgressEventArgs.MediaSourceId PlaybackProgressEventArgs.IsPaused PlaybackProgressEventArgs.IsAutomated PlaybackProgressEventArgs.DeviceId PlaybackProgressEventArgs.DeviceName PlaybackProgressEventArgs.ClientName PlaybackProgressEventArgs.PlaySessionId PlaybackProgressEventArgs.Session PlaybackProgressEventArgs.EventName PlaybackProgressEventArgs.PlaylistItemIds EventArgs.Empty Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public sealed class PlaybackStopEventArgs : PlaybackProgressEventArgs Properties NextMediaType Declaration public string NextMediaType { get; set; } Property Value Type Description String PlayedToCompletion Gets or sets a value indicating whether [played to completion]. Declaration public bool PlayedToCompletion { get; set; } Property Value Type Description Boolean true if [played to completion]; otherwise, false ."
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.Profiler.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.Profiler.html",
    "title": "Class Profiler",
    "keywords": "Class Profiler Class Profiler Inheritance Object Profiler Implements IDisposable Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public sealed class Profiler : IDisposable Constructors Profiler(String, ILogger) Initializes a new instance of the Profiler class. Declaration public Profiler(string name, ILogger logger) Parameters Type Name Description String name The name. ILogger logger The logger. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements System.IDisposable"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.ResolverHelper.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.ResolverHelper.html",
    "title": "Class ResolverHelper",
    "keywords": "Class ResolverHelper Class ResolverHelper Inheritance Object ResolverHelper Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public static class ResolverHelper Methods SetInitialItemValues(BaseItem, ItemResolveArgs, IFileSystem, ILibraryManager) Sets the initial item values. Declaration public static void SetInitialItemValues(BaseItem item, ItemResolveArgs args, IFileSystem fileSystem, ILibraryManager libraryManager) Parameters Type Name Description BaseItem item The item. ItemResolveArgs args The args. IFileSystem fileSystem The file system. ILibraryManager libraryManager The library manager. SetInitialItemValues(BaseItem, FileSystemMetadata, Folder) Sets the initial item values. Declaration public static void SetInitialItemValues(BaseItem item, FileSystemMetadata fileInfo, Folder parent) Parameters Type Name Description BaseItem item FileSystemMetadata fileInfo Folder parent"
  },
  "reference/pluginapi/MediaBrowser.Controller.Library.UserDataSaveEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Library.UserDataSaveEventArgs.html",
    "title": "Class UserDataSaveEventArgs",
    "keywords": "Class UserDataSaveEventArgs Class UserDataSaveEventArgs Inheritance Object EventArgs UserDataSaveEventArgs Inherited Members EventArgs.Empty Namespace : MediaBrowser.Controller.Library Assembly : MediaBrowser.Controller.dll Syntax public sealed class UserDataSaveEventArgs : EventArgs Properties Item Gets or sets the item. Declaration public BaseItem Item { get; set; } Property Value Type Description BaseItem The item. SaveReason Gets or sets the save reason. Declaration public UserDataSaveReason SaveReason { get; set; } Property Value Type Description UserDataSaveReason The save reason. User Gets or sets the user id. Declaration public User User { get; set; } Property Value Type Description User The user id. UserData Gets or sets the user data. Declaration public UserItemData UserData { get; set; } Property Value Type Description UserItemData The user data."
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.ActiveRecordingInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.ActiveRecordingInfo.html",
    "title": "Class ActiveRecordingInfo",
    "keywords": "Class ActiveRecordingInfo Inheritance Object ActiveRecordingInfo Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class ActiveRecordingInfo Properties CancellationTokenSource Declaration public CancellationTokenSource CancellationTokenSource { get; set; } Property Value Type Description CancellationTokenSource Channel Declaration public LiveTvChannel Channel { get; set; } Property Value Type Description LiveTvChannel Id Declaration public string Id { get; set; } Property Value Type Description String ItemId Declaration public long ItemId { get; set; } Property Value Type Description Int64 Path Declaration public string Path { get; set; } Property Value Type Description String Program Declaration public LiveTvProgram Program { get; set; } Property Value Type Description LiveTvProgram RecordingStatus Declaration public RecordingStatus RecordingStatus { get; set; } Property Value Type Description RecordingStatus Timer Declaration public TimerInfo Timer { get; set; } Property Value Type Description TimerInfo"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.BaseTunerHost.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.BaseTunerHost.html",
    "title": "Class BaseTunerHost",
    "keywords": "Class BaseTunerHost Inheritance Object BaseTunerHost Implements ITunerHost Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public abstract class BaseTunerHost : ITunerHost Constructors BaseTunerHost(IServerApplicationHost) Declaration protected BaseTunerHost(IServerApplicationHost applicationHost) Parameters Type Name Description IServerApplicationHost applicationHost Fields AppHost Declaration protected readonly IServerApplicationHost AppHost Field Value Type Description IServerApplicationHost Config Declaration protected readonly IServerConfigurationManager Config Field Value Type Description IServerConfigurationManager FileSystem Declaration protected readonly IFileSystem FileSystem Field Value Type Description IFileSystem JsonSerializer Declaration protected readonly IJsonSerializer JsonSerializer Field Value Type Description IJsonSerializer LiveTvManager Declaration protected readonly ILiveTvManager LiveTvManager Field Value Type Description ILiveTvManager Logger Declaration protected readonly ILogger Logger Field Value Type Description ILogger Properties IsSupported Declaration public virtual bool IsSupported { get; } Property Value Type Description Boolean LegacyChannelIdPrefix Declaration protected virtual string LegacyChannelIdPrefix { get; } Property Value Type Description String Name Declaration public abstract string Name { get; } Property Value Type Description String SetupUrl Declaration public virtual string SetupUrl { get; } Property Value Type Description String Type Declaration public abstract string Type { get; } Property Value Type Description String UseTunerHostIdAsPrefix Declaration protected virtual bool UseTunerHostIdAsPrefix { get; } Property Value Type Description Boolean Methods ClearCaches() Declaration public void ClearCaches() CreateEmbyChannelId(TunerHostInfo, String) Declaration protected string CreateEmbyChannelId(TunerHostInfo tuner, string tunerChannelId) Parameters Type Name Description TunerHostInfo tuner String tunerChannelId Returns Type Description String DiscoverDevices(Int32, CancellationToken) Declaration public virtual Task<List<TunerHostInfo>> DiscoverDevices(int discoveryDurationMs, CancellationToken cancellationToken) Parameters Type Name Description Int32 discoveryDurationMs CancellationToken cancellationToken Returns Type Description Task < List < TunerHostInfo >> GetChannelIdPrefix(TunerHostInfo) Declaration public string GetChannelIdPrefix(TunerHostInfo tuner) Parameters Type Name Description TunerHostInfo tuner Returns Type Description String GetChannels(TunerHostInfo, CancellationToken) Declaration public async Task<List<ChannelInfo>> GetChannels(TunerHostInfo host, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo host CancellationToken cancellationToken Returns Type Description Task < List < ChannelInfo >> GetChannelsInternal(TunerHostInfo, CancellationToken) Declaration protected abstract Task<List<ChannelInfo>> GetChannelsInternal(TunerHostInfo tuner, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner CancellationToken cancellationToken Returns Type Description Task < List < ChannelInfo >> GetChannelStream(TunerHostInfo, BaseItem, ChannelInfo, String, CancellationToken) Declaration protected virtual async Task<ILiveStream> GetChannelStream(TunerHostInfo tuner, BaseItem dbChannnel, ChannelInfo tunerChannel, string mediaSourceId, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner BaseItem dbChannnel ChannelInfo tunerChannel String mediaSourceId CancellationToken cancellationToken Returns Type Description Task < ILiveStream > GetChannelStream(TunerHostInfo, BaseItem, String, String, List<ILiveStream>, CancellationToken) Declaration public async Task<ILiveStream> GetChannelStream(TunerHostInfo tuner, BaseItem dbChannnel, string tunerChannelId, string mediaSourceId, List<ILiveStream> currentLiveStreams, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner BaseItem dbChannnel String tunerChannelId String mediaSourceId List < ILiveStream > currentLiveStreams CancellationToken cancellationToken Returns Type Description Task < ILiveStream > GetChannelStreamMediaSources(TunerHostInfo, BaseItem, ChannelInfo, CancellationToken) Declaration protected abstract Task<List<MediaSourceInfo>> GetChannelStreamMediaSources(TunerHostInfo tuner, BaseItem dbChannnel, ChannelInfo tunerChannel, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner BaseItem dbChannnel ChannelInfo tunerChannel CancellationToken cancellationToken Returns Type Description Task < List < MediaSourceInfo >> GetChannelStreamMediaSources(TunerHostInfo, BaseItem, String, CancellationToken) Declaration public async Task<List<MediaSourceInfo>> GetChannelStreamMediaSources(TunerHostInfo tuner, BaseItem dbChannnel, string tunerChannelId, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner BaseItem dbChannnel String tunerChannelId CancellationToken cancellationToken Returns Type Description Task < List < MediaSourceInfo >> GetConfiguration() Declaration protected LiveTvOptions GetConfiguration() Returns Type Description LiveTvOptions GetDefaultConfiguration() Declaration public virtual TunerHostInfo GetDefaultConfiguration() Returns Type Description TunerHostInfo GetProgramEntryId(String, DateTimeOffset, String) Declaration protected string GetProgramEntryId(string showId, DateTimeOffset startDateUtc, string channelId) Parameters Type Name Description String showId DateTimeOffset startDateUtc String channelId Returns Type Description String GetProgramsAsync(TunerHostInfo, String, DateTimeOffset, DateTimeOffset, CancellationToken) Declaration public async Task<List<ProgramInfo>> GetProgramsAsync(TunerHostInfo tuner, string channelId, DateTimeOffset startDateUtc, DateTimeOffset endDateUtc, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner String channelId DateTimeOffset startDateUtc DateTimeOffset endDateUtc CancellationToken cancellationToken Returns Type Description Task < List < ProgramInfo >> GetProgramsInternal(TunerHostInfo, String, DateTimeOffset, DateTimeOffset, CancellationToken) Declaration protected virtual Task<List<ProgramInfo>> GetProgramsInternal(TunerHostInfo tuner, string tunerChannelId, DateTimeOffset startDateUtc, DateTimeOffset endDateUtc, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner String tunerChannelId DateTimeOffset startDateUtc DateTimeOffset endDateUtc CancellationToken cancellationToken Returns Type Description Task < List < ProgramInfo >> GetProviderOptions<T>(TunerHostInfo) Declaration protected T GetProviderOptions<T>(TunerHostInfo info) where T : new() Parameters Type Name Description TunerHostInfo info Returns Type Description T Type Parameters Name Description T GetTunerChannelIdFromEmbyChannelId(TunerHostInfo, String) Declaration protected string GetTunerChannelIdFromEmbyChannelId(TunerHostInfo tuner, string channelId) Parameters Type Name Description TunerHostInfo tuner String channelId Returns Type Description String OnDeleted(TunerHostInfo, CancellationToken) Declaration public virtual Task OnDeleted(TunerHostInfo tuner, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner CancellationToken cancellationToken Returns Type Description Task OnSaved(TunerHostInfo, Boolean, CancellationToken) Declaration public virtual Task OnSaved(TunerHostInfo tuner, bool isNew, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner Boolean isNew CancellationToken cancellationToken Returns Type Description Task SetCustomOptions<T>(TunerHostInfo, T) Declaration protected void SetCustomOptions<T>(TunerHostInfo info, T options) Parameters Type Name Description TunerHostInfo info T options Type Parameters Name Description T SupportsGuideData(TunerHostInfo) Declaration public virtual bool SupportsGuideData(TunerHostInfo tuner) Parameters Type Name Description TunerHostInfo tuner Returns Type Description Boolean SupportsRemappingGuideData(TunerHostInfo) Declaration public virtual bool SupportsRemappingGuideData(TunerHostInfo tuner) Parameters Type Name Description TunerHostInfo tuner Returns Type Description Boolean ValdidateOptions(TunerHostInfo, CancellationToken) Declaration public virtual Task ValdidateOptions(TunerHostInfo tuner, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner CancellationToken cancellationToken Returns Type Description Task Implements ITunerHost"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.ChannelInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.ChannelInfo.html",
    "title": "Class ChannelInfo",
    "keywords": "Class ChannelInfo Class ChannelInfo Inheritance Object ChannelInfo Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public class ChannelInfo Properties AffiliateCallSign Declaration public string AffiliateCallSign { get; set; } Property Value Type Description String AlternateNames Declaration public string[] AlternateNames { get; set; } Property Value Type Description String [] AudioCodec Declaration public string AudioCodec { get; set; } Property Value Type Description String CallSign Declaration public string CallSign { get; set; } Property Value Type Description String ChannelType Gets or sets the type of the channel. Declaration public ChannelType ChannelType { get; set; } Property Value Type Description ChannelType The type of the channel. Collections Declaration public string[] Collections { get; set; } Property Value Type Description String [] EpgShift Declaration public TimeSpan EpgShift { get; set; } Property Value Type Description TimeSpan GuideDataUrl Declaration public string GuideDataUrl { get; set; } Property Value Type Description String Id Get or sets the Id. Declaration public string Id { get; set; } Property Value Type Description String The id of the channel. ImageUrl Supply the image url if it can be downloaded Declaration public string ImageUrl { get; set; } Property Value Type Description String The image URL. IsFavorite Gets or sets a value indicating whether this instance is favorite. Declaration public bool? IsFavorite { get; set; } Property Value Type Description Nullable < Boolean > null if [is favorite] contains no value, true if [is favorite]; otherwise, false . IsHD Declaration public bool? IsHD { get; set; } Property Value Type Description Nullable < Boolean > LightColorLogoImageUrl Declaration public string LightColorLogoImageUrl { get; set; } Property Value Type Description String LightLogoImageUrl Declaration public string LightLogoImageUrl { get; set; } Property Value Type Description String ListingsChannelId Declaration public string ListingsChannelId { get; set; } Property Value Type Description String ListingsChannelName Declaration public string ListingsChannelName { get; set; } Property Value Type Description String ListingsChannelNumber Declaration public string ListingsChannelNumber { get; set; } Property Value Type Description String ListingsId Declaration public string ListingsId { get; set; } Property Value Type Description String ListingsProviderId Declaration public string ListingsProviderId { get; set; } Property Value Type Description String Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Number Gets or sets the number. Declaration public string Number { get; set; } Property Value Type Description String The number. Overview Declaration public string Overview { get; set; } Property Value Type Description String Path Declaration public string Path { get; set; } Property Value Type Description String SortIndexNumber Declaration public int? SortIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > Tags Declaration public string[] Tags { get; set; } Property Value Type Description String [] TunerChannelId Declaration public string TunerChannelId { get; set; } Property Value Type Description String TunerHostId Gets or sets the tuner host identifier. Declaration public string TunerHostId { get; set; } Property Value Type Description String The tuner host identifier. VideoCodec Declaration public string VideoCodec { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.html",
    "title": "Namespace MediaBrowser.Controller.LiveTv",
    "keywords": "Namespace MediaBrowser.Controller.LiveTv Classes ActiveRecordingInfo BaseTunerHost ChannelInfo Class ChannelInfo LiveStreamOptions LiveTvChannel LiveTvConflictException Class LiveTvConflictException. LiveTvProgram LiveTvServiceStatusInfo LiveTvTunerInfo ProgramInfo RecordingInfo RecordingStatusChangedEventArgs SeriesTimerEventInfo SeriesTimerInfo TimerEventInfo TimerInfo TunerChannelMapping Interfaces IConfigurableTunerHost IHasCountries IHasProgramCaches IListingsProvider ILiveTvManager Manages all live tv services installed on the server ITunerHost"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.IConfigurableTunerHost.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.IConfigurableTunerHost.html",
    "title": "Interface IConfigurableTunerHost",
    "keywords": "Interface IConfigurableTunerHost Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public interface IConfigurableTunerHost"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.IHasCountries.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.IHasCountries.html",
    "title": "Interface IHasCountries",
    "keywords": "Interface IHasCountries Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public interface IHasCountries Methods GetCountries(CancellationToken) Declaration Task<string[]> GetCountries(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < String []>"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.IHasProgramCaches.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.IHasProgramCaches.html",
    "title": "Interface IHasProgramCaches",
    "keywords": "Interface IHasProgramCaches Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public interface IHasProgramCaches Methods ClearProgramCaches() Declaration void ClearProgramCaches()"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.IListingsProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.IListingsProvider.html",
    "title": "Interface IListingsProvider",
    "keywords": "Interface IListingsProvider Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public interface IListingsProvider Properties Name Declaration string Name { get; } Property Value Type Description String SetupUrl Declaration string SetupUrl { get; } Property Value Type Description String Type Declaration string Type { get; } Property Value Type Description String Methods GetChannels(ListingsProviderInfo, CancellationToken) Declaration Task<List<ChannelInfo>> GetChannels(ListingsProviderInfo info, CancellationToken cancellationToken) Parameters Type Name Description ListingsProviderInfo info CancellationToken cancellationToken Returns Type Description Task < List < ChannelInfo >> GetLineups(ListingsProviderInfo, String, String, CancellationToken) Declaration Task<List<NameIdPair>> GetLineups(ListingsProviderInfo info, string country, string location, CancellationToken cancellationToken) Parameters Type Name Description ListingsProviderInfo info String country String location CancellationToken cancellationToken Returns Type Description Task < List < NameIdPair >> GetProgramsAsync(ListingsProviderInfo, String, DateTimeOffset, DateTimeOffset, CancellationToken) Declaration Task<List<ProgramInfo>> GetProgramsAsync(ListingsProviderInfo info, string channelId, DateTimeOffset startDateUtc, DateTimeOffset endDateUtc, CancellationToken cancellationToken) Parameters Type Name Description ListingsProviderInfo info String channelId DateTimeOffset startDateUtc DateTimeOffset endDateUtc CancellationToken cancellationToken Returns Type Description Task < List < ProgramInfo >> Validate(ListingsProviderInfo, Boolean, Boolean) Declaration Task Validate(ListingsProviderInfo info, bool validateLogin, bool validateListings) Parameters Type Name Description ListingsProviderInfo info Boolean validateLogin Boolean validateListings Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.ILiveTvManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.ILiveTvManager.html",
    "title": "Interface ILiveTvManager",
    "keywords": "Interface ILiveTvManager Manages all live tv services installed on the server Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public interface ILiveTvManager Properties HasActiveRecording Declaration bool HasActiveRecording { get; } Property Value Type Description Boolean ListingProviders Declaration IListingsProvider[] ListingProviders { get; } Property Value Type Description IListingsProvider [] Methods AddChannelInfo(BaseItemDto[], Int64[], DtoOptions, User) Declaration void AddChannelInfo(BaseItemDto[] dtos, long[] channelIds, DtoOptions options, User user) Parameters Type Name Description BaseItemDto [] dtos Int64 [] channelIds DtoOptions options User user AddInfoToProgramDto(List<Tuple<BaseItem, BaseItemDto>>, DtoOptions, User) Adds the information to program dto. Declaration void AddInfoToProgramDto(List<Tuple<BaseItem, BaseItemDto>> programs, DtoOptions options, User user = null) Parameters Type Name Description List < Tuple < BaseItem , BaseItemDto >> programs The programs. DtoOptions options The options. User user The user. AddInfoToRecordingDto(BaseItem, BaseItemDto, ActiveRecordingInfo, User) Declaration void AddInfoToRecordingDto(BaseItem item, BaseItemDto dto, ActiveRecordingInfo activeRecordingInfo, User user = null) Parameters Type Name Description BaseItem item BaseItemDto dto ActiveRecordingInfo activeRecordingInfo User user AddParts(IEnumerable<ITunerHost>, IEnumerable<IListingsProvider>) Adds the parts. Declaration void AddParts(IEnumerable<ITunerHost> tunerHosts, IEnumerable<IListingsProvider> listingProviders) Parameters Type Name Description IEnumerable < ITunerHost > tunerHosts IEnumerable < IListingsProvider > listingProviders CancelSeriesTimer(String) Cancels the series timer. Declaration void CancelSeriesTimer(string id) Parameters Type Name Description String id The identifier. CancelTimer(String) Cancels the timer. Declaration void CancelTimer(string id) Parameters Type Name Description String id The identifier. CreateLiveStream(LiveStreamOptions) Declaration ILiveStream CreateLiveStream(LiveStreamOptions options) Parameters Type Name Description LiveStreamOptions options Returns Type Description ILiveStream CreateSeriesTimer(SeriesTimerInfo, CancellationToken) Creates the series timer. Declaration Task CreateSeriesTimer(SeriesTimerInfo timer, CancellationToken cancellationToken) Parameters Type Name Description SeriesTimerInfo timer The timer. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. CreateTimer(TimerInfoDto) Creates the timer. Declaration void CreateTimer(TimerInfoDto timer) Parameters Type Name Description TimerInfoDto timer DeleteListingsProvider(String) Declaration void DeleteListingsProvider(string id) Parameters Type Name Description String id DeleteTunerHost(String) Declaration Task DeleteTunerHost(string id) Parameters Type Name Description String id Returns Type Description Task DiscoverTuners(Boolean, CancellationToken) Declaration Task<List<TunerHostInfo>> DiscoverTuners(bool newDevicesOnly, CancellationToken cancellationToken) Parameters Type Name Description Boolean newDevicesOnly CancellationToken cancellationToken Returns Type Description Task < List < TunerHostInfo >> GetActiveRecordingInfo(BaseItem) Declaration ActiveRecordingInfo GetActiveRecordingInfo(BaseItem item) Parameters Type Name Description BaseItem item Returns Type Description ActiveRecordingInfo GetChannelMediaSources(BaseItem, CancellationToken) Gets the channel media sources. Declaration Task<List<MediaSourceInfo>> GetChannelMediaSources(BaseItem item, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item CancellationToken cancellationToken Returns Type Description Task < List < MediaSourceInfo >> GetChannelsFromListingsProviderData(String, CancellationToken) Declaration Task<List<ChannelInfo>> GetChannelsFromListingsProviderData(string id, CancellationToken cancellationToken) Parameters Type Name Description String id CancellationToken cancellationToken Returns Type Description Task < List < ChannelInfo >> GetEmbyTvActiveRecordingPath(String) Declaration string GetEmbyTvActiveRecordingPath(string id) Parameters Type Name Description String id Returns Type Description String GetGuideInfo() Gets the guide information. Declaration GuideInfo GetGuideInfo() Returns Type Description GuideInfo GuideInfo. GetInternalChannels(InternalItemsQuery, Boolean, CancellationToken) Gets the internal channels. Declaration QueryResult<BaseItem> GetInternalChannels(InternalItemsQuery internalQuery, bool enableFavoriteSorting, CancellationToken cancellationToken) Parameters Type Name Description InternalItemsQuery internalQuery Boolean enableFavoriteSorting CancellationToken cancellationToken Returns Type Description QueryResult < BaseItem > GetInternalLiveTvFolder() Gets the live tv folder. Declaration Folder GetInternalLiveTvFolder() Returns Type Description Folder GetLineups(String, String, String, String, CancellationToken) Gets the lineups. Declaration Task<List<NameIdPair>> GetLineups(string providerType, string providerId, string country, string location, CancellationToken cancellationToken) Parameters Type Name Description String providerType Type of the provider. String providerId The provider identifier. String country The country. String location The location. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < List < NameIdPair >> Task<List<NameIdPair>>. GetLiveTvInfo(CancellationToken) Gets the live tv information. Declaration LiveTvInfo GetLiveTvInfo(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description LiveTvInfo Task{LiveTvInfo}. GetNewTimerDefaults() Gets the new timer defaults asynchronous. Declaration SeriesTimerInfoDto GetNewTimerDefaults() Returns Type Description SeriesTimerInfoDto Task{TimerInfo}. GetNewTimerDefaults(String) Gets the new timer defaults. Declaration SeriesTimerInfoDto GetNewTimerDefaults(string programId) Parameters Type Name Description String programId Returns Type Description SeriesTimerInfoDto Task{SeriesTimerInfoDto}. GetPrograms(InternalItemsQuery) Gets the programs. Declaration QueryResult<BaseItemDto> GetPrograms(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItemDto > GetRecommendedPrograms(InternalItemsQuery) Gets the recommended programs. Declaration QueryResult<BaseItemDto> GetRecommendedPrograms(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query The query. Returns Type Description QueryResult < BaseItemDto > GetRecordingFolders(User) Declaration List<BaseItem> GetRecordingFolders(User user) Parameters Type Name Description User user Returns Type Description List < BaseItem > GetRecordings(InternalItemsQuery) Gets the recordings. Declaration QueryResult<BaseItemDto> GetRecordings(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItemDto > GetSeriesTimer(ReadOnlyMemory<Char>) Gets the series timer. Declaration SeriesTimerInfoDto GetSeriesTimer(ReadOnlyMemory<char> id) Parameters Type Name Description ReadOnlyMemory < Char > id Returns Type Description SeriesTimerInfoDto Task{TimerInfoDto}. GetSeriesTimerInfoDto(SeriesTimerInfo) Declaration SeriesTimerInfoDto GetSeriesTimerInfoDto(SeriesTimerInfo seriesTimer) Parameters Type Name Description SeriesTimerInfo seriesTimer Returns Type Description SeriesTimerInfoDto GetSeriesTimers(SeriesTimerQuery) Gets the series timers. Declaration QueryResult<SeriesTimerInfoDto> GetSeriesTimers(SeriesTimerQuery query) Parameters Type Name Description SeriesTimerQuery query Returns Type Description QueryResult < SeriesTimerInfoDto > Task{QueryResult{SeriesTimerInfoDto}}. GetTimer(ReadOnlyMemory<Char>) Gets the timer. Declaration TimerInfoDto GetTimer(ReadOnlyMemory<char> id) Parameters Type Name Description ReadOnlyMemory < Char > id The identifier. Returns Type Description TimerInfoDto Task{TimerInfoDto}. GetTimerInfoDto(TimerInfo, LiveTvProgram) Declaration TimerInfoDto GetTimerInfoDto(TimerInfo timer, LiveTvProgram program) Parameters Type Name Description TimerInfo timer LiveTvProgram program Returns Type Description TimerInfoDto GetTimers(TimerQuery) Gets the timers. Declaration QueryResult<TimerInfoDto> GetTimers(TimerQuery query) Parameters Type Name Description TimerQuery query The query. Returns Type Description QueryResult < TimerInfoDto > Task{QueryResult{TimerInfoDto}}. GetTunerHostInfo(String) Declaration TunerHostInfo GetTunerHostInfo(string id) Parameters Type Name Description String id Returns Type Description TunerHostInfo GetTunerHostInfos(String) Declaration List<TunerHostInfo> GetTunerHostInfos(string type) Parameters Type Name Description String type Returns Type Description List < TunerHostInfo > IsLiveTvEnabled(User) Gets the enabled users. Declaration bool IsLiveTvEnabled(User user) Parameters Type Name Description User user Returns Type Description Boolean SaveListingProvider(ListingsProviderInfo, Boolean, Boolean, CancellationToken) Saves the listing provider. Declaration Task<ListingsProviderInfo> SaveListingProvider(ListingsProviderInfo info, bool validateLogin, bool validateListings, CancellationToken cancellationToken) Parameters Type Name Description ListingsProviderInfo info The information. Boolean validateLogin if set to true [validate login]. Boolean validateListings if set to true [validate listings]. CancellationToken cancellationToken Returns Type Description Task < ListingsProviderInfo > Task. SaveTunerHost(TunerHostInfo, CancellationToken) Saves the tuner host. Declaration Task<TunerHostInfo> SaveTunerHost(TunerHostInfo info, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo info CancellationToken cancellationToken Returns Type Description Task < TunerHostInfo > SetChannelMapping(String, String, String, CancellationToken) Declaration Task<TunerChannelMapping> SetChannelMapping(string providerId, string tunerChannelNumber, string providerChannelNumber, CancellationToken cancellationToken) Parameters Type Name Description String providerId String tunerChannelNumber String providerChannelNumber CancellationToken cancellationToken Returns Type Description Task < TunerChannelMapping > UpdateSeriesTimer(SeriesTimerInfo) Updates the timer. Declaration void UpdateSeriesTimer(SeriesTimerInfo timer) Parameters Type Name Description SeriesTimerInfo timer The timer. UpdateTimer(TimerInfoDto) Updates the timer. Declaration void UpdateTimer(TimerInfoDto timer) Parameters Type Name Description TimerInfoDto timer Events RecordingEnded Declaration event EventHandler<GenericEventArgs<ActiveRecordingInfo>> RecordingEnded Event Type Type Description EventHandler < GenericEventArgs < ActiveRecordingInfo >> RecordingStarted Declaration event EventHandler<GenericEventArgs<ActiveRecordingInfo>> RecordingStarted Event Type Type Description EventHandler < GenericEventArgs < ActiveRecordingInfo >> SeriesTimerCancelled Declaration event EventHandler<GenericEventArgs<SeriesTimerEventInfo>> SeriesTimerCancelled Event Type Type Description EventHandler < GenericEventArgs < SeriesTimerEventInfo >> SeriesTimerCreated Declaration event EventHandler<GenericEventArgs<SeriesTimerEventInfo>> SeriesTimerCreated Event Type Type Description EventHandler < GenericEventArgs < SeriesTimerEventInfo >> TimerCancelled Declaration event EventHandler<GenericEventArgs<TimerEventInfo>> TimerCancelled Event Type Type Description EventHandler < GenericEventArgs < TimerEventInfo >> TimerCreated Declaration event EventHandler<GenericEventArgs<TimerEventInfo>> TimerCreated Event Type Type Description EventHandler < GenericEventArgs < TimerEventInfo >>"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.ITunerHost.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.ITunerHost.html",
    "title": "Interface ITunerHost",
    "keywords": "Interface ITunerHost Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public interface ITunerHost Properties IsSupported Declaration bool IsSupported { get; } Property Value Type Description Boolean Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. SetupUrl Declaration string SetupUrl { get; } Property Value Type Description String Type Gets the type. Declaration string Type { get; } Property Value Type Description String The type. Methods ClearCaches() Declaration void ClearCaches() DiscoverDevices(Int32, CancellationToken) Declaration Task<List<TunerHostInfo>> DiscoverDevices(int discoveryDurationMs, CancellationToken cancellationToken) Parameters Type Name Description Int32 discoveryDurationMs CancellationToken cancellationToken Returns Type Description Task < List < TunerHostInfo >> GetChannelIdPrefix(TunerHostInfo) Declaration string GetChannelIdPrefix(TunerHostInfo tuner) Parameters Type Name Description TunerHostInfo tuner Returns Type Description String GetChannels(TunerHostInfo, CancellationToken) Declaration Task<List<ChannelInfo>> GetChannels(TunerHostInfo tuner, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner CancellationToken cancellationToken Returns Type Description Task < List < ChannelInfo >> GetChannelStream(TunerHostInfo, BaseItem, String, String, List<ILiveStream>, CancellationToken) Declaration Task<ILiveStream> GetChannelStream(TunerHostInfo tuner, BaseItem dbChannnel, string tunerChannelId, string streamId, List<ILiveStream> currentLiveStreams, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner BaseItem dbChannnel String tunerChannelId String streamId List < ILiveStream > currentLiveStreams CancellationToken cancellationToken Returns Type Description Task < ILiveStream > GetChannelStreamMediaSources(TunerHostInfo, BaseItem, String, CancellationToken) Declaration Task<List<MediaSourceInfo>> GetChannelStreamMediaSources(TunerHostInfo tuner, BaseItem dbChannnel, string tunerChannelId, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner BaseItem dbChannnel String tunerChannelId CancellationToken cancellationToken Returns Type Description Task < List < MediaSourceInfo >> GetDefaultConfiguration() Declaration TunerHostInfo GetDefaultConfiguration() Returns Type Description TunerHostInfo GetProgramsAsync(TunerHostInfo, String, DateTimeOffset, DateTimeOffset, CancellationToken) Declaration Task<List<ProgramInfo>> GetProgramsAsync(TunerHostInfo info, string channelId, DateTimeOffset startDateUtc, DateTimeOffset endDateUtc, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo info String channelId DateTimeOffset startDateUtc DateTimeOffset endDateUtc CancellationToken cancellationToken Returns Type Description Task < List < ProgramInfo >> OnDeleted(TunerHostInfo, CancellationToken) Declaration Task OnDeleted(TunerHostInfo tuner, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner CancellationToken cancellationToken Returns Type Description Task OnSaved(TunerHostInfo, Boolean, CancellationToken) Declaration Task OnSaved(TunerHostInfo tuner, bool isNew, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner Boolean isNew CancellationToken cancellationToken Returns Type Description Task SupportsGuideData(TunerHostInfo) Declaration bool SupportsGuideData(TunerHostInfo tuner) Parameters Type Name Description TunerHostInfo tuner Returns Type Description Boolean SupportsRemappingGuideData(TunerHostInfo) Declaration bool SupportsRemappingGuideData(TunerHostInfo tuner) Parameters Type Name Description TunerHostInfo tuner Returns Type Description Boolean ValdidateOptions(TunerHostInfo, CancellationToken) Declaration Task ValdidateOptions(TunerHostInfo tuner, CancellationToken cancellationToken) Parameters Type Name Description TunerHostInfo tuner CancellationToken cancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveStreamOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveStreamOptions.html",
    "title": "Class LiveStreamOptions",
    "keywords": "Class LiveStreamOptions Inheritance Object LiveStreamOptions Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class LiveStreamOptions Properties MediaSource Declaration public MediaSourceInfo MediaSource { get; set; } Property Value Type Description MediaSourceInfo OnClose Declaration public Func<ILiveStream, Task> OnClose { get; set; } Property Value Type Description Func < ILiveStream , Task > TunerHost Declaration public TunerHostInfo TunerHost { get; set; } Property Value Type Description TunerHostInfo"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveTvChannel.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveTvChannel.html",
    "title": "Class LiveTvChannel",
    "keywords": "Class LiveTvChannel Inheritance Object BaseItem LiveTvChannel Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasMediaSources Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ContainingFolderPath BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.SupportsExternalTransfer BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.GetDefaultPrimaryImageAspectRatio() BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class LiveTvChannel : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasMediaSources Properties ChannelMediaType Declaration [IgnoreDataMember] public string ChannelMediaType { get; set; } Property Value Type Description String EnableRememberingTrackSelections Declaration [IgnoreDataMember] public override bool EnableRememberingTrackSelections { get; } Property Value Type Description Boolean Overrides BaseItem.EnableRememberingTrackSelections MediaType Declaration [IgnoreDataMember] public override string MediaType { get; } Property Value Type Description String Overrides BaseItem.MediaType Number Gets or sets the number. Declaration [IgnoreDataMember] public string Number { get; set; } Property Value Type Description String The number. SortIndexNumber Declaration [IgnoreDataMember] public int? SortIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > SupportsCollections Declaration [IgnoreDataMember] public override bool SupportsCollections { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsCollections SupportsExtras Declaration [IgnoreDataMember] public override bool SupportsExtras { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExtras SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsInheritedParentImages SupportsLocalTrailers Declaration [IgnoreDataMember] public override bool SupportsLocalTrailers { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsLocalTrailers SupportsOwnedItems Declaration [IgnoreDataMember] protected override bool SupportsOwnedItems { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsOwnedItems SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios SupportsTags Declaration [IgnoreDataMember] public override bool SupportsTags { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsTags SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsThemeMedia Methods CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides BaseItem.CanDelete(Folder[]) GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetClientTypeName() Declaration public override string GetClientTypeName() Returns Type Description String Overrides BaseItem.GetClientTypeName() GetInternalMetadataPath(String) Declaration protected override string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String Overrides BaseItem.GetInternalMetadataPath(String) GetInternalMetadataPath(String, Guid) Declaration public static string GetInternalMetadataPath(string basePath, Guid guid) Parameters Type Name Description String basePath Guid guid Returns Type Description String GetMediaSources(User, Boolean, Boolean, LibraryOptions) Declaration public override List<MediaSourceInfo> GetMediaSources(User user, bool enableAlternateMediaSources, bool enablePathSubstitution, LibraryOptions libraryOptions) Parameters Type Name Description User user Boolean enableAlternateMediaSources Boolean enablePathSubstitution LibraryOptions libraryOptions Returns Type Description List < MediaSourceInfo > Overrides BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) GetMediaStreams() Declaration public override List<MediaStream> GetMediaStreams() Returns Type Description List < MediaStream > Overrides BaseItem.GetMediaStreams() Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasMediaSources Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveTvConflictException.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveTvConflictException.html",
    "title": "Class LiveTvConflictException",
    "keywords": "Class LiveTvConflictException Class LiveTvConflictException. Inheritance Object Exception LiveTvConflictException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class LiveTvConflictException : Exception, ISerializable Constructors LiveTvConflictException() Declaration public LiveTvConflictException() LiveTvConflictException(String) Declaration public LiveTvConflictException(string message) Parameters Type Name Description String message Implements System.Runtime.Serialization.ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveTvProgram.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveTvProgram.html",
    "title": "Class LiveTvProgram",
    "keywords": "Class LiveTvProgram Inheritance Object BaseItem LiveTvProgram Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > IHasStartDate IHasProgramAttributes IHasSeriesName Inherited Members BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.IsResolvedToFolder BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.SupportsPlayedStatus(LibraryOptions) BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileNameWithoutExtension BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.IsAuthorizedToDelete(User, Folder[]) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.TriggerOnRefreshStart() BaseItem.TriggerOnRefreshComplete() BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsTags BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.CreatePresentationUniqueKey() BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.IsVisibleViaTags(User) BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisible(User) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.IsFolder BaseItem.IsDisplayedAsFolder BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.MarkUnplayed(User) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsPlayed(User) BaseItem.IsFavoriteOrLiked(User) BaseItem.IsUnplayed(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.IsTopParent BaseItem.GetIdsForAncestorQuery() BaseItem.GetRefreshProgress() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class LiveTvProgram : BaseItem, IHasProviderIds, IHasLookupInfo<ItemLookupInfo>, IHasStartDate, IHasProgramAttributes, IHasSeriesName Properties ContainingFolderPath Returns the folder containing the item. If the item is a folder, it returns the folder itself Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String The containing folder path. Overrides BaseItem.ContainingFolderPath ForceDefaultAspectRatio Declaration [IgnoreDataMember] public override bool ForceDefaultAspectRatio { get; } Property Value Type Description Boolean Overrides BaseItem.ForceDefaultAspectRatio HasAired Declaration [IgnoreDataMember] public bool HasAired { get; } Property Value Type Description Boolean ImageDisplayParentId Declaration [IgnoreDataMember] public override long ImageDisplayParentId { get; } Property Value Type Description Int64 Overrides BaseItem.ImageDisplayParentId IsAiring Declaration [IgnoreDataMember] public bool IsAiring { get; } Property Value Type Description Boolean IsKids Gets or sets a value indicating whether this instance is kids. Declaration [IgnoreDataMember] public bool IsKids { get; set; } Property Value Type Description Boolean true if this instance is kids; otherwise, false . IsLive Gets or sets a value indicating whether this instance is live. Declaration [IgnoreDataMember] public bool IsLive { get; } Property Value Type Description Boolean true if this instance is live; otherwise, false . IsMovie Gets or sets a value indicating whether this instance is movie. Declaration [IgnoreDataMember] public bool IsMovie { get; set; } Property Value Type Description Boolean true if this instance is movie; otherwise, false . IsNew Gets or sets a value indicating whether this instance is sports. Declaration [IgnoreDataMember] public bool IsNew { get; } Property Value Type Description Boolean true if this instance is sports; otherwise, false . IsNews Gets or sets a value indicating whether this instance is news. Declaration [IgnoreDataMember] public bool IsNews { get; set; } Property Value Type Description Boolean true if this instance is news; otherwise, false . IsPremiere Gets or sets a value indicating whether this instance is premiere. Declaration [IgnoreDataMember] public bool IsPremiere { get; } Property Value Type Description Boolean true if this instance is premiere; otherwise, false . IsRepeat Gets or sets a value indicating whether this instance is repeat. Declaration [IgnoreDataMember] public bool IsRepeat { get; set; } Property Value Type Description Boolean true if this instance is repeat; otherwise, false . IsSeries Gets or sets a value indicating whether this instance is series. Declaration [IgnoreDataMember] public bool IsSeries { get; set; } Property Value Type Description Boolean true if this instance is series; otherwise, false . IsSports Gets or sets a value indicating whether this instance is sports. Declaration [IgnoreDataMember] public bool IsSports { get; set; } Property Value Type Description Boolean true if this instance is sports; otherwise, false . MediaType Declaration [IgnoreDataMember] public override string MediaType { get; } Property Value Type Description String Overrides BaseItem.MediaType SeriesName Declaration [IgnoreDataMember] public string SeriesName { get; set; } Property Value Type Description String StartDate The start date of the program, in UTC. Declaration [IgnoreDataMember] public DateTimeOffset StartDate { get; set; } Property Value Type Description DateTimeOffset SupportsAncestors Declaration [IgnoreDataMember] public override bool SupportsAncestors { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsAncestors SupportsCollections Declaration [IgnoreDataMember] public override bool SupportsCollections { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsCollections SupportsExternalTransfer Declaration [IgnoreDataMember] public override bool SupportsExternalTransfer { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExternalTransfer SupportsExtras Declaration [IgnoreDataMember] public override bool SupportsExtras { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsExtras SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsInheritedParentImages SupportsLocalTrailers Declaration [IgnoreDataMember] public override bool SupportsLocalTrailers { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsLocalTrailers SupportsOwnedItems Declaration [IgnoreDataMember] protected override bool SupportsOwnedItems { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsOwnedItems SupportsPeople Declaration [IgnoreDataMember] public override bool SupportsPeople { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsPeople SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios SupportsThemeMedia Declaration [IgnoreDataMember] public override bool SupportsThemeMedia { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsThemeMedia Methods CanDelete(Folder[]) Declaration public override bool CanDelete(Folder[] collectionFolders) Parameters Type Name Description Folder [] collectionFolders Returns Type Description Boolean Overrides BaseItem.CanDelete(Folder[]) CreatePresentationUniqueKey(LibraryOptions) Declaration public override string CreatePresentationUniqueKey(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description String Overrides BaseItem.CreatePresentationUniqueKey(LibraryOptions) CreateSortName() Declaration protected override ReadOnlySpan<char> CreateSortName() Returns Type Description ReadOnlySpan < Char > Overrides BaseItem.CreateSortName() GetBlockUnratedType() Declaration public override UnratedItem GetBlockUnratedType() Returns Type Description UnratedItem Overrides BaseItem.GetBlockUnratedType() GetClientTypeName() Declaration public override string GetClientTypeName() Returns Type Description String Overrides BaseItem.GetClientTypeName() GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetInternalMetadataPath(String) Declaration protected override string GetInternalMetadataPath(string basePath) Parameters Type Name Description String basePath Returns Type Description String Overrides BaseItem.GetInternalMetadataPath(String) GetRelatedUrls() Declaration public override List<ExternalUrl> GetRelatedUrls() Returns Type Description List < ExternalUrl > Overrides BaseItem.GetRelatedUrls() GetUserDataKey() Declaration public override string GetUserDataKey() Returns Type Description String Overrides BaseItem.GetUserDataKey() Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> IHasStartDate IHasProgramAttributes IHasSeriesName Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveTvServiceStatusInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveTvServiceStatusInfo.html",
    "title": "Class LiveTvServiceStatusInfo",
    "keywords": "Class LiveTvServiceStatusInfo Inheritance Object LiveTvServiceStatusInfo Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class LiveTvServiceStatusInfo Constructors LiveTvServiceStatusInfo() Declaration public LiveTvServiceStatusInfo() Properties HasUpdateAvailable Gets or sets a value indicating whether this instance has update available. Declaration public bool HasUpdateAvailable { get; set; } Property Value Type Description Boolean true if this instance has update available; otherwise, false . IsVisible Gets or sets a value indicating whether this instance is visible. Declaration public bool IsVisible { get; set; } Property Value Type Description Boolean true if this instance is visible; otherwise, false . Status Gets or sets the status. Declaration public LiveTvServiceStatus Status { get; set; } Property Value Type Description LiveTvServiceStatus The status. StatusMessage Gets or sets the status message. Declaration public string StatusMessage { get; set; } Property Value Type Description String The status message. Tuners Gets or sets the tuners. Declaration public List<LiveTvTunerInfo> Tuners { get; set; } Property Value Type Description List < LiveTvTunerInfo > The tuners. Version Gets or sets the version. Declaration public string Version { get; set; } Property Value Type Description String The version."
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveTvTunerInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.LiveTvTunerInfo.html",
    "title": "Class LiveTvTunerInfo",
    "keywords": "Class LiveTvTunerInfo Inheritance Object LiveTvTunerInfo Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class LiveTvTunerInfo Constructors LiveTvTunerInfo() Declaration public LiveTvTunerInfo() Properties CanReset Gets or sets a value indicating whether this instance can reset. Declaration public bool CanReset { get; set; } Property Value Type Description Boolean true if this instance can reset; otherwise, false . ChannelId Gets or sets the channel identifier. Declaration public string ChannelId { get; set; } Property Value Type Description String The channel identifier. Clients Gets or sets the clients. Declaration public List<string> Clients { get; set; } Property Value Type Description List < String > The clients. Id Gets or sets the identifier. Declaration public string Id { get; set; } Property Value Type Description String The identifier. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. ProgramName Gets or sets the name of the program. Declaration public string ProgramName { get; set; } Property Value Type Description String The name of the program. RecordingId Gets or sets the recording identifier. Declaration public string RecordingId { get; set; } Property Value Type Description String The recording identifier. SourceType Gets or sets the type of the source. Declaration public string SourceType { get; set; } Property Value Type Description String The type of the source. Status Gets or sets the status. Declaration public LiveTvTunerStatus Status { get; set; } Property Value Type Description LiveTvTunerStatus The status. Url Gets or sets the URL. Declaration public string Url { get; set; } Property Value Type Description String The URL."
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.ProgramInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.ProgramInfo.html",
    "title": "Class ProgramInfo",
    "keywords": "Class ProgramInfo Inheritance Object ProgramInfo Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class ProgramInfo Properties Audio Gets or sets the audio. Declaration public ProgramAudio? Audio { get; set; } Property Value Type Description Nullable < ProgramAudio > The audio. BackdropImageUrl Declaration public string BackdropImageUrl { get; set; } Property Value Type Description String ChannelId Gets or sets the channel identifier. Declaration public string ChannelId { get; set; } Property Value Type Description String The channel identifier. CommunityRating Gets or sets the community rating. Declaration public float? CommunityRating { get; set; } Property Value Type Description Nullable < Single > The community rating. EndDate The end date of the program, in UTC. Declaration public DateTimeOffset EndDate { get; set; } Property Value Type Description DateTimeOffset EpisodeNumber Gets or sets the episode number. Declaration public int? EpisodeNumber { get; set; } Property Value Type Description Nullable < Int32 > The episode number. EpisodeTitle Gets or sets the episode title. Declaration public string EpisodeTitle { get; set; } Property Value Type Description String The episode title. Etag Gets or sets the etag. Declaration public string Etag { get; set; } Property Value Type Description String The etag. Genres Genre of the program. Declaration public List<string> Genres { get; set; } Property Value Type Description List < String > Height Declaration public int? Height { get; set; } Property Value Type Description Nullable < Int32 > HomePageUrl Gets or sets the home page URL. Declaration public string HomePageUrl { get; set; } Property Value Type Description String The home page URL. Id Id of the program. Declaration public string Id { get; set; } Property Value Type Description String ImageHeight Declaration public int ImageHeight { get; set; } Property Value Type Description Int32 ImageUrl Supply the image url if it can be downloaded Declaration public string ImageUrl { get; set; } Property Value Type Description String The image URL. ImageWidth Declaration public int ImageWidth { get; set; } Property Value Type Description Int32 Is3D Declaration public bool? Is3D { get; set; } Property Value Type Description Nullable < Boolean > IsEducational Declaration public bool IsEducational { get; set; } Property Value Type Description Boolean IsHD Gets or sets a value indicating whether this instance is hd. Declaration public bool? IsHD { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is hd; otherwise, false . IsKids Gets or sets a value indicating whether this instance is kids. Declaration public bool IsKids { get; set; } Property Value Type Description Boolean true if this instance is kids; otherwise, false . IsLive Gets or sets a value indicating whether this instance is live. Declaration public bool IsLive { get; set; } Property Value Type Description Boolean true if this instance is live; otherwise, false . IsMovie Gets or sets a value indicating whether this instance is movie. Declaration public bool IsMovie { get; set; } Property Value Type Description Boolean true if this instance is movie; otherwise, false . IsNew Declaration public bool IsNew { get; set; } Property Value Type Description Boolean IsNews Gets or sets a value indicating whether this instance is news. Declaration public bool IsNews { get; set; } Property Value Type Description Boolean true if this instance is news; otherwise, false . IsPremiere Gets or sets a value indicating whether this instance is premiere. Declaration public bool IsPremiere { get; set; } Property Value Type Description Boolean true if this instance is premiere; otherwise, false . IsRepeat Gets or sets a value indicating whether this instance is repeat. Declaration public bool IsRepeat { get; set; } Property Value Type Description Boolean true if this instance is repeat; otherwise, false . IsSeries Gets or sets a value indicating whether this instance is series. Declaration public bool IsSeries { get; set; } Property Value Type Description Boolean true if this instance is series; otherwise, false . IsSports Gets or sets a value indicating whether this instance is sports. Declaration public bool IsSports { get; set; } Property Value Type Description Boolean true if this instance is sports; otherwise, false . IsSubjectToBlackout Declaration public bool IsSubjectToBlackout { get; set; } Property Value Type Description Boolean LogoImageUrl Declaration public string LogoImageUrl { get; set; } Property Value Type Description String Name Name of the program Declaration public string Name { get; set; } Property Value Type Description String OfficialRating Gets or sets the official rating. Declaration public string OfficialRating { get; set; } Property Value Type Description String The official rating. OriginalAirDate Gets or sets the original air date. Declaration public DateTimeOffset? OriginalAirDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The original air date. Overview Gets or sets the overview. Declaration public string Overview { get; set; } Property Value Type Description String The overview. ProductionYear Gets or sets the production year. Declaration public int? ProductionYear { get; set; } Property Value Type Description Nullable < Int32 > The production year. ProviderIds Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary SeasonNumber Gets or sets the season number. Declaration public int? SeasonNumber { get; set; } Property Value Type Description Nullable < Int32 > The season number. SeriesId Gets or sets the series identifier. Declaration public string SeriesId { get; set; } Property Value Type Description String The series identifier. SeriesProviderIds Declaration public ProviderIdDictionary SeriesProviderIds { get; set; } Property Value Type Description ProviderIdDictionary ShortOverview Gets or sets the short overview. Declaration public string ShortOverview { get; set; } Property Value Type Description String The short overview. ShowId Gets or sets an Id for the content that will always be the same regarless of air time or channel Declaration public string ShowId { get; set; } Property Value Type Description String The show identifier. StartDate The start date of the program, in UTC. Declaration public DateTimeOffset StartDate { get; set; } Property Value Type Description DateTimeOffset ThumbImageUrl Declaration public string ThumbImageUrl { get; set; } Property Value Type Description String Width Declaration public int? Width { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.RecordingInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.RecordingInfo.html",
    "title": "Class RecordingInfo",
    "keywords": "Class RecordingInfo Inheritance Object RecordingInfo Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class RecordingInfo Constructors RecordingInfo() Declaration public RecordingInfo() Properties Audio Gets or sets the audio. Declaration public ProgramAudio? Audio { get; set; } Property Value Type Description Nullable < ProgramAudio > The audio. ChannelId ChannelId of the recording. Declaration public string ChannelId { get; set; } Property Value Type Description String ChannelType Gets or sets the type of the channel. Declaration public ChannelType ChannelType { get; set; } Property Value Type Description ChannelType The type of the channel. CommunityRating Gets or sets the community rating. Declaration public float? CommunityRating { get; set; } Property Value Type Description Nullable < Single > The community rating. DateLastUpdated Gets or sets the date last updated. Declaration public DateTimeOffset DateLastUpdated { get; set; } Property Value Type Description DateTimeOffset The date last updated. EndDate The end date of the recording, in UTC. Declaration public DateTimeOffset EndDate { get; set; } Property Value Type Description DateTimeOffset EpisodeTitle Gets or sets the episode title. Declaration public string EpisodeTitle { get; set; } Property Value Type Description String The episode title. Genres Genre of the program. Declaration public List<string> Genres { get; set; } Property Value Type Description List < String > HasImage Gets or sets a value indicating whether this instance has image. Declaration public bool? HasImage { get; set; } Property Value Type Description Nullable < Boolean > null if [has image] contains no value, true if [has image]; otherwise, false . Id Id of the recording. Declaration public string Id { get; set; } Property Value Type Description String ImagePath Supply the image path if it can be accessed directly from the file system Declaration public string ImagePath { get; set; } Property Value Type Description String The image path. ImageUrl Supply the image url if it can be downloaded Declaration public string ImageUrl { get; set; } Property Value Type Description String The image URL. IsHD Gets or sets a value indicating whether this instance is hd. Declaration public bool? IsHD { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is hd; otherwise, false . IsKids Gets or sets a value indicating whether this instance is kids. Declaration public bool IsKids { get; set; } Property Value Type Description Boolean true if this instance is kids; otherwise, false . IsLive Gets or sets a value indicating whether this instance is live. Declaration public bool IsLive { get; set; } Property Value Type Description Boolean true if this instance is live; otherwise, false . IsMovie Gets or sets a value indicating whether this instance is movie. Declaration public bool IsMovie { get; set; } Property Value Type Description Boolean true if this instance is movie; otherwise, false . IsNews Gets or sets a value indicating whether this instance is news. Declaration public bool IsNews { get; set; } Property Value Type Description Boolean true if this instance is news; otherwise, false . IsPremiere Gets or sets a value indicating whether this instance is premiere. Declaration public bool IsPremiere { get; set; } Property Value Type Description Boolean true if this instance is premiere; otherwise, false . IsRepeat Gets or sets a value indicating whether this instance is repeat. Declaration public bool IsRepeat { get; set; } Property Value Type Description Boolean true if this instance is repeat; otherwise, false . IsSeries Gets or sets a value indicating whether this instance is series. Declaration public bool IsSeries { get; set; } Property Value Type Description Boolean true if this instance is series; otherwise, false . IsSports Gets or sets a value indicating whether this instance is sports. Declaration public bool IsSports { get; set; } Property Value Type Description Boolean true if this instance is sports; otherwise, false . Name Name of the recording. Declaration public string Name { get; set; } Property Value Type Description String OfficialRating Gets or sets the official rating. Declaration public string OfficialRating { get; set; } Property Value Type Description String The official rating. OriginalAirDate Gets or sets the original air date. Declaration public DateTimeOffset? OriginalAirDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The original air date. Overview Gets or sets the overview. Declaration public string Overview { get; set; } Property Value Type Description String The overview. Path Gets or sets the path. Declaration public string Path { get; set; } Property Value Type Description String The path. ProgramId Gets or sets the program identifier. Declaration public string ProgramId { get; set; } Property Value Type Description String The program identifier. SeriesTimerId Gets or sets the series timer identifier. Declaration public string SeriesTimerId { get; set; } Property Value Type Description String The series timer identifier. ShowId Gets or sets the show identifier. Declaration public string ShowId { get; set; } Property Value Type Description String The show identifier. StartDate The start date of the recording, in UTC. Declaration public DateTimeOffset StartDate { get; set; } Property Value Type Description DateTimeOffset Status Gets or sets the status. Declaration public RecordingStatus Status { get; set; } Property Value Type Description RecordingStatus The status. TimerId Gets or sets the timer identifier. Declaration public string TimerId { get; set; } Property Value Type Description String The timer identifier. Url Gets or sets the URL. Declaration public string Url { get; set; } Property Value Type Description String The URL."
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.RecordingStatusChangedEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.RecordingStatusChangedEventArgs.html",
    "title": "Class RecordingStatusChangedEventArgs",
    "keywords": "Class RecordingStatusChangedEventArgs Inheritance Object EventArgs RecordingStatusChangedEventArgs Inherited Members EventArgs.Empty Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class RecordingStatusChangedEventArgs : EventArgs Properties NewStatus Declaration public RecordingStatus NewStatus { get; set; } Property Value Type Description RecordingStatus RecordingId Declaration public string RecordingId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.SeriesTimerEventInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.SeriesTimerEventInfo.html",
    "title": "Class SeriesTimerEventInfo",
    "keywords": "Class SeriesTimerEventInfo Inheritance Object SeriesTimerEventInfo Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class SeriesTimerEventInfo Properties SeriesTimer Declaration public SeriesTimerInfo SeriesTimer { get; set; } Property Value Type Description SeriesTimerInfo"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.SeriesTimerInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.SeriesTimerInfo.html",
    "title": "Class SeriesTimerInfo",
    "keywords": "Class SeriesTimerInfo Inheritance Object SeriesTimerInfo Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public class SeriesTimerInfo Properties ChannelId ChannelId of the recording. Declaration public string ChannelId { get; set; } Property Value Type Description String ChannelIds Declaration public string[] ChannelIds { get; set; } Property Value Type Description String [] Days Gets or sets the days. Declaration public DayOfWeek[] Days { get; set; } Property Value Type Description DayOfWeek [] The days. EndDate The end date of the recording, in UTC. Declaration public DateTimeOffset EndDate { get; set; } Property Value Type Description DateTimeOffset Id Id of the recording. Declaration public string Id { get; set; } Property Value Type Description String IsPostPaddingRequired Gets or sets a value indicating whether this instance is post padding required. Declaration public bool IsPostPaddingRequired { get; set; } Property Value Type Description Boolean true if this instance is post padding required; otherwise, false . IsPrePaddingRequired Gets or sets a value indicating whether this instance is pre padding required. Declaration public bool IsPrePaddingRequired { get; set; } Property Value Type Description Boolean true if this instance is pre padding required; otherwise, false . KeepUntil Declaration public KeepUntil KeepUntil { get; set; } Property Value Type Description KeepUntil KeepUpTo Declaration public int KeepUpTo { get; set; } Property Value Type Description Int32 Keywords Declaration public KeywordInfo[] Keywords { get; set; } Property Value Type Description KeywordInfo [] MaxRecordingSeconds Declaration public int MaxRecordingSeconds { get; set; } Property Value Type Description Int32 Name Name of the recording. Declaration public string Name { get; set; } Property Value Type Description String Overview Description of the recording. Declaration public string Overview { get; set; } Property Value Type Description String PostPaddingSeconds Gets or sets the post padding seconds. Declaration public int PostPaddingSeconds { get; set; } Property Value Type Description Int32 The post padding seconds. PrePaddingSeconds Gets or sets the pre padding seconds. Declaration public int PrePaddingSeconds { get; set; } Property Value Type Description Int32 The pre padding seconds. Priority Gets or sets the priority. Declaration public int Priority { get; set; } Property Value Type Description Int32 The priority. ProgramId Gets or sets the program identifier. Declaration public string ProgramId { get; set; } Property Value Type Description String The program identifier. ProviderIds Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary RecordAnyTime Gets or sets a value indicating whether [record any time]. Declaration public bool RecordAnyTime { get; set; } Property Value Type Description Boolean true if [record any time]; otherwise, false . RecordNewOnly Gets or sets a value indicating whether [record new only]. Declaration public bool RecordNewOnly { get; set; } Property Value Type Description Boolean true if [record new only]; otherwise, false . SeriesId Gets or sets the series identifier. Declaration public string SeriesId { get; set; } Property Value Type Description String The series identifier. ServiceName Declaration public string ServiceName { get; set; } Property Value Type Description String SkipEpisodesInLibrary Declaration public bool SkipEpisodesInLibrary { get; set; } Property Value Type Description Boolean StartDate The start date of the recording, in UTC. Declaration public DateTimeOffset StartDate { get; set; } Property Value Type Description DateTimeOffset TimerType Declaration public TimerType TimerType { get; } Property Value Type Description TimerType"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.TimerEventInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.TimerEventInfo.html",
    "title": "Class TimerEventInfo",
    "keywords": "Class TimerEventInfo Inheritance Object TimerEventInfo Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class TimerEventInfo Properties Program Declaration public LiveTvProgram Program { get; set; } Property Value Type Description LiveTvProgram Timer Declaration public TimerInfo Timer { get; set; } Property Value Type Description TimerInfo"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.TimerInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.TimerInfo.html",
    "title": "Class TimerInfo",
    "keywords": "Class TimerInfo Inheritance Object TimerInfo Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class TimerInfo Properties ChannelId ChannelId of the recording. Declaration public string ChannelId { get; set; } Property Value Type Description String CommunityRating Declaration public float? CommunityRating { get; set; } Property Value Type Description Nullable < Single > EndDate The end date of the recording, in UTC. Declaration public DateTimeOffset EndDate { get; set; } Property Value Type Description DateTimeOffset EpisodeNumber Gets or sets the episode number. Declaration public int? EpisodeNumber { get; set; } Property Value Type Description Nullable < Int32 > The episode number. EpisodeTitle Declaration public string EpisodeTitle { get; set; } Property Value Type Description String Genres Declaration public string[] Genres { get; set; } Property Value Type Description String [] Id Id of the recording. Declaration public string Id { get; set; } Property Value Type Description String IsKids Declaration public bool IsKids { get; } Property Value Type Description Boolean IsLive Gets or sets a value indicating whether this instance is live. Declaration [IgnoreDataMember] public bool IsLive { get; } Property Value Type Description Boolean true if this instance is live; otherwise, false . IsManual Declaration public bool IsManual { get; set; } Property Value Type Description Boolean IsMovie Declaration public bool IsMovie { get; set; } Property Value Type Description Boolean IsNew Declaration public bool IsNew { get; set; } Property Value Type Description Boolean IsNews Declaration public bool IsNews { get; } Property Value Type Description Boolean IsPostPaddingRequired Gets or sets a value indicating whether this instance is post padding required. Declaration public bool IsPostPaddingRequired { get; set; } Property Value Type Description Boolean true if this instance is post padding required; otherwise, false . IsPremiere Declaration [IgnoreDataMember] public bool IsPremiere { get; } Property Value Type Description Boolean IsPrePaddingRequired Gets or sets a value indicating whether this instance is pre padding required. Declaration public bool IsPrePaddingRequired { get; set; } Property Value Type Description Boolean true if this instance is pre padding required; otherwise, false . IsProgramSeries Declaration public bool IsProgramSeries { get; set; } Property Value Type Description Boolean IsRepeat Declaration public bool IsRepeat { get; set; } Property Value Type Description Boolean IsSeries Declaration public bool IsSeries { get; set; } Property Value Type Description Boolean IsSports Declaration public bool IsSports { get; } Property Value Type Description Boolean KeepUntil Declaration public KeepUntil KeepUntil { get; set; } Property Value Type Description KeepUntil Name Name of the recording. Declaration public string Name { get; set; } Property Value Type Description String OfficialRating Declaration public string OfficialRating { get; set; } Property Value Type Description String OriginalAirDate Declaration public DateTimeOffset? OriginalAirDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > Overview Description of the recording. Declaration public string Overview { get; set; } Property Value Type Description String PostPaddingSeconds Gets or sets the post padding seconds. Declaration public int PostPaddingSeconds { get; set; } Property Value Type Description Int32 The post padding seconds. PrePaddingSeconds Gets or sets the pre padding seconds. Declaration public int PrePaddingSeconds { get; set; } Property Value Type Description Int32 The pre padding seconds. Priority Gets or sets the priority. Declaration public int Priority { get; set; } Property Value Type Description Int32 The priority. ProductionYear Declaration public int? ProductionYear { get; set; } Property Value Type Description Nullable < Int32 > ProgramId Gets or sets the program identifier. Declaration public string ProgramId { get; set; } Property Value Type Description String The program identifier. ProviderIds Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary RecordingPath Declaration public string RecordingPath { get; set; } Property Value Type Description String RetryCount Declaration public int RetryCount { get; set; } Property Value Type Description Int32 SeasonNumber Declaration public int? SeasonNumber { get; set; } Property Value Type Description Nullable < Int32 > SeriesId Declaration public string SeriesId { get; set; } Property Value Type Description String SeriesProviderIds Declaration public ProviderIdDictionary SeriesProviderIds { get; set; } Property Value Type Description ProviderIdDictionary SeriesTimerId Gets or sets the series timer identifier. Declaration public string SeriesTimerId { get; set; } Property Value Type Description String The series timer identifier. ShowId Declaration public string ShowId { get; set; } Property Value Type Description String StartDate The start date of the recording, in UTC. Declaration public DateTimeOffset StartDate { get; set; } Property Value Type Description DateTimeOffset Status Gets or sets the status. Declaration public RecordingStatus Status { get; set; } Property Value Type Description RecordingStatus The status. Tags Declaration public string[] Tags { get; set; } Property Value Type Description String [] TimerType Declaration [IgnoreDataMember] public TimerType TimerType { get; } Property Value Type Description TimerType"
  },
  "reference/pluginapi/MediaBrowser.Controller.LiveTv.TunerChannelMapping.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.LiveTv.TunerChannelMapping.html",
    "title": "Class TunerChannelMapping",
    "keywords": "Class TunerChannelMapping Inheritance Object TunerChannelMapping Namespace : MediaBrowser.Controller.LiveTv Assembly : MediaBrowser.Controller.dll Syntax public sealed class TunerChannelMapping Properties Id Declaration public string Id { get; set; } Property Value Type Description String IsManualMapping Declaration public bool IsManualMapping { get; set; } Property Value Type Description Boolean Name Declaration public string Name { get; set; } Property Value Type Description String ProviderChannelId Declaration public string ProviderChannelId { get; set; } Property Value Type Description String ProviderChannelName Declaration public string ProviderChannelName { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.BaseEncodingJobOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.BaseEncodingJobOptions.html",
    "title": "Class BaseEncodingJobOptions",
    "keywords": "Class BaseEncodingJobOptions Inheritance Object BaseEncodingJobOptions EncodingJobOptions Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public class BaseEncodingJobOptions Constructors BaseEncodingJobOptions() Declaration public BaseEncodingJobOptions() Properties AllowAudioStreamCopy Declaration public bool AllowAudioStreamCopy { get; set; } Property Value Type Description Boolean AllowInterlacedVideoStreamCopy Declaration public bool AllowInterlacedVideoStreamCopy { get; set; } Property Value Type Description Boolean AllowVideoStreamCopy Declaration public bool AllowVideoStreamCopy { get; set; } Property Value Type Description Boolean AudioBitRate Gets or sets the audio bit rate. Declaration public int? AudioBitRate { get; set; } Property Value Type Description Nullable < Int32 > The audio bit rate. AudioChannels Gets or sets the audio channels. Declaration public int? AudioChannels { get; set; } Property Value Type Description Nullable < Int32 > The audio channels. AudioCodec Gets or sets the audio codec. Declaration public string AudioCodec { get; set; } Property Value Type Description String The audio codec. AudioSampleRate Gets or sets the audio sample rate. Declaration public int? AudioSampleRate { get; set; } Property Value Type Description Nullable < Int32 > The audio sample rate. AudioStreamIndex Gets or sets the index of the audio stream. Declaration public int? AudioStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > The index of the audio stream. AudioStreams Declaration [IgnoreDataMember] public RequestedStreamInfo[] AudioStreams { get; set; } Property Value Type Description RequestedStreamInfo [] BreakOnNonKeyFrames Declaration public bool BreakOnNonKeyFrames { get; set; } Property Value Type Description Boolean Container Declaration public string Container { get; set; } Property Value Type Description String Context Declaration public EncodingContext Context { get; set; } Property Value Type Description EncodingContext CopyTimestamps Declaration public bool CopyTimestamps { get; set; } Property Value Type Description Boolean CpuCoreLimit Declaration public int? CpuCoreLimit { get; set; } Property Value Type Description Nullable < Int32 > DeInterlace Declaration public bool DeInterlace { get; set; } Property Value Type Description Boolean DeleteOutputOnCancellation Declaration public bool DeleteOutputOnCancellation { get; set; } Property Value Type Description Boolean DeleteOutputOnException Declaration public bool DeleteOutputOnException { get; set; } Property Value Type Description Boolean DeviceId Declaration public string DeviceId { get; set; } Property Value Type Description String DurationTicks Declaration public long? DurationTicks { get; set; } Property Value Type Description Nullable < Int64 > EnableAutoStreamCopy Declaration public bool EnableAutoStreamCopy { get; set; } Property Value Type Description Boolean EnableMpegtsM2TsMode Declaration public bool EnableMpegtsM2TsMode { get; set; } Property Value Type Description Boolean Framerate Gets or sets the framerate. Declaration public float? Framerate { get; set; } Property Value Type Description Nullable < Single > The framerate. Height Gets or sets the height. Declaration public int? Height { get; set; } Property Value Type Description Nullable < Int32 > The height. Id Gets or sets the id. Declaration public string Id { get; set; } Property Value Type Description String The id. Level Gets or sets the level. Declaration public string Level { get; set; } Property Value Type Description String The level. LiveStreamId Declaration public string LiveStreamId { get; set; } Property Value Type Description String ManifestSubtitles Declaration public string ManifestSubtitles { get; set; } Property Value Type Description String MaxAudioBitDepth Declaration public int? MaxAudioBitDepth { get; set; } Property Value Type Description Nullable < Int32 > MaxAudioChannels Declaration public int? MaxAudioChannels { get; set; } Property Value Type Description Nullable < Int32 > MaxFramerate Declaration public float? MaxFramerate { get; set; } Property Value Type Description Nullable < Single > MaxHeight Gets or sets the height of the max. Declaration public int? MaxHeight { get; set; } Property Value Type Description Nullable < Int32 > The height of the max. MaxRefFrames Declaration public int? MaxRefFrames { get; set; } Property Value Type Description Nullable < Int32 > MaxVideoBitDepth Declaration public int? MaxVideoBitDepth { get; set; } Property Value Type Description Nullable < Int32 > MaxWidth Gets or sets the width of the max. Declaration public int? MaxWidth { get; set; } Property Value Type Description Nullable < Int32 > The width of the max. MediaSourceId Declaration public string MediaSourceId { get; set; } Property Value Type Description String PlaySessionId Declaration public string PlaySessionId { get; set; } Property Value Type Description String Profile Gets or sets the profile. Declaration public string Profile { get; set; } Property Value Type Description String The profile. RequireNonAnamorphic Declaration public bool RequireNonAnamorphic { get; set; } Property Value Type Description Boolean SegmentContainer Declaration public string SegmentContainer { get; set; } Property Value Type Description String SegmentLength Declaration public int? SegmentLength { get; set; } Property Value Type Description Nullable < Int32 > StartTimeTicks Gets or sets the start time ticks. Declaration public long? StartTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > The start time ticks. Static Declaration public bool Static { get; set; } Property Value Type Description Boolean StreamOptions Declaration public Dictionary<string, string> StreamOptions { get; set; } Property Value Type Description Dictionary < String , String > SubtitleCodec Declaration public string SubtitleCodec { get; set; } Property Value Type Description String SubtitleMethod Declaration public SubtitleDeliveryMethod SubtitleMethod { get; set; } Property Value Type Description SubtitleDeliveryMethod SubtitleStreamIndex Gets or sets the index of the subtitle stream. Declaration public int? SubtitleStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > The index of the subtitle stream. SubtitleStreamIndexes Declaration public string SubtitleStreamIndexes { get; set; } Property Value Type Description String SubtitleStreams Declaration [IgnoreDataMember] public RequestedStreamInfo[] SubtitleStreams { get; set; } Property Value Type Description RequestedStreamInfo [] TranscodeReasons Declaration public string TranscodeReasons { get; set; } Property Value Type Description String TranscodingMaxAudioChannels Declaration public int? TranscodingMaxAudioChannels { get; set; } Property Value Type Description Nullable < Int32 > VideoBitRate Gets or sets the video bit rate. Declaration public int? VideoBitRate { get; set; } Property Value Type Description Nullable < Int32 > The video bit rate. VideoCodec Gets or sets the video codec. Declaration public string VideoCodec { get; set; } Property Value Type Description String The video codec. VideoRange Declaration public string VideoRange { get; set; } Property Value Type Description String VideoSideDataSubs Declaration public string VideoSideDataSubs { get; set; } Property Value Type Description String VideoStreamIndex Gets or sets the index of the video stream. Declaration public int? VideoStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > The index of the video stream. Width Gets or sets the width. Declaration public int? Width { get; set; } Property Value Type Description Nullable < Int32 > The width. Methods GetAudioStreams() Declaration public RequestedStreamInfo[] GetAudioStreams() Returns Type Description RequestedStreamInfo [] GetOption(String) Declaration public string GetOption(string name) Parameters Type Name Description String name Returns Type Description String GetOption(String, String) Declaration public string GetOption(string qualifier, string name) Parameters Type Name Description String qualifier String name Returns Type Description String GetSubtitleStreams() Declaration public RequestedStreamInfo[] GetSubtitleStreams() Returns Type Description RequestedStreamInfo []"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.CodecParameterContext.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.CodecParameterContext.html",
    "title": "Enum CodecParameterContext",
    "keywords": "Enum CodecParameterContext Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public enum CodecParameterContext Fields Name Description Conversion Playback Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<CodecParameterContext>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.EncodingJobOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.EncodingJobOptions.html",
    "title": "Class EncodingJobOptions",
    "keywords": "Class EncodingJobOptions Inheritance Object BaseEncodingJobOptions EncodingJobOptions Inherited Members BaseEncodingJobOptions.AudioStreams BaseEncodingJobOptions.GetAudioStreams() BaseEncodingJobOptions.SubtitleStreams BaseEncodingJobOptions.GetSubtitleStreams() BaseEncodingJobOptions.Id BaseEncodingJobOptions.MediaSourceId BaseEncodingJobOptions.DeviceId BaseEncodingJobOptions.Container BaseEncodingJobOptions.AudioCodec BaseEncodingJobOptions.EnableAutoStreamCopy BaseEncodingJobOptions.AllowVideoStreamCopy BaseEncodingJobOptions.AllowInterlacedVideoStreamCopy BaseEncodingJobOptions.AllowAudioStreamCopy BaseEncodingJobOptions.BreakOnNonKeyFrames BaseEncodingJobOptions.PlaySessionId BaseEncodingJobOptions.AudioSampleRate BaseEncodingJobOptions.MaxAudioBitDepth BaseEncodingJobOptions.AudioBitRate BaseEncodingJobOptions.AudioChannels BaseEncodingJobOptions.MaxAudioChannels BaseEncodingJobOptions.Static BaseEncodingJobOptions.Profile BaseEncodingJobOptions.VideoRange BaseEncodingJobOptions.Level BaseEncodingJobOptions.SegmentLength BaseEncodingJobOptions.Framerate BaseEncodingJobOptions.MaxFramerate BaseEncodingJobOptions.CopyTimestamps BaseEncodingJobOptions.SubtitleStreamIndexes BaseEncodingJobOptions.ManifestSubtitles BaseEncodingJobOptions.VideoSideDataSubs BaseEncodingJobOptions.StartTimeTicks BaseEncodingJobOptions.Width BaseEncodingJobOptions.Height BaseEncodingJobOptions.MaxWidth BaseEncodingJobOptions.MaxHeight BaseEncodingJobOptions.VideoBitRate BaseEncodingJobOptions.SubtitleStreamIndex BaseEncodingJobOptions.SubtitleMethod BaseEncodingJobOptions.MaxRefFrames BaseEncodingJobOptions.MaxVideoBitDepth BaseEncodingJobOptions.DeInterlace BaseEncodingJobOptions.RequireNonAnamorphic BaseEncodingJobOptions.TranscodingMaxAudioChannels BaseEncodingJobOptions.CpuCoreLimit BaseEncodingJobOptions.LiveStreamId BaseEncodingJobOptions.EnableMpegtsM2TsMode BaseEncodingJobOptions.VideoCodec BaseEncodingJobOptions.SubtitleCodec BaseEncodingJobOptions.TranscodeReasons BaseEncodingJobOptions.SegmentContainer BaseEncodingJobOptions.AudioStreamIndex BaseEncodingJobOptions.VideoStreamIndex BaseEncodingJobOptions.Context BaseEncodingJobOptions.StreamOptions BaseEncodingJobOptions.DurationTicks BaseEncodingJobOptions.GetOption(String, String) BaseEncodingJobOptions.GetOption(String) BaseEncodingJobOptions.DeleteOutputOnCancellation BaseEncodingJobOptions.DeleteOutputOnException Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public sealed class EncodingJobOptions : BaseEncodingJobOptions Constructors EncodingJobOptions(StreamInfo, DeviceProfile) Declaration public EncodingJobOptions(StreamInfo info, DeviceProfile deviceProfile) Parameters Type Name Description StreamInfo info DeviceProfile deviceProfile Properties DeviceProfile Declaration public DeviceProfile DeviceProfile { get; set; } Property Value Type Description DeviceProfile LogFileNamePrefix Declaration public string LogFileNamePrefix { get; set; } Property Value Type Description String MediaSource Declaration public MediaSourceInfo MediaSource { get; set; } Property Value Type Description MediaSourceInfo OnStarted Declaration public Action OnStarted { get; set; } Property Value Type Description Action OutputFilePath Declaration public string OutputFilePath { get; set; } Property Value Type Description String ReadInputAtNativeFramerate Declaration public bool ReadInputAtNativeFramerate { get; set; } Property Value Type Description Boolean TempDirectory Declaration public string TempDirectory { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.EnvironmentVariableSetting.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.EnvironmentVariableSetting.html",
    "title": "Class EnvironmentVariableSetting",
    "keywords": "Class EnvironmentVariableSetting Inheritance Object EnvironmentVariableSetting Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public sealed class EnvironmentVariableSetting Constructors EnvironmentVariableSetting(String, String) Declaration public EnvironmentVariableSetting(string variableName, string value) Parameters Type Name Description String variableName String value Properties Value Declaration public string Value { get; } Property Value Type Description String VariableName Declaration public string VariableName { get; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.html",
    "title": "Namespace MediaBrowser.Controller.MediaEncoding",
    "keywords": "Namespace MediaBrowser.Controller.MediaEncoding Classes BaseEncodingJobOptions EncodingJobOptions EnvironmentVariableSetting ImageEncodingOptions MediaInfoRequest Interfaces ICodecParameterManager Interface ICodecParameterManager. IEncodingDiagnosticOptionsManager Interface IEncodingDiagnosticOptionsManager. IEncodingSubtitleOptionsManager Interface IEncodingSubtitleOptionsManager. IEncodingToneMapOptionsManager Interface IEncodingToneMapOptionsManager. IFfmpegConfiguration IFfmpegManager Interface IServerConfigurationManager IFfmpegRunner IImageExtractionManager Interface IImageExtractionManager. IMediaEncoder Interface IMediaEncoder IMediaImageConverter Interface IMediaImageConverter. IMediaProbeManager Interface IMediaProbeManager. IStreamInfoManager Interface IStreamInfoManager. ISubtitleEncoder ISubtitleFontsManager Interface ISubtitleFontsManager. ISubtitleOcrDataManager Interface ISubtitleOcrDataManager. Enums CodecParameterContext"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.ICodecParameterManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.ICodecParameterManager.html",
    "title": "Interface ICodecParameterManager",
    "keywords": "Interface ICodecParameterManager Interface ICodecParameterManager. Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface ICodecParameterManager Methods GetCodecParameters(String, CodecParameterContext) Declaration IEditableObject GetCodecParameters(string codecId, CodecParameterContext parameterContext) Parameters Type Name Description String codecId CodecParameterContext parameterContext Returns Type Description IEditableObject SetCodecParameters(IEditableObject, String, CodecParameterContext) Declaration void SetCodecParameters(IEditableObject codecParameters, string codecId, CodecParameterContext parameterContext) Parameters Type Name Description IEditableObject codecParameters String codecId CodecParameterContext parameterContext"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IEncodingDiagnosticOptionsManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IEncodingDiagnosticOptionsManager.html",
    "title": "Interface IEncodingDiagnosticOptionsManager",
    "keywords": "Interface IEncodingDiagnosticOptionsManager Interface IEncodingDiagnosticOptionsManager. Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface IEncodingDiagnosticOptionsManager Methods GetOptions() Declaration IEditableObject GetOptions() Returns Type Description IEditableObject SetOptions(IEditableObject) Declaration void SetOptions(IEditableObject options) Parameters Type Name Description IEditableObject options"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IEncodingSubtitleOptionsManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IEncodingSubtitleOptionsManager.html",
    "title": "Interface IEncodingSubtitleOptionsManager",
    "keywords": "Interface IEncodingSubtitleOptionsManager Interface IEncodingSubtitleOptionsManager. Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface IEncodingSubtitleOptionsManager Methods GetOptions() Declaration IEditableObject GetOptions() Returns Type Description IEditableObject SetOptions(IEditableObject) Declaration void SetOptions(IEditableObject options) Parameters Type Name Description IEditableObject options"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IEncodingToneMapOptionsManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IEncodingToneMapOptionsManager.html",
    "title": "Interface IEncodingToneMapOptionsManager",
    "keywords": "Interface IEncodingToneMapOptionsManager Interface IEncodingToneMapOptionsManager. Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface IEncodingToneMapOptionsManager Methods GetOptions() Declaration IEditableObject GetOptions() Returns Type Description IEditableObject SetOptions(IEditableObject) Declaration void SetOptions(IEditableObject options) Parameters Type Name Description IEditableObject options"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IFfmpegConfiguration.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IFfmpegConfiguration.html",
    "title": "Interface IFfmpegConfiguration",
    "keywords": "Interface IFfmpegConfiguration Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface IFfmpegConfiguration Properties DetectPath Gets or sets the path to the ffdetect executable. Declaration string DetectPath { get; } Property Value Type Description String The ffdetect path. EncoderPath Gets or sets the path to the ffmpeg executable. Declaration string EncoderPath { get; } Property Value Type Description String The ffmpeg path. EnvironmentVariables Gets a dictionary for specifying required environment variables. Declaration EnvironmentVariableSetting[] EnvironmentVariables { get; } Property Value Type Description EnvironmentVariableSetting [] A StringDictionary . ProbePath Gets or sets the path to the ffprobe executable. Declaration string ProbePath { get; } Property Value Type Description String The ffprobe path. ShowD3D9CodecVariants Gets or sets a value indicating whether D3D9 codecs are shown. Declaration bool ShowD3D9CodecVariants { get; set; } Property Value Type Description Boolean true if D3D9 codecs should be shown; otherwise, false . Methods ApplyVariables(ProcessStartInfo) Declaration [Obsolete] void ApplyVariables(ProcessStartInfo startInfo) Parameters Type Name Description ProcessStartInfo startInfo"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IFfmpegManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IFfmpegManager.html",
    "title": "Interface IFfmpegManager",
    "keywords": "Interface IFfmpegManager Interface IServerConfigurationManager Inherited Members ITranscoderSupport.CanEncodeToAudioCodec(ReadOnlySpan<Char>) ITranscoderSupport.CanEncodeToSubtitleCodec(ReadOnlySpan<Char>) ITranscoderSupport.CanExtractSubtitles(String, EncodingContext) ITranscoderSupport.SupportsSubtitleConversionTo(MediaSourceInfo, MediaStream, ReadOnlySpan<Char>, EncodingContext, SubtitleDeliveryMethod) Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface IFfmpegManager : ITranscoderSupport Properties FfmpegCapabilities Gets the ffmpeg capabilities. Declaration FfmpegCapabilities FfmpegCapabilities { get; set; } Property Value Type Description FfmpegCapabilities The ffmpeg capabilities. Remarks The setter is just a temporary workaround. FfmpegConfiguration Gets the ffmpeg configuration. Declaration IFfmpegConfiguration FfmpegConfiguration { get; } Property Value Type Description IFfmpegConfiguration The ffmpeg configuration. Methods CreateFfMpegRunner(String, String) Declaration IFfmpegRunner CreateFfMpegRunner(string name, string logFilePath) Parameters Type Name Description String name String logFilePath Returns Type Description IFfmpegRunner"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IFfmpegRunner.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IFfmpegRunner.html",
    "title": "Interface IFfmpegRunner",
    "keywords": "Interface IFfmpegRunner Inherited Members IProcessRunnerWithOutput.LogOutput(LogSeverity) IProcessRunner.Run(String, String) IProcessRunner.Run(String, String, String) IProcessRunner.WaitForExitAsync(Int32, CancellationToken) IProcessRunner.WaitAndKillAsync(Int32) IProcessRunner.Name IProcessRunner.LastExitCode IDisposable.Dispose() Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface IFfmpegRunner : IProcessRunnerWithOutput, IProcessRunner, IDisposable Methods Start(String) Declaration void Start(string commandLineArgs) Parameters Type Name Description String commandLineArgs"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IImageExtractionManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IImageExtractionManager.html",
    "title": "Interface IImageExtractionManager",
    "keywords": "Interface IImageExtractionManager Interface IImageExtractionManager. Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface IImageExtractionManager Methods ExtractAudioImage(ReadOnlyMemory<Char>, Nullable<Int32>, CancellationToken) Extracts the audio image. Declaration Task<string> ExtractAudioImage(ReadOnlyMemory<char> path, int? streamIndex, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Char > path The path. Nullable < Int32 > streamIndex Index of the image stream. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > Task{Stream}. ExtractAudioImage(String, String, Nullable<Int32>, CancellationToken) Extracts the audio image. Declaration Task<string> ExtractAudioImage(string path, string container, int? streamIndex, CancellationToken cancellationToken) Parameters Type Name Description String path The path. String container The container. Nullable < Int32 > streamIndex Index of the image stream. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > Task{Stream}. ExtractVideoImage(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, MediaProtocol, MediaStream, Nullable<Video3DFormat>, Nullable<TimeSpan>, CancellationToken) Extracts the video image. Declaration Task<string> ExtractVideoImage(ReadOnlyMemory<char> inputPath, ReadOnlyMemory<char> container, MediaProtocol protocol, MediaStream videoStream, Video3DFormat? threedFormat, TimeSpan? offset, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Char > inputPath The input path. ReadOnlyMemory < Char > container The container. MediaProtocol protocol The protocol. MediaStream videoStream The video stream. Nullable < Video3DFormat > threedFormat The threed format. Nullable < TimeSpan > offset The offset. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > ExtractVideoImage(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, MediaProtocol, MediaStream, Nullable<Int32>, CancellationToken) Extracts the video image. Declaration Task<string> ExtractVideoImage(ReadOnlyMemory<char> inputPath, ReadOnlyMemory<char> container, MediaProtocol protocol, MediaStream imageStream, int? streamIndex, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Char > inputPath The input path. ReadOnlyMemory < Char > container The container. MediaProtocol protocol The protocol. MediaStream imageStream The image stream. Nullable < Int32 > streamIndex Index of the stream. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > ExtractVideoImagesFromList(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, MediaStream, MediaProtocol, Nullable<Video3DFormat>, TimeSpan[], String, String, Nullable<Int32>, CancellationToken) Extracts the video images from a list of time points. Declaration Task ExtractVideoImagesFromList(ReadOnlyMemory<char> inputPath, ReadOnlyMemory<char> container, MediaStream videoStream, MediaProtocol protocol, Video3DFormat? threedFormat, TimeSpan[] extractionTimes, string targetDirectory, string filenamePrefix, int? maxWidth, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Char > inputPath The input path. ReadOnlyMemory < Char > container The container. MediaStream videoStream The video stream. MediaProtocol protocol The protocol. Nullable < Video3DFormat > threedFormat The threed format. TimeSpan [] extractionTimes The extraction times. String targetDirectory The target directory. String filenamePrefix The filename prefix. Nullable < Int32 > maxWidth The maximum width. CancellationToken cancellationToken The cancellation token. Returns Type Description Task ExtractVideoImagesOnInterval(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, MediaStream, MediaProtocol, Nullable<Video3DFormat>, TimeSpan, String, String, Nullable<Int32>, CancellationToken) Extracts the video images on interval. Declaration Task ExtractVideoImagesOnInterval(ReadOnlyMemory<char> inputPath, ReadOnlyMemory<char> container, MediaStream videoStream, MediaProtocol protocol, Video3DFormat? threedFormat, TimeSpan interval, string targetDirectory, string filenamePrefix, int? maxWidth, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Char > inputPath The input path. ReadOnlyMemory < Char > container The container. MediaStream videoStream The video stream. MediaProtocol protocol The protocol. Nullable < Video3DFormat > threedFormat The threed format. TimeSpan interval The interval. String targetDirectory The target directory. String filenamePrefix The filename prefix. Nullable < Int32 > maxWidth The maximum width. CancellationToken cancellationToken The cancellation token. Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.ImageEncodingOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.ImageEncodingOptions.html",
    "title": "Class ImageEncodingOptions",
    "keywords": "Class ImageEncodingOptions Inheritance Object ImageEncodingOptions Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public sealed class ImageEncodingOptions Properties Format Declaration public string Format { get; set; } Property Value Type Description String Height Declaration public int? Height { get; set; } Property Value Type Description Nullable < Int32 > InputPath Declaration public string InputPath { get; set; } Property Value Type Description String MaxHeight Declaration public int? MaxHeight { get; set; } Property Value Type Description Nullable < Int32 > MaxWidth Declaration public int? MaxWidth { get; set; } Property Value Type Description Nullable < Int32 > Quality Declaration public int? Quality { get; set; } Property Value Type Description Nullable < Int32 > Width Declaration public int? Width { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IMediaEncoder.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IMediaEncoder.html",
    "title": "Interface IMediaEncoder",
    "keywords": "Interface IMediaEncoder Interface IMediaEncoder Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface IMediaEncoder Properties DetectPath Declaration [Obsolete(\"Use IFfmpegManager.IFfmpegConfiguration.DetectPath instead.\")] string DetectPath { get; } Property Value Type Description String EncoderPath Declaration [Obsolete(\"Use IFfmpegManager.IFfmpegConfiguration.EncoderPath instead.\")] string EncoderPath { get; } Property Value Type Description String FfmpegCapabilities Declaration [Obsolete(\"Use IFfmpegManager.FfmpegCapabilities instead.\")] FfmpegCapabilities FfmpegCapabilities { get; } Property Value Type Description FfmpegCapabilities FfmpegConfig Declaration [Obsolete(\"Use IFfmpegManager.IFfmpegConfiguration instead.\")] IFfmpegConfiguration FfmpegConfig { get; } Property Value Type Description IFfmpegConfiguration SupportsDiscardCorruptPts Declaration [Obsolete(\"Use IFfmpegManager.FfmpegCapabilities.SupportsDiscardCorruptPts instead.\")] bool SupportsDiscardCorruptPts { get; } Property Value Type Description Boolean SupportsFillWallClockDts Declaration [Obsolete(\"Use IFfmpegManager.FfmpegCapabilities.SupportsFillWallClockDts instead.\")] bool SupportsFillWallClockDts { get; } Property Value Type Description Boolean SupportsSkipList Declaration [Obsolete(\"Use IFfmpegManager.FfmpegCapabilities.SupportsSkipList instead.\")] bool SupportsSkipList { get; } Property Value Type Description Boolean SupportsTempSegmentWriting Declaration [Obsolete(\"Use IFfmpegManager.FfmpegCapabilities.SupportsTempSegmentWriting instead.\")] bool SupportsTempSegmentWriting { get; } Property Value Type Description Boolean SupportsThrottling Declaration [Obsolete(\"Use IFfmpegManager.FfmpegCapabilities.SupportsThrottling instead.\")] bool SupportsThrottling { get; } Property Value Type Description Boolean Methods AllowHardwareAcceleration(CancellationToken) Declaration [Obsolete(\"Use ICodecManager.AllowHardwareAcceleration() instead.\")] Task<bool> AllowHardwareAcceleration(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Boolean > EncodeAudio(EncodingJobOptions, IProgress<Double>, CancellationToken) Encodes the audio. Declaration Task<string> EncodeAudio(EncodingJobOptions options, IProgress<double> progress, CancellationToken cancellationToken) Parameters Type Name Description EncodingJobOptions options The options. IProgress < Double > progress The progress. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > Task. EncodeVideo(EncodingJobOptions, IProgress<Double>, CancellationToken) Encodes the video. Declaration Task<string> EncodeVideo(EncodingJobOptions options, IProgress<double> progress, CancellationToken cancellationToken) Parameters Type Name Description EncodingJobOptions options The options. IProgress < Double > progress The progress. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > Task<System.String>. EscapeSubtitleFilterPath(ReadOnlySpan<Char>) Escapes the subtitle filter path. Declaration [Obsolete(\"Use static method EncodingHelpers.EscapeSubtitleFilterPath() instead.\")] string EscapeSubtitleFilterPath(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path The path. Returns Type Description String System.String. GetAnalyzeDurationMs(MediaSourceInfo) Declaration [Obsolete(\"Use EncodingHelpers.GetAnalyzeDurationMs instead.\")] int GetAnalyzeDurationMs(MediaSourceInfo mediaSource) Parameters Type Name Description MediaSourceInfo mediaSource Returns Type Description Int32 GetInputArgument(ReadOnlySpan<Char>, MediaProtocol) Gets the input argument. Declaration [Obsolete(\"Use static method EncodingHelpers.GetInputArgument() instead.\")] string GetInputArgument(ReadOnlySpan<char> inputPath, MediaProtocol protocol) Parameters Type Name Description ReadOnlySpan < Char > inputPath The input path. MediaProtocol protocol The protocol. Returns Type Description String System.String. GetTimeParameter(Int64) Gets the time parameter. Declaration [Obsolete(\"Use static method EncodingHelpers.GetTimeParameter() instead.\")] string GetTimeParameter(long ticks) Parameters Type Name Description Int64 ticks The ticks. Returns Type Description String System.String."
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IMediaImageConverter.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IMediaImageConverter.html",
    "title": "Interface IMediaImageConverter",
    "keywords": "Interface IMediaImageConverter Interface IMediaImageConverter. Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface IMediaImageConverter Methods ConvertImage(String, String) Converts an image via ffmpeg based on file extension. Declaration Task ConvertImage(string inputPath, string outputPath) Parameters Type Name Description String inputPath The input path. String outputPath The output path. Returns Type Description Task A Task. SupportsEncoder(ReadOnlySpan<Char>) Allows checking for a specific ffmpeg encoder. Declaration bool SupportsEncoder(ReadOnlySpan<char> encoder) Parameters Type Name Description ReadOnlySpan < Char > encoder The encoder name. Returns Type Description Boolean A value indicating whether the specified encoder is available."
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IMediaProbeManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IMediaProbeManager.html",
    "title": "Interface IMediaProbeManager",
    "keywords": "Interface IMediaProbeManager Interface IMediaProbeManager. Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface IMediaProbeManager Methods GetMediaInfo(MediaInfoRequest, CancellationToken) Probe the specified media. Declaration Task<MediaInfo> GetMediaInfo(MediaInfoRequest request, CancellationToken cancellationToken) Parameters Type Name Description MediaInfoRequest request The request. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < MediaInfo > Task."
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IStreamInfoManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.IStreamInfoManager.html",
    "title": "Interface IStreamInfoManager",
    "keywords": "Interface IStreamInfoManager Interface IStreamInfoManager. Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface IStreamInfoManager Methods SetDynamicValues(MediaStream) Sets dynamic stream values. Declaration void SetDynamicValues(MediaStream stream) Parameters Type Name Description MediaStream stream The MediaStream ."
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.ISubtitleEncoder.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.ISubtitleEncoder.html",
    "title": "Interface ISubtitleEncoder",
    "keywords": "Interface ISubtitleEncoder Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface ISubtitleEncoder Methods GetSubtitleFileCharacterSet(String, String, MediaProtocol, IDictionary<String, String>, CancellationToken) Gets the subtitle language encoding parameter. Declaration Task<string> GetSubtitleFileCharacterSet(string path, string language, MediaProtocol protocol, IDictionary<string, string> requestHeaders, CancellationToken cancellationToken) Parameters Type Name Description String path The path. String language The language. MediaProtocol protocol The protocol. IDictionary < String , String > requestHeaders The request headers. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > System.String. GetSubtitles(String, MediaProtocol, Boolean, IDictionary<String, String>, MediaStream, String, Int64, Int64, Boolean, EncodingContext, CancellationToken) Gets the subtitles. Declaration Task<string> GetSubtitles(string inputPath, MediaProtocol inputProtocol, bool isAudio, IDictionary<string, string> requestHeaders, MediaStream subtitleStream, string outputFormat, long startTimeTicks, long endTimeTicks, bool preserveOriginalTimestamps, EncodingContext encodingContext, CancellationToken cancellationToken) Parameters Type Name Description String inputPath MediaProtocol inputProtocol Boolean isAudio IDictionary < String , String > requestHeaders MediaStream subtitleStream String outputFormat Int64 startTimeTicks Int64 endTimeTicks Boolean preserveOriginalTimestamps EncodingContext encodingContext CancellationToken cancellationToken Returns Type Description Task < String > Task{Stream}."
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.ISubtitleFontsManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.ISubtitleFontsManager.html",
    "title": "Interface ISubtitleFontsManager",
    "keywords": "Interface ISubtitleFontsManager Interface ISubtitleFontsManager. Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface ISubtitleFontsManager Methods CheckExtractFonts(MediaSourceInfo, CancellationToken) Extracts the video image. Declaration Task<bool> CheckExtractFonts(MediaSourceInfo mediaSource, CancellationToken cancellationToken) Parameters Type Name Description MediaSourceInfo mediaSource The media source. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > True when extraction was successful or fonts are available already; False when extraction has failed. CreateTranscodingFontsDir(MediaSourceInfo, String, CancellationToken) Sets up a directory containing all embedded fonts for transcoding. Declaration Task<bool> CreateTranscodingFontsDir(MediaSourceInfo mediaSource, string targetDir, CancellationToken cancellationToken) Parameters Type Name Description MediaSourceInfo mediaSource The media source. String targetDir CancellationToken cancellationToken The cancellation token. Returns Type Description Task < Boolean > The path to a temporary fonts directory for transcoding. Initialize() Initializes this instance. Declaration void Initialize()"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.ISubtitleOcrDataManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.ISubtitleOcrDataManager.html",
    "title": "Interface ISubtitleOcrDataManager",
    "keywords": "Interface ISubtitleOcrDataManager Interface ISubtitleOcrDataManager. Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public interface ISubtitleOcrDataManager Methods CheckDownloadOcrData(CancellationToken) Extracts the video image. Declaration void CheckDownloadOcrData(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Initialize() Initializes this instance. Declaration void Initialize()"
  },
  "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.MediaInfoRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.MediaEncoding.MediaInfoRequest.html",
    "title": "Class MediaInfoRequest",
    "keywords": "Class MediaInfoRequest Inheritance Object MediaInfoRequest Namespace : MediaBrowser.Controller.MediaEncoding Assembly : MediaBrowser.Controller.dll Syntax public sealed class MediaInfoRequest Properties ExtractChapters Declaration public bool ExtractChapters { get; set; } Property Value Type Description Boolean MediaSource Declaration public MediaSourceInfo MediaSource { get; set; } Property Value Type Description MediaSourceInfo MediaType Declaration public DlnaProfileType MediaType { get; set; } Property Value Type Description DlnaProfileType"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.AuthenticatedAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.AuthenticatedAttribute.html",
    "title": "Class AuthenticatedAttribute",
    "keywords": "Class AuthenticatedAttribute Inheritance Object Attribute AuthenticatedAttribute Implements IHasRequestFilter IAuthenticationAttributes Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public sealed class AuthenticatedAttribute : Attribute, IHasRequestFilter, IAuthenticationAttributes Properties AllowBeforeStartupWizard Gets or sets a value indicating whether [allow before startup wizard]. Declaration public bool AllowBeforeStartupWizard { get; set; } Property Value Type Description Boolean true if [allow before startup wizard]; otherwise, false . AllowInNetwork Declaration public bool AllowInNetwork { get; set; } Property Value Type Description Boolean AllowLocal Declaration public bool AllowLocal { get; set; } Property Value Type Description Boolean AllowLocalOnly Declaration public bool AllowLocalOnly { get; set; } Property Value Type Description Boolean AuthService Declaration public static IAuthService AuthService { get; set; } Property Value Type Description IAuthService Roles Gets or sets the roles. Declaration public string Roles { get; set; } Property Value Type Description String The roles. Methods GetRoles() Declaration public string[] GetRoles() Returns Type Description String [] RequestFilter(IRequest, IResponse, Object, CancellationToken) The request filter is executed before the service. Declaration public Task RequestFilter(IRequest request, IResponse response, object requestDto, CancellationToken cancellationToken) Parameters Type Name Description IRequest request The http request wrapper IResponse response The http response wrapper Object requestDto The request DTO CancellationToken cancellationToken The cancellation token. Returns Type Description Task Implements IHasRequestFilter IAuthenticationAttributes"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.AuthorizationInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.AuthorizationInfo.html",
    "title": "Class AuthorizationInfo",
    "keywords": "Class AuthorizationInfo Inheritance Object AuthorizationInfo Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public sealed class AuthorizationInfo Properties Client Gets or sets the client. Declaration public string Client { get; set; } Property Value Type Description String The client. Device Gets or sets the device. Declaration public string Device { get; set; } Property Value Type Description String The device. DeviceId Declaration public long DeviceId { get; set; } Property Value Type Description Int64 ReportedDeviceId Gets or sets the device identifier. Declaration public string ReportedDeviceId { get; set; } Property Value Type Description String The device identifier. Token Gets or sets the token. Declaration public string Token { get; set; } Property Value Type Description String The token. User Declaration public User User { get; set; } Property Value Type Description User UserId Gets or sets the user identifier. Declaration public long UserId { get; } Property Value Type Description Int64 The user identifier. Version Gets or sets the version. Declaration public string Version { get; set; } Property Value Type Description String The version."
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.BasePeriodicWebSocketListener-2.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.BasePeriodicWebSocketListener-2.html",
    "title": "Class BasePeriodicWebSocketListener<TReturnDataType, TStateType>",
    "keywords": "Class BasePeriodicWebSocketListener<TReturnDataType, TStateType> Starts sending data over a web socket periodically when a message is received, and then stops when a corresponding stop message is received Inheritance Object BasePeriodicWebSocketListener<TReturnDataType, TStateType> Implements IWebSocketListener IDisposable Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public abstract class BasePeriodicWebSocketListener<TReturnDataType, TStateType> : IWebSocketListener, IDisposable where TReturnDataType : class where TStateType : WebSocketListenerState, new() Type Parameters Name Description TReturnDataType The type of the T return data type. TStateType The type of the T state type. Constructors BasePeriodicWebSocketListener(ILogger) Declaration protected BasePeriodicWebSocketListener(ILogger logger) Parameters Type Name Description ILogger logger Fields ActiveConnections The _active connections Declaration protected readonly List<Tuple<IWebSocketConnection, CancellationTokenSource, TStateType>> ActiveConnections Field Value Type Description List < Tuple < IWebSocketConnection , CancellationTokenSource , TStateType>> Logger The logger Declaration protected ILogger Logger Field Value Type Description ILogger Properties Name Gets the name. Declaration protected abstract string Name { get; } Property Value Type Description String The name. SendOnInitialConnection Declaration protected virtual bool SendOnInitialConnection { get; } Property Value Type Description Boolean Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool dispose) Parameters Type Name Description Boolean dispose true to release both managed and unmanaged resources; false to release only unmanaged resources. GetActiveConnectionsToSendTo(Boolean) Declaration protected List<Tuple<IWebSocketConnection, CancellationTokenSource, TStateType>> GetActiveConnectionsToSendTo(bool force) Parameters Type Name Description Boolean force Returns Type Description List < Tuple < IWebSocketConnection , CancellationTokenSource , TStateType>> GetDataToSend(IWebSocketConnection, TStateType, CancellationToken) Gets the data to send. Declaration protected abstract Task<TReturnDataType> GetDataToSend(IWebSocketConnection connection, TStateType state, CancellationToken cancellationToken) Parameters Type Name Description IWebSocketConnection connection TStateType state The state. CancellationToken cancellationToken The cancellation token. Returns Type Description Task <TReturnDataType> Task{`1}. ParseMessageParams(String[], TStateType) Declaration protected virtual void ParseMessageParams(string[] values, TStateType state) Parameters Type Name Description String [] values TStateType state ProcessMessage(WebSocketMessageInfo) Processes the message. Declaration public Task ProcessMessage(WebSocketMessageInfo message) Parameters Type Name Description WebSocketMessageInfo message The message. Returns Type Description Task Task. SendData(Boolean) Declaration protected void SendData(bool force) Parameters Type Name Description Boolean force SendData(Tuple<IWebSocketConnection, CancellationTokenSource, TStateType>, TReturnDataType) Declaration protected async Task SendData(Tuple<IWebSocketConnection, CancellationTokenSource, TStateType> tuple, TReturnDataType data) Parameters Type Name Description Tuple < IWebSocketConnection , CancellationTokenSource , TStateType> tuple TReturnDataType data Returns Type Description Task Implements IWebSocketListener System.IDisposable"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.html",
    "title": "Namespace MediaBrowser.Controller.Net",
    "keywords": "Namespace MediaBrowser.Controller.Net Classes AuthenticatedAttribute AuthorizationInfo BasePeriodicWebSocketListener<TReturnDataType, TStateType> Starts sending data over a web socket periodically when a message is received, and then stops when a corresponding stop message is received SecurityException StaticFileResultOptions StaticResultOptions WebSocketConnectingEventArgs WebSocketListenerState WebSocketMessageInfo Class WebSocketMessageInfo Interfaces IAuthenticationAttributes IAuthorizationContext IAuthService IHasResultFactory Interface IHasResultFactory Services that require a ResultFactory should implement this IHttpResultFactory Interface IHttpResultFactory IHttpServer Interface IHttpServer ISessionContext IWebSocketConnection IWebSocketListener This is an interface for listening to messages coming through a web socket connection Enums SecurityExceptionType"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.IAuthenticationAttributes.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.IAuthenticationAttributes.html",
    "title": "Interface IAuthenticationAttributes",
    "keywords": "Interface IAuthenticationAttributes Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public interface IAuthenticationAttributes Properties AllowBeforeStartupWizard Declaration bool AllowBeforeStartupWizard { get; } Property Value Type Description Boolean AllowInNetwork Declaration bool AllowInNetwork { get; } Property Value Type Description Boolean AllowLocal Declaration bool AllowLocal { get; } Property Value Type Description Boolean AllowLocalOnly Declaration bool AllowLocalOnly { get; } Property Value Type Description Boolean Methods GetRoles() Declaration string[] GetRoles() Returns Type Description String []"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.IAuthorizationContext.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.IAuthorizationContext.html",
    "title": "Interface IAuthorizationContext",
    "keywords": "Interface IAuthorizationContext Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public interface IAuthorizationContext Methods GetAuthorizationInfo(IRequest) Gets the authorization information. Declaration AuthorizationInfo GetAuthorizationInfo(IRequest requestContext) Parameters Type Name Description IRequest requestContext The request context. Returns Type Description AuthorizationInfo AuthorizationInfo. GetAuthorizationInfo(Object) Gets the authorization information. Declaration AuthorizationInfo GetAuthorizationInfo(object requestContext) Parameters Type Name Description Object requestContext The request context. Returns Type Description AuthorizationInfo AuthorizationInfo."
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.IAuthService.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.IAuthService.html",
    "title": "Interface IAuthService",
    "keywords": "Interface IAuthService Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public interface IAuthService Methods Authenticate(IRequest, IAuthenticationAttributes, CancellationToken) Declaration Task Authenticate(IRequest request, IAuthenticationAttributes authAttribtues, CancellationToken cancellationToken) Parameters Type Name Description IRequest request IAuthenticationAttributes authAttribtues CancellationToken cancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.IHasResultFactory.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.IHasResultFactory.html",
    "title": "Interface IHasResultFactory",
    "keywords": "Interface IHasResultFactory Interface IHasResultFactory Services that require a ResultFactory should implement this Inherited Members IRequiresRequest.Request Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public interface IHasResultFactory : IRequiresRequest Properties ResultFactory Gets or sets the result factory. Declaration IHttpResultFactory ResultFactory { get; set; } Property Value Type Description IHttpResultFactory The result factory."
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.IHttpResultFactory.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.IHttpResultFactory.html",
    "title": "Interface IHttpResultFactory",
    "keywords": "Interface IHttpResultFactory Interface IHttpResultFactory Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public interface IHttpResultFactory Methods GetRedirectResult(String) Declaration object GetRedirectResult(string url) Parameters Type Name Description String url Returns Type Description Object GetResult(IRequest, Stream, String, IDictionary<String, String>) Declaration object GetResult(IRequest requestContext, Stream content, string contentType, IDictionary<string, string> responseHeaders = null) Parameters Type Name Description IRequest requestContext Stream content String contentType IDictionary < String , String > responseHeaders Returns Type Description Object GetResult(IRequest, ReadOnlyMemory<Byte>, String, IDictionary<String, String>) Gets the result. Declaration object GetResult(IRequest requestContext, ReadOnlyMemory<byte> content, string contentType, IDictionary<string, string> responseHeaders = null) Parameters Type Name Description IRequest requestContext ReadOnlyMemory < Byte > content String contentType IDictionary < String , String > responseHeaders Returns Type Description Object GetResult(IRequest, ReadOnlySpan<Char>, String, IDictionary<String, String>) Declaration object GetResult(IRequest requestContext, ReadOnlySpan<char> content, string contentType, IDictionary<string, string> responseHeaders = null) Parameters Type Name Description IRequest requestContext ReadOnlySpan < Char > content String contentType IDictionary < String , String > responseHeaders Returns Type Description Object GetResult(ReadOnlySpan<Char>, String, IDictionary<String, String>) Declaration object GetResult(ReadOnlySpan<char> content, string contentType, IDictionary<string, string> responseHeaders = null) Parameters Type Name Description ReadOnlySpan < Char > content String contentType IDictionary < String , String > responseHeaders Returns Type Description Object GetResult<T>(IRequest, T, IDictionary<String, String>) Declaration object GetResult<T>(IRequest requestContext, T result, IDictionary<string, string> responseHeaders = null) where T : class Parameters Type Name Description IRequest requestContext T result IDictionary < String , String > responseHeaders Returns Type Description Object Type Parameters Name Description T GetStaticFileResult(IRequest, StaticFileResultOptions) Gets the static file result. Declaration Task<object> GetStaticFileResult(IRequest requestContext, StaticFileResultOptions options) Parameters Type Name Description IRequest requestContext The request context. StaticFileResultOptions options The options. Returns Type Description Task < Object > System.Object. GetStaticFileResult(IRequest, String, FileShareMode) Gets the static file result. Declaration Task<object> GetStaticFileResult(IRequest requestContext, string path, FileShareMode fileShare = FileShareMode.Read) Parameters Type Name Description IRequest requestContext The request context. String path The path. FileShareMode fileShare The file share. Returns Type Description Task < Object > System.Object. GetStaticResult(IRequest, StaticResultOptions) Gets the static result. Declaration Task<object> GetStaticResult(IRequest requestContext, StaticResultOptions options) Parameters Type Name Description IRequest requestContext The request context. StaticResultOptions options The options. Returns Type Description Task < Object > System.Object. GetStaticResult(IRequest, Guid, Nullable<DateTimeOffset>, Nullable<TimeSpan>, String, Func<Int64, Int64, CancellationToken, Task<StreamHandler>>, IDictionary<String, String>, Boolean) Gets the static result. Declaration Task<object> GetStaticResult(IRequest requestContext, Guid cacheKey, DateTimeOffset? lastDateModified, TimeSpan? cacheDuration, string contentType, Func<long, long, CancellationToken, Task<StreamHandler>> contentFactory, IDictionary<string, string> responseHeaders = null, bool isHeadRequest = false) Parameters Type Name Description IRequest requestContext Guid cacheKey Nullable < DateTimeOffset > lastDateModified Nullable < TimeSpan > cacheDuration String contentType Func < Int64 , Int64 , CancellationToken , Task < StreamHandler >> contentFactory IDictionary < String , String > responseHeaders Boolean isHeadRequest Returns Type Description Task < Object >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.IHttpServer.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.IHttpServer.html",
    "title": "Interface IHttpServer",
    "keywords": "Interface IHttpServer Interface IHttpServer Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public interface IHttpServer : IDisposable Properties GlobalResponse Declaration string GlobalResponse { get; set; } Property Value Type Description String Methods AddParts(IEnumerable<IService>, IEnumerable<IWebSocketListener>) Declaration void AddParts(IEnumerable<IService> services, IEnumerable<IWebSocketListener> listeners) Parameters Type Name Description IEnumerable < IService > services IEnumerable < IWebSocketListener > listeners Stop() Stops this instance. Declaration void Stop() Events WebSocketConnected Occurs when [web socket connected]. Declaration event EventHandler<GenericEventArgs<IWebSocketConnection>> WebSocketConnected Event Type Type Description EventHandler < GenericEventArgs < IWebSocketConnection >>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.ISessionContext.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.ISessionContext.html",
    "title": "Interface ISessionContext",
    "keywords": "Interface ISessionContext Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public interface ISessionContext Methods GetSession(IRequest) Declaration SessionInfo GetSession(IRequest requestContext) Parameters Type Name Description IRequest requestContext Returns Type Description SessionInfo GetSession(Object) Declaration SessionInfo GetSession(object requestContext) Parameters Type Name Description Object requestContext Returns Type Description SessionInfo GetUser(IRequest) Declaration User GetUser(IRequest requestContext) Parameters Type Name Description IRequest requestContext Returns Type Description User GetUser(Object) Declaration User GetUser(object requestContext) Parameters Type Name Description Object requestContext Returns Type Description User"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.IWebSocketConnection.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.IWebSocketConnection.html",
    "title": "Interface IWebSocketConnection",
    "keywords": "Interface IWebSocketConnection Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public interface IWebSocketConnection : IDisposable Properties Id Gets the id. Declaration Guid Id { get; } Property Value Type Description Guid The id. LastActivityDate Gets the last activity date. Declaration DateTimeOffset LastActivityDate { get; } Property Value Type Description DateTimeOffset The last activity date. OnReceive Gets or sets the receive action. Declaration Func<WebSocketMessageInfo, Task> OnReceive { get; set; } Property Value Type Description Func < WebSocketMessageInfo , Task > The receive action. QueryString Gets or sets the query string. Declaration QueryParamCollection QueryString { get; set; } Property Value Type Description QueryParamCollection The query string. RemoteAddress Gets the remote end point. Declaration IPAddress RemoteAddress { get; } Property Value Type Description IPAddress The remote end point. State Gets the state. Declaration WebSocketState State { get; } Property Value Type Description WebSocketState The state. Url Gets or sets the URL. Declaration string Url { get; set; } Property Value Type Description String The URL. User Declaration User User { get; } Property Value Type Description User Methods SendAsync(ReadOnlyMemory<Byte>, CancellationToken) Sends a message asynchronously. Declaration Task SendAsync(ReadOnlyMemory<byte> buffer, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Byte > buffer The buffer. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. SendAsync(ReadOnlyMemory<Char>, CancellationToken) Sends a message asynchronously. Declaration Task SendAsync(ReadOnlyMemory<char> text, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Char > text The text. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. Exceptions Type Condition ArgumentNullException buffer SendAsync<T>(WebSocketMessage<T>, CancellationToken) Sends a message asynchronously. Declaration Task SendAsync<T>(WebSocketMessage<T> message, CancellationToken cancellationToken) Parameters Type Name Description WebSocketMessage <T> message The message. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. Type Parameters Name Description T Exceptions Type Condition ArgumentNullException message Events Closed Occurs when [closed]. Declaration event EventHandler<EventArgs> Closed Event Type Type Description EventHandler < EventArgs >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.IWebSocketListener.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.IWebSocketListener.html",
    "title": "Interface IWebSocketListener",
    "keywords": "Interface IWebSocketListener This is an interface for listening to messages coming through a web socket connection Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public interface IWebSocketListener Methods ProcessMessage(WebSocketMessageInfo) Processes the message. Declaration Task ProcessMessage(WebSocketMessageInfo message) Parameters Type Name Description WebSocketMessageInfo message The message. Returns Type Description Task Task."
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.SecurityException.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.SecurityException.html",
    "title": "Class SecurityException",
    "keywords": "Class SecurityException Inheritance Object Exception SecurityException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public sealed class SecurityException : Exception, ISerializable Constructors SecurityException(String, SecurityExceptionType) Declaration public SecurityException(string message, SecurityExceptionType exceptionType = SecurityExceptionType.Generic) Parameters Type Name Description String message SecurityExceptionType exceptionType Properties SecurityExceptionType Declaration public SecurityExceptionType SecurityExceptionType { get; set; } Property Value Type Description SecurityExceptionType Implements System.Runtime.Serialization.ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.SecurityExceptionType.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.SecurityExceptionType.html",
    "title": "Enum SecurityExceptionType",
    "keywords": "Enum SecurityExceptionType Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public enum SecurityExceptionType Fields Name Description Generic ParentalControl Unauthenticated Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SecurityExceptionType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.StaticFileResultOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.StaticFileResultOptions.html",
    "title": "Class StaticFileResultOptions",
    "keywords": "Class StaticFileResultOptions Inheritance Object StaticResultOptions StaticFileResultOptions Inherited Members StaticResultOptions.ContentType StaticResultOptions.CacheDuration StaticResultOptions.DateLastModified StaticResultOptions.CacheKey StaticResultOptions.ContentFactory StaticResultOptions.IsHeadRequest StaticResultOptions.ResponseHeaders StaticResultOptions.OnComplete StaticResultOptions.OnError StaticResultOptions.Path StaticResultOptions.RequestHeaders StaticResultOptions.ContentLength StaticResultOptions.ForcePartialFileCopy StaticResultOptions.FileShare Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public sealed class StaticFileResultOptions : StaticResultOptions"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.StaticResultOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.StaticResultOptions.html",
    "title": "Class StaticResultOptions",
    "keywords": "Class StaticResultOptions Inheritance Object StaticResultOptions StaticFileResultOptions Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public class StaticResultOptions Constructors StaticResultOptions() Declaration public StaticResultOptions() Properties CacheDuration Declaration public TimeSpan? CacheDuration { get; set; } Property Value Type Description Nullable < TimeSpan > CacheKey Declaration public Guid CacheKey { get; set; } Property Value Type Description Guid ContentFactory Declaration public Func<long, long, CancellationToken, Task<StreamHandler>> ContentFactory { get; set; } Property Value Type Description Func < Int64 , Int64 , CancellationToken , Task < StreamHandler >> ContentLength Declaration public long? ContentLength { get; set; } Property Value Type Description Nullable < Int64 > ContentType Declaration public string ContentType { get; set; } Property Value Type Description String DateLastModified Declaration public DateTimeOffset? DateLastModified { get; set; } Property Value Type Description Nullable < DateTimeOffset > FileShare Declaration public FileShareMode FileShare { get; set; } Property Value Type Description FileShareMode ForcePartialFileCopy Declaration public bool ForcePartialFileCopy { get; set; } Property Value Type Description Boolean IsHeadRequest Declaration public bool IsHeadRequest { get; set; } Property Value Type Description Boolean OnComplete Declaration public Action OnComplete { get; set; } Property Value Type Description Action OnError Declaration public Action OnError { get; set; } Property Value Type Description Action Path Declaration public string Path { get; set; } Property Value Type Description String RequestHeaders Declaration public IDictionary<string, string> RequestHeaders { get; set; } Property Value Type Description IDictionary < String , String > ResponseHeaders Declaration public IDictionary<string, string> ResponseHeaders { get; set; } Property Value Type Description IDictionary < String , String >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.WebSocketConnectingEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.WebSocketConnectingEventArgs.html",
    "title": "Class WebSocketConnectingEventArgs",
    "keywords": "Class WebSocketConnectingEventArgs Inheritance Object EventArgs WebSocketConnectingEventArgs Inherited Members EventArgs.Empty Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public sealed class WebSocketConnectingEventArgs : EventArgs Constructors WebSocketConnectingEventArgs() Declaration public WebSocketConnectingEventArgs() Properties AllowConnection Gets or sets a value indicating whether [allow connection]. Declaration public bool AllowConnection { get; set; } Property Value Type Description Boolean true if [allow connection]; otherwise, false . QueryString Gets or sets the query string. Declaration public QueryParamCollection QueryString { get; set; } Property Value Type Description QueryParamCollection The query string. RemoteAddress Gets or sets the endpoint. Declaration public IPAddress RemoteAddress { get; set; } Property Value Type Description IPAddress The endpoint. Url Gets or sets the URL. Declaration public string Url { get; set; } Property Value Type Description String The URL."
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.WebSocketListenerState.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.WebSocketListenerState.html",
    "title": "Class WebSocketListenerState",
    "keywords": "Class WebSocketListenerState Inheritance Object WebSocketListenerState Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public class WebSocketListenerState Properties DateLastSendUtc Declaration public DateTimeOffset DateLastSendUtc { get; set; } Property Value Type Description DateTimeOffset IntervalMs Declaration public long IntervalMs { get; set; } Property Value Type Description Int64"
  },
  "reference/pluginapi/MediaBrowser.Controller.Net.WebSocketMessageInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Net.WebSocketMessageInfo.html",
    "title": "Class WebSocketMessageInfo",
    "keywords": "Class WebSocketMessageInfo Class WebSocketMessageInfo Inheritance Object WebSocketMessage < String > WebSocketMessageInfo Inherited Members WebSocketMessage<String>.MessageType WebSocketMessage<String>.MessageId WebSocketMessage<String>.ServerId WebSocketMessage<String>.Data Namespace : MediaBrowser.Controller.Net Assembly : MediaBrowser.Controller.dll Syntax public sealed class WebSocketMessageInfo : WebSocketMessage<string> Properties Connection Gets or sets the connection. Declaration public IWebSocketConnection Connection { get; set; } Property Value Type Description IWebSocketConnection The connection."
  },
  "reference/pluginapi/MediaBrowser.Controller.Notifications.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Notifications.html",
    "title": "Namespace MediaBrowser.Controller.Notifications",
    "keywords": "Namespace MediaBrowser.Controller.Notifications Classes UserNotification Interfaces INotificationManager INotificationService INotificationTypeFactory"
  },
  "reference/pluginapi/MediaBrowser.Controller.Notifications.INotificationManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Notifications.INotificationManager.html",
    "title": "Interface INotificationManager",
    "keywords": "Interface INotificationManager Namespace : MediaBrowser.Controller.Notifications Assembly : MediaBrowser.Controller.dll Syntax public interface INotificationManager Methods AddParts(IEnumerable<INotificationService>, IEnumerable<INotificationTypeFactory>) Adds the parts. Declaration void AddParts(IEnumerable<INotificationService> services, IEnumerable<INotificationTypeFactory> notificationTypeFactories) Parameters Type Name Description IEnumerable < INotificationService > services The services. IEnumerable < INotificationTypeFactory > notificationTypeFactories The notification type factories. GetNotificationServices() Gets the notification services. Declaration IEnumerable<NameIdPair> GetNotificationServices() Returns Type Description IEnumerable < NameIdPair > IEnumerable{NotificationServiceInfo}. GetNotificationTypes() Gets the notification types. Declaration List<NotificationTypeInfo> GetNotificationTypes() Returns Type Description List < NotificationTypeInfo > IEnumerable{NotificationTypeInfo}. SendNotification(NotificationRequest, BaseItem, CancellationToken) Declaration Task SendNotification(NotificationRequest request, BaseItem relatedItem, CancellationToken cancellationToken) Parameters Type Name Description NotificationRequest request BaseItem relatedItem CancellationToken cancellationToken Returns Type Description Task SendNotification(NotificationRequest, CancellationToken) Sends the notification. Declaration Task SendNotification(NotificationRequest request, CancellationToken cancellationToken) Parameters Type Name Description NotificationRequest request The request. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task."
  },
  "reference/pluginapi/MediaBrowser.Controller.Notifications.INotificationService.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Notifications.INotificationService.html",
    "title": "Interface INotificationService",
    "keywords": "Interface INotificationService Namespace : MediaBrowser.Controller.Notifications Assembly : MediaBrowser.Controller.dll Syntax public interface INotificationService Properties Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. Methods IsEnabledForUser(User) Determines whether [is enabled for user] [the specified user identifier]. Declaration bool IsEnabledForUser(User user) Parameters Type Name Description User user The user. Returns Type Description Boolean true if [is enabled for user] [the specified user identifier]; otherwise, false . SendNotification(UserNotification, CancellationToken) Sends the notification. Declaration Task SendNotification(UserNotification request, CancellationToken cancellationToken) Parameters Type Name Description UserNotification request The request. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task."
  },
  "reference/pluginapi/MediaBrowser.Controller.Notifications.INotificationTypeFactory.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Notifications.INotificationTypeFactory.html",
    "title": "Interface INotificationTypeFactory",
    "keywords": "Interface INotificationTypeFactory Namespace : MediaBrowser.Controller.Notifications Assembly : MediaBrowser.Controller.dll Syntax public interface INotificationTypeFactory Methods GetNotificationTypes() Gets the notification types. Declaration IEnumerable<NotificationTypeInfo> GetNotificationTypes() Returns Type Description IEnumerable < NotificationTypeInfo > IEnumerable{NotificationTypeInfo}."
  },
  "reference/pluginapi/MediaBrowser.Controller.Notifications.UserNotification.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Notifications.UserNotification.html",
    "title": "Class UserNotification",
    "keywords": "Class UserNotification Inheritance Object UserNotification Namespace : MediaBrowser.Controller.Notifications Assembly : MediaBrowser.Controller.dll Syntax public sealed class UserNotification Properties Date Declaration public DateTimeOffset Date { get; set; } Property Value Type Description DateTimeOffset Description Declaration public string Description { get; set; } Property Value Type Description String Level Declaration public NotificationLevel Level { get; set; } Property Value Type Description NotificationLevel Name Declaration public string Name { get; set; } Property Value Type Description String Url Declaration public string Url { get; set; } Property Value Type Description String User Declaration public User User { get; set; } Property Value Type Description User"
  },
  "reference/pluginapi/MediaBrowser.Controller.Persistence.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Persistence.html",
    "title": "Namespace MediaBrowser.Controller.Persistence",
    "keywords": "Namespace MediaBrowser.Controller.Persistence Classes IntroDebugInfo ItemTaggedEvent MediaStreamQuery Interfaces IDisplayPreferencesRepository Interface IDisplayPreferencesRepository IItemRepository Provides an interface to implement an Item repository IRepository Provides a base interface for all the repository interfaces IUserDataRepository Provides an interface to implement a UserData repository IUserRepository Provides an interface to implement a User repository"
  },
  "reference/pluginapi/MediaBrowser.Controller.Persistence.IDisplayPreferencesRepository.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Persistence.IDisplayPreferencesRepository.html",
    "title": "Interface IDisplayPreferencesRepository",
    "keywords": "Interface IDisplayPreferencesRepository Interface IDisplayPreferencesRepository Inherited Members IRepository.Name IDisposable.Dispose() Namespace : MediaBrowser.Controller.Persistence Assembly : MediaBrowser.Controller.dll Syntax public interface IDisplayPreferencesRepository : IRepository, IDisposable Methods GetAllDisplayPreferences(Guid) Gets all display preferences for the given user. Declaration IEnumerable<DisplayPreferences> GetAllDisplayPreferences(Guid userId) Parameters Type Name Description Guid userId The user id. Returns Type Description IEnumerable < DisplayPreferences > Task{DisplayPreferences}. GetDisplayPreferences(String, Guid, String) Gets the display preferences. Declaration DisplayPreferences GetDisplayPreferences(string displayPreferencesId, Guid userId, string client) Parameters Type Name Description String displayPreferencesId The display preferences id. Guid userId The user id. String client The client. Returns Type Description DisplayPreferences Task{DisplayPreferences}. SaveAllDisplayPreferences(IEnumerable<DisplayPreferences>, Guid, CancellationToken) Saves all display preferences for a user Declaration void SaveAllDisplayPreferences(IEnumerable<DisplayPreferences> displayPreferences, Guid userId, CancellationToken cancellationToken) Parameters Type Name Description IEnumerable < DisplayPreferences > displayPreferences The display preferences. Guid userId The user id. CancellationToken cancellationToken The cancellation token. SaveDisplayPreferences(DisplayPreferences, Guid, String, CancellationToken) Saves display preferences for an item Declaration void SaveDisplayPreferences(DisplayPreferences displayPreferences, Guid userId, string client, CancellationToken cancellationToken) Parameters Type Name Description DisplayPreferences displayPreferences The display preferences. Guid userId The user id. String client The client. CancellationToken cancellationToken The cancellation token."
  },
  "reference/pluginapi/MediaBrowser.Controller.Persistence.IItemRepository.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Persistence.IItemRepository.html",
    "title": "Interface IItemRepository",
    "keywords": "Interface IItemRepository Provides an interface to implement an Item repository Inherited Members IRepository.Name IDisposable.Dispose() Namespace : MediaBrowser.Controller.Persistence Assembly : MediaBrowser.Controller.dll Syntax public interface IItemRepository : IRepository, IDisposable Properties LiveTvViewId Declaration long LiveTvViewId { get; set; } Property Value Type Description Int64 Methods AddDatabase(ILibraryDatabase) Declaration void AddDatabase(ILibraryDatabase db) Parameters Type Name Description ILibraryDatabase db AddListItems(BaseItem, ListItem[], Boolean) Declaration bool AddListItems(BaseItem list, ListItem[] items, bool uniqueByItemId) Parameters Type Name Description BaseItem list ListItem [] items Boolean uniqueByItemId Returns Type Description Boolean CleanPrograms() Declaration void CleanPrograms() DeleteChannels(Int64[]) Declaration void DeleteChannels(long[] idsToDelete) Parameters Type Name Description Int64 [] idsToDelete DeleteChapters(Int64, MarkerType[]) Declaration void DeleteChapters(long itemId, MarkerType[] markerTypes) Parameters Type Name Description Int64 itemId MarkerType [] markerTypes DeleteItems(BaseItem[]) Deletes the item. Declaration void DeleteItems(BaseItem[] item) Parameters Type Name Description BaseItem [] item DeleteItems(Int64[]) Declaration void DeleteItems(long[] ids) Parameters Type Name Description Int64 [] ids GetArtistPrefixes(InternalItemsQuery, ItemLinkType[]) Declaration string[] GetArtistPrefixes(InternalItemsQuery query, ItemLinkType[] artistTypes) Parameters Type Name Description InternalItemsQuery query ItemLinkType [] artistTypes Returns Type Description String [] GetArtists(InternalItemsQuery, ItemLinkType[]) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetArtists(InternalItemsQuery query, ItemLinkType[] artistTypes) Parameters Type Name Description InternalItemsQuery query ItemLinkType [] artistTypes Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetAudioCodecs(InternalItemsQuery) Declaration QueryResult<string> GetAudioCodecs(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < String > GetChapter(Int64, Int32) Gets a single chapter for an item Declaration ChapterInfo GetChapter(long itemId, int index) Parameters Type Name Description Int64 itemId The item identifier. Int32 index The index. Returns Type Description ChapterInfo GetChapters(BaseItem) Gets chapters for an item Declaration List<ChapterInfo> GetChapters(BaseItem item) Parameters Type Name Description BaseItem item The item. Returns Type Description List < ChapterInfo > GetChapters(Int64, MarkerType[]) Declaration List<ChapterInfo> GetChapters(long itemId, MarkerType[] markerTypes) Parameters Type Name Description Int64 itemId MarkerType [] markerTypes Returns Type Description List < ChapterInfo > GetContainers(InternalItemsQuery) Declaration QueryResult<string> GetContainers(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < String > GetCount(InternalItemsQuery) Declaration int GetCount(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int32 GetExternalSubtitleFiles(Int64) Declaration List<string> GetExternalSubtitleFiles(long itemId) Parameters Type Name Description Int64 itemId Returns Type Description List < String > GetGameGenres(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetGameGenres(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetGenres(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetGenres(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetGuid(Int64) Declaration Guid GetGuid(long id) Parameters Type Name Description Int64 id Returns Type Description Guid GetGuidAndPath(Int64) Declaration Tuple<Guid, string> GetGuidAndPath(long itemId) Parameters Type Name Description Int64 itemId Returns Type Description Tuple < Guid , String > GetIdGuidPairs(InternalItemsQuery) Declaration (long, Guid)[] GetIdGuidPairs(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description (T1, T2) < Int64 , Guid >[] GetImageInfo(Int64, ImageType, Int32) Declaration ItemImageInfo GetImageInfo(long itemId, ImageType imageType, int index) Parameters Type Name Description Int64 itemId ImageType imageType Int32 index Returns Type Description ItemImageInfo GetImportedCollections(Int64) Declaration LinkedItemInfo[] GetImportedCollections(long itemId) Parameters Type Name Description Int64 itemId Returns Type Description LinkedItemInfo [] GetInternalId(Guid) Declaration long GetInternalId(Guid guid) Parameters Type Name Description Guid guid Returns Type Description Int64 GetInternalItemIdsList(InternalItemsQuery) Declaration long[] GetInternalItemIdsList(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] GetIntroDetectionFailureResult(Int64) Declaration string GetIntroDetectionFailureResult(long itemId) Parameters Type Name Description Int64 itemId Returns Type Description String GetIntrosDebugInfo() Declaration List<IntroDebugInfo> GetIntrosDebugInfo() Returns Type Description List < IntroDebugInfo > GetItemByGuid(Guid) Declaration BaseItem GetItemByGuid(Guid id) Parameters Type Name Description Guid id Returns Type Description BaseItem GetItemById(Int64) Declaration BaseItem GetItemById(long id) Parameters Type Name Description Int64 id Returns Type Description BaseItem GetItemIdsList(InternalItemsQuery) Gets the item ids list. Declaration Guid[] GetItemIdsList(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query The query. Returns Type Description Guid [] List<Guid>. GetItemLinks(Int64, List<ItemLinkType>) Declaration List<(ItemLinkType, string, long)> GetItemLinks(long itemId, List<ItemLinkType> types) Parameters Type Name Description Int64 itemId List < ItemLinkType > types Returns Type Description List < (T1, T2, T3) < ItemLinkType , String , Int64 >> GetItemList(InternalItemsQuery) Gets the item list. Declaration BaseItem[] GetItemList(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query The query. Returns Type Description BaseItem [] List<BaseItem>. GetItemPeople(InternalPeopleQuery) Gets the people. Declaration List<PersonInfo> GetItemPeople(InternalPeopleQuery query) Parameters Type Name Description InternalPeopleQuery query The query. Returns Type Description List < PersonInfo > List<PersonInfo>. GetItems(InternalItemsQuery) Gets the items. Declaration QueryResult<BaseItem> GetItems(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query The query. Returns Type Description QueryResult < BaseItem > QueryResult<BaseItem>. GetItemTypes(InternalItemsQuery) Declaration string[] GetItemTypes(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description String [] GetMediaStreams(MediaStreamQuery) Gets the media streams. Declaration List<MediaStream> GetMediaStreams(MediaStreamQuery query) Parameters Type Name Description MediaStreamQuery query The query. Returns Type Description List < MediaStream > GetMusicAlbums(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetMusicAlbums(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetMusicGenres(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetMusicGenres(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetNameIdPairs(InternalItemsQuery) Declaration (string, long)[] GetNameIdPairs(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description (T1, T2) < String , Int64 >[] GetOfficialRatings(InternalItemsQuery) Declaration QueryResult<string> GetOfficialRatings(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < String > GetPaths(InternalItemsQuery) Declaration string[] GetPaths(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description String [] GetPeople(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetPeople(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetPrefixes(InternalItemsQuery) Declaration string[] GetPrefixes(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description String [] GetProviderIds(Int64) Declaration ProviderIdDictionary GetProviderIds(long itemId) Parameters Type Name Description Int64 itemId Returns Type Description ProviderIdDictionary GetStreamLanguages(InternalItemsQuery, MediaStreamType) Declaration QueryResult<string> GetStreamLanguages(InternalItemsQuery query, MediaStreamType streamType) Parameters Type Name Description InternalItemsQuery query MediaStreamType streamType Returns Type Description QueryResult < String > GetStudios(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetStudios(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetSubtitleCodecs(InternalItemsQuery) Declaration QueryResult<string> GetSubtitleCodecs(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < String > GetSubviews(InternalItemsQuery, String) Declaration List<string> GetSubviews(InternalItemsQuery query, string contentType) Parameters Type Name Description InternalItemsQuery query String contentType Returns Type Description List < String > GetTagPrefixes(InternalItemsQuery) Declaration string[] GetTagPrefixes(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description String [] GetTags(InternalItemsQuery) Declaration QueryResult<Tuple<BaseItem, ItemCounts>> GetTags(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Tuple < BaseItem , ItemCounts >> GetThumbnailImageExtractionFailureResult(Int64) Declaration string GetThumbnailImageExtractionFailureResult(long itemId) Parameters Type Name Description Int64 itemId Returns Type Description String GetTopParentIdFromItemLinkId(Int64) Declaration long GetTopParentIdFromItemLinkId(long id) Parameters Type Name Description Int64 id Returns Type Description Int64 GetVideoCodecs(InternalItemsQuery) Declaration QueryResult<string> GetVideoCodecs(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < String > GetYears(InternalItemsQuery) Declaration QueryResult<int> GetYears(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < Int32 > LogIntroDetectionFailureFailure(Int64, Int64) Declaration void LogIntroDetectionFailureFailure(long itemId, long dateModifiedUnixTimeSeconds) Parameters Type Name Description Int64 itemId Int64 dateModifiedUnixTimeSeconds LogThumbnailImageExtractionFailure(Int64, Int64) Declaration void LogThumbnailImageExtractionFailure(long itemId, long dateModifiedTicks) Parameters Type Name Description Int64 itemId Int64 dateModifiedTicks MoveListItem(Int64, Int64, Int32) Declaration void MoveListItem(long listId, long entryId, int newIndex) Parameters Type Name Description Int64 listId Int64 entryId Int32 newIndex RemoveListItemsByItemIds(Int64, Int64[]) Declaration void RemoveListItemsByItemIds(long listId, long[] listItemIds) Parameters Type Name Description Int64 listId Int64 [] listItemIds RemoveListItemsByListItemEntryIds(Int64, Int64[]) Declaration void RemoveListItemsByListItemEntryIds(long listId, long[] listItemIds) Parameters Type Name Description Int64 listId Int64 [] listItemIds SaveChapters(Int64, Boolean, List<ChapterInfo>) Declaration void SaveChapters(long itemId, bool clearExtractionFailureResult, List<ChapterInfo> chapters) Parameters Type Name Description Int64 itemId Boolean clearExtractionFailureResult List < ChapterInfo > chapters SaveChapters(Int64, List<ChapterInfo>) Saves the chapters. Declaration void SaveChapters(long itemId, List<ChapterInfo> chapters) Parameters Type Name Description Int64 itemId List < ChapterInfo > chapters SaveImages(Int64, ItemImageInfo[]) Declaration void SaveImages(long id, ItemImageInfo[] images) Parameters Type Name Description Int64 id ItemImageInfo [] images SaveItem(BaseItem, CancellationToken) Saves an item Declaration void SaveItem(BaseItem item, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item CancellationToken cancellationToken SaveItems(List<BaseItem>, MetadataRefreshOptions, CancellationToken) Declaration void SaveItems(List<BaseItem> items, MetadataRefreshOptions metadataRefreshOptions, CancellationToken cancellationToken) Parameters Type Name Description List < BaseItem > items MetadataRefreshOptions metadataRefreshOptions CancellationToken cancellationToken SaveItems(List<BaseItem>, CancellationToken) Saves the items. Declaration void SaveItems(List<BaseItem> items, CancellationToken cancellationToken) Parameters Type Name Description List < BaseItem > items The items. CancellationToken cancellationToken The cancellation token. SaveMediaStreams(Int64, List<MediaStream>, CancellationToken) Saves the media streams. Declaration void SaveMediaStreams(long itemId, List<MediaStream> streams, CancellationToken cancellationToken) Parameters Type Name Description Int64 itemId The item identifier. List < MediaStream > streams The streams. CancellationToken cancellationToken The cancellation token. SetSortIndexNumbers(List<Tuple<Int64, Int32>>) Declaration void SetSortIndexNumbers(List<Tuple<long, int>> values) Parameters Type Name Description List < Tuple < Int64 , Int32 >> values UpdateListItems(BaseItem, LinkedChild[]) Declaration void UpdateListItems(BaseItem list, LinkedChild[] items) Parameters Type Name Description BaseItem list LinkedChild [] items UpdatePeople(Int64, Int64, List<PersonInfo>) Updates the people. Declaration void UpdatePeople(long itemId, long topParentId, List<PersonInfo> people) Parameters Type Name Description Int64 itemId Int64 topParentId List < PersonInfo > people UpdateProgramsForChannel(BaseItem, List<BaseItem>, DateTimeOffset) Declaration void UpdateProgramsForChannel(BaseItem channel, List<BaseItem> programs, DateTimeOffset timeChannelsSaved) Parameters Type Name Description BaseItem channel List < BaseItem > programs DateTimeOffset timeChannelsSaved Events OnItemTagged Declaration event EventHandler<GenericEventArgs<ItemTaggedEvent>> OnItemTagged Event Type Type Description EventHandler < GenericEventArgs < ItemTaggedEvent >>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Persistence.IntroDebugInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Persistence.IntroDebugInfo.html",
    "title": "Class IntroDebugInfo",
    "keywords": "Class IntroDebugInfo Inheritance Object IntroDebugInfo Namespace : MediaBrowser.Controller.Persistence Assembly : MediaBrowser.Controller.dll Syntax public class IntroDebugInfo Properties End Declaration public long End { get; set; } Property Value Type Description Int64 Id Declaration public long Id { get; set; } Property Value Type Description Int64 Path Declaration public string Path { get; set; } Property Value Type Description String Start Declaration public long Start { get; set; } Property Value Type Description Int64"
  },
  "reference/pluginapi/MediaBrowser.Controller.Persistence.IRepository.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Persistence.IRepository.html",
    "title": "Interface IRepository",
    "keywords": "Interface IRepository Provides a base interface for all the repository interfaces Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Controller.Persistence Assembly : MediaBrowser.Controller.dll Syntax public interface IRepository : IDisposable Properties Name Gets the name of the repository Declaration string Name { get; } Property Value Type Description String The name."
  },
  "reference/pluginapi/MediaBrowser.Controller.Persistence.ItemTaggedEvent.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Persistence.ItemTaggedEvent.html",
    "title": "Class ItemTaggedEvent",
    "keywords": "Class ItemTaggedEvent Inheritance Object ItemTaggedEvent Namespace : MediaBrowser.Controller.Persistence Assembly : MediaBrowser.Controller.dll Syntax public sealed class ItemTaggedEvent Properties IsNew Declaration public bool IsNew { get; set; } Property Value Type Description Boolean MetadataRefreshOptions Declaration public MetadataRefreshOptions MetadataRefreshOptions { get; set; } Property Value Type Description MetadataRefreshOptions TaggedItemId Declaration public long TaggedItemId { get; set; } Property Value Type Description Int64 TaggedItemType Declaration public Type TaggedItemType { get; set; } Property Value Type Description Type"
  },
  "reference/pluginapi/MediaBrowser.Controller.Persistence.IUserDataRepository.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Persistence.IUserDataRepository.html",
    "title": "Interface IUserDataRepository",
    "keywords": "Interface IUserDataRepository Provides an interface to implement a UserData repository Inherited Members IRepository.Name IDisposable.Dispose() Namespace : MediaBrowser.Controller.Persistence Assembly : MediaBrowser.Controller.dll Syntax public interface IUserDataRepository : IRepository, IDisposable Methods ClearTrackSelections(Int64, MediaStreamType) Declaration void ClearTrackSelections(long userId, MediaStreamType trackType) Parameters Type Name Description Int64 userId MediaStreamType trackType GetAllUserData(Int64) Return all user data associated with the given user Declaration List<UserItemData> GetAllUserData(long internalUserId) Parameters Type Name Description Int64 internalUserId Returns Type Description List < UserItemData > GetUserData(Int64, Int64, UserDataFields[]) Declaration UserItemData GetUserData(long internalUserId, long itemId, UserDataFields[] fields) Parameters Type Name Description Int64 internalUserId Int64 itemId UserDataFields [] fields Returns Type Description UserItemData SaveAllUserData(Int64, UserItemData[], CancellationToken) Save all user data associated with the given user Declaration void SaveAllUserData(long internalUserId, UserItemData[] userData, CancellationToken cancellationToken) Parameters Type Name Description Int64 internalUserId UserItemData [] userData CancellationToken cancellationToken SaveUserData(Int64, Int64, UserItemData, CancellationToken) Saves the user data. Declaration void SaveUserData(long internalUserId, long itemId, UserItemData userData, CancellationToken cancellationToken) Parameters Type Name Description Int64 internalUserId Int64 itemId UserItemData userData CancellationToken cancellationToken UnhideSeriesFromResume(Int64, String) Declaration void UnhideSeriesFromResume(long userId, string seriesPresentationUniqueKey) Parameters Type Name Description Int64 userId String seriesPresentationUniqueKey"
  },
  "reference/pluginapi/MediaBrowser.Controller.Persistence.IUserRepository.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Persistence.IUserRepository.html",
    "title": "Interface IUserRepository",
    "keywords": "Interface IUserRepository Provides an interface to implement a User repository Inherited Members IRepository.Name IDisposable.Dispose() Namespace : MediaBrowser.Controller.Persistence Assembly : MediaBrowser.Controller.dll Syntax public interface IUserRepository : IRepository, IDisposable Methods CreateUser(User) Saves the user. Declaration void CreateUser(User user) Parameters Type Name Description User user DeleteUser(User) Deletes the user. Declaration void DeleteUser(User user) Parameters Type Name Description User user RetrieveAllUsers() Retrieves all users. Declaration List<User> RetrieveAllUsers() Returns Type Description List < User > UpdateUser(User) Declaration void UpdateUser(User user) Parameters Type Name Description User user"
  },
  "reference/pluginapi/MediaBrowser.Controller.Persistence.MediaStreamQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Persistence.MediaStreamQuery.html",
    "title": "Class MediaStreamQuery",
    "keywords": "Class MediaStreamQuery Inheritance Object MediaStreamQuery Namespace : MediaBrowser.Controller.Persistence Assembly : MediaBrowser.Controller.dll Syntax public sealed class MediaStreamQuery Properties Index Gets or sets the index. Declaration public int? Index { get; set; } Property Value Type Description Nullable < Int32 > The index. ItemId Gets or sets the item identifier. Declaration public long ItemId { get; set; } Property Value Type Description Int64 The item identifier. Type Gets or sets the type. Declaration public MediaStreamType? Type { get; set; } Property Value Type Description Nullable < MediaStreamType > The type."
  },
  "reference/pluginapi/MediaBrowser.Controller.Playlists.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Playlists.html",
    "title": "Namespace MediaBrowser.Controller.Playlists",
    "keywords": "Namespace MediaBrowser.Controller.Playlists Classes Playlist Interfaces IPlaylistManager"
  },
  "reference/pluginapi/MediaBrowser.Controller.Playlists.IPlaylistManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Playlists.IPlaylistManager.html",
    "title": "Interface IPlaylistManager",
    "keywords": "Interface IPlaylistManager Namespace : MediaBrowser.Controller.Playlists Assembly : MediaBrowser.Controller.dll Syntax public interface IPlaylistManager Methods AddToPlaylist(Int64, Int64[], User) Adds to playlist. Declaration void AddToPlaylist(long playlistId, long[] itemIds, User user) Parameters Type Name Description Int64 playlistId The playlist identifier. Int64 [] itemIds The item ids. User user The user. CreatePlaylist(PlaylistCreationRequest) Creates the playlist. Declaration Task<PlaylistCreationResult> CreatePlaylist(PlaylistCreationRequest options) Parameters Type Name Description PlaylistCreationRequest options The options. Returns Type Description Task < PlaylistCreationResult > Task<Playlist>. MoveItem(Int64, Int64, Int32) Moves the item. Declaration Task MoveItem(long playlistId, long entryId, int newIndex) Parameters Type Name Description Int64 playlistId The playlist identifier. Int64 entryId The entry identifier. Int32 newIndex The new index. Returns Type Description Task Task. RemoveFromPlaylist(Int64, Int64[]) Removes from playlist. Declaration Task RemoveFromPlaylist(long playlistId, long[] entryIds) Parameters Type Name Description Int64 playlistId The playlist identifier. Int64 [] entryIds The entry ids. Returns Type Description Task Task."
  },
  "reference/pluginapi/MediaBrowser.Controller.Playlists.Playlist.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Playlists.Playlist.html",
    "title": "Class Playlist",
    "keywords": "Class Playlist Inheritance Object BaseItem Folder Playlist Implements IHasProviderIds IHasLookupInfo < ItemLookupInfo > Inherited Members Folder.UserViewManager Folder.IsPhysicalRoot Folder.IsTopParent Folder.IsFolder Folder.IsDisplayedAsFolder Folder.SupportsExternalTransfer Folder.CanDelete(Folder[]) Folder.SupportsShortcutChildren Folder.AddChild(BaseItem) Folder.GetChildren(InternalItemsQuery) Folder.GetChildrenIds(InternalItemsQuery) Folder.IsVisibleViaTags(User) Folder.IsVisible(User) Folder.GetRefreshProgress() Folder.ValidateChildren(IProgress<Double>, CancellationToken, MetadataRefreshOptions, Boolean) Folder.TriggerOnRefreshStart() Folder.TriggerOnRefreshComplete() Folder.SortChildrenForValidation(BaseItem[]) Folder.GetChildCount(User) Folder.GetRecursiveChildCount(User) Folder.QueryRecursiveForItemIds(InternalItemsQuery) Folder.QueryRecursive(InternalItemsQuery) Folder.GetItems(InternalItemsQuery) Folder.GetItemIdList(InternalItemsQuery) Folder.GetItemList(InternalItemsQuery) Folder.GetChildren(User) Folder.GetRecursiveChildren() Folder.SupportsOwnedItems Folder.MarkDirectlyAsPlayed Folder.MarkPlayed(User, Nullable<DateTimeOffset>, Boolean) Folder.MarkUnplayed(User) Folder.IsPlayed(User) Folder.IsUnplayed(User) Folder.AllowRecursiveCounts Folder.FillUserDataDtoValues(UserItemDataDto, BaseItemDto, User, DtoOptions, LibraryOptions) Folder.FillPlayedStatus(UserItemDataDto, Nullable<Int32>, User, DtoOptions, LibraryOptions) BaseItem.PlayCount BaseItem.LastPlayedDate BaseItem.Played BaseItem.AudioStreamIndex BaseItem.SubtitleStreamIndex BaseItem.UserDataKey BaseItem.IsFavorite BaseItem.PlaybackPositionTicks BaseItem.UserDataSet BaseItem.InternalId BaseItem.RemoteTrailers BaseItem.ListItemEntryId BaseItem.SlugReplaceChars BaseItem.SlugChar BaseItem.SupportedImageExtensions BaseItem.SupportedImageExtensionsList BaseItem.TrailerFolderName BaseItem.ThemeSongsFolderName BaseItem.ThemeSongFilename BaseItem.ThemeVideosFolderName BaseItem.ExtrasSubFolders BaseItem.SupportsUserData BaseItem.ThemeSongIds BaseItem.IsPlaceHolder BaseItem.ThemeVideoIds BaseItem.SupportsExtras BaseItem.IsCompleteMedia BaseItem.LocalTrailerIds BaseItem.DisplayExtraTypes BaseItem.GetDisplayExtraIds() BaseItem.GetExtraGuids(ExtraType[]) BaseItem.GetAdditionalParts(Int64, DtoOptions, User) BaseItem.GetAdditionalPartIds(Int64) BaseItem.GetExtraIds(ExtraType[]) BaseItem.GetExtras(ExtraType[]) BaseItem.GetExtras(Int64, String, ExtraType[], DtoOptions) BaseItem.GetExtras(Int64, ExtraType[], DtoOptions) BaseItem.GetThemeSongs() BaseItem.GetThemeVideos() BaseItem.GetRunTimeTicksForPlayState() BaseItem.PreferredMetadataCountryCode BaseItem.PreferredMetadataLanguage BaseItem.Size BaseItem.Prefix BaseItem.Container BaseItem.Tagline BaseItem.ImageInfos BaseItem.IsVirtualItem BaseItem.AlbumId BaseItem.Album BaseItem.SupportsEditingAlbum BaseItem.GetStandaloneDisplayName() BaseItem.IsInMixedFolder BaseItem.GetDisplayOrderIntValue() BaseItem.SetDisplayOrder(String) BaseItem.GetMediaContainingFolderPath(LibraryOptions) BaseItem.GetSupportsPositionTicksResume(LibraryOptions) BaseItem.SupportsRemoteImageDownloading BaseItem.Name BaseItem.IsShortcut BaseItem.IsUnaired BaseItem.TotalBitrate BaseItem.ExtraType BaseItem.IsThemeMedia BaseItem.OriginalTitle BaseItem.Id BaseItem.GetDefaultMediaSourceId() BaseItem.OwnerId BaseItem.IsHD BaseItem.Width BaseItem.Height BaseItem.DisplayPreferencesId BaseItem.Path BaseItem.ExternalId BaseItem.SeriesPresentationUniqueKey BaseItem.IsHidden BaseItem.GetOwner() BaseItem.LocationType BaseItem.PathProtocol BaseItem.IsPathProtocol(MediaProtocol) BaseItem.IsFileProtocol BaseItem.HasPathProtocol BaseItem.FileName BaseItem.EnableAlphaNumericSorting BaseItem.PrimaryImagePath BaseItem.IsMetadataFetcherEnabled(LibraryOptions, String) BaseItem.IsImageFetcherEnabled(LibraryOptions, String) BaseItem.CanDelete(User, Folder[]) BaseItem.CanDownload() BaseItem.IsAuthorizedToDownload(User) BaseItem.CanDownload(User) BaseItem.CanDownloadAsSingleMedia() BaseItem.CanDownloadAsFolder() BaseItem.DateCreated BaseItem.DateModified BaseItem.HasDateModifiedChanged(DateTimeOffset) BaseItem.DateLastSaved BaseItem.DateLastRefreshed BaseItem.IsGreaterThanDateLastSaved(DateTimeOffset) BaseItem.Logger BaseItem.LibraryManager BaseItem.UserManager BaseItem.ConfigurationManager BaseItem.ProviderManager BaseItem.LocalizationManager BaseItem.ItemRepository BaseItem.FileSystem BaseItem.UserDataManager BaseItem.ChannelManager BaseItem.MediaSourceManager BaseItem.ToString() BaseItem.IsLocked BaseItem.LockedFields BaseItem.SortName BaseItem.SetSortNameDirect(String) BaseItem.IsFieldLocked(MetadataFields) BaseItem.AddProviderIdsToName(String, String[]) BaseItem.GetInternalMetadataPath() BaseItem.GetInternalMetadataPath(String) BaseItem.GetInternalMetadataPath(Guid, String) BaseItem.CreateSortName() BaseItem.CreateSortName(ReadOnlySpan<Char>) BaseItem.ParentId BaseItem.Parent BaseItem.SetParent(Folder) BaseItem.GetParent() BaseItem.GetParents() BaseItem.FindParent<T>() BaseItem.DisplayParentId BaseItem.ImageDisplayParentId BaseItem.DisplayParent BaseItem.PremiereDate BaseItem.EndDate BaseItem.OfficialRating BaseItem.CriticRating BaseItem.CustomRating BaseItem.Overview BaseItem.Studios BaseItem.StudioItems BaseItem.Genres BaseItem.GenreItems BaseItem.Tags BaseItem.TagItems BaseItem.Collections BaseItem.ImportedCollections BaseItem.GetImportedCollections() BaseItem.GetAllKnownCollections() BaseItem.AddImportedCollections(LinkedItemInfo[]) BaseItem.ContainsTag(String) BaseItem.SetTags(IEnumerable<String>) BaseItem.SetCollections(IEnumerable<String>) BaseItem.SetGenres(IEnumerable<String>) BaseItem.ProductionLocations BaseItem.CommunityRating BaseItem.RunTimeTicks BaseItem.ProductionYear BaseItem.IndexNumber BaseItem.ParentIndexNumber BaseItem.OfficialRatingForComparison BaseItem.CustomRatingForComparison BaseItem.GetPlayAccess(User) BaseItem.GetMediaStreams() BaseItem.MarkTaggedItemsLoaded() BaseItem.EnsureTaggedItemsLoaded() BaseItem.GetSupportedItemLinkTypes() BaseItem.FillItemLinks(List<(T1, T2, T3)<ItemLinkType, String, Int64>>) BaseItem.IsActiveRecording() BaseItem.GetMediaSources(Boolean, Boolean, LibraryOptions) BaseItem.GetMediaSources(User, Boolean, Boolean, LibraryOptions) BaseItem.GetAllItemsForMediaSources(User, Boolean) BaseItem.RefreshMetadata(CancellationToken) BaseItem.EnableInternalIdsExternally BaseItem.GetClientId() BaseItem.RefreshMetadata(MetadataRefreshOptions, CancellationToken) BaseItem.RefreshMetadata(MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.SupportsPeople BaseItem.SupportsTags BaseItem.SupportsCollections BaseItem.SupportsThemeMedia BaseItem.SupportsLocalTrailers BaseItem.RefreshedOwnedItems(MetadataRefreshOptions, LibraryOptions, List<FileSystemMetadata>, CancellationToken) BaseItem.GetFileSystemChildren(IDirectoryService) BaseItem.IsSecondaryMergedItemInSameFolder() BaseItem.GetUniquelyIdentifiableProviderIds() BaseItem.ProviderIds BaseItem.LatestItemsContainerId BaseItem.ForceDefaultAspectRatio BaseItem.CreatePresentationUniqueKey() BaseItem.CreatePresentationUniqueKey(LibraryOptions) BaseItem.GetDefaultPresentationUniqueKey() BaseItem.PresentationUniqueKey BaseItem.GetPresentationUniqueKey() BaseItem.RequiresRefresh(IDirectoryService) BaseItem.GetUserDataKey() BaseItem.AfterMetadataRefresh() BaseItem.GetPreferredMetadataLanguage() BaseItem.GetPreferredMetadataLanguage(LibraryOptions) BaseItem.GetPreferredImageLanguage(LibraryOptions) BaseItem.GetPreferredMetadataCountryCode() BaseItem.GetPreferredMetadataCountryCode(LibraryOptions) BaseItem.IsParentalAllowed(User) BaseItem.GetParentalRatingValue() BaseItem.GetInheritedParentalRatingValue() BaseItem.GetBlockUnratedType() BaseItem.GetBlockUnratedValue(UserPolicy) BaseItem.IsVisibleStandalone(User) BaseItem.IsVisibleStandaloneInternal(User) BaseItem.GetClientTypeName() BaseItem.EnableRememberingTrackSelections BaseItem.AddStudio(String) BaseItem.SetStudios(IEnumerable<String>) BaseItem.AddGenre(String) BaseItem.AddCollection(String) BaseItem.AddCollection(LinkedItemInfo) BaseItem.AddCollectionInfo(LinkedItemInfo) BaseItem.AddCollection(BoxSet) BaseItem.RemoveCollection(Int64) BaseItem.UpdateHideFromResume(User, UserItemData, Boolean) BaseItem.HasImage(ImageType, Int32) BaseItem.SetImage(ItemImageInfo, Int32) BaseItem.SetImage(ItemImageInfo, Int32, Boolean) BaseItem.AddImage(FileSystemMetadata, ImageType) BaseItem.DeleteImage(ImageType, Int32) BaseItem.RemoveImage(ImageType, String) BaseItem.RemoveImage(ItemImageInfo) BaseItem.RemoveImages(List<ItemImageInfo>) BaseItem.UpdateToRepository(ItemUpdateType) BaseItem.UpdateToRepository(ItemUpdateType, MetadataRefreshOptions) BaseItem.GetImagePath(ImageType, Int32) BaseItem.GetImageInfo(ImageType, Int32) BaseItem.GetImages(ImageType) BaseItem.AddImages(ImageType, List<FileSystemMetadata>, Boolean) BaseItem.GetDeletePaths(Boolean) BaseItem.GetLocalMetadataFilesToDelete() BaseItem.AllowsMultipleImages(ImageType) BaseItem.ReorderImage(ImageType, Int32, Int32) BaseItem.MoveFiles(String[], String[]) BaseItem.IsFavoriteOrLiked(User) BaseItem.IHasLookupInfo<ItemLookupInfo>.GetLookupInfo(LibraryOptions) BaseItem.GetItemLookupInfo<T>(LibraryOptions) BaseItem.GetNameForMetadataLookup() BaseItem.BeforeMetadataRefresh(Boolean) BaseItem.GetMappedPath(String, Nullable<MediaProtocol>, LibraryOptions) BaseItem.RefreshMetadataForOwnedItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) BaseItem.GetEtag(User) BaseItem.GetEtagValues(User) BaseItem.GetInternalAncestorIds() BaseItem.GetTopParent() BaseItem.GetTopParentId() BaseItem.SupportsAncestors BaseItem.GetIdsForAncestorQuery() BaseItem.GetRelatedUrls() BaseItem.UpdateRatingToItems(BaseItem[]) BaseItem.AllowEditingField(MetadataFields) Namespace : MediaBrowser.Controller.Playlists Assembly : MediaBrowser.Controller.dll Syntax public sealed class Playlist : Folder, IHasProviderIds, IHasLookupInfo<ItemLookupInfo> Fields SupportedExtensions Declaration public static ReadOnlyMemory<char>[] SupportedExtensions Field Value Type Description ReadOnlyMemory < Char >[] Properties ContainingFolderPath Declaration [IgnoreDataMember] public override string ContainingFolderPath { get; } Property Value Type Description String Overrides BaseItem.ContainingFolderPath FileNameWithoutExtension Declaration [IgnoreDataMember] public override string FileNameWithoutExtension { get; } Property Value Type Description String Overrides Folder.FileNameWithoutExtension IsPreSorted Declaration [IgnoreDataMember] public override bool IsPreSorted { get; } Property Value Type Description Boolean Overrides Folder.IsPreSorted IsResolvedToFolder Declaration [IgnoreDataMember] public override bool IsResolvedToFolder { get; } Property Value Type Description Boolean Overrides Folder.IsResolvedToFolder MediaType Declaration [IgnoreDataMember] public override string MediaType { get; } Property Value Type Description String Overrides BaseItem.MediaType PlaylistMediaType Declaration public string PlaylistMediaType { get; set; } Property Value Type Description String SupportsCumulativeRunTimeTicks Declaration [IgnoreDataMember] public override bool SupportsCumulativeRunTimeTicks { get; } Property Value Type Description Boolean Overrides Folder.SupportsCumulativeRunTimeTicks SupportsGenres Declaration [IgnoreDataMember] public override bool SupportsGenres { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsGenres SupportsInheritedParentImages Declaration [IgnoreDataMember] public override bool SupportsInheritedParentImages { get; } Property Value Type Description Boolean Overrides Folder.SupportsInheritedParentImages SupportsStudios Declaration [IgnoreDataMember] public override bool SupportsStudios { get; } Property Value Type Description Boolean Overrides BaseItem.SupportsStudios Methods GetDefaultPrimaryImageAspectRatio() Declaration public override double GetDefaultPrimaryImageAspectRatio() Returns Type Description Double Overrides BaseItem.GetDefaultPrimaryImageAspectRatio() GetItemIdsInternal(InternalItemsQuery) Declaration protected override long[] GetItemIdsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description Int64 [] Overrides Folder.GetItemIdsInternal(InternalItemsQuery) GetItemsInternal(InternalItemsQuery) Declaration protected override QueryResult<BaseItem> GetItemsInternal(InternalItemsQuery query) Parameters Type Name Description InternalItemsQuery query Returns Type Description QueryResult < BaseItem > Overrides Folder.GetItemsInternal(InternalItemsQuery) GetNonCachedChildren(IDirectoryService, LibraryOptions) Declaration protected override List<BaseItem> GetNonCachedChildren(IDirectoryService directoryService, LibraryOptions libraryOptions) Parameters Type Name Description IDirectoryService directoryService LibraryOptions libraryOptions Returns Type Description List < BaseItem > Overrides Folder.GetNonCachedChildren(IDirectoryService, LibraryOptions) GetPlaylistItems(String, BaseItem[], User) Declaration public static long[] GetPlaylistItems(string playlistMediaType, BaseItem[] inputItems, User user) Parameters Type Name Description String playlistMediaType BaseItem [] inputItems User user Returns Type Description Int64 [] IsAuthorizedToDelete(User, Folder[]) Declaration public override bool IsAuthorizedToDelete(User user, Folder[] collectionFolders) Parameters Type Name Description User user Folder [] collectionFolders Returns Type Description Boolean Overrides BaseItem.IsAuthorizedToDelete(User, Folder[]) IsPlaylistFile(String) Declaration public static bool IsPlaylistFile(string path) Parameters Type Name Description String path Returns Type Description Boolean IsSaveLocalMetadataEnabled(LibraryOptions) Declaration public override bool IsSaveLocalMetadataEnabled(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides BaseItem.IsSaveLocalMetadataEnabled(LibraryOptions) SetMediaType(String) Declaration public void SetMediaType(string value) Parameters Type Name Description String value SupportsPlayedStatus(LibraryOptions) Declaration public override bool SupportsPlayedStatus(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description Boolean Overrides Folder.SupportsPlayedStatus(LibraryOptions) ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Declaration protected override Task ValidateChildrenInternal(IProgress<double> progress, CancellationToken cancellationToken, bool recursive, bool refreshChildMetadata, MetadataRefreshOptions refreshOptions, IDirectoryService directoryService) Parameters Type Name Description IProgress < Double > progress CancellationToken cancellationToken Boolean recursive Boolean refreshChildMetadata MetadataRefreshOptions refreshOptions IDirectoryService directoryService Returns Type Description Task Overrides Folder.ValidateChildrenInternal(IProgress<Double>, CancellationToken, Boolean, Boolean, MetadataRefreshOptions, IDirectoryService) Implements IHasProviderIds IHasLookupInfo<TLookupInfoType> Extension Methods BaseItemExtensions.GetImagePath(BaseItem, ImageType) BaseItemExtensions.HasImage(BaseItem, ImageType) Extensions.AddTrailerUrl(BaseItem, String) TagExtensions.AddTag(BaseItem, String) TagExtensions.RemoveTag(BaseItem, String)"
  },
  "reference/pluginapi/MediaBrowser.Controller.Plugins.ConfigurationPageType.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Plugins.ConfigurationPageType.html",
    "title": "Enum ConfigurationPageType",
    "keywords": "Enum ConfigurationPageType Enum ConfigurationPageType Namespace : MediaBrowser.Controller.Plugins Assembly : MediaBrowser.Controller.dll Syntax public enum ConfigurationPageType Fields Name Description None The none PluginConfiguration The plugin configuration Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ConfigurationPageType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Plugins.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Plugins.html",
    "title": "Namespace MediaBrowser.Controller.Plugins",
    "keywords": "Namespace MediaBrowser.Controller.Plugins Interfaces IPluginConfigurationPage Interface IConfigurationPage IRunBeforeStartup IServerEntryPoint Interface IServerEntryPoint Enums ConfigurationPageType Enum ConfigurationPageType"
  },
  "reference/pluginapi/MediaBrowser.Controller.Plugins.IPluginConfigurationPage.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Plugins.IPluginConfigurationPage.html",
    "title": "Interface IPluginConfigurationPage",
    "keywords": "Interface IPluginConfigurationPage Interface IConfigurationPage Namespace : MediaBrowser.Controller.Plugins Assembly : MediaBrowser.Controller.dll Syntax public interface IPluginConfigurationPage Properties ConfigurationPageType Gets the type of the configuration page. Declaration ConfigurationPageType ConfigurationPageType { get; } Property Value Type Description ConfigurationPageType The type of the configuration page. Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. Plugin Gets the plugin. Declaration IPlugin Plugin { get; } Property Value Type Description IPlugin The plugin. Methods GetHtmlStream() Gets the HTML stream. Declaration Stream GetHtmlStream() Returns Type Description Stream Stream."
  },
  "reference/pluginapi/MediaBrowser.Controller.Plugins.IRunBeforeStartup.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Plugins.IRunBeforeStartup.html",
    "title": "Interface IRunBeforeStartup",
    "keywords": "Interface IRunBeforeStartup Namespace : MediaBrowser.Controller.Plugins Assembly : MediaBrowser.Controller.dll Syntax public interface IRunBeforeStartup"
  },
  "reference/pluginapi/MediaBrowser.Controller.Plugins.IServerEntryPoint.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Plugins.IServerEntryPoint.html",
    "title": "Interface IServerEntryPoint",
    "keywords": "Interface IServerEntryPoint Interface IServerEntryPoint Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Controller.Plugins Assembly : MediaBrowser.Controller.dll Syntax public interface IServerEntryPoint : IDisposable Methods Run() Runs this instance. Declaration void Run()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.AlbumInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.AlbumInfo.html",
    "title": "Class AlbumInfo",
    "keywords": "Class AlbumInfo Inheritance Object ItemLookupInfo AlbumInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class AlbumInfo : ItemLookupInfo, IHasProviderIds Properties AlbumArtists Gets or sets the album artist. Declaration public string[] AlbumArtists { get; set; } Property Value Type Description String [] The album artist. SongInfos Declaration public SongInfo[] SongInfos { get; set; } Property Value Type Description SongInfo [] Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ArtistInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ArtistInfo.html",
    "title": "Class ArtistInfo",
    "keywords": "Class ArtistInfo Inheritance Object ItemLookupInfo ArtistInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class ArtistInfo : ItemLookupInfo, IHasProviderIds Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.BaseMetadataResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.BaseMetadataResult.html",
    "title": "Class BaseMetadataResult",
    "keywords": "Class BaseMetadataResult Inheritance Object BaseMetadataResult MetadataResult<T> Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public abstract class BaseMetadataResult Constructors BaseMetadataResult() Declaration public BaseMetadataResult() Properties BaseItem Declaration public abstract BaseItem BaseItem { get; } Property Value Type Description BaseItem Chapters Declaration public List<ChapterInfo> Chapters { get; set; } Property Value Type Description List < ChapterInfo > HasMetadata Declaration public bool HasMetadata { get; set; } Property Value Type Description Boolean Images Declaration public List<LocalImageInfo> Images { get; set; } Property Value Type Description List < LocalImageInfo > ListItems Declaration public LinkedChild[] ListItems { get; set; } Property Value Type Description LinkedChild [] MediaStreams Declaration public MediaStream[] MediaStreams { get; set; } Property Value Type Description MediaStream [] People Declaration public List<PersonInfo> People { get; set; } Property Value Type Description List < PersonInfo > Provider Declaration public string Provider { get; set; } Property Value Type Description String QueriedById Declaration public bool QueriedById { get; set; } Property Value Type Description Boolean ResultLanguage Declaration public string ResultLanguage { get; set; } Property Value Type Description String UserDataList Declaration public List<UserItemData> UserDataList { get; set; } Property Value Type Description List < UserItemData > Methods AddPerson(PersonInfo) Declaration public void AddPerson(PersonInfo p) Parameters Type Name Description PersonInfo p ResetPeople() Not only does this clear, but initializes the list so that services can differentiate between a null list and zero people Declaration public void ResetPeople() ToRemoteSearchResult(String) Declaration public RemoteSearchResult ToRemoteSearchResult(string searchProviderName) Parameters Type Name Description String searchProviderName Returns Type Description RemoteSearchResult"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.BookInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.BookInfo.html",
    "title": "Class BookInfo",
    "keywords": "Class BookInfo Inheritance Object ItemLookupInfo BookInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class BookInfo : ItemLookupInfo, IHasProviderIds Properties SeriesName Declaration public string SeriesName { get; set; } Property Value Type Description String Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.BoxSetInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.BoxSetInfo.html",
    "title": "Class BoxSetInfo",
    "keywords": "Class BoxSetInfo Inheritance Object ItemLookupInfo BoxSetInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class BoxSetInfo : ItemLookupInfo, IHasProviderIds Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.DirectoryService.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.DirectoryService.html",
    "title": "Class DirectoryService",
    "keywords": "Class DirectoryService Inheritance Object DirectoryService Implements IDirectoryService Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class DirectoryService : IDirectoryService Constructors DirectoryService(IFileSystem) Declaration public DirectoryService(IFileSystem fileSystem) Parameters Type Name Description IFileSystem fileSystem DirectoryService(ILogger, IFileSystem) Declaration public DirectoryService(ILogger logger, IFileSystem fileSystem) Parameters Type Name Description ILogger logger IFileSystem fileSystem Methods AddOrUpdateCache(String, Object) Declaration public void AddOrUpdateCache(string key, object item) Parameters Type Name Description String key Object item GetFile(String) Declaration public FileSystemMetadata GetFile(string path) Parameters Type Name Description String path Returns Type Description FileSystemMetadata GetFilePaths(String) Declaration public List<string> GetFilePaths(string path) Parameters Type Name Description String path Returns Type Description List < String > GetFilePaths(String, Boolean) Declaration public List<string> GetFilePaths(string path, bool clearCache) Parameters Type Name Description String path Boolean clearCache Returns Type Description List < String > GetFiles(String) Declaration public List<FileSystemMetadata> GetFiles(string path) Parameters Type Name Description String path Returns Type Description List < FileSystemMetadata > GetFileSystemEntries(String) Declaration public FileSystemMetadata[] GetFileSystemEntries(string path) Parameters Type Name Description String path Returns Type Description FileSystemMetadata [] GetFileSystemEntries(String, Boolean) Declaration public FileSystemMetadata[] GetFileSystemEntries(string path, bool clearCache) Parameters Type Name Description String path Boolean clearCache Returns Type Description FileSystemMetadata [] TryGetFromCache<T>(String, out T) Declaration public bool TryGetFromCache<T>(string key, out T result) where T : class Parameters Type Name Description String key T result Returns Type Description Boolean Type Parameters Name Description T Implements IDirectoryService"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.DynamicImageInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.DynamicImageInfo.html",
    "title": "Class DynamicImageInfo",
    "keywords": "Class DynamicImageInfo Inheritance Object DynamicImageInfo Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class DynamicImageInfo Properties ImageId Declaration public string ImageId { get; set; } Property Value Type Description String Type Declaration public ImageType Type { get; set; } Property Value Type Description ImageType"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.DynamicImageResponse.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.DynamicImageResponse.html",
    "title": "Class DynamicImageResponse",
    "keywords": "Class DynamicImageResponse Inheritance Object DynamicImageResponse Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class DynamicImageResponse Properties Format Declaration public ImageFormat Format { get; set; } Property Value Type Description ImageFormat IsFallbackImage Declaration public bool IsFallbackImage { get; set; } Property Value Type Description Boolean Path Declaration public string Path { get; set; } Property Value Type Description String Protocol Declaration public MediaProtocol Protocol { get; set; } Property Value Type Description MediaProtocol Stream Declaration public Stream Stream { get; set; } Property Value Type Description Stream Methods SetFormatFromMimeType(String) Declaration public void SetFormatFromMimeType(string mimeType) Parameters Type Name Description String mimeType"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.EnhancedImageInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.EnhancedImageInfo.html",
    "title": "Class EnhancedImageInfo",
    "keywords": "Class EnhancedImageInfo Inheritance Object EnhancedImageInfo Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class EnhancedImageInfo Properties RequiresTransparency Declaration public bool RequiresTransparency { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.EpisodeInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.EpisodeInfo.html",
    "title": "Class EpisodeInfo",
    "keywords": "Class EpisodeInfo Inheritance Object ItemLookupInfo EpisodeInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class EpisodeInfo : ItemLookupInfo, IHasProviderIds Constructors EpisodeInfo() Declaration public EpisodeInfo() EpisodeInfo(EpisodeInfo) Declaration public EpisodeInfo(EpisodeInfo clone) Parameters Type Name Description EpisodeInfo clone Properties IndexNumberEnd Declaration public int? IndexNumberEnd { get; set; } Property Value Type Description Nullable < Int32 > IsMissingEpisode Declaration public bool IsMissingEpisode { get; set; } Property Value Type Description Boolean SeriesDisplayOrder Declaration public SeriesDisplayOrder SeriesDisplayOrder { get; set; } Property Value Type Description SeriesDisplayOrder SeriesProviderIds Declaration public Dictionary<string, string> SeriesProviderIds { get; set; } Property Value Type Description Dictionary < String , String > Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ExtraSource.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ExtraSource.html",
    "title": "Enum ExtraSource",
    "keywords": "Enum ExtraSource Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public enum ExtraSource Fields Name Description Local Metadata Remote Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ExtraSource>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.GameInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.GameInfo.html",
    "title": "Class GameInfo",
    "keywords": "Class GameInfo Inheritance Object ItemLookupInfo GameInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class GameInfo : ItemLookupInfo, IHasProviderIds Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.GameSystemInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.GameSystemInfo.html",
    "title": "Class GameSystemInfo",
    "keywords": "Class GameSystemInfo Inheritance Object ItemLookupInfo GameSystemInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class GameSystemInfo : ItemLookupInfo, IHasProviderIds Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.html",
    "title": "Namespace MediaBrowser.Controller.Providers",
    "keywords": "Namespace MediaBrowser.Controller.Providers Classes AlbumInfo ArtistInfo BaseMetadataResult BookInfo BoxSetInfo DirectoryService DynamicImageInfo DynamicImageResponse EnhancedImageInfo EpisodeInfo GameInfo GameSystemInfo ImageRefreshOptions ItemInfo ItemLookupInfo LocalImageInfo MetadataRefreshOptions MetadataResult<T> MovieInfo MusicVideoInfo PersonLookupInfo RemoteImageFetchOptions RemoteMetadataFetchOptions<TLookupInfoType> RemoteSearchQuery<T> SeasonInfo SeriesInfo SongInfo TrailerInfo Interfaces ICustomMetadataProvider ICustomMetadataProvider<TItemType> IDirectoryService IDynamicImageProvider IExternalId IExtrasProvider IForcedProvider This is a marker interface that will cause a provider to run even if IsLocked=true IHasItemChangeMonitor IHasLookupInfo<TLookupInfoType> IHasMetadataFeatures IHasOrder IImageEnhancer IImageProvider Interface IImageProvider ILazyImageProvider ILocalImageFileProvider ILocalImageProvider This is just a marker interface ILocalMetadataProvider ILocalMetadataProvider<TItemType> IMetadataProvider Marker interface IMetadataProvider<TItemType> IMetadataService IPreRefreshProvider IProviderManager Interface IProviderManager IRemoteImageProvider Interface IImageProvider IRemoteImageProviderWithOptions IRemoteMetadataProvider IRemoteMetadataProvider<TItemType, TLookupInfoType> IRemoteMetadataProviderWithOptions<TItemType, TLookupInfoType> IRemoteSearchProvider IRemoteSearchProvider<TLookupInfoType> ISeriesMetadataProvider Enums ExtraSource MetadataProviderPriority Determines when a provider should execute, relative to others MetadataRefreshMode RefreshPriority VideoContentType Enum VideoContentType"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ICustomMetadataProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ICustomMetadataProvider.html",
    "title": "Interface ICustomMetadataProvider",
    "keywords": "Interface ICustomMetadataProvider Inherited Members IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface ICustomMetadataProvider : IMetadataProvider"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ICustomMetadataProvider-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ICustomMetadataProvider-1.html",
    "title": "Interface ICustomMetadataProvider<TItemType>",
    "keywords": "Interface ICustomMetadataProvider<TItemType> Inherited Members IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface ICustomMetadataProvider<TItemType> : IMetadataProvider<TItemType>, ICustomMetadataProvider, IMetadataProvider where TItemType : BaseItem Type Parameters Name Description TItemType Methods FetchAsync(MetadataResult<TItemType>, MetadataRefreshOptions, LibraryOptions, CancellationToken) Fetches the asynchronous. Declaration Task<ItemUpdateType> FetchAsync(MetadataResult<TItemType> itemResult, MetadataRefreshOptions options, LibraryOptions libraryOptions, CancellationToken cancellationToken) Parameters Type Name Description MetadataResult <TItemType> itemResult MetadataRefreshOptions options The options. LibraryOptions libraryOptions CancellationToken cancellationToken The cancellation token. Returns Type Description Task < ItemUpdateType > Task{ItemUpdateType}."
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IDirectoryService.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IDirectoryService.html",
    "title": "Interface IDirectoryService",
    "keywords": "Interface IDirectoryService Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IDirectoryService Methods AddOrUpdateCache(String, Object) Declaration void AddOrUpdateCache(string key, object item) Parameters Type Name Description String key Object item GetFile(String) Declaration FileSystemMetadata GetFile(string path) Parameters Type Name Description String path Returns Type Description FileSystemMetadata GetFilePaths(String) Declaration List<string> GetFilePaths(string path) Parameters Type Name Description String path Returns Type Description List < String > GetFilePaths(String, Boolean) Declaration List<string> GetFilePaths(string path, bool clearCache) Parameters Type Name Description String path Boolean clearCache Returns Type Description List < String > GetFiles(String) Declaration List<FileSystemMetadata> GetFiles(string path) Parameters Type Name Description String path Returns Type Description List < FileSystemMetadata > GetFileSystemEntries(String) Declaration FileSystemMetadata[] GetFileSystemEntries(string path) Parameters Type Name Description String path Returns Type Description FileSystemMetadata [] GetFileSystemEntries(String, Boolean) Declaration FileSystemMetadata[] GetFileSystemEntries(string path, bool clearCache) Parameters Type Name Description String path Boolean clearCache Returns Type Description FileSystemMetadata [] TryGetFromCache<T>(String, out T) Declaration bool TryGetFromCache<T>(string key, out T result) where T : class Parameters Type Name Description String key T result Returns Type Description Boolean Type Parameters Name Description T"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IDynamicImageProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IDynamicImageProvider.html",
    "title": "Interface IDynamicImageProvider",
    "keywords": "Interface IDynamicImageProvider Inherited Members IImageProvider.Name IImageProvider.Supports(BaseItem) Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IDynamicImageProvider : IImageProvider Methods GetImage(BaseMetadataResult, ImageType, CancellationToken) Gets the image. Declaration Task<DynamicImageResponse> GetImage(BaseMetadataResult itemResult, ImageType type, CancellationToken cancellationToken) Parameters Type Name Description BaseMetadataResult itemResult ImageType type CancellationToken cancellationToken Returns Type Description Task < DynamicImageResponse > GetSupportedImages(BaseItem) Gets the supported images. Declaration ImageType[] GetSupportedImages(BaseItem item) Parameters Type Name Description BaseItem item The item. Returns Type Description ImageType []"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IExternalId.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IExternalId.html",
    "title": "Interface IExternalId",
    "keywords": "Interface IExternalId Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IExternalId Properties Key Declaration string Key { get; } Property Value Type Description String Name Declaration string Name { get; } Property Value Type Description String UrlFormatString Declaration string UrlFormatString { get; } Property Value Type Description String Methods Supports(IHasProviderIds) Declaration bool Supports(IHasProviderIds item) Parameters Type Name Description IHasProviderIds item Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IExtrasProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IExtrasProvider.html",
    "title": "Interface IExtrasProvider",
    "keywords": "Interface IExtrasProvider Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IExtrasProvider Properties Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. Methods Supports(BaseItem) Supportses the specified item. Declaration bool Supports(BaseItem item) Parameters Type Name Description BaseItem item The item. Returns Type Description Boolean true if XXXX, false otherwise."
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IForcedProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IForcedProvider.html",
    "title": "Interface IForcedProvider",
    "keywords": "Interface IForcedProvider This is a marker interface that will cause a provider to run even if IsLocked=true Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IForcedProvider"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IHasItemChangeMonitor.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IHasItemChangeMonitor.html",
    "title": "Interface IHasItemChangeMonitor",
    "keywords": "Interface IHasItemChangeMonitor Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IHasItemChangeMonitor Methods HasChanged(BaseItem, LibraryOptions, IDirectoryService) Determines whether the specified item has changed. Declaration bool HasChanged(BaseItem item, LibraryOptions libraryOptions, IDirectoryService directoryService) Parameters Type Name Description BaseItem item The item. LibraryOptions libraryOptions IDirectoryService directoryService The directory service. Returns Type Description Boolean true if the specified item has changed; otherwise, false ."
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IHasLookupInfo-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IHasLookupInfo-1.html",
    "title": "Interface IHasLookupInfo<TLookupInfoType>",
    "keywords": "Interface IHasLookupInfo<TLookupInfoType> Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IHasLookupInfo<out TLookupInfoType> where TLookupInfoType : ItemLookupInfo, new() Type Parameters Name Description TLookupInfoType Methods GetLookupInfo(LibraryOptions) Declaration TLookupInfoType GetLookupInfo(LibraryOptions libraryOptions) Parameters Type Name Description LibraryOptions libraryOptions Returns Type Description TLookupInfoType"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IHasMetadataFeatures.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IHasMetadataFeatures.html",
    "title": "Interface IHasMetadataFeatures",
    "keywords": "Interface IHasMetadataFeatures Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IHasMetadataFeatures Properties Features Declaration MetadataFeatures[] Features { get; } Property Value Type Description MetadataFeatures []"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IHasOrder.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IHasOrder.html",
    "title": "Interface IHasOrder",
    "keywords": "Interface IHasOrder Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IHasOrder Properties Order Declaration int Order { get; } Property Value Type Description Int32"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IImageEnhancer.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IImageEnhancer.html",
    "title": "Interface IImageEnhancer",
    "keywords": "Interface IImageEnhancer Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IImageEnhancer Properties Priority Gets the priority or order in which this enhancer should be run. Declaration MetadataProviderPriority Priority { get; } Property Value Type Description MetadataProviderPriority The priority. Methods EnhanceImageAsync(BaseItem, String, String, ImageType, Int32) Enhances the image async. Declaration Task EnhanceImageAsync(BaseItem item, string inputFile, string outputFile, ImageType imageType, int imageIndex) Parameters Type Name Description BaseItem item The item. String inputFile The input file. String outputFile The output file. ImageType imageType Type of the image. Int32 imageIndex Index of the image. Returns Type Description Task Task{Image}. Exceptions Type Condition ArgumentNullException GetConfigurationCacheKey(BaseItem, ImageType) Return a key incorporating all configuration information related to this item Declaration string GetConfigurationCacheKey(BaseItem item, ImageType imageType) Parameters Type Name Description BaseItem item The item. ImageType imageType Type of the image. Returns Type Description String Cache key relating to the current state of this item and configuration GetEnhancedImageInfo(BaseItem, String, ImageType, Int32) Declaration EnhancedImageInfo GetEnhancedImageInfo(BaseItem item, string inputFile, ImageType imageType, int imageIndex) Parameters Type Name Description BaseItem item String inputFile ImageType imageType Int32 imageIndex Returns Type Description EnhancedImageInfo GetEnhancedImageSize(BaseItem, ImageType, Int32, ImageSize) Gets the size of the enhanced image. Declaration ImageSize GetEnhancedImageSize(BaseItem item, ImageType imageType, int imageIndex, ImageSize originalImageSize) Parameters Type Name Description BaseItem item The item. ImageType imageType Type of the image. Int32 imageIndex Index of the image. ImageSize originalImageSize Size of the original image. Returns Type Description ImageSize ImageSize. Supports(BaseItem, ImageType) Return true only if the given image for the given item will be enhanced by this enhancer. Declaration bool Supports(BaseItem item, ImageType imageType) Parameters Type Name Description BaseItem item The item. ImageType imageType Type of the image. Returns Type Description Boolean true if this enhancer will enhance the supplied image for the supplied item, false otherwise"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IImageProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IImageProvider.html",
    "title": "Interface IImageProvider",
    "keywords": "Interface IImageProvider Interface IImageProvider Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IImageProvider Properties Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. Methods Supports(BaseItem) Supportses the specified item. Declaration bool Supports(BaseItem item) Parameters Type Name Description BaseItem item The item. Returns Type Description Boolean true if XXXX, false otherwise"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ILazyImageProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ILazyImageProvider.html",
    "title": "Interface ILazyImageProvider",
    "keywords": "Interface ILazyImageProvider Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface ILazyImageProvider Properties Key Declaration string Key { get; } Property Value Type Description String Methods GetImage(BaseItem, ImageType, CancellationToken) Declaration Task<DynamicImageResponse> GetImage(BaseItem item, ImageType type, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item ImageType type CancellationToken cancellationToken Returns Type Description Task < DynamicImageResponse >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ILocalImageFileProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ILocalImageFileProvider.html",
    "title": "Interface ILocalImageFileProvider",
    "keywords": "Interface ILocalImageFileProvider Inherited Members IImageProvider.Name IImageProvider.Supports(BaseItem) Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface ILocalImageFileProvider : ILocalImageProvider, IImageProvider Methods GetImages(BaseItem, LibraryOptions, IDirectoryService) Declaration List<LocalImageInfo> GetImages(BaseItem item, LibraryOptions libraryOptions, IDirectoryService directoryService) Parameters Type Name Description BaseItem item LibraryOptions libraryOptions IDirectoryService directoryService Returns Type Description List < LocalImageInfo >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ILocalImageProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ILocalImageProvider.html",
    "title": "Interface ILocalImageProvider",
    "keywords": "Interface ILocalImageProvider This is just a marker interface Inherited Members IImageProvider.Name IImageProvider.Supports(BaseItem) Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface ILocalImageProvider : IImageProvider"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ILocalMetadataProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ILocalMetadataProvider.html",
    "title": "Interface ILocalMetadataProvider",
    "keywords": "Interface ILocalMetadataProvider Inherited Members IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface ILocalMetadataProvider : IMetadataProvider"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ILocalMetadataProvider-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ILocalMetadataProvider-1.html",
    "title": "Interface ILocalMetadataProvider<TItemType>",
    "keywords": "Interface ILocalMetadataProvider<TItemType> Inherited Members IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface ILocalMetadataProvider<TItemType> : IMetadataProvider<TItemType>, ILocalMetadataProvider, IMetadataProvider where TItemType : BaseItem Type Parameters Name Description TItemType Methods GetMetadata(ItemInfo, LibraryOptions, IDirectoryService, CancellationToken) Gets the metadata. Declaration Task<MetadataResult<TItemType>> GetMetadata(ItemInfo info, LibraryOptions libraryOptions, IDirectoryService directoryService, CancellationToken cancellationToken) Parameters Type Name Description ItemInfo info LibraryOptions libraryOptions IDirectoryService directoryService CancellationToken cancellationToken Returns Type Description Task < MetadataResult <TItemType>>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ImageRefreshOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ImageRefreshOptions.html",
    "title": "Class ImageRefreshOptions",
    "keywords": "Class ImageRefreshOptions Inheritance Object ImageRefreshOptions MetadataRefreshOptions Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public class ImageRefreshOptions Constructors ImageRefreshOptions(IDirectoryService) Declaration public ImageRefreshOptions(IDirectoryService directoryService) Parameters Type Name Description IDirectoryService directoryService Properties DirectoryService Declaration public IDirectoryService DirectoryService { get; } Property Value Type Description IDirectoryService ImageRefreshMode Declaration public MetadataRefreshMode ImageRefreshMode { get; set; } Property Value Type Description MetadataRefreshMode IsAutomated Declaration public bool IsAutomated { get; set; } Property Value Type Description Boolean ReplaceAllImages Declaration public bool ReplaceAllImages { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IMetadataProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IMetadataProvider.html",
    "title": "Interface IMetadataProvider",
    "keywords": "Interface IMetadataProvider Marker interface Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IMetadataProvider Properties Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name."
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IMetadataProvider-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IMetadataProvider-1.html",
    "title": "Interface IMetadataProvider<TItemType>",
    "keywords": "Interface IMetadataProvider<TItemType> Inherited Members IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IMetadataProvider<TItemType> : IMetadataProvider where TItemType : BaseItem Type Parameters Name Description TItemType"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IMetadataService.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IMetadataService.html",
    "title": "Interface IMetadataService",
    "keywords": "Interface IMetadataService Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IMetadataService Properties Order Gets the order. Declaration int Order { get; } Property Value Type Description Int32 The order. Methods CanRefresh(BaseItem) Determines whether this instance can refresh the specified item. Declaration bool CanRefresh(BaseItem item) Parameters Type Name Description BaseItem item The item. Returns Type Description Boolean true if this instance can refresh the specified item; otherwise, false . CanRefreshPrimary(Type) Declaration bool CanRefreshPrimary(Type type) Parameters Type Name Description Type type Returns Type Description Boolean RefreshMetadata(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) Refreshes the metadata. Declaration Task<ItemUpdateType> RefreshMetadata(BaseItem item, MetadataRefreshOptions refreshOptions, LibraryOptions libraryOptions, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item The item. MetadataRefreshOptions refreshOptions The options. LibraryOptions libraryOptions CancellationToken cancellationToken The cancellation token. Returns Type Description Task < ItemUpdateType > Task."
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IPreRefreshProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IPreRefreshProvider.html",
    "title": "Interface IPreRefreshProvider",
    "keywords": "Interface IPreRefreshProvider Inherited Members IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IPreRefreshProvider : ICustomMetadataProvider, IMetadataProvider"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IProviderManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IProviderManager.html",
    "title": "Interface IProviderManager",
    "keywords": "Interface IProviderManager Interface IProviderManager Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IProviderManager Properties ImageProviders Declaration IImageProvider[] ImageProviders { get; } Property Value Type Description IImageProvider [] Methods AddParts(IEnumerable<IImageProvider>, IEnumerable<IMetadataService>, IEnumerable<IMetadataProvider>, IEnumerable<IMetadataSaver>, IEnumerable<IExternalId>) Adds the metadata providers. Declaration void AddParts(IEnumerable<IImageProvider> imageProviders, IEnumerable<IMetadataService> metadataServices, IEnumerable<IMetadataProvider> metadataProviders, IEnumerable<IMetadataSaver> savers, IEnumerable<IExternalId> externalIds) Parameters Type Name Description IEnumerable < IImageProvider > imageProviders IEnumerable < IMetadataService > metadataServices IEnumerable < IMetadataProvider > metadataProviders IEnumerable < IMetadataSaver > savers IEnumerable < IExternalId > externalIds DequeueRefresh(Int64) Declaration void DequeueRefresh(long itemId) Parameters Type Name Description Int64 itemId GetAllMetadataPlugins() Gets all metadata plugins. Declaration MetadataPluginSummary[] GetAllMetadataPlugins() Returns Type Description MetadataPluginSummary [] GetAvailableRemoteImages(BaseItem, LibraryOptions, RemoteImageQuery, IDirectoryService, CancellationToken) Declaration Task<IEnumerable<RemoteImageInfo>> GetAvailableRemoteImages(BaseItem item, LibraryOptions libraryOptions, RemoteImageQuery query, IDirectoryService directoryService, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item LibraryOptions libraryOptions RemoteImageQuery query IDirectoryService directoryService CancellationToken cancellationToken Returns Type Description Task < IEnumerable < RemoteImageInfo >> GetAvailableRemoteImages(BaseItem, LibraryOptions, RemoteImageQuery, CancellationToken) Gets the available remote images. Declaration Task<IEnumerable<RemoteImageInfo>> GetAvailableRemoteImages(BaseItem item, LibraryOptions libraryOptions, RemoteImageQuery query, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item The item. LibraryOptions libraryOptions The library options. RemoteImageQuery query The query. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IEnumerable < RemoteImageInfo >> GetEnabledMetadataProviders(BaseItem, LibraryOptions) Declaration IMetadataProvider[] GetEnabledMetadataProviders(BaseItem item, LibraryOptions libraryOptions) Parameters Type Name Description BaseItem item LibraryOptions libraryOptions Returns Type Description IMetadataProvider [] GetExternalIdInfos(IHasProviderIds) Gets the external identifier infos. Declaration IEnumerable<ExternalIdInfo> GetExternalIdInfos(IHasProviderIds item) Parameters Type Name Description IHasProviderIds item The item. Returns Type Description IEnumerable < ExternalIdInfo > GetExternalUrls(BaseItem) Gets the external urls. Declaration IEnumerable<ExternalUrl> GetExternalUrls(BaseItem item) Parameters Type Name Description BaseItem item The item. Returns Type Description IEnumerable < ExternalUrl > GetRefreshProgress(Int64) Declaration double? GetRefreshProgress(long id) Parameters Type Name Description Int64 id Returns Type Description Nullable < Double > GetRefreshQueue() Declaration Dictionary<long, long> GetRefreshQueue() Returns Type Description Dictionary < Int64 , Int64 > GetRemoteImageProviderInfo(BaseItem) Gets the image providers. Declaration IEnumerable<ImageProviderInfo> GetRemoteImageProviderInfo(BaseItem item) Parameters Type Name Description BaseItem item The item. Returns Type Description IEnumerable < ImageProviderInfo > GetRemoteSearchResults<TItemType, TLookupType>(RemoteSearchQuery<TLookupType>, BaseItem, CancellationToken) Declaration Task<IEnumerable<RemoteSearchResult>> GetRemoteSearchResults<TItemType, TLookupType>(RemoteSearchQuery<TLookupType> searchInfo, BaseItem referenceItem, CancellationToken cancellationToken) where TItemType : BaseItem, new() where TLookupType : ItemLookupInfo Parameters Type Name Description RemoteSearchQuery <TLookupType> searchInfo BaseItem referenceItem CancellationToken cancellationToken Returns Type Description Task < IEnumerable < RemoteSearchResult >> Type Parameters Name Description TItemType TLookupType GetRemoteSearchResults<TItemType, TLookupType>(RemoteSearchQuery<TLookupType>, CancellationToken) Gets the remote search results. Declaration Task<IEnumerable<RemoteSearchResult>> GetRemoteSearchResults<TItemType, TLookupType>(RemoteSearchQuery<TLookupType> searchInfo, CancellationToken cancellationToken) where TItemType : BaseItem, new() where TLookupType : ItemLookupInfo Parameters Type Name Description RemoteSearchQuery <TLookupType> searchInfo The search information. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IEnumerable < RemoteSearchResult >> Type Parameters Name Description TItemType The type of the t item type. TLookupType The type of the t lookup type. GetSearchImage(ReadOnlyMemory<Char>, String, CancellationToken) Gets the search image. Declaration Task<HttpResponseInfo> GetSearchImage(ReadOnlyMemory<char> providerName, string url, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Char > providerName Name of the provider. String url The URL. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < HttpResponseInfo > Task{HttpResponseInfo}. IsUniquelyIdentifiableProviderId(String) Declaration bool IsUniquelyIdentifiableProviderId(string name) Parameters Type Name Description String name Returns Type Description Boolean IsUniquelyIdentifiableProviderId(String, BaseItem) Declaration bool IsUniquelyIdentifiableProviderId(string name, BaseItem item) Parameters Type Name Description String name BaseItem item Returns Type Description Boolean OnRefreshComplete(BaseItem) Declaration void OnRefreshComplete(BaseItem item) Parameters Type Name Description BaseItem item OnRefreshProgress(BaseItem, Double) Declaration void OnRefreshProgress(BaseItem item, double progress) Parameters Type Name Description BaseItem item Double progress OnRefreshStart(BaseItem) Declaration void OnRefreshStart(BaseItem item) Parameters Type Name Description BaseItem item QueueRefresh(Int64, MetadataRefreshOptions, RefreshPriority) Queues the refresh. Declaration void QueueRefresh(long itemId, MetadataRefreshOptions options, RefreshPriority priority) Parameters Type Name Description Int64 itemId MetadataRefreshOptions options RefreshPriority priority QueueRefresh(Int64, MetadataRefreshOptions, RefreshPriority, Boolean) Declaration void QueueRefresh(long itemId, MetadataRefreshOptions options, RefreshPriority priority, bool dequeueIfAlreadyQueued) Parameters Type Name Description Int64 itemId MetadataRefreshOptions options RefreshPriority priority Boolean dequeueIfAlreadyQueued RefreshFullItem(BaseItem, MetadataRefreshOptions, CancellationToken) Refreshes the full item. Declaration Task RefreshFullItem(BaseItem item, MetadataRefreshOptions options, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item The item. MetadataRefreshOptions options The options. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. RefreshSingleItem(BaseItem, MetadataRefreshOptions, LibraryOptions, CancellationToken) Refreshes the metadata. Declaration Task<ItemUpdateType> RefreshSingleItem(BaseItem item, MetadataRefreshOptions options, LibraryOptions libraryOptions, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item The item. MetadataRefreshOptions options The options. LibraryOptions libraryOptions CancellationToken cancellationToken The cancellation token. Returns Type Description Task < ItemUpdateType > Task. SaveImage(BaseItem, LibraryOptions, Stream, ReadOnlyMemory<Char>, ImageType, Nullable<Int32>, Boolean, CancellationToken) Saves the image. Declaration Task SaveImage(BaseItem item, LibraryOptions libraryOptions, Stream source, ReadOnlyMemory<char> mimeType, ImageType type, int? imageIndex, bool isFallbackImage, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item LibraryOptions libraryOptions Stream source ReadOnlyMemory < Char > mimeType ImageType type Nullable < Int32 > imageIndex Boolean isFallbackImage CancellationToken cancellationToken Returns Type Description Task SaveImage(BaseItem, LibraryOptions, String, ImageType, Nullable<Int32>, Boolean, CancellationToken) Saves the image. Declaration Task SaveImage(BaseItem item, LibraryOptions libraryOptions, string url, ImageType type, int? imageIndex, bool isFallbackImage, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item LibraryOptions libraryOptions String url ImageType type Nullable < Int32 > imageIndex Boolean isFallbackImage CancellationToken cancellationToken Returns Type Description Task SaveImage(BaseItem, LibraryOptions, String, ReadOnlyMemory<Char>, ImageType, Nullable<Int32>, Nullable<Boolean>, Boolean, CancellationToken) Saves the image. Declaration Task SaveImage(BaseItem item, LibraryOptions libraryOptions, string source, ReadOnlyMemory<char> mimeType, ImageType type, int? imageIndex, bool? saveLocallyWithMedia, bool isFallbackImage, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item LibraryOptions libraryOptions String source ReadOnlyMemory < Char > mimeType ImageType type Nullable < Int32 > imageIndex Nullable < Boolean > saveLocallyWithMedia Boolean isFallbackImage CancellationToken cancellationToken Returns Type Description Task Task. SaveMetadata(BaseItem, ItemUpdateType) Saves the metadata. Declaration Task SaveMetadata(BaseItem item, ItemUpdateType updateType) Parameters Type Name Description BaseItem item The item. ItemUpdateType updateType Type of the update. Returns Type Description Task Task. SaveMetadata(BaseItem, ItemUpdateType, IEnumerable<String>) Saves the metadata. Declaration Task SaveMetadata(BaseItem item, ItemUpdateType updateType, IEnumerable<string> savers) Parameters Type Name Description BaseItem item ItemUpdateType updateType IEnumerable < String > savers Returns Type Description Task SaveMetadata(BaseItem, LibraryOptions, ItemUpdateType) Declaration Task SaveMetadata(BaseItem item, LibraryOptions libraryOptions, ItemUpdateType updateType) Parameters Type Name Description BaseItem item LibraryOptions libraryOptions ItemUpdateType updateType Returns Type Description Task Events RefreshCompleted Declaration event EventHandler<GenericEventArgs<BaseItem>> RefreshCompleted Event Type Type Description EventHandler < GenericEventArgs < BaseItem >> RefreshProgress Declaration event EventHandler<GenericEventArgs<Tuple<BaseItem, double>>> RefreshProgress Event Type Type Description EventHandler < GenericEventArgs < Tuple < BaseItem , Double >>> RefreshStarted Declaration event EventHandler<GenericEventArgs<BaseItem>> RefreshStarted Event Type Type Description EventHandler < GenericEventArgs < BaseItem >>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteImageProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteImageProvider.html",
    "title": "Interface IRemoteImageProvider",
    "keywords": "Interface IRemoteImageProvider Interface IImageProvider Inherited Members IImageProvider.Name IImageProvider.Supports(BaseItem) Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IRemoteImageProvider : IImageProvider Methods GetImageResponse(String, CancellationToken) Gets the image response. Declaration Task<HttpResponseInfo> GetImageResponse(string url, CancellationToken cancellationToken) Parameters Type Name Description String url The URL. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < HttpResponseInfo > Task{HttpResponseInfo}. GetImages(BaseItem, LibraryOptions, CancellationToken) Gets the images. Declaration Task<IEnumerable<RemoteImageInfo>> GetImages(BaseItem item, LibraryOptions libraryOptions, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item LibraryOptions libraryOptions CancellationToken cancellationToken Returns Type Description Task < IEnumerable < RemoteImageInfo >> GetSupportedImages(BaseItem) Gets the supported images. Declaration IEnumerable<ImageType> GetSupportedImages(BaseItem item) Parameters Type Name Description BaseItem item The item. Returns Type Description IEnumerable < ImageType > IEnumerable{ImageType}."
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteImageProviderWithOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteImageProviderWithOptions.html",
    "title": "Interface IRemoteImageProviderWithOptions",
    "keywords": "Interface IRemoteImageProviderWithOptions Inherited Members IRemoteImageProvider.GetSupportedImages(BaseItem) IRemoteImageProvider.GetImages(BaseItem, LibraryOptions, CancellationToken) IRemoteImageProvider.GetImageResponse(String, CancellationToken) IImageProvider.Name IImageProvider.Supports(BaseItem) Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IRemoteImageProviderWithOptions : IRemoteImageProvider, IImageProvider Methods GetImages(RemoteImageFetchOptions, CancellationToken) Gets the images. Declaration Task<IEnumerable<RemoteImageInfo>> GetImages(RemoteImageFetchOptions options, CancellationToken cancellationToken) Parameters Type Name Description RemoteImageFetchOptions options CancellationToken cancellationToken Returns Type Description Task < IEnumerable < RemoteImageInfo >>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteMetadataProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteMetadataProvider.html",
    "title": "Interface IRemoteMetadataProvider",
    "keywords": "Interface IRemoteMetadataProvider Inherited Members IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IRemoteMetadataProvider : IMetadataProvider"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteMetadataProvider-2.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteMetadataProvider-2.html",
    "title": "Interface IRemoteMetadataProvider<TItemType, TLookupInfoType>",
    "keywords": "Interface IRemoteMetadataProvider<TItemType, TLookupInfoType> Inherited Members IRemoteSearchProvider<TLookupInfoType>.GetSearchResults(TLookupInfoType, CancellationToken) IRemoteSearchProvider.GetImageResponse(String, CancellationToken) IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IRemoteMetadataProvider<TItemType, in TLookupInfoType> : IMetadataProvider<TItemType>, IRemoteMetadataProvider, IRemoteSearchProvider<TLookupInfoType>, IRemoteSearchProvider, IMetadataProvider where TItemType : BaseItem, IHasLookupInfo<TLookupInfoType> where TLookupInfoType : ItemLookupInfo, new() Type Parameters Name Description TItemType TLookupInfoType Methods GetMetadata(TLookupInfoType, CancellationToken) Declaration Task<MetadataResult<TItemType>> GetMetadata(TLookupInfoType info, CancellationToken cancellationToken) Parameters Type Name Description TLookupInfoType info CancellationToken cancellationToken Returns Type Description Task < MetadataResult <TItemType>>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteMetadataProviderWithOptions-2.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteMetadataProviderWithOptions-2.html",
    "title": "Interface IRemoteMetadataProviderWithOptions<TItemType, TLookupInfoType>",
    "keywords": "Interface IRemoteMetadataProviderWithOptions<TItemType, TLookupInfoType> Inherited Members IRemoteMetadataProvider<TItemType, TLookupInfoType>.GetMetadata(TLookupInfoType, CancellationToken) IRemoteSearchProvider<TLookupInfoType>.GetSearchResults(TLookupInfoType, CancellationToken) IRemoteSearchProvider.GetImageResponse(String, CancellationToken) IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IRemoteMetadataProviderWithOptions<TItemType, TLookupInfoType> : IRemoteMetadataProvider<TItemType, TLookupInfoType>, IMetadataProvider<TItemType>, IRemoteMetadataProvider, IRemoteSearchProvider<TLookupInfoType>, IRemoteSearchProvider, IMetadataProvider where TItemType : BaseItem, IHasLookupInfo<TLookupInfoType> where TLookupInfoType : ItemLookupInfo, new() Type Parameters Name Description TItemType TLookupInfoType Methods GetMetadata(RemoteMetadataFetchOptions<TLookupInfoType>, CancellationToken) Declaration Task<MetadataResult<TItemType>> GetMetadata(RemoteMetadataFetchOptions<TLookupInfoType> options, CancellationToken cancellationToken) Parameters Type Name Description RemoteMetadataFetchOptions <TLookupInfoType> options CancellationToken cancellationToken Returns Type Description Task < MetadataResult <TItemType>>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteSearchProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteSearchProvider.html",
    "title": "Interface IRemoteSearchProvider",
    "keywords": "Interface IRemoteSearchProvider Inherited Members IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IRemoteSearchProvider : IMetadataProvider Methods GetImageResponse(String, CancellationToken) Gets the image response. Declaration Task<HttpResponseInfo> GetImageResponse(string url, CancellationToken cancellationToken) Parameters Type Name Description String url The URL. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < HttpResponseInfo > Task{HttpResponseInfo}."
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteSearchProvider-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.IRemoteSearchProvider-1.html",
    "title": "Interface IRemoteSearchProvider<TLookupInfoType>",
    "keywords": "Interface IRemoteSearchProvider<TLookupInfoType> Inherited Members IRemoteSearchProvider.GetImageResponse(String, CancellationToken) IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface IRemoteSearchProvider<in TLookupInfoType> : IRemoteSearchProvider, IMetadataProvider where TLookupInfoType : ItemLookupInfo Type Parameters Name Description TLookupInfoType Methods GetSearchResults(TLookupInfoType, CancellationToken) Declaration Task<IEnumerable<RemoteSearchResult>> GetSearchResults(TLookupInfoType searchInfo, CancellationToken cancellationToken) Parameters Type Name Description TLookupInfoType searchInfo CancellationToken cancellationToken Returns Type Description Task < IEnumerable < RemoteSearchResult >>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ISeriesMetadataProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ISeriesMetadataProvider.html",
    "title": "Interface ISeriesMetadataProvider",
    "keywords": "Interface ISeriesMetadataProvider Inherited Members IMetadataProvider.Name Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public interface ISeriesMetadataProvider : IRemoteMetadataProvider, IMetadataProvider Methods GetAllEpisodes(SeriesInfo, CancellationToken) Declaration Task<RemoteSearchResult[]> GetAllEpisodes(SeriesInfo searchInfo, CancellationToken cancellationToken) Parameters Type Name Description SeriesInfo searchInfo CancellationToken cancellationToken Returns Type Description Task < RemoteSearchResult []>"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ItemInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ItemInfo.html",
    "title": "Class ItemInfo",
    "keywords": "Class ItemInfo Inheritance Object ItemInfo Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class ItemInfo Constructors ItemInfo(BaseItem) Declaration public ItemInfo(BaseItem item) Parameters Type Name Description BaseItem item Properties Container Declaration public string Container { get; set; } Property Value Type Description String ContainingFolderPath Declaration public string ContainingFolderPath { get; set; } Property Value Type Description String Id Declaration public long Id { get; set; } Property Value Type Description Int64 IsInMixedFolder Declaration public bool IsInMixedFolder { get; set; } Property Value Type Description Boolean Name Declaration public string Name { get; set; } Property Value Type Description String Path Declaration public string Path { get; set; } Property Value Type Description String Methods GetInternalMetadataPath() Declaration public string GetInternalMetadataPath() Returns Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.ItemLookupInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.ItemLookupInfo.html",
    "title": "Class ItemLookupInfo",
    "keywords": "Class ItemLookupInfo Inheritance Object ItemLookupInfo AlbumInfo ArtistInfo BookInfo BoxSetInfo EpisodeInfo GameInfo GameSystemInfo MovieInfo MusicVideoInfo PersonLookupInfo SeasonInfo SeriesInfo SongInfo TrailerInfo Implements IHasProviderIds Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public class ItemLookupInfo : IHasProviderIds Constructors ItemLookupInfo() Declaration public ItemLookupInfo() ItemLookupInfo(ItemLookupInfo) Declaration public ItemLookupInfo(ItemLookupInfo clone) Parameters Type Name Description ItemLookupInfo clone Properties EnableAdultMetadata Declaration public bool EnableAdultMetadata { get; set; } Property Value Type Description Boolean IndexNumber Declaration public int? IndexNumber { get; set; } Property Value Type Description Nullable < Int32 > IsAutomated Declaration public bool IsAutomated { get; set; } Property Value Type Description Boolean MetadataCountryCode Gets or sets the metadata country code. Declaration public string MetadataCountryCode { get; set; } Property Value Type Description String The metadata country code. MetadataLanguage Gets or sets the metadata language. Declaration public string MetadataLanguage { get; set; } Property Value Type Description String The metadata language. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. ParentIndexNumber Declaration public int? ParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > PremiereDate Declaration public DateTimeOffset? PremiereDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > ProviderIds Gets or sets the provider ids. Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary The provider ids. Year Gets or sets the year. Declaration public int? Year { get; set; } Property Value Type Description Nullable < Int32 > The year. Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.LocalImageInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.LocalImageInfo.html",
    "title": "Class LocalImageInfo",
    "keywords": "Class LocalImageInfo Inheritance Object LocalImageInfo Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class LocalImageInfo Properties FileInfo Declaration public FileSystemMetadata FileInfo { get; set; } Property Value Type Description FileSystemMetadata Type Declaration public ImageType Type { get; set; } Property Value Type Description ImageType"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.MetadataProviderPriority.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.MetadataProviderPriority.html",
    "title": "Enum MetadataProviderPriority",
    "keywords": "Enum MetadataProviderPriority Determines when a provider should execute, relative to others Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public enum MetadataProviderPriority Fields Name Description Fifth First The first Fourth The fourth Last The last Second The second Third The third Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<MetadataProviderPriority>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.MetadataRefreshMode.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.MetadataRefreshMode.html",
    "title": "Enum MetadataRefreshMode",
    "keywords": "Enum MetadataRefreshMode Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public enum MetadataRefreshMode Fields Name Description Default Providers will be executed based on default rules FullRefresh All providers will be executed to search for new metadata ValidationOnly Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<MetadataRefreshMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.MetadataRefreshOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.MetadataRefreshOptions.html",
    "title": "Class MetadataRefreshOptions",
    "keywords": "Class MetadataRefreshOptions Inheritance Object ImageRefreshOptions MetadataRefreshOptions Inherited Members ImageRefreshOptions.ImageRefreshMode ImageRefreshOptions.DirectoryService ImageRefreshOptions.ReplaceAllImages ImageRefreshOptions.IsAutomated Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class MetadataRefreshOptions : ImageRefreshOptions Constructors MetadataRefreshOptions(IDirectoryService) Declaration public MetadataRefreshOptions(IDirectoryService directoryService) Parameters Type Name Description IDirectoryService directoryService MetadataRefreshOptions(MetadataRefreshOptions) Declaration public MetadataRefreshOptions(MetadataRefreshOptions copy) Parameters Type Name Description MetadataRefreshOptions copy MetadataRefreshOptions(IFileSystem) Declaration public MetadataRefreshOptions(IFileSystem fileSystem) Parameters Type Name Description IFileSystem fileSystem Properties EnableRemoteContentProbe Declaration public bool EnableRemoteContentProbe { get; set; } Property Value Type Description Boolean EnableSubtitleDownloading Declaration public bool EnableSubtitleDownloading { get; set; } Property Value Type Description Boolean EnableThumbnailImageExtraction Declaration public bool EnableThumbnailImageExtraction { get; set; } Property Value Type Description Boolean ForceSave Declaration public bool ForceSave { get; set; } Property Value Type Description Boolean IsSecondPass Declaration public bool IsSecondPass { get; set; } Property Value Type Description Boolean MetadataRefreshMode Declaration public MetadataRefreshMode MetadataRefreshMode { get; set; } Property Value Type Description MetadataRefreshMode OverwriteLocalMetadataProviderIds Declaration public bool OverwriteLocalMetadataProviderIds { get; set; } Property Value Type Description Boolean RefreshPaths Declaration public string[] RefreshPaths { get; set; } Property Value Type Description String [] ReplaceAllMetadata When paired with MetadataRefreshMode=FullRefresh, all existing data will be overwritten with new data from the providers. Declaration public bool ReplaceAllMetadata { get; set; } Property Value Type Description Boolean SearchResult Declaration public RemoteSearchResult SearchResult { get; set; } Property Value Type Description RemoteSearchResult SearchResultItemId Declaration public long SearchResultItemId { get; set; } Property Value Type Description Int64 UpdateMetadataFromRelatedItems Declaration public bool UpdateMetadataFromRelatedItems { get; set; } Property Value Type Description Boolean Methods RefreshItem(BaseItem) Declaration public bool RefreshItem(BaseItem item) Parameters Type Name Description BaseItem item Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.MetadataResult-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.MetadataResult-1.html",
    "title": "Class MetadataResult<T>",
    "keywords": "Class MetadataResult<T> Inheritance Object BaseMetadataResult MetadataResult<T> Inherited Members BaseMetadataResult.Images BaseMetadataResult.UserDataList BaseMetadataResult.People BaseMetadataResult.ListItems BaseMetadataResult.MediaStreams BaseMetadataResult.Chapters BaseMetadataResult.HasMetadata BaseMetadataResult.ResultLanguage BaseMetadataResult.Provider BaseMetadataResult.QueriedById BaseMetadataResult.AddPerson(PersonInfo) BaseMetadataResult.ResetPeople() BaseMetadataResult.ToRemoteSearchResult(String) Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class MetadataResult<T> : BaseMetadataResult Type Parameters Name Description T Properties BaseItem Declaration public override BaseItem BaseItem { get; } Property Value Type Description BaseItem Overrides BaseMetadataResult.BaseItem Item Declaration public T Item { get; set; } Property Value Type Description T"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.MovieInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.MovieInfo.html",
    "title": "Class MovieInfo",
    "keywords": "Class MovieInfo Inheritance Object ItemLookupInfo MovieInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class MovieInfo : ItemLookupInfo, IHasProviderIds Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.MusicVideoInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.MusicVideoInfo.html",
    "title": "Class MusicVideoInfo",
    "keywords": "Class MusicVideoInfo Inheritance Object ItemLookupInfo MusicVideoInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class MusicVideoInfo : ItemLookupInfo, IHasProviderIds Properties Artists Declaration public string[] Artists { get; set; } Property Value Type Description String [] Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.PersonLookupInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.PersonLookupInfo.html",
    "title": "Class PersonLookupInfo",
    "keywords": "Class PersonLookupInfo Inheritance Object ItemLookupInfo PersonLookupInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class PersonLookupInfo : ItemLookupInfo, IHasProviderIds Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.RefreshPriority.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.RefreshPriority.html",
    "title": "Enum RefreshPriority",
    "keywords": "Enum RefreshPriority Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public enum RefreshPriority Fields Name Description High Highest Low Normal Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<RefreshPriority>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.RemoteImageFetchOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.RemoteImageFetchOptions.html",
    "title": "Class RemoteImageFetchOptions",
    "keywords": "Class RemoteImageFetchOptions Inheritance Object RemoteImageFetchOptions Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class RemoteImageFetchOptions Properties DirectoryService Declaration public IDirectoryService DirectoryService { get; set; } Property Value Type Description IDirectoryService Item Declaration public BaseItem Item { get; set; } Property Value Type Description BaseItem LibraryOptions Declaration public LibraryOptions LibraryOptions { get; set; } Property Value Type Description LibraryOptions"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.RemoteMetadataFetchOptions-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.RemoteMetadataFetchOptions-1.html",
    "title": "Class RemoteMetadataFetchOptions<TLookupInfoType>",
    "keywords": "Class RemoteMetadataFetchOptions<TLookupInfoType> Inheritance Object RemoteMetadataFetchOptions<TLookupInfoType> Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class RemoteMetadataFetchOptions<TLookupInfoType> where TLookupInfoType : ItemLookupInfo, new() Type Parameters Name Description TLookupInfoType Properties DirectoryService Declaration public IDirectoryService DirectoryService { get; set; } Property Value Type Description IDirectoryService SearchInfo Declaration public TLookupInfoType SearchInfo { get; set; } Property Value Type Description TLookupInfoType"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.RemoteSearchQuery-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.RemoteSearchQuery-1.html",
    "title": "Class RemoteSearchQuery<T>",
    "keywords": "Class RemoteSearchQuery<T> Inheritance Object RemoteSearchQuery<T> Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public class RemoteSearchQuery<T> where T : ItemLookupInfo Type Parameters Name Description T Properties IncludeDisabledProviders Gets or sets a value indicating whether [include disabled providers]. Declaration public bool IncludeDisabledProviders { get; set; } Property Value Type Description Boolean true if [include disabled providers]; otherwise, false . ItemId Declaration public long ItemId { get; set; } Property Value Type Description Int64 SearchInfo Declaration public T SearchInfo { get; set; } Property Value Type Description T SearchProviderName If set will only search within the given provider Declaration public string SearchProviderName { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.SeasonInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.SeasonInfo.html",
    "title": "Class SeasonInfo",
    "keywords": "Class SeasonInfo Inheritance Object ItemLookupInfo SeasonInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class SeasonInfo : ItemLookupInfo, IHasProviderIds Properties SeriesName Declaration public string SeriesName { get; set; } Property Value Type Description String SeriesProviderIds Declaration public ProviderIdDictionary SeriesProviderIds { get; set; } Property Value Type Description ProviderIdDictionary Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.SeriesInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.SeriesInfo.html",
    "title": "Class SeriesInfo",
    "keywords": "Class SeriesInfo Inheritance Object ItemLookupInfo SeriesInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class SeriesInfo : ItemLookupInfo, IHasProviderIds Properties DisplayOrder Declaration public SeriesDisplayOrder DisplayOrder { get; set; } Property Value Type Description SeriesDisplayOrder EpisodeAirDate Declaration public DateTimeOffset? EpisodeAirDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.SongInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.SongInfo.html",
    "title": "Class SongInfo",
    "keywords": "Class SongInfo Inheritance Object ItemLookupInfo SongInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class SongInfo : ItemLookupInfo, IHasProviderIds Properties Album Declaration public string Album { get; set; } Property Value Type Description String AlbumArtists Declaration public string[] AlbumArtists { get; set; } Property Value Type Description String [] Artists Declaration public string[] Artists { get; set; } Property Value Type Description String [] Composers Declaration public string[] Composers { get; set; } Property Value Type Description String [] Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.TrailerInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.TrailerInfo.html",
    "title": "Class TrailerInfo",
    "keywords": "Class TrailerInfo Inheritance Object ItemLookupInfo TrailerInfo Implements IHasProviderIds Inherited Members ItemLookupInfo.Name ItemLookupInfo.MetadataLanguage ItemLookupInfo.MetadataCountryCode ItemLookupInfo.ProviderIds ItemLookupInfo.Year ItemLookupInfo.IndexNumber ItemLookupInfo.ParentIndexNumber ItemLookupInfo.PremiereDate ItemLookupInfo.IsAutomated ItemLookupInfo.EnableAdultMetadata Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public sealed class TrailerInfo : ItemLookupInfo, IHasProviderIds Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Providers.VideoContentType.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Providers.VideoContentType.html",
    "title": "Enum VideoContentType",
    "keywords": "Enum VideoContentType Enum VideoContentType Namespace : MediaBrowser.Controller.Providers Assembly : MediaBrowser.Controller.dll Syntax public enum VideoContentType Fields Name Description Audio Episode The episode Movie The movie Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<VideoContentType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Resolvers.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Resolvers.html",
    "title": "Namespace MediaBrowser.Controller.Resolvers",
    "keywords": "Namespace MediaBrowser.Controller.Resolvers Classes ItemResolver<T> Class ItemResolver MultiItemResolverResult Interfaces IItemResolver Interface IItemResolver IMultiItemResolver Enums ResolverPriority Enum ResolverPriority"
  },
  "reference/pluginapi/MediaBrowser.Controller.Resolvers.IItemResolver.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Resolvers.IItemResolver.html",
    "title": "Interface IItemResolver",
    "keywords": "Interface IItemResolver Interface IItemResolver Namespace : MediaBrowser.Controller.Resolvers Assembly : MediaBrowser.Controller.dll Syntax public interface IItemResolver Properties Priority Gets the priority. Declaration ResolverPriority Priority { get; } Property Value Type Description ResolverPriority The priority. Methods ResolvePath(ItemResolveArgs) Resolves the path. Declaration BaseItem ResolvePath(ItemResolveArgs args) Parameters Type Name Description ItemResolveArgs args The args. Returns Type Description BaseItem BaseItem."
  },
  "reference/pluginapi/MediaBrowser.Controller.Resolvers.IMultiItemResolver.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Resolvers.IMultiItemResolver.html",
    "title": "Interface IMultiItemResolver",
    "keywords": "Interface IMultiItemResolver Namespace : MediaBrowser.Controller.Resolvers Assembly : MediaBrowser.Controller.dll Syntax public interface IMultiItemResolver Methods ResolveMultiple(Folder, List<FileSystemMetadata>, LibraryOptions, IDirectoryService) Declaration MultiItemResolverResult ResolveMultiple(Folder parent, List<FileSystemMetadata> files, LibraryOptions libraryOptions, IDirectoryService directoryService) Parameters Type Name Description Folder parent List < FileSystemMetadata > files LibraryOptions libraryOptions IDirectoryService directoryService Returns Type Description MultiItemResolverResult"
  },
  "reference/pluginapi/MediaBrowser.Controller.Resolvers.ItemResolver-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Resolvers.ItemResolver-1.html",
    "title": "Class ItemResolver<T>",
    "keywords": "Class ItemResolver<T> Class ItemResolver Inheritance Object ItemResolver<T> Implements IItemResolver Namespace : MediaBrowser.Controller.Resolvers Assembly : MediaBrowser.Controller.dll Syntax public abstract class ItemResolver<T> : IItemResolver where T : BaseItem, new() Type Parameters Name Description T Properties Priority Gets the priority. Declaration public virtual ResolverPriority Priority { get; } Property Value Type Description ResolverPriority The priority. Methods Resolve(ItemResolveArgs) Resolves the specified args. Declaration protected virtual T Resolve(ItemResolveArgs args) Parameters Type Name Description ItemResolveArgs args The args. Returns Type Description T `0. SetInitialItemValues(T, ItemResolveArgs) Sets initial values on the newly resolved item Declaration protected virtual void SetInitialItemValues(T item, ItemResolveArgs args) Parameters Type Name Description T item The item. ItemResolveArgs args The args. Explicit Interface Implementations IItemResolver.ResolvePath(ItemResolveArgs) Resolves the path. Declaration BaseItem IItemResolver.ResolvePath(ItemResolveArgs args) Parameters Type Name Description ItemResolveArgs args The args. Returns Type Description BaseItem BaseItem. Implements IItemResolver"
  },
  "reference/pluginapi/MediaBrowser.Controller.Resolvers.MultiItemResolverResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Resolvers.MultiItemResolverResult.html",
    "title": "Class MultiItemResolverResult",
    "keywords": "Class MultiItemResolverResult Inheritance Object MultiItemResolverResult Namespace : MediaBrowser.Controller.Resolvers Assembly : MediaBrowser.Controller.dll Syntax public sealed class MultiItemResolverResult Constructors MultiItemResolverResult() Declaration public MultiItemResolverResult() Properties ExtraFiles Declaration public List<FileSystemMetadata> ExtraFiles { get; set; } Property Value Type Description List < FileSystemMetadata > IsInMixedFolderSet Declaration public bool IsInMixedFolderSet { get; set; } Property Value Type Description Boolean Items Declaration public List<BaseItem> Items { get; set; } Property Value Type Description List < BaseItem >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Resolvers.ResolverPriority.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Resolvers.ResolverPriority.html",
    "title": "Enum ResolverPriority",
    "keywords": "Enum ResolverPriority Enum ResolverPriority Namespace : MediaBrowser.Controller.Resolvers Assembly : MediaBrowser.Controller.dll Syntax public enum ResolverPriority Fields Name Description First The first Fourth Last The last Second The second Third The third Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ResolverPriority>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sanitation.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sanitation.html",
    "title": "Namespace MediaBrowser.Controller.Sanitation",
    "keywords": "Namespace MediaBrowser.Controller.Sanitation Classes SanitiationStream TextTransformationStream Composable stream for line-by-line text transformation using a pull-model Interfaces ISanitationManager"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sanitation.ISanitationManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sanitation.ISanitationManager.html",
    "title": "Interface ISanitationManager",
    "keywords": "Interface ISanitationManager Namespace : MediaBrowser.Controller.Sanitation Assembly : MediaBrowser.Controller.dll Syntax public interface ISanitationManager Methods SanitizeSingleString(String, SanitationContentType) Declaration string SanitizeSingleString(string value, SanitationContentType sanitationType) Parameters Type Name Description String value SanitationContentType sanitationType Returns Type Description String SanitizeStream(Stream) Declaration Stream SanitizeStream(Stream sourceStream) Parameters Type Name Description Stream sourceStream Returns Type Description Stream"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sanitation.SanitiationStream.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sanitation.SanitiationStream.html",
    "title": "Class SanitiationStream",
    "keywords": "Class SanitiationStream Inheritance Object MarshalByRefObject Stream TextTransformationStream SanitiationStream Implements IDisposable Inherited Members TextTransformationStream.CanRead TextTransformationStream.CanSeek TextTransformationStream.CanWrite TextTransformationStream.Length TextTransformationStream.Position TextTransformationStream.Close() TextTransformationStream.Read(Byte[], Int32, Int32) TextTransformationStream.ReadAsync(Byte[], Int32, Int32, CancellationToken) TextTransformationStream.Write(Byte[], Int32, Int32) TextTransformationStream.Flush() TextTransformationStream.Seek(Int64, SeekOrigin) TextTransformationStream.SetLength(Int64) TextTransformationStream.Dispose(Boolean) Stream.Null Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object) Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object) Stream.CopyTo(Stream) Stream.CopyTo(Stream, Int32) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, Int32) Stream.CopyToAsync(Stream, Int32, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.ReadAsync(Byte[], Int32, Int32) Stream.ReadByte() Stream.Synchronized(Stream) Stream.WriteAsync(Byte[], Int32, Int32) Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken) Stream.WriteByte(Byte) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(Boolean) Namespace : MediaBrowser.Controller.Sanitation Assembly : MediaBrowser.Controller.dll Syntax public sealed class SanitiationStream : TextTransformationStream, IDisposable Constructors SanitiationStream(Stream, ISanitationManager, Encoding) Declaration public SanitiationStream(Stream sourceStream, ISanitationManager sanitationManager, Encoding encoding) Parameters Type Name Description Stream sourceStream ISanitationManager sanitationManager Encoding encoding Fields ZeroWidthJoiner Declaration public const char ZeroWidthJoiner = '‍' Field Value Type Description Char ZeroWidthNonJoiner Declaration public const char ZeroWidthNonJoiner = '‌' Field Value Type Description Char ZeroWidthSpace Declaration public const char ZeroWidthSpace = '​' Field Value Type Description Char Methods TransformLine(String) Declaration protected override string TransformLine(string line) Parameters Type Name Description String line Returns Type Description String Overrides TextTransformationStream.TransformLine(String) Implements System.IDisposable"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sanitation.TextTransformationStream.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sanitation.TextTransformationStream.html",
    "title": "Class TextTransformationStream",
    "keywords": "Class TextTransformationStream Composable stream for line-by-line text transformation using a pull-model Inheritance Object MarshalByRefObject Stream TextTransformationStream SanitiationStream Implements IDisposable Inherited Members Stream.Null Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object) Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object) Stream.CopyTo(Stream) Stream.CopyTo(Stream, Int32) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, Int32) Stream.CopyToAsync(Stream, Int32, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.ReadAsync(Byte[], Int32, Int32) Stream.ReadByte() Stream.Synchronized(Stream) Stream.WriteAsync(Byte[], Int32, Int32) Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken) Stream.WriteByte(Byte) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(Boolean) Namespace : MediaBrowser.Controller.Sanitation Assembly : MediaBrowser.Controller.dll Syntax public abstract class TextTransformationStream : Stream, IDisposable Constructors TextTransformationStream(Stream, Encoding) Declaration protected TextTransformationStream(Stream sourceStream, Encoding encoding) Parameters Type Name Description Stream sourceStream Encoding encoding Properties CanRead Declaration public override bool CanRead { get; } Property Value Type Description Boolean Overrides Stream.CanRead CanSeek Declaration public override bool CanSeek { get; } Property Value Type Description Boolean Overrides Stream.CanSeek CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description Boolean Overrides Stream.CanWrite Length Declaration public override long Length { get; } Property Value Type Description Int64 Overrides Stream.Length Position Declaration public override long Position { get; set; } Property Value Type Description Int64 Overrides Stream.Position Methods Close() Declaration public override void Close() Overrides Stream.Close() Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides Stream.Dispose(Boolean) Flush() Declaration public override void Flush() Overrides Stream.Flush() Read(Byte[], Int32, Int32) Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Returns Type Description Int32 Overrides Stream.Read(Byte[], Int32, Int32) ReadAsync(Byte[], Int32, Int32, CancellationToken) Declaration public override async Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count CancellationToken cancellationToken Returns Type Description Task < Int32 > Overrides Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken) Seek(Int64, SeekOrigin) Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description Int64 offset SeekOrigin origin Returns Type Description Int64 Overrides Stream.Seek(Int64, SeekOrigin) SetLength(Int64) Declaration public override void SetLength(long value) Parameters Type Name Description Int64 value Overrides Stream.SetLength(Int64) TransformLine(String) Declaration protected abstract string TransformLine(string line) Parameters Type Name Description String line Returns Type Description String Write(Byte[], Int32, Int32) When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written. Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer An array of bytes. This method copies count bytes from buffer to the current stream. Int32 offset The zero-based byte offset in buffer at which to begin copying bytes to the current stream. Int32 count The number of bytes to be written to the current stream. Overrides Stream.Write(Byte[], Int32, Int32) Exceptions Type Condition ArgumentException The sum of offset and count is greater than the buffer length. ArgumentNullException buffer is null. ArgumentOutOfRangeException offset or count is negative. IOException An I/O error occured, such as the specified file cannot be found. NotSupportedException The stream does not support writing. ObjectDisposedException Write(Byte[], Int32, Int32) was called after the stream was closed. Implements System.IDisposable See Also Stream"
  },
  "reference/pluginapi/MediaBrowser.Controller.Security.AuthenticationInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Security.AuthenticationInfo.html",
    "title": "Class AuthenticationInfo",
    "keywords": "Class AuthenticationInfo Inheritance Object AuthenticationInfo Namespace : MediaBrowser.Controller.Security Assembly : MediaBrowser.Controller.dll Syntax public sealed class AuthenticationInfo Properties AccessToken Gets or sets the access token. Declaration public string AccessToken { get; set; } Property Value Type Description String The access token. AppName Gets or sets the name of the application. Declaration public string AppName { get; set; } Property Value Type Description String The name of the application. AppVersion Gets or sets the application version. Declaration public string AppVersion { get; set; } Property Value Type Description String The application version. DateCreated Gets or sets the date created. Declaration public DateTimeOffset DateCreated { get; set; } Property Value Type Description DateTimeOffset The date created. DateLastActivity Declaration public DateTimeOffset DateLastActivity { get; set; } Property Value Type Description DateTimeOffset DeviceId Declaration public long DeviceId { get; set; } Property Value Type Description Int64 DeviceName Gets or sets the name of the device. Declaration public string DeviceName { get; set; } Property Value Type Description String The name of the device. Id Gets or sets the identifier. Declaration public long Id { get; set; } Property Value Type Description Int64 The identifier. IsActive Declaration public bool IsActive { get; set; } Property Value Type Description Boolean ReportedDeviceId Gets or sets the device identifier. Declaration public string ReportedDeviceId { get; set; } Property Value Type Description String The device identifier. UserId Gets or sets the user identifier. Declaration public long UserId { get; set; } Property Value Type Description Int64 The user identifier."
  },
  "reference/pluginapi/MediaBrowser.Controller.Security.AuthenticationInfoQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Security.AuthenticationInfoQuery.html",
    "title": "Class AuthenticationInfoQuery",
    "keywords": "Class AuthenticationInfoQuery Inheritance Object AuthenticationInfoQuery Namespace : MediaBrowser.Controller.Security Assembly : MediaBrowser.Controller.dll Syntax public sealed class AuthenticationInfoQuery Properties AccessToken Gets or sets the access token. Declaration public string AccessToken { get; set; } Property Value Type Description String The access token. DeviceId Gets or sets the device identifier. Declaration public long DeviceId { get; set; } Property Value Type Description Int64 The device identifier. GroupByDeviceId Declaration public bool GroupByDeviceId { get; set; } Property Value Type Description Boolean HasUser Gets or sets a value indicating whether this instance has user. Declaration public bool? HasUser { get; set; } Property Value Type Description Nullable < Boolean > null if [has user] contains no value, true if [has user]; otherwise, false . Limit Gets or sets the limit. Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > The limit. ReportedDeviceId Declaration public string ReportedDeviceId { get; set; } Property Value Type Description String StartIndex Gets or sets the start index. Declaration public int? StartIndex { get; set; } Property Value Type Description Nullable < Int32 > The start index. SupportsSync Declaration public bool? SupportsSync { get; set; } Property Value Type Description Nullable < Boolean > UserId Gets or sets the user identifier. Declaration public long UserId { get; set; } Property Value Type Description Int64 The user identifier."
  },
  "reference/pluginapi/MediaBrowser.Controller.Security.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Security.html",
    "title": "Namespace MediaBrowser.Controller.Security",
    "keywords": "Namespace MediaBrowser.Controller.Security Classes AuthenticationInfo AuthenticationInfoQuery Interfaces IAuthenticationRepository IEncryptionManager"
  },
  "reference/pluginapi/MediaBrowser.Controller.Security.IAuthenticationRepository.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Security.IAuthenticationRepository.html",
    "title": "Interface IAuthenticationRepository",
    "keywords": "Interface IAuthenticationRepository Namespace : MediaBrowser.Controller.Security Assembly : MediaBrowser.Controller.dll Syntax public interface IAuthenticationRepository Methods Create(AuthenticationInfo) Creates the specified information. Declaration void Create(AuthenticationInfo info) Parameters Type Name Description AuthenticationInfo info The information. Delete(AuthenticationInfo) Declaration void Delete(AuthenticationInfo existing) Parameters Type Name Description AuthenticationInfo existing Get(AuthenticationInfoQuery) Gets the specified query. Declaration QueryResult<AuthenticationInfo> Get(AuthenticationInfoQuery query) Parameters Type Name Description AuthenticationInfoQuery query The query. Returns Type Description QueryResult < AuthenticationInfo > QueryResult{AuthenticationInfo}. GetCapabilities(Int64) Declaration ClientCapabilities GetCapabilities(long deviceId) Parameters Type Name Description Int64 deviceId Returns Type Description ClientCapabilities GetDeviceOptions(Int64) Declaration DeviceOptions GetDeviceOptions(long deviceId) Parameters Type Name Description Int64 deviceId Returns Type Description DeviceOptions GetInternalId(String) Declaration long GetInternalId(string reportedDeviceId) Parameters Type Name Description String reportedDeviceId Returns Type Description Int64 GetUserHistory(String) Declaration long[] GetUserHistory(string reportedDevceId) Parameters Type Name Description String reportedDevceId Returns Type Description Int64 [] SetInactive(AuthenticationInfo) Declaration void SetInactive(AuthenticationInfo existing) Parameters Type Name Description AuthenticationInfo existing Update(AuthenticationInfo) Updates the specified information. Declaration void Update(AuthenticationInfo info) Parameters Type Name Description AuthenticationInfo info The information. Update(AuthenticationInfo, Boolean) Declaration void Update(AuthenticationInfo info, bool updateDeviceProperties) Parameters Type Name Description AuthenticationInfo info Boolean updateDeviceProperties UpdateCapabilities(Int64, ClientCapabilities) Declaration void UpdateCapabilities(long devceId, ClientCapabilities capabilities) Parameters Type Name Description Int64 devceId ClientCapabilities capabilities UpdateDeviceOptions(Int64, DeviceOptions) Declaration void UpdateDeviceOptions(long devceId, DeviceOptions options) Parameters Type Name Description Int64 devceId DeviceOptions options"
  },
  "reference/pluginapi/MediaBrowser.Controller.Security.IEncryptionManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Security.IEncryptionManager.html",
    "title": "Interface IEncryptionManager",
    "keywords": "Interface IEncryptionManager Namespace : MediaBrowser.Controller.Security Assembly : MediaBrowser.Controller.dll Syntax public interface IEncryptionManager Methods DecryptString(String) Decrypts the string. Declaration string DecryptString(string value) Parameters Type Name Description String value The value. Returns Type Description String System.String. EncryptString(String) Encrypts the string. Declaration string EncryptString(string value) Parameters Type Name Description String value The value. Returns Type Description String System.String."
  },
  "reference/pluginapi/MediaBrowser.Controller.Session.AuthenticationRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Session.AuthenticationRequest.html",
    "title": "Class AuthenticationRequest",
    "keywords": "Class AuthenticationRequest Inheritance Object AuthenticationRequest Namespace : MediaBrowser.Controller.Session Assembly : MediaBrowser.Controller.dll Syntax public sealed class AuthenticationRequest Properties App Declaration public string App { get; set; } Property Value Type Description String AppVersion Declaration public string AppVersion { get; set; } Property Value Type Description String DeviceId Declaration public string DeviceId { get; set; } Property Value Type Description String DeviceName Declaration public string DeviceName { get; set; } Property Value Type Description String Password Declaration public string Password { get; set; } Property Value Type Description String Protocol Declaration public string Protocol { get; set; } Property Value Type Description String RemoteAddress Declaration public IPAddress RemoteAddress { get; set; } Property Value Type Description IPAddress UserId Declaration public long UserId { get; set; } Property Value Type Description Int64 Username Declaration public string Username { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Session.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Session.html",
    "title": "Namespace MediaBrowser.Controller.Session",
    "keywords": "Namespace MediaBrowser.Controller.Session Classes AuthenticationRequest SessionEventArgs SessionInfo Class SessionInfo Interfaces ISessionController ISessionManager Interface ISessionManager"
  },
  "reference/pluginapi/MediaBrowser.Controller.Session.ISessionController.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Session.ISessionController.html",
    "title": "Interface ISessionController",
    "keywords": "Interface ISessionController Namespace : MediaBrowser.Controller.Session Assembly : MediaBrowser.Controller.dll Syntax public interface ISessionController Properties IsSessionActive Gets a value indicating whether this instance is session active. Declaration bool IsSessionActive { get; } Property Value Type Description Boolean true if this instance is session active; otherwise, false . Priority Declaration int Priority { get; } Property Value Type Description Int32 SupportsMediaControl Gets a value indicating whether [supports media remote control]. Declaration bool SupportsMediaControl { get; } Property Value Type Description Boolean true if [supports media remote control]; otherwise, false . Methods SendMessage<T>(ReadOnlyMemory<Char>, String, T, CancellationToken) Sends the message. Declaration Task SendMessage<T>(ReadOnlyMemory<char> name, string messageId, T data, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Char > name String messageId T data CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T SupportsMessage(ReadOnlySpan<Char>) Declaration bool SupportsMessage(ReadOnlySpan<char> name) Parameters Type Name Description ReadOnlySpan < Char > name Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Session.ISessionManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Session.ISessionManager.html",
    "title": "Interface ISessionManager",
    "keywords": "Interface ISessionManager Interface ISessionManager Namespace : MediaBrowser.Controller.Session Assembly : MediaBrowser.Controller.dll Syntax public interface ISessionManager Properties Sessions Gets the sessions. Declaration IEnumerable<SessionInfo> Sessions { get; } Property Value Type Description IEnumerable < SessionInfo > The sessions. Methods AddAdditionalUser(String, Int64) Adds the additional user. Declaration void AddAdditionalUser(string sessionId, long userId) Parameters Type Name Description String sessionId The session identifier. Int64 userId The user identifier. AuthenticateNewSession(AuthenticationRequest, CancellationToken) Authenticates the new session. Declaration Task<AuthenticationResult> AuthenticateNewSession(AuthenticationRequest request, CancellationToken cancellationToken) Parameters Type Name Description AuthenticationRequest request CancellationToken cancellationToken Returns Type Description Task < AuthenticationResult > ClearTranscodingInfo(String, String) Clears the transcoding information. Declaration void ClearTranscodingInfo(string reportedDeviceId, string playSessionId) Parameters Type Name Description String reportedDeviceId The device identifier. String playSessionId The play session identifier. CloseIfNeeded(SessionInfo) Declaration void CloseIfNeeded(SessionInfo session) Parameters Type Name Description SessionInfo session CreateNewSession(AuthenticationRequest, CancellationToken) Creates the new session. Declaration Task<AuthenticationResult> CreateNewSession(AuthenticationRequest request, CancellationToken cancellationToken) Parameters Type Name Description AuthenticationRequest request CancellationToken cancellationToken Returns Type Description Task < AuthenticationResult > GetSession(String, String, String) Gets the session. Declaration SessionInfo GetSession(string reportedDeviceId, string client, string version) Parameters Type Name Description String reportedDeviceId The device identifier. String client The client. String version The version. Returns Type Description SessionInfo SessionInfo. GetSessionByAuthenticationToken(AuthenticationInfo, String, IPAddress, String, String) Gets the session by authentication token. Declaration SessionInfo GetSessionByAuthenticationToken(AuthenticationInfo info, string reportedDeviceId, IPAddress remoteAddress, string protocol, string appVersion) Parameters Type Name Description AuthenticationInfo info The information. String reportedDeviceId The device identifier. IPAddress remoteAddress The remote endpoint. String protocol String appVersion The application version. Returns Type Description SessionInfo Task<SessionInfo>. GetSessionByAuthenticationToken(String, String, IPAddress, String) Gets the session by authentication token. Declaration SessionInfo GetSessionByAuthenticationToken(string token, string reportedDeviceId, IPAddress remoteAddress, string protocol) Parameters Type Name Description String token The token. String reportedDeviceId The device identifier. IPAddress remoteAddress The remote endpoint. String protocol Returns Type Description SessionInfo SessionInfo. Logout(AuthenticationInfo) Declaration void Logout(AuthenticationInfo authenticationInfo) Parameters Type Name Description AuthenticationInfo authenticationInfo Logout(String) Logouts the specified access token. Declaration void Logout(string accessToken) Parameters Type Name Description String accessToken The access token. LogSessionActivity(String, String, Int64, String, String, IPAddress, String, User) Logs the user activity. Declaration SessionInfo LogSessionActivity(string appName, string appVersion, long deviceId, string reportedDeviceId, string deviceName, IPAddress remoteAddress, string protocol, User user) Parameters Type Name Description String appName String appVersion Int64 deviceId String reportedDeviceId String deviceName IPAddress remoteAddress String protocol User user Returns Type Description SessionInfo LogSessionActivity(String, String, String, String, String, User) Declaration SessionInfo LogSessionActivity(string appName, string appVersion, string reportedDeviceId, string deviceName, string remoteAddress, User user) Parameters Type Name Description String appName String appVersion String reportedDeviceId String deviceName String remoteAddress User user Returns Type Description SessionInfo OnPlaybackProgress(PlaybackProgressInfo) Used to report playback progress for an item Declaration Task OnPlaybackProgress(PlaybackProgressInfo info) Parameters Type Name Description PlaybackProgressInfo info The info. Returns Type Description Task Task. Exceptions Type Condition ArgumentNullException OnPlaybackProgress(PlaybackProgressInfo, Boolean) Declaration Task OnPlaybackProgress(PlaybackProgressInfo info, bool isAutomated) Parameters Type Name Description PlaybackProgressInfo info Boolean isAutomated Returns Type Description Task OnPlaybackStart(PlaybackStartInfo) Used to report that playback has started for an item Declaration Task OnPlaybackStart(PlaybackStartInfo info) Parameters Type Name Description PlaybackStartInfo info The info. Returns Type Description Task Task. OnPlaybackStopped(PlaybackStopInfo) Used to report that playback has ended for an item Declaration Task OnPlaybackStopped(PlaybackStopInfo info) Parameters Type Name Description PlaybackStopInfo info The info. Returns Type Description Task Task. Exceptions Type Condition ArgumentNullException PingSession(String, String) Declaration void PingSession(string reportedDeviceId, string playSessionId) Parameters Type Name Description String reportedDeviceId String playSessionId RemoveAdditionalUser(String, Int64) Removes the additional user. Declaration void RemoveAdditionalUser(string sessionId, long userId) Parameters Type Name Description String sessionId The session identifier. Int64 userId The user identifier. ReportCapabilities(String, ClientCapabilities) Reports the capabilities. Declaration void ReportCapabilities(string sessionId, ClientCapabilities capabilities) Parameters Type Name Description String sessionId The session identifier. ClientCapabilities capabilities The capabilities. ReportNowViewingItem(String, BaseItemDto) Reports the now viewing item. Declaration void ReportNowViewingItem(string sessionId, BaseItemDto item) Parameters Type Name Description String sessionId The session identifier. BaseItemDto item The item. ReportNowViewingItem(String, String) Reports the now viewing item. Declaration void ReportNowViewingItem(string sessionId, string itemId) Parameters Type Name Description String sessionId The session identifier. String itemId The item identifier. ReportRemoteControlDisconnectedIfNeeded(SessionInfo) Declaration void ReportRemoteControlDisconnectedIfNeeded(SessionInfo session) Parameters Type Name Description SessionInfo session ReportSessionEnded(String) Reports the session ended. Declaration void ReportSessionEnded(string sessionId) Parameters Type Name Description String sessionId The session identifier. ReportTranscodingInfo(String, String, TranscodingInfo) Reports the transcoding information. Declaration void ReportTranscodingInfo(string reportedDeviceId, string playSessionId, TranscodingInfo info) Parameters Type Name Description String reportedDeviceId The device identifier. String playSessionId The play session identifier. TranscodingInfo info The information. RevokeToken(String) Revokes the token. Declaration void RevokeToken(string id) Parameters Type Name Description String id RevokeUserTokens(Int64, String) Revokes the user tokens. Declaration void RevokeUserTokens(long userId, string currentAccessToken) Parameters Type Name Description Int64 userId String currentAccessToken SendBrowseCommand(String, String, BrowseRequest, CancellationToken) Sends the browse command. Declaration Task SendBrowseCommand(string controllingSessionId, string sessionId, BrowseRequest command, CancellationToken cancellationToken) Parameters Type Name Description String controllingSessionId The controlling session identifier. String sessionId The session id. BrowseRequest command The command. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. SendGeneralCommand(String, String, GeneralCommand, CancellationToken) Sends the general command. Declaration Task SendGeneralCommand(string controllingSessionId, string sessionId, GeneralCommand command, CancellationToken cancellationToken) Parameters Type Name Description String controllingSessionId The controlling session identifier. String sessionId The session identifier. GeneralCommand command The command. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. SendMessageCommand(String, String, MessageCommand, CancellationToken) Sends the message command. Declaration Task SendMessageCommand(string controllingSessionId, string sessionId, MessageCommand command, CancellationToken cancellationToken) Parameters Type Name Description String controllingSessionId The controlling session identifier. String sessionId The session id. MessageCommand command The command. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. SendMessageToAdminSessions<T>(String, T, CancellationToken) Sends the message to admin sessions. Declaration Task SendMessageToAdminSessions<T>(string name, T data, CancellationToken cancellationToken) Parameters Type Name Description String name The name. T data The data. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. Type Parameters Name Description T SendMessageToUserDeviceAndAdminSessions<T>(String, String, T, CancellationToken) Declaration Task SendMessageToUserDeviceAndAdminSessions<T>(string reportedDeviceId, string name, T data, CancellationToken cancellationToken) Parameters Type Name Description String reportedDeviceId String name T data CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T SendMessageToUserDeviceSessions<T>(String, String, T, CancellationToken) Sends the message to user device sessions. Declaration Task SendMessageToUserDeviceSessions<T>(string reportedDeviceId, string name, T data, CancellationToken cancellationToken) Parameters Type Name Description String reportedDeviceId The device identifier. String name The name. T data The data. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. Type Parameters Name Description T SendMessageToUserSessions<T>(Int64[], String, T, CancellationToken) Sends the message to user sessions. Declaration Task SendMessageToUserSessions<T>(long[] userIds, string name, T data, CancellationToken cancellationToken) Parameters Type Name Description Int64 [] userIds String name T data CancellationToken cancellationToken Returns Type Description Task Task. Type Parameters Name Description T SendMessageToUserSessions<T>(Int64[], String, Func<T>, CancellationToken) Declaration Task SendMessageToUserSessions<T>(long[] userIds, string name, Func<T> dataFn, CancellationToken cancellationToken) Parameters Type Name Description Int64 [] userIds String name Func <T> dataFn CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description T SendPlayCommand(String, String, PlayRequest, CancellationToken) Sends the play command. Declaration Task SendPlayCommand(string controllingSessionId, string sessionId, PlayRequest command, CancellationToken cancellationToken) Parameters Type Name Description String controllingSessionId The controlling session identifier. String sessionId The session id. PlayRequest command The command. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. SendPlaystateCommand(String, String, PlaystateRequest, CancellationToken) Sends the playstate command. Declaration Task SendPlaystateCommand(string controllingSessionId, string sessionId, PlaystateRequest command, CancellationToken cancellationToken) Parameters Type Name Description String controllingSessionId The controlling session identifier. String sessionId The session id. PlaystateRequest command The command. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. SendRestartRequiredNotification(CancellationToken) Sends the restart required message. Declaration Task SendRestartRequiredNotification(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. SendServerRestartNotification(CancellationToken) Sends the server restart notification. Declaration Task SendServerRestartNotification(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. SendServerShutdownNotification(CancellationToken) Sends the server shutdown notification. Declaration Task SendServerShutdownNotification(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Returns Type Description Task Task. UpdateDeviceName(String, String) Declaration void UpdateDeviceName(string sessionId, string reportedDeviceName) Parameters Type Name Description String sessionId String reportedDeviceName Events AuthenticationFailed Occurs when [authentication failed]. Declaration event EventHandler<GenericEventArgs<AuthenticationRequest>> AuthenticationFailed Event Type Type Description EventHandler < GenericEventArgs < AuthenticationRequest >> AuthenticationSucceeded Occurs when [authentication succeeded]. Declaration event EventHandler<GenericEventArgs<AuthenticationResult>> AuthenticationSucceeded Event Type Type Description EventHandler < GenericEventArgs < AuthenticationResult >> CapabilitiesChanged Occurs when [capabilities changed]. Declaration event EventHandler<SessionEventArgs> CapabilitiesChanged Event Type Type Description EventHandler < SessionEventArgs > PlaybackProgress Occurs when [playback progress]. Declaration event EventHandler<PlaybackProgressEventArgs> PlaybackProgress Event Type Type Description EventHandler < PlaybackProgressEventArgs > PlaybackStart Occurs when [playback start]. Declaration event EventHandler<PlaybackProgressEventArgs> PlaybackStart Event Type Type Description EventHandler < PlaybackProgressEventArgs > PlaybackStopped Occurs when [playback stopped]. Declaration event EventHandler<PlaybackStopEventArgs> PlaybackStopped Event Type Type Description EventHandler < PlaybackStopEventArgs > RemoteControlDisconnected Declaration event EventHandler<SessionEventArgs> RemoteControlDisconnected Event Type Type Description EventHandler < SessionEventArgs > SessionActivity Declaration event EventHandler<SessionEventArgs> SessionActivity Event Type Type Description EventHandler < SessionEventArgs > SessionEnded Occurs when [session ended]. Declaration event EventHandler<SessionEventArgs> SessionEnded Event Type Type Description EventHandler < SessionEventArgs > SessionStarted Occurs when [session started]. Declaration event EventHandler<SessionEventArgs> SessionStarted Event Type Type Description EventHandler < SessionEventArgs >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Session.SessionEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Session.SessionEventArgs.html",
    "title": "Class SessionEventArgs",
    "keywords": "Class SessionEventArgs Inheritance Object EventArgs SessionEventArgs Inherited Members EventArgs.Empty Namespace : MediaBrowser.Controller.Session Assembly : MediaBrowser.Controller.dll Syntax public sealed class SessionEventArgs : EventArgs Properties SessionInfo Declaration public SessionInfo SessionInfo { get; set; } Property Value Type Description SessionInfo"
  },
  "reference/pluginapi/MediaBrowser.Controller.Session.SessionInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Session.SessionInfo.html",
    "title": "Class SessionInfo",
    "keywords": "Class SessionInfo Class SessionInfo Inheritance Object SessionInfo Implements IDisposable Namespace : MediaBrowser.Controller.Session Assembly : MediaBrowser.Controller.dll Syntax public sealed class SessionInfo : IDisposable Constructors SessionInfo() Declaration public SessionInfo() SessionInfo(ISessionManager, ILogger, IMediaSourceManager) Declaration public SessionInfo(ISessionManager sessionManager, ILogger logger, IMediaSourceManager mediaSourceManager) Parameters Type Name Description ISessionManager sessionManager ILogger logger IMediaSourceManager mediaSourceManager Properties AdditionalUsers Declaration public SessionUserInfo[] AdditionalUsers { get; set; } Property Value Type Description SessionUserInfo [] AppIconUrl Gets or sets the application icon URL. Declaration public string AppIconUrl { get; } Property Value Type Description String The application icon URL. ApplicationVersion Gets or sets the application version. Declaration public string ApplicationVersion { get; set; } Property Value Type Description String The application version. Capabilities Declaration [IgnoreDataMember] public ClientCapabilities Capabilities { get; set; } Property Value Type Description ClientCapabilities Client Gets or sets the type of the client. Declaration public string Client { get; set; } Property Value Type Description String The type of the client. DeviceId Gets or sets the device id. Declaration public string DeviceId { get; set; } Property Value Type Description String The device id. DeviceName Gets or sets the name of the device. Declaration public string DeviceName { get; set; } Property Value Type Description String The name of the device. DeviceType Declaration public string DeviceType { get; set; } Property Value Type Description String FullNowPlayingItem Declaration [IgnoreDataMember] public BaseItem FullNowPlayingItem { get; set; } Property Value Type Description BaseItem HasCustomDeviceName Declaration [IgnoreDataMember] public bool HasCustomDeviceName { get; set; } Property Value Type Description Boolean HasUser Declaration [IgnoreDataMember] public bool HasUser { get; } Property Value Type Description Boolean Id Gets or sets the id. Declaration public string Id { get; set; } Property Value Type Description String The id. InternalDeviceId Declaration public long InternalDeviceId { get; set; } Property Value Type Description Int64 IsActive Gets a value indicating whether this instance is active. Declaration [IgnoreDataMember] public bool IsActive { get; } Property Value Type Description Boolean true if this instance is active; otherwise, false . LastActivityDate Gets or sets the last activity date. Declaration public DateTimeOffset LastActivityDate { get; set; } Property Value Type Description DateTimeOffset The last activity date. LastPingTime Gets or sets the last playback check in. Declaration [IgnoreDataMember] public DateTimeOffset LastPingTime { get; set; } Property Value Type Description DateTimeOffset The last playback check in. NowPlayingItem Gets or sets the now playing item. Declaration public BaseItemDto NowPlayingItem { get; set; } Property Value Type Description BaseItemDto The now playing item. NowPlayingQueue Declaration [IgnoreDataMember] public QueueItem[] NowPlayingQueue { get; set; } Property Value Type Description QueueItem [] PlayableMediaTypes Gets or sets the playable media types. Declaration public string[] PlayableMediaTypes { get; } Property Value Type Description String [] The playable media types. PlaylistIndex Declaration public int PlaylistIndex { get; set; } Property Value Type Description Int32 PlaylistItemId Declaration public string PlaylistItemId { get; set; } Property Value Type Description String PlaylistLength Declaration public int PlaylistLength { get; set; } Property Value Type Description Int32 PlayState Declaration public PlayerStateInfo PlayState { get; set; } Property Value Type Description PlayerStateInfo Protocol Declaration public string Protocol { get; set; } Property Value Type Description String RemoteEndPoint Gets or sets the remote end point. Declaration public IPAddress RemoteEndPoint { get; set; } Property Value Type Description IPAddress The remote end point. ServerId Declaration public string ServerId { get; set; } Property Value Type Description String SessionControllers Gets or sets the session controller. Declaration [IgnoreDataMember] public ISessionController[] SessionControllers { get; set; } Property Value Type Description ISessionController [] The session controller. SupportedCommands Gets or sets the supported commands. Declaration public string[] SupportedCommands { get; } Property Value Type Description String [] The supported commands. SupportsRemoteControl Declaration public bool SupportsRemoteControl { get; } Property Value Type Description Boolean TranscodingInfo Declaration public TranscodingInfo TranscodingInfo { get; set; } Property Value Type Description TranscodingInfo UserId Gets or sets the user id. Declaration public string UserId { get; set; } Property Value Type Description String The user id. UserInternalId Declaration [IgnoreDataMember] public long UserInternalId { get; set; } Property Value Type Description Int64 UserName Gets or sets the username. Declaration public string UserName { get; set; } Property Value Type Description String The username. UserPrimaryImageTag Declaration public string UserPrimaryImageTag { get; set; } Property Value Type Description String Methods AddController(ISessionController) Declaration public void AddController(ISessionController controller) Parameters Type Name Description ISessionController controller ContainsUser(Int64) Declaration public bool ContainsUser(long userId) Parameters Type Name Description Int64 userId Returns Type Description Boolean Dispose() Declaration public void Dispose() EnsureController<T>(Func<SessionInfo, ISessionController>) Declaration public Tuple<ISessionController, bool> EnsureController<T>(Func<SessionInfo, ISessionController> factory) Parameters Type Name Description Func < SessionInfo , ISessionController > factory Returns Type Description Tuple < ISessionController , Boolean > Type Parameters Name Description T IsControllableByUser(User, Boolean) Declaration public bool IsControllableByUser(User user, bool allowAllForAdmins) Parameters Type Name Description User user Boolean allowAllForAdmins Returns Type Description Boolean Ping(String) Declaration public void Ping(string playSessionId) Parameters Type Name Description String playSessionId ReportTranscodingInfo(TranscodingInfo, String) Declaration public void ReportTranscodingInfo(TranscodingInfo info, string playSessionId) Parameters Type Name Description TranscodingInfo info String playSessionId StartAutomaticProgress(PlaybackProgressInfo) Declaration public void StartAutomaticProgress(PlaybackProgressInfo progressInfo) Parameters Type Name Description PlaybackProgressInfo progressInfo StopAutomaticProgress() Declaration public void StopAutomaticProgress() Implements System.IDisposable"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sorting.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sorting.html",
    "title": "Namespace MediaBrowser.Controller.Sorting",
    "keywords": "Namespace MediaBrowser.Controller.Sorting Classes SortExtensions SortHelper"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sorting.SortExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sorting.SortExtensions.html",
    "title": "Class SortExtensions",
    "keywords": "Class SortExtensions Inheritance Object SortExtensions Namespace : MediaBrowser.Controller.Sorting Assembly : MediaBrowser.Controller.dll Syntax public static class SortExtensions Methods OrderByString<T>(IEnumerable<T>, Func<T, String>) Declaration public static IEnumerable<T> OrderByString<T>(this IEnumerable<T> list, Func<T, string> getName) Parameters Type Name Description IEnumerable <T> list Func <T, String > getName Returns Type Description IEnumerable <T> Type Parameters Name Description T OrderByStringDescending<T>(IEnumerable<T>, Func<T, String>) Declaration public static IEnumerable<T> OrderByStringDescending<T>(this IEnumerable<T> list, Func<T, string> getName) Parameters Type Name Description IEnumerable <T> list Func <T, String > getName Returns Type Description IEnumerable <T> Type Parameters Name Description T ThenByString<T>(IOrderedEnumerable<T>, Func<T, String>) Declaration public static IOrderedEnumerable<T> ThenByString<T>(this IOrderedEnumerable<T> list, Func<T, string> getName) Parameters Type Name Description IOrderedEnumerable <T> list Func <T, String > getName Returns Type Description IOrderedEnumerable <T> Type Parameters Name Description T ThenByStringDescending<T>(IOrderedEnumerable<T>, Func<T, String>) Declaration public static IOrderedEnumerable<T> ThenByStringDescending<T>(this IOrderedEnumerable<T> list, Func<T, string> getName) Parameters Type Name Description IOrderedEnumerable <T> list Func <T, String > getName Returns Type Description IOrderedEnumerable <T> Type Parameters Name Description T"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sorting.SortHelper.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sorting.SortHelper.html",
    "title": "Class SortHelper",
    "keywords": "Class SortHelper Inheritance Object SortHelper Namespace : MediaBrowser.Controller.Sorting Assembly : MediaBrowser.Controller.dll Syntax public static class SortHelper Methods InChunk(Char, Char) Declaration public static bool InChunk(char ch, char otherCh) Parameters Type Name Description Char ch Char otherCh Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Controller.Subtitles.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Subtitles.html",
    "title": "Namespace MediaBrowser.Controller.Subtitles",
    "keywords": "Namespace MediaBrowser.Controller.Subtitles Classes SubtitleDownloadEventArgs SubtitleDownloadFailureEventArgs SubtitleResponse SubtitleSearchRequest Interfaces ISubtitleManager ISubtitleProvider"
  },
  "reference/pluginapi/MediaBrowser.Controller.Subtitles.ISubtitleManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Subtitles.ISubtitleManager.html",
    "title": "Interface ISubtitleManager",
    "keywords": "Interface ISubtitleManager Namespace : MediaBrowser.Controller.Subtitles Assembly : MediaBrowser.Controller.dll Syntax public interface ISubtitleManager Methods AddParts(IEnumerable<ISubtitleProvider>) Adds the parts. Declaration void AddParts(IEnumerable<ISubtitleProvider> subtitleProviders) Parameters Type Name Description IEnumerable < ISubtitleProvider > subtitleProviders The subtitle providers. DeleteSubtitles(BaseItem, Int32) Deletes the subtitles. Declaration Task DeleteSubtitles(BaseItem item, int index) Parameters Type Name Description BaseItem item Int32 index Returns Type Description Task DownloadSubtitles(BaseItem, String, LibraryOptions, CancellationToken) Downloads the subtitles. Declaration Task<string> DownloadSubtitles(BaseItem item, string subtitleId, LibraryOptions libraryOptions, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item String subtitleId LibraryOptions libraryOptions CancellationToken cancellationToken Returns Type Description Task < String > DownloadSubtitles(BaseItem, String, CancellationToken) Downloads the subtitles. Declaration Task<string> DownloadSubtitles(BaseItem item, string subtitleId, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item String subtitleId CancellationToken cancellationToken Returns Type Description Task < String > GetRemoteSubtitles(String, CancellationToken) Gets the remote subtitles. Declaration Task<SubtitleResponse> GetRemoteSubtitles(string id, CancellationToken cancellationToken) Parameters Type Name Description String id CancellationToken cancellationToken Returns Type Description Task < SubtitleResponse > GetSupportedProviders(BaseItem) Gets the providers. Declaration SubtitleProviderInfo[] GetSupportedProviders(BaseItem item) Parameters Type Name Description BaseItem item Returns Type Description SubtitleProviderInfo [] SearchSubtitles(BaseItem, ReadOnlyMemory<Char>, Nullable<Boolean>, Nullable<Boolean>, CancellationToken) Searches the subtitles. Declaration Task<RemoteSubtitleInfo[]> SearchSubtitles(BaseItem item, ReadOnlyMemory<char> language, bool? isPerfectMatch, bool? isForced, CancellationToken cancellationToken) Parameters Type Name Description BaseItem item ReadOnlyMemory < Char > language Nullable < Boolean > isPerfectMatch Nullable < Boolean > isForced CancellationToken cancellationToken Returns Type Description Task < RemoteSubtitleInfo []> SearchSubtitles(SubtitleSearchRequest, CancellationToken) Searches the subtitles. Declaration Task<RemoteSubtitleInfo[]> SearchSubtitles(SubtitleSearchRequest request, CancellationToken cancellationToken) Parameters Type Name Description SubtitleSearchRequest request The request. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < RemoteSubtitleInfo []> Task{IEnumerable{RemoteSubtitleInfo}}. Events SubtitleDownloadFailure Occurs when [subtitle download failure]. Declaration event EventHandler<SubtitleDownloadFailureEventArgs> SubtitleDownloadFailure Event Type Type Description EventHandler < SubtitleDownloadFailureEventArgs > SubtitlesDownloaded Occurs when [subtitles downloaded]. Declaration event EventHandler<SubtitleDownloadEventArgs> SubtitlesDownloaded Event Type Type Description EventHandler < SubtitleDownloadEventArgs >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Subtitles.ISubtitleProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Subtitles.ISubtitleProvider.html",
    "title": "Interface ISubtitleProvider",
    "keywords": "Interface ISubtitleProvider Namespace : MediaBrowser.Controller.Subtitles Assembly : MediaBrowser.Controller.dll Syntax public interface ISubtitleProvider Properties Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. SupportedMediaTypes Gets the supported media types. Declaration IEnumerable<VideoContentType> SupportedMediaTypes { get; } Property Value Type Description IEnumerable < VideoContentType > The supported media types. Methods GetSubtitles(String, CancellationToken) Gets the subtitles. Declaration Task<SubtitleResponse> GetSubtitles(string id, CancellationToken cancellationToken) Parameters Type Name Description String id The identifier. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < SubtitleResponse > Task{SubtitleResponse}. Search(SubtitleSearchRequest, CancellationToken) Searches the subtitles. Declaration Task<IEnumerable<RemoteSubtitleInfo>> Search(SubtitleSearchRequest request, CancellationToken cancellationToken) Parameters Type Name Description SubtitleSearchRequest request The request. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IEnumerable < RemoteSubtitleInfo >> Task{IEnumerable{RemoteSubtitleInfo}}."
  },
  "reference/pluginapi/MediaBrowser.Controller.Subtitles.SubtitleDownloadEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Subtitles.SubtitleDownloadEventArgs.html",
    "title": "Class SubtitleDownloadEventArgs",
    "keywords": "Class SubtitleDownloadEventArgs Inheritance Object SubtitleDownloadEventArgs Namespace : MediaBrowser.Controller.Subtitles Assembly : MediaBrowser.Controller.dll Syntax public sealed class SubtitleDownloadEventArgs Properties Format Declaration public string Format { get; set; } Property Value Type Description String IsForced Declaration public bool IsForced { get; set; } Property Value Type Description Boolean Item Declaration public BaseItem Item { get; set; } Property Value Type Description BaseItem Language Declaration public string Language { get; set; } Property Value Type Description String Provider Declaration public string Provider { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Subtitles.SubtitleDownloadFailureEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Subtitles.SubtitleDownloadFailureEventArgs.html",
    "title": "Class SubtitleDownloadFailureEventArgs",
    "keywords": "Class SubtitleDownloadFailureEventArgs Inheritance Object SubtitleDownloadFailureEventArgs Namespace : MediaBrowser.Controller.Subtitles Assembly : MediaBrowser.Controller.dll Syntax public sealed class SubtitleDownloadFailureEventArgs Properties Exception Declaration public Exception Exception { get; set; } Property Value Type Description Exception Item Declaration public BaseItem Item { get; set; } Property Value Type Description BaseItem Provider Declaration public string Provider { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Controller.Subtitles.SubtitleResponse.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Subtitles.SubtitleResponse.html",
    "title": "Class SubtitleResponse",
    "keywords": "Class SubtitleResponse Inheritance Object SubtitleResponse Namespace : MediaBrowser.Controller.Subtitles Assembly : MediaBrowser.Controller.dll Syntax public sealed class SubtitleResponse Properties Format Declaration public string Format { get; set; } Property Value Type Description String IsForced Declaration public bool IsForced { get; set; } Property Value Type Description Boolean Language Declaration public string Language { get; set; } Property Value Type Description String Stream Declaration public Stream Stream { get; set; } Property Value Type Description Stream"
  },
  "reference/pluginapi/MediaBrowser.Controller.Subtitles.SubtitleSearchRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Subtitles.SubtitleSearchRequest.html",
    "title": "Class SubtitleSearchRequest",
    "keywords": "Class SubtitleSearchRequest Inheritance Object SubtitleSearchRequest Implements IHasProviderIds Namespace : MediaBrowser.Controller.Subtitles Assembly : MediaBrowser.Controller.dll Syntax public sealed class SubtitleSearchRequest : IHasProviderIds Properties ContentType Declaration public VideoContentType ContentType { get; set; } Property Value Type Description VideoContentType DisabledSubtitleFetchers Declaration public string[] DisabledSubtitleFetchers { get; set; } Property Value Type Description String [] IndexNumber Declaration public int? IndexNumber { get; set; } Property Value Type Description Nullable < Int32 > IndexNumberEnd Declaration public int? IndexNumberEnd { get; set; } Property Value Type Description Nullable < Int32 > IsForced Declaration public bool? IsForced { get; set; } Property Value Type Description Nullable < Boolean > IsPerfectMatch Declaration public bool IsPerfectMatch { get; set; } Property Value Type Description Boolean Language Declaration public string Language { get; set; } Property Value Type Description String MediaPath Declaration public string MediaPath { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String ParentIndexNumber Declaration public int? ParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > ProductionYear Declaration public int? ProductionYear { get; set; } Property Value Type Description Nullable < Int32 > ProviderIds Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary RuntimeTicks Declaration public long? RuntimeTicks { get; set; } Property Value Type Description Nullable < Int64 > SearchAllProviders Declaration public bool SearchAllProviders { get; set; } Property Value Type Description Boolean SeriesName Declaration public string SeriesName { get; set; } Property Value Type Description String SubtitleFetcherOrder Declaration public string[] SubtitleFetcherOrder { get; set; } Property Value Type Description String [] Implements IHasProviderIds"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sync.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sync.html",
    "title": "Namespace MediaBrowser.Controller.Sync",
    "keywords": "Namespace MediaBrowser.Controller.Sync Classes SyncedFileInfo Interfaces IHasDynamicAccess IRemoteSyncProvider A marker interface IServerSyncProvider ISupportsDirectCopy ISyncProvider"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sync.IHasDynamicAccess.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sync.IHasDynamicAccess.html",
    "title": "Interface IHasDynamicAccess",
    "keywords": "Interface IHasDynamicAccess Namespace : MediaBrowser.Controller.Sync Assembly : MediaBrowser.Controller.dll Syntax public interface IHasDynamicAccess Methods GetSyncedFileInfo(String, SyncTarget, CancellationToken) Gets the synced file information. Declaration Task<SyncedFileInfo> GetSyncedFileInfo(string id, SyncTarget target, CancellationToken cancellationToken) Parameters Type Name Description String id The identifier. SyncTarget target The target. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < SyncedFileInfo > Task<SyncedFileInfo>."
  },
  "reference/pluginapi/MediaBrowser.Controller.Sync.IRemoteSyncProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sync.IRemoteSyncProvider.html",
    "title": "Interface IRemoteSyncProvider",
    "keywords": "Interface IRemoteSyncProvider A marker interface Namespace : MediaBrowser.Controller.Sync Assembly : MediaBrowser.Controller.dll Syntax public interface IRemoteSyncProvider"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sync.IServerSyncProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sync.IServerSyncProvider.html",
    "title": "Interface IServerSyncProvider",
    "keywords": "Interface IServerSyncProvider Inherited Members ISyncProvider.Name ISyncProvider.GetSyncTargets(Int64) ISyncProvider.GetAllSyncTargets() Namespace : MediaBrowser.Controller.Sync Assembly : MediaBrowser.Controller.dll Syntax public interface IServerSyncProvider : ISyncProvider Methods DeleteFile(SyncJob, String, SyncTarget, CancellationToken) Delete a synchronized file. Declaration Task<bool> DeleteFile(SyncJob syncJob, string path, SyncTarget target, CancellationToken cancellationToken) Parameters Type Name Description SyncJob syncJob String path SyncTarget target CancellationToken cancellationToken Returns Type Description Task < Boolean > GetFiles(String[], SyncTarget, CancellationToken) Declaration Task<QueryResult<FileSystemMetadata>> GetFiles(string[] directoryPathParts, SyncTarget target, CancellationToken cancellationToken) Parameters Type Name Description String [] directoryPathParts SyncTarget target CancellationToken cancellationToken Returns Type Description Task < QueryResult < FileSystemMetadata >> SendFile(SyncJob, String, Stream, Boolean, String[], SyncTarget, IProgress<Double>, CancellationToken) Transfers the file. Declaration Task<SyncedFileInfo> SendFile(SyncJob syncJob, string originalMediaPath, Stream inputStream, bool isMedia, string[] outputPathParts, SyncTarget target, IProgress<double> progress, CancellationToken cancellationToken) Parameters Type Name Description SyncJob syncJob String originalMediaPath Stream inputStream Boolean isMedia String [] outputPathParts SyncTarget target IProgress < Double > progress CancellationToken cancellationToken Returns Type Description Task < SyncedFileInfo >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sync.ISupportsDirectCopy.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sync.ISupportsDirectCopy.html",
    "title": "Interface ISupportsDirectCopy",
    "keywords": "Interface ISupportsDirectCopy Namespace : MediaBrowser.Controller.Sync Assembly : MediaBrowser.Controller.dll Syntax public interface ISupportsDirectCopy Methods SendFile(SyncJob, String, String, Boolean, String[], SyncTarget, IProgress<Double>, CancellationToken) Sends the file. Declaration Task<SyncedFileInfo> SendFile(SyncJob syncJob, string originalMediaPath, string inputPath, bool isMedia, string[] outputPathParts, SyncTarget target, IProgress<double> progress, CancellationToken cancellationToken) Parameters Type Name Description SyncJob syncJob String originalMediaPath String inputPath Boolean isMedia String [] outputPathParts SyncTarget target IProgress < Double > progress CancellationToken cancellationToken Returns Type Description Task < SyncedFileInfo >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sync.ISyncProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sync.ISyncProvider.html",
    "title": "Interface ISyncProvider",
    "keywords": "Interface ISyncProvider Namespace : MediaBrowser.Controller.Sync Assembly : MediaBrowser.Controller.dll Syntax public interface ISyncProvider Properties Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. Methods GetAllSyncTargets() Gets all synchronize targets. Declaration List<SyncTarget> GetAllSyncTargets() Returns Type Description List < SyncTarget > GetSyncTargets(Int64) Gets the synchronize targets. Declaration List<SyncTarget> GetSyncTargets(long userId) Parameters Type Name Description Int64 userId The user identifier. Returns Type Description List < SyncTarget >"
  },
  "reference/pluginapi/MediaBrowser.Controller.Sync.SyncedFileInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Sync.SyncedFileInfo.html",
    "title": "Class SyncedFileInfo",
    "keywords": "Class SyncedFileInfo Inheritance Object SyncedFileInfo Namespace : MediaBrowser.Controller.Sync Assembly : MediaBrowser.Controller.dll Syntax public sealed class SyncedFileInfo Constructors SyncedFileInfo() Declaration public SyncedFileInfo() Properties Id Gets or sets the identifier. Declaration public string Id { get; set; } Property Value Type Description String The identifier. Path Gets or sets the path. Declaration public string Path { get; set; } Property Value Type Description String The path. PathParts Declaration public string[] PathParts { get; set; } Property Value Type Description String [] Protocol Gets or sets the protocol. Declaration public MediaProtocol Protocol { get; set; } Property Value Type Description MediaProtocol The protocol. RequiredHttpHeaders Gets or sets the required HTTP headers. Declaration public Dictionary<string, string> RequiredHttpHeaders { get; set; } Property Value Type Description Dictionary < String , String > The required HTTP headers."
  },
  "reference/pluginapi/MediaBrowser.Controller.Tasks.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Tasks.html",
    "title": "Namespace MediaBrowser.Controller.Tasks",
    "keywords": "Namespace MediaBrowser.Controller.Tasks Classes TaskExtensions"
  },
  "reference/pluginapi/MediaBrowser.Controller.Tasks.TaskExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.Tasks.TaskExtensions.html",
    "title": "Class TaskExtensions",
    "keywords": "Class TaskExtensions Inheritance Object TaskExtensions Namespace : MediaBrowser.Controller.Tasks Assembly : MediaBrowser.Controller.dll Syntax public static class TaskExtensions Methods FireAndForget(Task, ILogger) Declaration public static void FireAndForget(this Task task, ILogger log) Parameters Type Name Description Task task ILogger log"
  },
  "reference/pluginapi/MediaBrowser.Controller.TV.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.TV.html",
    "title": "Namespace MediaBrowser.Controller.TV",
    "keywords": "Namespace MediaBrowser.Controller.TV Interfaces ITVSeriesManager"
  },
  "reference/pluginapi/MediaBrowser.Controller.TV.ITVSeriesManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Controller.TV.ITVSeriesManager.html",
    "title": "Interface ITVSeriesManager",
    "keywords": "Interface ITVSeriesManager Namespace : MediaBrowser.Controller.TV Assembly : MediaBrowser.Controller.dll Syntax public interface ITVSeriesManager Methods GetNextUp(NextUpQuery, User, DtoOptions) Gets the next up. Declaration QueryResult<BaseItem> GetNextUp(NextUpQuery query, User user, DtoOptions options) Parameters Type Name Description NextUpQuery query User user DtoOptions options Returns Type Description QueryResult < BaseItem > GetNextUp(NextUpQuery, User, BaseItem[], DtoOptions) Gets the next up. Declaration QueryResult<BaseItem> GetNextUp(NextUpQuery request, User user, BaseItem[] parentsFolders, DtoOptions options) Parameters Type Name Description NextUpQuery request User user BaseItem [] parentsFolders DtoOptions options Returns Type Description QueryResult < BaseItem >"
  },
  "reference/pluginapi/MediaBrowser.Model.Activity.ActivityLogEntry.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Activity.ActivityLogEntry.html",
    "title": "Class ActivityLogEntry",
    "keywords": "Class ActivityLogEntry Inheritance Object ActivityLogEntry Namespace : MediaBrowser.Model.Activity Assembly : MediaBrowser.Model.dll Syntax public class ActivityLogEntry Properties Date Gets or sets the date. Declaration public DateTimeOffset Date { get; set; } Property Value Type Description DateTimeOffset The date. Id Gets or sets the identifier. Declaration public long Id { get; set; } Property Value Type Description Int64 The identifier. ItemId Gets or sets the item identifier. Declaration public string ItemId { get; set; } Property Value Type Description String The item identifier. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Overview Gets or sets the overview. Declaration public string Overview { get; set; } Property Value Type Description String The overview. Severity Gets or sets the log severity. Declaration public LogSeverity Severity { get; set; } Property Value Type Description LogSeverity The log severity. ShortOverview Gets or sets the short overview. Declaration public string ShortOverview { get; set; } Property Value Type Description String The short overview. Type Gets or sets the type. Declaration public string Type { get; set; } Property Value Type Description String The type. UserId Gets or sets the user identifier. Declaration public string UserId { get; set; } Property Value Type Description String The user identifier. UserPrimaryImageTag Gets or sets the user primary image tag. Declaration public string UserPrimaryImageTag { get; set; } Property Value Type Description String The user primary image tag."
  },
  "reference/pluginapi/MediaBrowser.Model.Activity.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Activity.html",
    "title": "Namespace MediaBrowser.Model.Activity",
    "keywords": "Namespace MediaBrowser.Model.Activity Classes ActivityLogEntry Interfaces IActivityManager IActivityRepository"
  },
  "reference/pluginapi/MediaBrowser.Model.Activity.IActivityManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Activity.IActivityManager.html",
    "title": "Interface IActivityManager",
    "keywords": "Interface IActivityManager Namespace : MediaBrowser.Model.Activity Assembly : MediaBrowser.Model.dll Syntax public interface IActivityManager Methods Create(ActivityLogEntry) Declaration void Create(ActivityLogEntry entry) Parameters Type Name Description ActivityLogEntry entry GetActivityLogEntries(Nullable<DateTimeOffset>, Nullable<Boolean>, Nullable<Int32>, Nullable<Int32>) Declaration QueryResult<ActivityLogEntry> GetActivityLogEntries(DateTimeOffset? minDate, bool? hasUserId, int? startIndex, int? limit) Parameters Type Name Description Nullable < DateTimeOffset > minDate Nullable < Boolean > hasUserId Nullable < Int32 > startIndex Nullable < Int32 > limit Returns Type Description QueryResult < ActivityLogEntry > GetActivityLogEntries(Nullable<DateTimeOffset>, Nullable<Int32>, Nullable<Int32>) Declaration QueryResult<ActivityLogEntry> GetActivityLogEntries(DateTimeOffset? minDate, int? startIndex, int? limit) Parameters Type Name Description Nullable < DateTimeOffset > minDate Nullable < Int32 > startIndex Nullable < Int32 > limit Returns Type Description QueryResult < ActivityLogEntry > Events EntryCreated Declaration event EventHandler<GenericEventArgs<ActivityLogEntry>> EntryCreated Event Type Type Description EventHandler < GenericEventArgs < ActivityLogEntry >>"
  },
  "reference/pluginapi/MediaBrowser.Model.Activity.IActivityRepository.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Activity.IActivityRepository.html",
    "title": "Interface IActivityRepository",
    "keywords": "Interface IActivityRepository Namespace : MediaBrowser.Model.Activity Assembly : MediaBrowser.Model.dll Syntax public interface IActivityRepository Methods Create(ActivityLogEntry) Declaration void Create(ActivityLogEntry entry) Parameters Type Name Description ActivityLogEntry entry GetActivityLogEntries(Nullable<DateTimeOffset>, Nullable<Boolean>, Nullable<Int32>, Nullable<Int32>) Declaration QueryResult<ActivityLogEntry> GetActivityLogEntries(DateTimeOffset? minDate, bool? hasUserId, int? startIndex, int? limit) Parameters Type Name Description Nullable < DateTimeOffset > minDate Nullable < Boolean > hasUserId Nullable < Int32 > startIndex Nullable < Int32 > limit Returns Type Description QueryResult < ActivityLogEntry >"
  },
  "reference/pluginapi/MediaBrowser.Model.ApiClient.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.ApiClient.html",
    "title": "Namespace MediaBrowser.Model.ApiClient",
    "keywords": "Namespace MediaBrowser.Model.ApiClient Classes ServerDiscoveryInfo"
  },
  "reference/pluginapi/MediaBrowser.Model.ApiClient.ServerDiscoveryInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.ApiClient.ServerDiscoveryInfo.html",
    "title": "Class ServerDiscoveryInfo",
    "keywords": "Class ServerDiscoveryInfo Inheritance Object ServerDiscoveryInfo Namespace : MediaBrowser.Model.ApiClient Assembly : MediaBrowser.Model.dll Syntax public class ServerDiscoveryInfo Properties Address Gets or sets the address. Declaration public string Address { get; set; } Property Value Type Description String The address. Id Gets or sets the server identifier. Declaration public string Id { get; set; } Property Value Type Description String The server identifier. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name."
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.AliasesAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.AliasesAttribute.html",
    "title": "Class AliasesAttribute",
    "keywords": "Class AliasesAttribute Attribute for specifying one or more string aliases for an enum entry. Inheritance Object Attribute AliasesAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class AliasesAttribute : Attribute Constructors AliasesAttribute(String[]) Declaration public AliasesAttribute(params string[] aliasList) Parameters Type Name Description String [] aliasList Properties Aliases Declaration public IList<string> Aliases { get; } Property Value Type Description IList < String > See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.AutoPostBackAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.AutoPostBackAttribute.html",
    "title": "Class AutoPostBackAttribute",
    "keywords": "Class AutoPostBackAttribute Attribute indicating that a property change should cause a postback. Inheritance Object Attribute AutoPostBackAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class AutoPostBackAttribute : Attribute Constructors AutoPostBackAttribute(String, String) Initializes a new instance of the AutoPostBackAttribute class. Declaration public AutoPostBackAttribute(string commandId, string commandParameterPropertyName) Parameters Type Name Description String commandId The command identifier. String commandParameterPropertyName Name of the ommand parameter property. Properties CommandId Declaration public string CommandId { get; } Property Value Type Description String CommandParameterProperty Declaration public string CommandParameterProperty { get; } Property Value Type Description String See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.ColorAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.ColorAttribute.html",
    "title": "Class ColorAttribute",
    "keywords": "Class ColorAttribute Attribute for specifying a color. Inheritance Object Attribute ColorAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class ColorAttribute : Attribute Constructors ColorAttribute(String) Declaration public ColorAttribute(string color) Parameters Type Name Description String color Properties Color Declaration public string Color { get; } Property Value Type Description String See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.DecimalsAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.DecimalsAttribute.html",
    "title": "Class DecimalsAttribute",
    "keywords": "Class DecimalsAttribute Attribute indicating the number of decimal places for display and editing. Inheritance Object Attribute DecimalsAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class DecimalsAttribute : Attribute Constructors DecimalsAttribute(Int32) Declaration public DecimalsAttribute(int decimalPlaces) Parameters Type Name Description Int32 decimalPlaces Properties DecimalPlaces Declaration public int DecimalPlaces { get; } Property Value Type Description Int32 See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.DetailsAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.DetailsAttribute.html",
    "title": "Class DetailsAttribute",
    "keywords": "Class DetailsAttribute Attribute for specifying additional information for an enum entry. Inheritance Object Attribute DetailsAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class DetailsAttribute : Attribute Constructors DetailsAttribute(String) Declaration public DetailsAttribute(string details) Parameters Type Name Description String details Properties Details Declaration public string Details { get; } Property Value Type Description String See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.EditFilePickerAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.EditFilePickerAttribute.html",
    "title": "Class EditFilePickerAttribute",
    "keywords": "Class EditFilePickerAttribute Attribute indicating that a file picker should be used for editing. Inheritance Object Attribute EditFilePickerAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class EditFilePickerAttribute : Attribute See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.EditFolderPickerAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.EditFolderPickerAttribute.html",
    "title": "Class EditFolderPickerAttribute",
    "keywords": "Class EditFolderPickerAttribute Attribute indicating that a folder picker should be used for editing. Inheritance Object Attribute EditFolderPickerAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class EditFolderPickerAttribute : Attribute See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.EditMultilineAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.EditMultilineAttribute.html",
    "title": "Class EditMultilineAttribute",
    "keywords": "Class EditMultilineAttribute Attribute indicating that a multiline field should be used for editing. Inheritance Object Attribute EditMultilineAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class EditMultilineAttribute : Attribute Constructors EditMultilineAttribute(Int32) Declaration public EditMultilineAttribute(int lineCount) Parameters Type Name Description Int32 lineCount Properties LineCount Declaration public int LineCount { get; } Property Value Type Description Int32 See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.EditMultilSelectAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.EditMultilSelectAttribute.html",
    "title": "Class EditMultilSelectAttribute",
    "keywords": "Class EditMultilSelectAttribute Attribute indicating that a select item should allow multiple selection. Inheritance Object Attribute EditMultilSelectAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class EditMultilSelectAttribute : Attribute See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.EnabledConditionAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.EnabledConditionAttribute.html",
    "title": "Class EnabledConditionAttribute",
    "keywords": "Class EnabledConditionAttribute Attribute defining a condition on a sibling property value for controlling enabled state. Inheritance Object Attribute PropertyConditionAttribute EnabledConditionAttribute Inherited Members PropertyConditionAttribute.TargetProperty PropertyConditionAttribute.SimpleCondition PropertyConditionAttribute.ValueCondition PropertyConditionAttribute.Value Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class EnabledConditionAttribute : PropertyConditionAttribute Constructors EnabledConditionAttribute(String, SimpleCondition) Initializes a new instance of the PropertyConditionAttribute class. Declaration public EnabledConditionAttribute(string targetProperty, SimpleCondition simpleCondition) Parameters Type Name Description String targetProperty The target property. SimpleCondition simpleCondition The simple condition. EnabledConditionAttribute(String, ValueCondition, Object) Initializes a new instance of the PropertyConditionAttribute class. Declaration public EnabledConditionAttribute(string targetProperty, ValueCondition valueCondition, object value) Parameters Type Name Description String targetProperty The target property. ValueCondition valueCondition The value condition. Object value The value. See Also PropertyConditionAttribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.GridDataSourceAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.GridDataSourceAttribute.html",
    "title": "Class GridDataSourceAttribute",
    "keywords": "Class GridDataSourceAttribute Attribute indicating the property containing the data source. Inheritance Object Attribute GridDataSourceAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class GridDataSourceAttribute : Attribute Constructors GridDataSourceAttribute(String) Declaration public GridDataSourceAttribute(string sourcePropertyName) Parameters Type Name Description String sourcePropertyName GridDataSourceAttribute(String, String) Declaration public GridDataSourceAttribute(string sourcePropertyName, string source2PropertyName) Parameters Type Name Description String sourcePropertyName String source2PropertyName Properties Source2PropertyName Declaration public string Source2PropertyName { get; } Property Value Type Description String SourcePropertyName Declaration public string SourcePropertyName { get; } Property Value Type Description String See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.GridSelectionSourceAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.GridSelectionSourceAttribute.html",
    "title": "Class GridSelectionSourceAttribute",
    "keywords": "Class GridSelectionSourceAttribute Attribute indicating the property containing a collection of selected keys. Inheritance Object Attribute GridSelectionSourceAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class GridSelectionSourceAttribute : Attribute Constructors GridSelectionSourceAttribute(String) Declaration public GridSelectionSourceAttribute(string sourcePropertyName) Parameters Type Name Description String sourcePropertyName Properties SourcePropertyName Declaration public string SourcePropertyName { get; } Property Value Type Description String See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.html",
    "title": "Namespace MediaBrowser.Model.Attributes",
    "keywords": "Namespace MediaBrowser.Model.Attributes Classes AliasesAttribute Attribute for specifying one or more string aliases for an enum entry. AutoPostBackAttribute Attribute indicating that a property change should cause a postback. ColorAttribute Attribute for specifying a color. DecimalsAttribute Attribute indicating the number of decimal places for display and editing. DetailsAttribute Attribute for specifying additional information for an enum entry. EditFilePickerAttribute Attribute indicating that a file picker should be used for editing. EditFolderPickerAttribute Attribute indicating that a folder picker should be used for editing. EditMultilineAttribute Attribute indicating that a multiline field should be used for editing. EditMultilSelectAttribute Attribute indicating that a select item should allow multiple selection. EnabledConditionAttribute Attribute defining a condition on a sibling property value for controlling enabled state. GridDataSourceAttribute Attribute indicating the property containing the data source. GridSelectionSourceAttribute Attribute indicating the property containing a collection of selected keys. IntValueAttribute Attribute for specifying a tag string that is used for creating unique codec IDs. IsAdvancedAttribute Attribute indicating that a property corresponds to advanced functionality. IsPasswordAttribute Attribute indicating that a property needs to be treated as password for display and editing. MaxLengthAttribute Attribute indicating a maximum length for editing string fields. MaxValueAttribute Attribute indicating the maximum value of a numeric property. MinValueAttribute Attribute indicating the minimum value of a numeric property. OrdinalAttribute Attribute indicating the rank of an enum value with regards to a certain ordering rule. PropertyConditionAttribute Attribute base class for specifying a condition on a sibling property value. RadioItemsSourceAttribute Attribute indicating that available radio items are provided by another property. RelatedGuidAttribute Attribute for specifying a tag string that is used for creating unique codec IDs. RequiredAttribute Attribute indicating that a property value must not remain null or empty when editing. SelectItemsSourceAttribute Attribute indicating that available select items are provided by another property. SelectShowRadioGroupAttribute Attribute indicating that available select items should be shown as radio group. TristateFalseTextAttribute Attribute indicating a text for the 'false' value in case of nullable bool fields. TristateTrueTextAttribute Attribute indicating a text for the 'true' value in case of nullable bool fields. ValueAttribute Attribute for specifying a tag string that is used for creating unique codec IDs. VisibleConditionAttribute Attribute defining a condition on a sibling property value for controlling visibility. Enums SimpleCondition Conditions on the source value. ValueCondition Conditions for comparing with a target value."
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.IntValueAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.IntValueAttribute.html",
    "title": "Class IntValueAttribute",
    "keywords": "Class IntValueAttribute Attribute for specifying a tag string that is used for creating unique codec IDs. Inheritance Object Attribute IntValueAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class IntValueAttribute : Attribute Constructors IntValueAttribute(Int32) Declaration public IntValueAttribute(int value) Parameters Type Name Description Int32 value Properties Value Declaration public int Value { get; } Property Value Type Description Int32 See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.IsAdvancedAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.IsAdvancedAttribute.html",
    "title": "Class IsAdvancedAttribute",
    "keywords": "Class IsAdvancedAttribute Attribute indicating that a property corresponds to advanced functionality. Inheritance Object Attribute IsAdvancedAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class IsAdvancedAttribute : Attribute See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.IsPasswordAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.IsPasswordAttribute.html",
    "title": "Class IsPasswordAttribute",
    "keywords": "Class IsPasswordAttribute Attribute indicating that a property needs to be treated as password for display and editing. Inheritance Object Attribute IsPasswordAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class IsPasswordAttribute : Attribute See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.MaxLengthAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.MaxLengthAttribute.html",
    "title": "Class MaxLengthAttribute",
    "keywords": "Class MaxLengthAttribute Attribute indicating a maximum length for editing string fields. Inheritance Object Attribute MaxLengthAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class MaxLengthAttribute : Attribute Constructors MaxLengthAttribute(Int32) Declaration public MaxLengthAttribute(int maxLengt) Parameters Type Name Description Int32 maxLengt Properties MaxLength Declaration public int MaxLength { get; } Property Value Type Description Int32 See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.MaxValueAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.MaxValueAttribute.html",
    "title": "Class MaxValueAttribute",
    "keywords": "Class MaxValueAttribute Attribute indicating the maximum value of a numeric property. Inheritance Object Attribute MaxValueAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class MaxValueAttribute : Attribute Constructors MaxValueAttribute(Int32) Declaration public MaxValueAttribute(int maxValue) Parameters Type Name Description Int32 maxValue Properties MaxValue Declaration public int MaxValue { get; } Property Value Type Description Int32 See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.MinValueAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.MinValueAttribute.html",
    "title": "Class MinValueAttribute",
    "keywords": "Class MinValueAttribute Attribute indicating the minimum value of a numeric property. Inheritance Object Attribute MinValueAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class MinValueAttribute : Attribute Constructors MinValueAttribute(Int32) Declaration public MinValueAttribute(int minValue) Parameters Type Name Description Int32 minValue Properties MinValue Declaration public int MinValue { get; } Property Value Type Description Int32 See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.OrdinalAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.OrdinalAttribute.html",
    "title": "Class OrdinalAttribute",
    "keywords": "Class OrdinalAttribute Attribute indicating the rank of an enum value with regards to a certain ordering rule. Inheritance Object Attribute OrdinalAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class OrdinalAttribute : Attribute Constructors OrdinalAttribute(Int32) Declaration public OrdinalAttribute(int ordinal) Parameters Type Name Description Int32 ordinal Properties Ordinal Declaration public int Ordinal { get; } Property Value Type Description Int32 See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.PropertyConditionAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.PropertyConditionAttribute.html",
    "title": "Class PropertyConditionAttribute",
    "keywords": "Class PropertyConditionAttribute Attribute base class for specifying a condition on a sibling property value. Inheritance Object Attribute PropertyConditionAttribute EnabledConditionAttribute VisibleConditionAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property)] public abstract class PropertyConditionAttribute : Attribute Constructors PropertyConditionAttribute(String, SimpleCondition) Initializes a new instance of the PropertyConditionAttribute class. Declaration protected PropertyConditionAttribute(string targetProperty, SimpleCondition simpleCondition) Parameters Type Name Description String targetProperty The target property. SimpleCondition simpleCondition The simple condition. PropertyConditionAttribute(String, ValueCondition, Object) Initializes a new instance of the PropertyConditionAttribute class. Declaration protected PropertyConditionAttribute(string targetProperty, ValueCondition valueCondition, object value) Parameters Type Name Description String targetProperty The target property. ValueCondition valueCondition The value condition. Object value The value. Properties SimpleCondition Gets the simple condition. Declaration public SimpleCondition? SimpleCondition { get; } Property Value Type Description Nullable < SimpleCondition > The simple condition. TargetProperty Gets the target property name or path. Declaration public string TargetProperty { get; } Property Value Type Description String The target property name or path. Value Gets the value. Declaration public object Value { get; } Property Value Type Description Object The value. ValueCondition Gets the value condition. Declaration public ValueCondition? ValueCondition { get; } Property Value Type Description Nullable < ValueCondition > The value condition. See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.RadioItemsSourceAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.RadioItemsSourceAttribute.html",
    "title": "Class RadioItemsSourceAttribute",
    "keywords": "Class RadioItemsSourceAttribute Attribute indicating that available radio items are provided by another property. Inheritance Object Attribute RadioItemsSourceAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class RadioItemsSourceAttribute : Attribute Constructors RadioItemsSourceAttribute(String) Declaration public RadioItemsSourceAttribute(string sourcePropertyName) Parameters Type Name Description String sourcePropertyName Properties SourcePropertyName Declaration public string SourcePropertyName { get; } Property Value Type Description String See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.RelatedGuidAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.RelatedGuidAttribute.html",
    "title": "Class RelatedGuidAttribute",
    "keywords": "Class RelatedGuidAttribute Attribute for specifying a tag string that is used for creating unique codec IDs. Inheritance Object Attribute RelatedGuidAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = true)] public class RelatedGuidAttribute : Attribute Constructors RelatedGuidAttribute(Guid) Declaration public RelatedGuidAttribute(Guid guid) Parameters Type Name Description Guid guid RelatedGuidAttribute(String) Declaration public RelatedGuidAttribute(string guidString) Parameters Type Name Description String guidString Properties RelatedGuid Declaration public Guid RelatedGuid { get; } Property Value Type Description Guid See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.RequiredAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.RequiredAttribute.html",
    "title": "Class RequiredAttribute",
    "keywords": "Class RequiredAttribute Attribute indicating that a property value must not remain null or empty when editing. Inheritance Object Attribute RequiredAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class RequiredAttribute : Attribute See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.SelectItemsSourceAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.SelectItemsSourceAttribute.html",
    "title": "Class SelectItemsSourceAttribute",
    "keywords": "Class SelectItemsSourceAttribute Attribute indicating that available select items are provided by another property. Inheritance Object Attribute SelectItemsSourceAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class SelectItemsSourceAttribute : Attribute Constructors SelectItemsSourceAttribute(String) Declaration public SelectItemsSourceAttribute(string sourcePropertyName) Parameters Type Name Description String sourcePropertyName Properties SourcePropertyName Declaration public string SourcePropertyName { get; } Property Value Type Description String See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.SelectShowRadioGroupAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.SelectShowRadioGroupAttribute.html",
    "title": "Class SelectShowRadioGroupAttribute",
    "keywords": "Class SelectShowRadioGroupAttribute Attribute indicating that available select items should be shown as radio group. Inheritance Object Attribute SelectShowRadioGroupAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class SelectShowRadioGroupAttribute : Attribute See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.SimpleCondition.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.SimpleCondition.html",
    "title": "Enum SimpleCondition",
    "keywords": "Enum SimpleCondition Conditions on the source value. Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax public enum SimpleCondition Fields Name Description IsFalse IsNotNullOrEmpty IsNull IsTrue Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SimpleCondition>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.TristateFalseTextAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.TristateFalseTextAttribute.html",
    "title": "Class TristateFalseTextAttribute",
    "keywords": "Class TristateFalseTextAttribute Attribute indicating a text for the 'false' value in case of nullable bool fields. Inheritance Object Attribute TristateFalseTextAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class TristateFalseTextAttribute : Attribute Constructors TristateFalseTextAttribute(String) Declaration public TristateFalseTextAttribute(string text) Parameters Type Name Description String text Properties Text Declaration public string Text { get; } Property Value Type Description String See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.TristateTrueTextAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.TristateTrueTextAttribute.html",
    "title": "Class TristateTrueTextAttribute",
    "keywords": "Class TristateTrueTextAttribute Attribute indicating a text for the 'true' value in case of nullable bool fields. Inheritance Object Attribute TristateTrueTextAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class TristateTrueTextAttribute : Attribute Constructors TristateTrueTextAttribute(String) Declaration public TristateTrueTextAttribute(string text) Parameters Type Name Description String text Properties Text Declaration public string Text { get; } Property Value Type Description String See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.ValueAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.ValueAttribute.html",
    "title": "Class ValueAttribute",
    "keywords": "Class ValueAttribute Attribute for specifying a tag string that is used for creating unique codec IDs. Inheritance Object Attribute ValueAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class ValueAttribute : Attribute Constructors ValueAttribute(String) Declaration public ValueAttribute(string value) Parameters Type Name Description String value Properties Value Declaration public string Value { get; } Property Value Type Description String See Also Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.ValueCondition.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.ValueCondition.html",
    "title": "Enum ValueCondition",
    "keywords": "Enum ValueCondition Conditions for comparing with a target value. Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax public enum ValueCondition Fields Name Description IsEqual IsGreater IsGreaterOrEqual IsLess IsLessOrEqual IsNotEqual Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ValueCondition>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Attributes.VisibleConditionAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Attributes.VisibleConditionAttribute.html",
    "title": "Class VisibleConditionAttribute",
    "keywords": "Class VisibleConditionAttribute Attribute defining a condition on a sibling property value for controlling visibility. Inheritance Object Attribute PropertyConditionAttribute VisibleConditionAttribute Inherited Members PropertyConditionAttribute.TargetProperty PropertyConditionAttribute.SimpleCondition PropertyConditionAttribute.ValueCondition PropertyConditionAttribute.Value Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Attributes Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class VisibleConditionAttribute : PropertyConditionAttribute Constructors VisibleConditionAttribute(String, SimpleCondition) Initializes a new instance of the PropertyConditionAttribute class. Declaration public VisibleConditionAttribute(string targetProperty, SimpleCondition simpleCondition) Parameters Type Name Description String targetProperty The target property. SimpleCondition simpleCondition The simple condition. VisibleConditionAttribute(String, ValueCondition, Object) Initializes a new instance of the PropertyConditionAttribute class. Declaration public VisibleConditionAttribute(string targetProperty, ValueCondition valueCondition, object value) Parameters Type Name Description String targetProperty The target property. ValueCondition valueCondition The value condition. Object value The value. See Also PropertyConditionAttribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Branding.BrandingOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Branding.BrandingOptions.html",
    "title": "Class BrandingOptions",
    "keywords": "Class BrandingOptions Inheritance Object BrandingOptions Namespace : MediaBrowser.Model.Branding Assembly : MediaBrowser.Model.dll Syntax public class BrandingOptions Properties CustomCss Gets or sets the custom CSS. Declaration public string CustomCss { get; set; } Property Value Type Description String The custom CSS. LoginDisclaimer Gets or sets the login disclaimer. Declaration public string LoginDisclaimer { get; set; } Property Value Type Description String The login disclaimer."
  },
  "reference/pluginapi/MediaBrowser.Model.Branding.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Branding.html",
    "title": "Namespace MediaBrowser.Model.Branding",
    "keywords": "Namespace MediaBrowser.Model.Branding Classes BrandingOptions"
  },
  "reference/pluginapi/MediaBrowser.Model.Channels.ChannelFolderType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Channels.ChannelFolderType.html",
    "title": "Enum ChannelFolderType",
    "keywords": "Enum ChannelFolderType Namespace : MediaBrowser.Model.Channels Assembly : MediaBrowser.Model.dll Syntax public enum ChannelFolderType Fields Name Description Container MusicAlbum MusicArtist PhotoAlbum Season Series Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ChannelFolderType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Channels.ChannelItemSortField.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Channels.ChannelItemSortField.html",
    "title": "Enum ChannelItemSortField",
    "keywords": "Enum ChannelItemSortField Namespace : MediaBrowser.Model.Channels Assembly : MediaBrowser.Model.dll Syntax public enum ChannelItemSortField Fields Name Description CommunityPlayCount CommunityRating DateCreated Name PlayCount PremiereDate Runtime Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ChannelItemSortField>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Channels.ChannelMediaContentType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Channels.ChannelMediaContentType.html",
    "title": "Enum ChannelMediaContentType",
    "keywords": "Enum ChannelMediaContentType Namespace : MediaBrowser.Model.Channels Assembly : MediaBrowser.Model.dll Syntax public enum ChannelMediaContentType Fields Name Description Clip Episode GameExtra Movie MovieExtra Podcast Song Trailer TvExtra Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ChannelMediaContentType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Channels.ChannelMediaType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Channels.ChannelMediaType.html",
    "title": "Enum ChannelMediaType",
    "keywords": "Enum ChannelMediaType Namespace : MediaBrowser.Model.Channels Assembly : MediaBrowser.Model.dll Syntax public enum ChannelMediaType Fields Name Description Audio Photo Video Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ChannelMediaType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Channels.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Channels.html",
    "title": "Namespace MediaBrowser.Model.Channels",
    "keywords": "Namespace MediaBrowser.Model.Channels Enums ChannelFolderType ChannelItemSortField ChannelMediaContentType ChannelMediaType"
  },
  "reference/pluginapi/MediaBrowser.Model.Collections.CollectionCreationResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Collections.CollectionCreationResult.html",
    "title": "Class CollectionCreationResult",
    "keywords": "Class CollectionCreationResult Inheritance Object CollectionCreationResult Namespace : MediaBrowser.Model.Collections Assembly : MediaBrowser.Model.dll Syntax public class CollectionCreationResult Properties Id Declaration public string Id { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Collections.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Collections.html",
    "title": "Namespace MediaBrowser.Model.Collections",
    "keywords": "Namespace MediaBrowser.Model.Collections Classes CollectionCreationResult"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.AccessSchedule.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.AccessSchedule.html",
    "title": "Class AccessSchedule",
    "keywords": "Class AccessSchedule Inheritance Object AccessSchedule Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class AccessSchedule Properties DayOfWeek Gets or sets the day of week. Declaration public DynamicDayOfWeek DayOfWeek { get; set; } Property Value Type Description DynamicDayOfWeek The day of week. EndHour Gets or sets the end hour. Declaration public double EndHour { get; set; } Property Value Type Description Double The end hour. StartHour Gets or sets the start hour. Declaration public double StartHour { get; set; } Property Value Type Description Double The start hour."
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.BaseApplicationConfiguration.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.BaseApplicationConfiguration.html",
    "title": "Class BaseApplicationConfiguration",
    "keywords": "Class BaseApplicationConfiguration Serves as a common base class for the Server and UI application Configurations ProtoInclude tells Protobuf about subclasses, The number 50 can be any number, so long as it doesn't clash with any of the ProtoMember numbers either here or in subclasses. Inheritance Object BaseApplicationConfiguration ServerConfiguration Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class BaseApplicationConfiguration Constructors BaseApplicationConfiguration() Initializes a new instance of the BaseApplicationConfiguration class. Declaration public BaseApplicationConfiguration() Properties CachePath Gets or sets the cache path. Declaration public string CachePath { get; set; } Property Value Type Description String The cache path. EnableAutoUpdate Enable automatically and silently updating of the application Declaration public bool EnableAutoUpdate { get; set; } Property Value Type Description Boolean true if [enable auto update]; otherwise, false . EnableDebugLevelLogging Gets or sets a value indicating whether [enable debug level logging]. Declaration public bool EnableDebugLevelLogging { get; set; } Property Value Type Description Boolean true if [enable debug level logging]; otherwise, false . IsStartupWizardCompleted Gets or sets a value indicating whether this instance is first run. Declaration public bool IsStartupWizardCompleted { get; set; } Property Value Type Description Boolean true if this instance is first run; otherwise, false . LogFileRetentionDays The number of days we should retain log files Declaration public int LogFileRetentionDays { get; set; } Property Value Type Description Int32 The log file retention days. RevertDebugLogging Declaration public string RevertDebugLogging { get; set; } Property Value Type Description String RunAtStartup Gets or sets a value indicating whether [run at startup]. Declaration public bool RunAtStartup { get; set; } Property Value Type Description Boolean true if [run at startup]; otherwise, false ."
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.CodecConfiguration.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.CodecConfiguration.html",
    "title": "Class CodecConfiguration",
    "keywords": "Class CodecConfiguration Inheritance Object CodecConfiguration Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class CodecConfiguration Properties CodecId Gets or sets the codec identifier. Declaration public string CodecId { get; set; } Property Value Type Description String The codec identifier. IsEnabled Gets or sets a value indicating whether the codec is enabled. Declaration public bool IsEnabled { get; set; } Property Value Type Description Boolean true if the codec is enabled; otherwise, false . Priority Gets or sets the selection priority for the codec. Declaration public int Priority { get; set; } Property Value Type Description Int32 The priority. Remarks Higher values mean higher priority."
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.CodecSelectionModes.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.CodecSelectionModes.html",
    "title": "Enum CodecSelectionModes",
    "keywords": "Enum CodecSelectionModes Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public enum CodecSelectionModes Fields Name Description Automatic Custom NoHardwareCodecs Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<CodecSelectionModes>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.DynamicDayOfWeek.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.DynamicDayOfWeek.html",
    "title": "Enum DynamicDayOfWeek",
    "keywords": "Enum DynamicDayOfWeek Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public enum DynamicDayOfWeek Fields Name Description Everyday Friday Monday Saturday Sunday Thursday Tuesday Wednesday Weekday Weekend Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<DynamicDayOfWeek>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.EncodingOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.EncodingOptions.html",
    "title": "Class EncodingOptions",
    "keywords": "Class EncodingOptions Inheritance Object EncodingOptions Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class EncodingOptions Constructors EncodingOptions() Declaration public EncodingOptions() Properties CodecConfigurations Declaration public CodecConfiguration[] CodecConfigurations { get; set; } Property Value Type Description CodecConfiguration [] DeinterlaceMethod Declaration public string DeinterlaceMethod { get; set; } Property Value Type Description String DownMixAudioBoost Declaration public double DownMixAudioBoost { get; set; } Property Value Type Description Double EnableHardwareEncoding Declaration public bool EnableHardwareEncoding { get; set; } Property Value Type Description Boolean EnableHardwareToneMapping Declaration public bool EnableHardwareToneMapping { get; set; } Property Value Type Description Boolean EnableSoftwareToneMapping Declaration public bool EnableSoftwareToneMapping { get; set; } Property Value Type Description Boolean EnableSubtitleExtraction Declaration public bool EnableSubtitleExtraction { get; set; } Property Value Type Description Boolean EnableThrottling Declaration public bool EnableThrottling { get; set; } Property Value Type Description Boolean EncodingThreadCount Declaration public int EncodingThreadCount { get; set; } Property Value Type Description Int32 ExtractionThreadCount Declaration public int ExtractionThreadCount { get; set; } Property Value Type Description Int32 H264Crf Declaration public int H264Crf { get; set; } Property Value Type Description Int32 H264Preset Declaration public string H264Preset { get; set; } Property Value Type Description String HardwareAccelerationMode Declaration public int HardwareAccelerationMode { get; set; } Property Value Type Description Int32 HardwareAccelerationType Declaration public string HardwareAccelerationType { get; set; } Property Value Type Description String ThrottleBufferSize Declaration public int ThrottleBufferSize { get; set; } Property Value Type Description Int32 ThrottleHysteresis Declaration public int ThrottleHysteresis { get; set; } Property Value Type Description Int32 ThrottlingMethod Declaration public ThrottlingMethod ThrottlingMethod { get; set; } Property Value Type Description ThrottlingMethod TranscodingTempPath Declaration public string TranscodingTempPath { get; set; } Property Value Type Description String Methods GetAccelerationMode() Declaration public CodecSelectionModes GetAccelerationMode() Returns Type Description CodecSelectionModes"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.html",
    "title": "Namespace MediaBrowser.Model.Configuration",
    "keywords": "Namespace MediaBrowser.Model.Configuration Classes AccessSchedule BaseApplicationConfiguration Serves as a common base class for the Server and UI application Configurations ProtoInclude tells Protobuf about subclasses, The number 50 can be any number, so long as it doesn't clash with any of the ProtoMember numbers either here or in subclasses. CodecConfiguration EncodingOptions ImageOption LibraryOptions MediaPathInfo MetadataConfiguration MetadataPlugin MetadataPluginSummary MusicFolderStructures PathSubstitution ServerConfiguration Represents the server configuration. TypeOptions UserConfiguration Class UserConfiguration Enums CodecSelectionModes DynamicDayOfWeek ImageSavingConvention MetadataFeatures MetadataPluginType Enum MetadataPluginType SegmentSkipMode SubtitlePlaybackMode ThrottlingMethod UnratedItem"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.ImageOption.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.ImageOption.html",
    "title": "Class ImageOption",
    "keywords": "Class ImageOption Inheritance Object ImageOption Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class ImageOption Constructors ImageOption() Declaration public ImageOption() Properties Limit Gets or sets the limit. Declaration public int Limit { get; set; } Property Value Type Description Int32 The limit. MinWidth Gets or sets the minimum width. Declaration public int MinWidth { get; set; } Property Value Type Description Int32 The minimum width. Type Gets or sets the type. Declaration public ImageType Type { get; set; } Property Value Type Description ImageType The type."
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.ImageSavingConvention.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.ImageSavingConvention.html",
    "title": "Enum ImageSavingConvention",
    "keywords": "Enum ImageSavingConvention Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public enum ImageSavingConvention Fields Name Description Compatible Legacy Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ImageSavingConvention>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.LibraryOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.LibraryOptions.html",
    "title": "Class LibraryOptions",
    "keywords": "Class LibraryOptions Inheritance Object LibraryOptions Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class LibraryOptions Fields DefaultThumbnailInterval Declaration public static int DefaultThumbnailInterval Field Value Type Description Int32 Properties AutomaticRefreshIntervalDays Declaration public int AutomaticRefreshIntervalDays { get; set; } Property Value Type Description Int32 CollapseSingleItemFolders Declaration public bool CollapseSingleItemFolders { get; set; } Property Value Type Description Boolean ContentType Declaration public string ContentType { get; set; } Property Value Type Description String DisabledLocalMetadataReaders Declaration public string[] DisabledLocalMetadataReaders { get; set; } Property Value Type Description String [] DisabledLyricsFetchers Declaration public string[] DisabledLyricsFetchers { get; set; } Property Value Type Description String [] DisabledSubtitleFetchers Declaration public string[] DisabledSubtitleFetchers { get; set; } Property Value Type Description String [] DownloadImagesInAdvance Declaration public bool DownloadImagesInAdvance { get; set; } Property Value Type Description Boolean EnableAdultMetadata Declaration public bool EnableAdultMetadata { get; set; } Property Value Type Description Boolean EnableArchiveMediaFiles Declaration public bool EnableArchiveMediaFiles { get; set; } Property Value Type Description Boolean EnableAudioResume Declaration public bool EnableAudioResume { get; set; } Property Value Type Description Boolean EnableAutomaticSeriesGrouping Declaration public bool EnableAutomaticSeriesGrouping { get; set; } Property Value Type Description Boolean EnableChapterImageExtraction Declaration public bool EnableChapterImageExtraction { get; set; } Property Value Type Description Boolean EnableEmbeddedTitles Declaration public bool EnableEmbeddedTitles { get; set; } Property Value Type Description Boolean EnableMarkerDetection Declaration public bool EnableMarkerDetection { get; set; } Property Value Type Description Boolean EnableMarkerDetectionDuringLibraryScan Declaration public bool EnableMarkerDetectionDuringLibraryScan { get; set; } Property Value Type Description Boolean EnablePhotos Declaration public bool EnablePhotos { get; set; } Property Value Type Description Boolean EnableRealtimeMonitor Declaration public bool EnableRealtimeMonitor { get; set; } Property Value Type Description Boolean ExtractChapterImagesDuringLibraryScan Declaration public bool ExtractChapterImagesDuringLibraryScan { get; set; } Property Value Type Description Boolean ForcedSubtitlesOnly Declaration public bool ForcedSubtitlesOnly { get; set; } Property Value Type Description Boolean IgnoreFileExtensions Declaration public string[] IgnoreFileExtensions { get; set; } Property Value Type Description String [] IgnoreHiddenFiles Declaration public bool IgnoreHiddenFiles { get; set; } Property Value Type Description Boolean ImportCollections Declaration public bool ImportCollections { get; set; } Property Value Type Description Boolean ImportMissingEpisodes Declaration public bool ImportMissingEpisodes { get; set; } Property Value Type Description Boolean ImportPlaylists Declaration public bool ImportPlaylists { get; set; } Property Value Type Description Boolean IntroDetectionFingerprintLength Declaration public int IntroDetectionFingerprintLength { get; set; } Property Value Type Description Int32 LocalMetadataReaderOrder Declaration public string[] LocalMetadataReaderOrder { get; set; } Property Value Type Description String [] LyricsDownloadLanguages Declaration public string[] LyricsDownloadLanguages { get; set; } Property Value Type Description String [] LyricsDownloadMaxAgeDays Declaration public int LyricsDownloadMaxAgeDays { get; set; } Property Value Type Description Int32 LyricsFetcherOrder Declaration public string[] LyricsFetcherOrder { get; set; } Property Value Type Description String [] MaxResumePct Gets or sets the maximum percentage of an item that can be played while still saving playstate. If this percentage is crossed playstate will be reset to the beginning and the item will be marked watched. Declaration public int MaxResumePct { get; set; } Property Value Type Description Int32 The max resume PCT. MetadataCountryCode Gets or sets the metadata country code. Declaration public string MetadataCountryCode { get; set; } Property Value Type Description String The metadata country code. MetadataSavers Declaration public string[] MetadataSavers { get; set; } Property Value Type Description String [] MinCollectionItems Declaration public int MinCollectionItems { get; set; } Property Value Type Description Int32 MinResumeDurationSeconds Gets or sets the minimum duration that an item must have in order to be eligible for playstate updates.. Declaration public int MinResumeDurationSeconds { get; set; } Property Value Type Description Int32 The min resume duration seconds. MinResumePct Gets or sets the minimum percentage of an item that must be played in order for playstate to be updated. Declaration public int MinResumePct { get; set; } Property Value Type Description Int32 The min resume PCT. MusicFolderStructure Declaration public string MusicFolderStructure { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String PathInfos Declaration public MediaPathInfo[] PathInfos { get; set; } Property Value Type Description MediaPathInfo [] PreferredImageLanguage Declaration public string PreferredImageLanguage { get; set; } Property Value Type Description String PreferredMetadataLanguage Gets or sets the preferred metadata language. Declaration public string PreferredMetadataLanguage { get; set; } Property Value Type Description String The preferred metadata language. RequirePerfectSubtitleMatch Declaration public bool RequirePerfectSubtitleMatch { get; set; } Property Value Type Description Boolean SampleIgnoreSize Declaration public int SampleIgnoreSize { get; set; } Property Value Type Description Int32 SaveLocalMetadata Declaration public bool SaveLocalMetadata { get; set; } Property Value Type Description Boolean SaveLocalThumbnailSets Declaration public bool SaveLocalThumbnailSets { get; set; } Property Value Type Description Boolean SaveLyricsWithMedia Declaration public bool SaveLyricsWithMedia { get; set; } Property Value Type Description Boolean SaveMetadataHidden Declaration public bool SaveMetadataHidden { get; set; } Property Value Type Description Boolean SaveSubtitlesWithMedia Declaration public bool SaveSubtitlesWithMedia { get; set; } Property Value Type Description Boolean SeasonZeroDisplayName Declaration public string SeasonZeroDisplayName { get; set; } Property Value Type Description String SkipSubtitlesIfAudioTrackMatches Declaration public bool SkipSubtitlesIfAudioTrackMatches { get; set; } Property Value Type Description Boolean SkipSubtitlesIfEmbeddedSubtitlesPresent Declaration public bool SkipSubtitlesIfEmbeddedSubtitlesPresent { get; set; } Property Value Type Description Boolean SubtitleDownloadLanguages Declaration public string[] SubtitleDownloadLanguages { get; set; } Property Value Type Description String [] SubtitleDownloadMaxAgeDays Declaration public int SubtitleDownloadMaxAgeDays { get; set; } Property Value Type Description Int32 SubtitleFetcherOrder Declaration public string[] SubtitleFetcherOrder { get; set; } Property Value Type Description String [] ThumbnailImagesIntervalSeconds Declaration public int ThumbnailImagesIntervalSeconds { get; set; } Property Value Type Description Int32 TypeOptions Declaration public TypeOptions[] TypeOptions { get; set; } Property Value Type Description TypeOptions [] Methods GetTypeOptions(String) Declaration public TypeOptions GetTypeOptions(string type) Parameters Type Name Description String type Returns Type Description TypeOptions"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.MediaPathInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.MediaPathInfo.html",
    "title": "Class MediaPathInfo",
    "keywords": "Class MediaPathInfo Inheritance Object MediaPathInfo Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class MediaPathInfo Properties NetworkPath Declaration public string NetworkPath { get; set; } Property Value Type Description String Path Declaration public string Path { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.MetadataConfiguration.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.MetadataConfiguration.html",
    "title": "Class MetadataConfiguration",
    "keywords": "Class MetadataConfiguration Inheritance Object MetadataConfiguration Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class MetadataConfiguration Constructors MetadataConfiguration() Declaration public MetadataConfiguration() Properties UseFileCreationTimeForDateAdded Declaration public bool UseFileCreationTimeForDateAdded { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.MetadataFeatures.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.MetadataFeatures.html",
    "title": "Enum MetadataFeatures",
    "keywords": "Enum MetadataFeatures Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public enum MetadataFeatures Fields Name Description Adult Collections RequiredSetup Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<MetadataFeatures>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.MetadataPlugin.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.MetadataPlugin.html",
    "title": "Class MetadataPlugin",
    "keywords": "Class MetadataPlugin Inheritance Object MetadataPlugin Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class MetadataPlugin Properties Features Declaration public MetadataFeatures[] Features { get; set; } Property Value Type Description MetadataFeatures [] Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Type Gets or sets the type. Declaration public MetadataPluginType Type { get; set; } Property Value Type Description MetadataPluginType The type."
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.MetadataPluginSummary.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.MetadataPluginSummary.html",
    "title": "Class MetadataPluginSummary",
    "keywords": "Class MetadataPluginSummary Inheritance Object MetadataPluginSummary Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class MetadataPluginSummary Constructors MetadataPluginSummary() Declaration public MetadataPluginSummary() Properties ItemType Gets or sets the type of the item. Declaration public string ItemType { get; set; } Property Value Type Description String The type of the item. Plugins Gets or sets the plugins. Declaration public MetadataPlugin[] Plugins { get; set; } Property Value Type Description MetadataPlugin [] The plugins. SupportedImageTypes Gets or sets the supported image types. Declaration public ImageType[] SupportedImageTypes { get; set; } Property Value Type Description ImageType [] The supported image types."
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.MetadataPluginType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.MetadataPluginType.html",
    "title": "Enum MetadataPluginType",
    "keywords": "Enum MetadataPluginType Enum MetadataPluginType Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public enum MetadataPluginType Fields Name Description ImageFetcher ImageSaver LocalImageProvider LocalMetadataProvider LyricsFetcher MetadataFetcher MetadataSaver SubtitleFetcher Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<MetadataPluginType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.MusicFolderStructures.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.MusicFolderStructures.html",
    "title": "Class MusicFolderStructures",
    "keywords": "Class MusicFolderStructures Inheritance Object MusicFolderStructures Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public static class MusicFolderStructures Fields Album_Track Declaration public static string Album_Track Field Value Type Description String Artist_Album_Track Declaration public static string Artist_Album_Track Field Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.PathSubstitution.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.PathSubstitution.html",
    "title": "Class PathSubstitution",
    "keywords": "Class PathSubstitution Inheritance Object PathSubstitution Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class PathSubstitution Properties From Declaration public string From { get; set; } Property Value Type Description String To Declaration public string To { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.SegmentSkipMode.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.SegmentSkipMode.html",
    "title": "Enum SegmentSkipMode",
    "keywords": "Enum SegmentSkipMode Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public enum SegmentSkipMode Fields Name Description AutoSkip None ShowButton Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SegmentSkipMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.ServerConfiguration.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.ServerConfiguration.html",
    "title": "Class ServerConfiguration",
    "keywords": "Class ServerConfiguration Represents the server configuration. Inheritance Object BaseApplicationConfiguration ServerConfiguration Inherited Members BaseApplicationConfiguration.EnableDebugLevelLogging BaseApplicationConfiguration.RevertDebugLogging BaseApplicationConfiguration.EnableAutoUpdate BaseApplicationConfiguration.LogFileRetentionDays BaseApplicationConfiguration.RunAtStartup BaseApplicationConfiguration.IsStartupWizardCompleted BaseApplicationConfiguration.CachePath Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class ServerConfiguration : BaseApplicationConfiguration Constructors ServerConfiguration() Initializes a new instance of the ServerConfiguration class. Declaration public ServerConfiguration() Fields DefaultHttpPort Declaration public const int DefaultHttpPort = 8096 Field Value Type Description Int32 DefaultHttpsPort Declaration public const int DefaultHttpsPort = 8920 Field Value Type Description Int32 Properties AutoRunWebApp Declaration public bool AutoRunWebApp { get; set; } Property Value Type Description Boolean CertificatePassword Declaration public string CertificatePassword { get; set; } Property Value Type Description String CertificatePath Gets or sets the value pointing to the file system where the ssl certiifcate is located.. Declaration public string CertificatePath { get; set; } Property Value Type Description String The value pointing to the file system where the ssl certiifcate is located.. ChannelOptionsUpgraded Declaration public bool ChannelOptionsUpgraded { get; set; } Property Value Type Description Boolean CollapseVideoFolders Declaration public bool CollapseVideoFolders { get; set; } Property Value Type Description Boolean DashboardSourcePath Allows the dashboard to be served from a custom path. Declaration public string DashboardSourcePath { get; set; } Property Value Type Description String The dashboard source path. DatabaseAnalysisLimit Declaration public int DatabaseAnalysisLimit { get; set; } Property Value Type Description Int32 DatabaseCacheSizeMB Declaration public int DatabaseCacheSizeMB { get; set; } Property Value Type Description Int32 DisableAsyncIO Declaration public bool DisableAsyncIO { get; set; } Property Value Type Description Boolean DisplaySpecialsWithinSeasons Declaration public bool DisplaySpecialsWithinSeasons { get; set; } Property Value Type Description Boolean EnableAutomaticRestart Declaration public bool EnableAutomaticRestart { get; set; } Property Value Type Description Boolean EnableCaseSensitiveItemIds Gets or sets a value indicating whether [enable case sensitive item ids]. Declaration public bool EnableCaseSensitiveItemIds { get; set; } Property Value Type Description Boolean true if [enable case sensitive item ids]; otherwise, false . EnableDashboardResponseCaching Gets or sets a value indicating whether [enable dashboard response caching]. Allows potential contributors without visual studio to modify production dashboard code and test changes. Declaration public bool EnableDashboardResponseCaching { get; set; } Property Value Type Description Boolean true if [enable dashboard response caching]; otherwise, false . EnableExternalContentInSuggestions Declaration public bool EnableExternalContentInSuggestions { get; set; } Property Value Type Description Boolean EnableHttps Gets or sets a value indicating whether [use HTTPS]. Declaration public bool EnableHttps { get; set; } Property Value Type Description Boolean true if [use HTTPS]; otherwise, false . EnableOriginalTrackTitles Declaration public bool EnableOriginalTrackTitles { get; set; } Property Value Type Description Boolean EnablePeopleLetterSubFolders Declaration public bool EnablePeopleLetterSubFolders { get; set; } Property Value Type Description Boolean EnableRemoteAccess Declaration public bool EnableRemoteAccess { get; set; } Property Value Type Description Boolean EnableSqLiteMmio Declaration public bool EnableSqLiteMmio { get; set; } Property Value Type Description Boolean EnableUPnP Gets or sets a value indicating whether [enable u pn p]. Declaration public bool EnableUPnP { get; set; } Property Value Type Description Boolean true if [enable u pn p]; otherwise, false . ForcedSortNameUpgraded Declaration public bool ForcedSortNameUpgraded { get; set; } Property Value Type Description Boolean HttpServerPortNumber Gets or sets the HTTP server port number. Declaration public int HttpServerPortNumber { get; set; } Property Value Type Description Int32 The HTTP server port number. HttpsPortNumber Gets or sets the HTTPS server port number. Declaration public int HttpsPortNumber { get; set; } Property Value Type Description Int32 The HTTPS server port number. ImageExtractionTimeoutMs Declaration public int ImageExtractionTimeoutMs { get; set; } Property Value Type Description Int32 ImageSavingConvention Gets or sets the image saving convention. Declaration public ImageSavingConvention ImageSavingConvention { get; set; } Property Value Type Description ImageSavingConvention The image saving convention. InheritedParentalRatingValueUpgraded Declaration public bool InheritedParentalRatingValueUpgraded { get; set; } Property Value Type Description Boolean IsBehindProxy Declaration public bool IsBehindProxy { get; set; } Property Value Type Description Boolean IsPortAuthorized Gets or sets a value indicating whether this instance is port authorized. Declaration public bool IsPortAuthorized { get; set; } Property Value Type Description Boolean true if this instance is port authorized; otherwise, false . IsRemoteIPFilterBlacklist Declaration public bool IsRemoteIPFilterBlacklist { get; set; } Property Value Type Description Boolean LibraryMonitorDelay The delay in seconds that we will wait after a file system change to try and discover what has been added/removed Some delay is necessary with some items because their creation is not atomic. It involves the creation of several different directories and files. Declaration public int LibraryMonitorDelay { get; set; } Property Value Type Description Int32 The file watcher delay. LocalNetworkAddresses Declaration public string[] LocalNetworkAddresses { get; set; } Property Value Type Description String [] LocalNetworkSubnets Declaration public string[] LocalNetworkSubnets { get; set; } Property Value Type Description String [] LogAllQueryTimes Declaration public bool LogAllQueryTimes { get; set; } Property Value Type Description Boolean MetadataCountryCode Gets or sets the metadata country code. Declaration public string MetadataCountryCode { get; set; } Property Value Type Description String The metadata country code. MetadataNetworkPath Declaration public string MetadataNetworkPath { get; set; } Property Value Type Description String MetadataPath Gets or sets the metadata path. Declaration public string MetadataPath { get; set; } Property Value Type Description String The metadata path. OptimizeDatabaseOnShutdown Declaration public bool OptimizeDatabaseOnShutdown { get; set; } Property Value Type Description Boolean PathSubstitutions Declaration public PathSubstitution[] PathSubstitutions { get; set; } Property Value Type Description PathSubstitution [] PreferredMetadataLanguage Gets or sets the preferred metadata language. Declaration public string PreferredMetadataLanguage { get; set; } Property Value Type Description String The preferred metadata language. PublicHttpsPort Gets or sets the public HTTPS port. Declaration public int PublicHttpsPort { get; set; } Property Value Type Description Int32 The public HTTPS port. PublicPort Gets or sets the public mapped port. Declaration public int PublicPort { get; set; } Property Value Type Description Int32 The public mapped port. RemoteClientBitrateLimit Declaration public int RemoteClientBitrateLimit { get; set; } Property Value Type Description Int32 RemoteIPFilter Declaration public string[] RemoteIPFilter { get; set; } Property Value Type Description String [] RequireHttps Declaration public bool RequireHttps { get; set; } Property Value Type Description Boolean ServerName Declaration public string ServerName { get; set; } Property Value Type Description String SimultaneousStreamLimit Declaration public int SimultaneousStreamLimit { get; set; } Property Value Type Description Int32 SortRemoveWords Words to be removed from strings to create a sort name Declaration public string[] SortRemoveWords { get; set; } Property Value Type Description String [] The sort remove words. TimerIdsUpgraded Declaration public bool TimerIdsUpgraded { get; set; } Property Value Type Description Boolean UICulture Declaration public string UICulture { get; set; } Property Value Type Description String UninstalledPlugins Declaration public string[] UninstalledPlugins { get; set; } Property Value Type Description String [] VacuumDatabaseOnStartup Declaration public bool VacuumDatabaseOnStartup { get; set; } Property Value Type Description Boolean WanDdns Declaration public string WanDdns { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.SubtitlePlaybackMode.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.SubtitlePlaybackMode.html",
    "title": "Enum SubtitlePlaybackMode",
    "keywords": "Enum SubtitlePlaybackMode Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public enum SubtitlePlaybackMode Fields Name Description Always Default None OnlyForced Smart Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SubtitlePlaybackMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.ThrottlingMethod.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.ThrottlingMethod.html",
    "title": "Enum ThrottlingMethod",
    "keywords": "Enum ThrottlingMethod Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public enum ThrottlingMethod Fields Name Description BySegmentRequest ByStreamBufferSize Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ThrottlingMethod>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.TypeOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.TypeOptions.html",
    "title": "Class TypeOptions",
    "keywords": "Class TypeOptions Inheritance Object TypeOptions Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class TypeOptions Constructors TypeOptions() Declaration public TypeOptions() Fields DefaultImageOptions Declaration public static Dictionary<string, ImageOption[]> DefaultImageOptions Field Value Type Description Dictionary < String , ImageOption []> DefaultInstance Declaration public static ImageOption DefaultInstance Field Value Type Description ImageOption Properties ImageFetcherOrder Declaration public string[] ImageFetcherOrder { get; set; } Property Value Type Description String [] ImageFetchers Declaration public string[] ImageFetchers { get; set; } Property Value Type Description String [] ImageOptions Declaration public ImageOption[] ImageOptions { get; set; } Property Value Type Description ImageOption [] MetadataFetcherOrder Declaration public string[] MetadataFetcherOrder { get; set; } Property Value Type Description String [] MetadataFetchers Declaration public string[] MetadataFetchers { get; set; } Property Value Type Description String [] Type Declaration public string Type { get; set; } Property Value Type Description String Methods GetImageOptions(ImageType) Declaration public ImageOption GetImageOptions(ImageType type) Parameters Type Name Description ImageType type Returns Type Description ImageOption GetLimit(ImageType) Declaration public int GetLimit(ImageType type) Parameters Type Name Description ImageType type Returns Type Description Int32 GetMinWidth(ImageType) Declaration public int GetMinWidth(ImageType type) Parameters Type Name Description ImageType type Returns Type Description Int32 IsEnabled(ImageType) Declaration public bool IsEnabled(ImageType type) Parameters Type Name Description ImageType type Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.UnratedItem.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.UnratedItem.html",
    "title": "Enum UnratedItem",
    "keywords": "Enum UnratedItem Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public enum UnratedItem Fields Name Description Book ChannelContent Game LiveTvChannel LiveTvProgram Movie Music Other Series Trailer Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<UnratedItem>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Configuration.UserConfiguration.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Configuration.UserConfiguration.html",
    "title": "Class UserConfiguration",
    "keywords": "Class UserConfiguration Class UserConfiguration Inheritance Object UserConfiguration Namespace : MediaBrowser.Model.Configuration Assembly : MediaBrowser.Model.dll Syntax public class UserConfiguration Constructors UserConfiguration() Initializes a new instance of the UserConfiguration class. Declaration public UserConfiguration() Properties AudioLanguagePreference Gets or sets the audio language preference. Declaration public string AudioLanguagePreference { get; set; } Property Value Type Description String The audio language preference. DisplayMissingEpisodes Declaration public bool DisplayMissingEpisodes { get; set; } Property Value Type Description Boolean EnableLocalPassword Declaration public bool EnableLocalPassword { get; set; } Property Value Type Description Boolean EnableNextEpisodeAutoPlay Declaration public bool EnableNextEpisodeAutoPlay { get; set; } Property Value Type Description Boolean HidePlayedInLatest Declaration public bool HidePlayedInLatest { get; set; } Property Value Type Description Boolean IntroSkipMode Declaration public SegmentSkipMode IntroSkipMode { get; set; } Property Value Type Description SegmentSkipMode LatestItemsExcludes Declaration public string[] LatestItemsExcludes { get; set; } Property Value Type Description String [] MyMediaExcludes Declaration public string[] MyMediaExcludes { get; set; } Property Value Type Description String [] OrderedViews Declaration public string[] OrderedViews { get; set; } Property Value Type Description String [] PlayDefaultAudioTrack Gets or sets a value indicating whether [play default audio track]. Declaration public bool PlayDefaultAudioTrack { get; set; } Property Value Type Description Boolean true if [play default audio track]; otherwise, false . RememberAudioSelections Declaration public bool RememberAudioSelections { get; set; } Property Value Type Description Boolean RememberSubtitleSelections Declaration public bool RememberSubtitleSelections { get; set; } Property Value Type Description Boolean ResumeRewindSeconds Declaration public int ResumeRewindSeconds { get; set; } Property Value Type Description Int32 SubtitleLanguagePreference Gets or sets the subtitle language preference. Declaration public string SubtitleLanguagePreference { get; set; } Property Value Type Description String The subtitle language preference. SubtitleMode Declaration public SubtitlePlaybackMode SubtitleMode { get; set; } Property Value Type Description SubtitlePlaybackMode"
  },
  "reference/pluginapi/MediaBrowser.Model.Connect.ConnectAuthenticationResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Connect.ConnectAuthenticationResult.html",
    "title": "Class ConnectAuthenticationResult",
    "keywords": "Class ConnectAuthenticationResult Inheritance Object ConnectAuthenticationResult Namespace : MediaBrowser.Model.Connect Assembly : MediaBrowser.Model.dll Syntax public class ConnectAuthenticationResult Properties AccessToken Gets or sets the access token. Declaration public string AccessToken { get; set; } Property Value Type Description String The access token. User Gets or sets the user. Declaration public ConnectUser User { get; set; } Property Value Type Description ConnectUser The user."
  },
  "reference/pluginapi/MediaBrowser.Model.Connect.ConnectUser.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Connect.ConnectUser.html",
    "title": "Class ConnectUser",
    "keywords": "Class ConnectUser Inheritance Object ConnectUser Namespace : MediaBrowser.Model.Connect Assembly : MediaBrowser.Model.dll Syntax public class ConnectUser Properties Email Declaration public string Email { get; set; } Property Value Type Description String Id Declaration public string Id { get; set; } Property Value Type Description String IsActive Declaration public bool IsActive { get; set; } Property Value Type Description Boolean Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Connect.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Connect.html",
    "title": "Namespace MediaBrowser.Model.Connect",
    "keywords": "Namespace MediaBrowser.Model.Connect Classes ConnectAuthenticationResult ConnectUser Enums UserLinkType"
  },
  "reference/pluginapi/MediaBrowser.Model.Connect.UserLinkType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Connect.UserLinkType.html",
    "title": "Enum UserLinkType",
    "keywords": "Enum UserLinkType Namespace : MediaBrowser.Model.Connect Assembly : MediaBrowser.Model.dll Syntax public enum UserLinkType Fields Name Description Guest The guest LinkedUser The linked user Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<UserLinkType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Cryptography.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Cryptography.html",
    "title": "Namespace MediaBrowser.Model.Cryptography",
    "keywords": "Namespace MediaBrowser.Model.Cryptography Interfaces ICryptoProvider"
  },
  "reference/pluginapi/MediaBrowser.Model.Cryptography.ICryptoProvider.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Cryptography.ICryptoProvider.html",
    "title": "Interface ICryptoProvider",
    "keywords": "Interface ICryptoProvider Namespace : MediaBrowser.Model.Cryptography Assembly : MediaBrowser.Model.dll Syntax public interface ICryptoProvider Methods ComputeMD5(Stream) Declaration byte[] ComputeMD5(Stream str) Parameters Type Name Description Stream str Returns Type Description Byte [] ComputeMD5(ReadOnlySpan<Byte>) Declaration ReadOnlySpan<byte> ComputeMD5(ReadOnlySpan<byte> bytes) Parameters Type Name Description ReadOnlySpan < Byte > bytes Returns Type Description ReadOnlySpan < Byte > ComputeSHA1(ReadOnlySpan<Byte>) Declaration ReadOnlySpan<byte> ComputeSHA1(ReadOnlySpan<byte> bytes) Parameters Type Name Description ReadOnlySpan < Byte > bytes Returns Type Description ReadOnlySpan < Byte > GetMD5(ReadOnlySpan<Char>) Declaration Guid GetMD5(ReadOnlySpan<char> str) Parameters Type Name Description ReadOnlySpan < Char > str Returns Type Description Guid"
  },
  "reference/pluginapi/MediaBrowser.Model.Devices.ContentUploadHistory.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Devices.ContentUploadHistory.html",
    "title": "Class ContentUploadHistory",
    "keywords": "Class ContentUploadHistory Inheritance Object ContentUploadHistory Namespace : MediaBrowser.Model.Devices Assembly : MediaBrowser.Model.dll Syntax public class ContentUploadHistory Constructors ContentUploadHistory() Declaration public ContentUploadHistory() Properties DeviceId Declaration public string DeviceId { get; set; } Property Value Type Description String FilesUploaded Declaration public LocalFileInfo[] FilesUploaded { get; set; } Property Value Type Description LocalFileInfo []"
  },
  "reference/pluginapi/MediaBrowser.Model.Devices.DeviceInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Devices.DeviceInfo.html",
    "title": "Class DeviceInfo",
    "keywords": "Class DeviceInfo Inheritance Object DeviceInfo Namespace : MediaBrowser.Model.Devices Assembly : MediaBrowser.Model.dll Syntax public class DeviceInfo Properties AppName Gets or sets the name of the application. Declaration public string AppName { get; set; } Property Value Type Description String The name of the application. AppVersion Gets or sets the application version. Declaration public string AppVersion { get; set; } Property Value Type Description String The application version. DateLastActivity Declaration public DateTimeOffset DateLastActivity { get; set; } Property Value Type Description DateTimeOffset IconUrl Declaration public string IconUrl { get; set; } Property Value Type Description String Id Gets or sets the identifier. Declaration public string Id { get; set; } Property Value Type Description String The identifier. InternalId Declaration [IgnoreDataMember] public long InternalId { get; set; } Property Value Type Description Int64 LastUserId Gets or sets the last user identifier. Declaration public string LastUserId { get; set; } Property Value Type Description String The last user identifier. LastUserName Gets or sets the last name of the user. Declaration public string LastUserName { get; set; } Property Value Type Description String The last name of the user. Name Declaration public string Name { get; set; } Property Value Type Description String ReportedDeviceId Declaration public string ReportedDeviceId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Devices.DeviceOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Devices.DeviceOptions.html",
    "title": "Class DeviceOptions",
    "keywords": "Class DeviceOptions Inheritance Object DeviceOptions Namespace : MediaBrowser.Model.Devices Assembly : MediaBrowser.Model.dll Syntax public class DeviceOptions Properties CustomName Declaration public string CustomName { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Devices.DeviceQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Devices.DeviceQuery.html",
    "title": "Class DeviceQuery",
    "keywords": "Class DeviceQuery Inheritance Object DeviceQuery Namespace : MediaBrowser.Model.Devices Assembly : MediaBrowser.Model.dll Syntax public class DeviceQuery Properties IncludeIconUrl Declaration public bool IncludeIconUrl { get; set; } Property Value Type Description Boolean Limit Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > StartIndex Declaration public int StartIndex { get; set; } Property Value Type Description Int32 SupportsSync Gets or sets a value indicating whether [supports synchronize]. Declaration public bool? SupportsSync { get; set; } Property Value Type Description Nullable < Boolean > null if [supports synchronize] contains no value, true if [supports synchronize]; otherwise, false . UserId Gets or sets the user identifier. Declaration public long UserId { get; set; } Property Value Type Description Int64 The user identifier."
  },
  "reference/pluginapi/MediaBrowser.Model.Devices.DevicesOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Devices.DevicesOptions.html",
    "title": "Class DevicesOptions",
    "keywords": "Class DevicesOptions Inheritance Object DevicesOptions Namespace : MediaBrowser.Model.Devices Assembly : MediaBrowser.Model.dll Syntax public class DevicesOptions Properties CameraUploadPath Declaration public string CameraUploadPath { get; set; } Property Value Type Description String EnableCameraUploadSubfolders Declaration public bool EnableCameraUploadSubfolders { get; set; } Property Value Type Description Boolean EnabledCameraUploadDevices Declaration public string[] EnabledCameraUploadDevices { get; set; } Property Value Type Description String []"
  },
  "reference/pluginapi/MediaBrowser.Model.Devices.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Devices.html",
    "title": "Namespace MediaBrowser.Model.Devices",
    "keywords": "Namespace MediaBrowser.Model.Devices Classes ContentUploadHistory DeviceInfo DeviceOptions DeviceQuery DevicesOptions LocalFileInfo"
  },
  "reference/pluginapi/MediaBrowser.Model.Devices.LocalFileInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Devices.LocalFileInfo.html",
    "title": "Class LocalFileInfo",
    "keywords": "Class LocalFileInfo Inheritance Object LocalFileInfo Namespace : MediaBrowser.Model.Devices Assembly : MediaBrowser.Model.dll Syntax public class LocalFileInfo Properties Album Declaration public string Album { get; set; } Property Value Type Description String Id Declaration public string Id { get; set; } Property Value Type Description String MimeType Declaration public string MimeType { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Diagnostics.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Diagnostics.html",
    "title": "Namespace MediaBrowser.Model.Diagnostics",
    "keywords": "Namespace MediaBrowser.Model.Diagnostics Classes ProcessOptions Interfaces IProcess IProcessFactory"
  },
  "reference/pluginapi/MediaBrowser.Model.Diagnostics.IProcess.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Diagnostics.IProcess.html",
    "title": "Interface IProcess",
    "keywords": "Interface IProcess Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Model.Diagnostics Assembly : MediaBrowser.Model.dll Syntax public interface IProcess : IDisposable Properties ExitCode Declaration int ExitCode { get; } Property Value Type Description Int32 StandardError Declaration StreamReader StandardError { get; } Property Value Type Description StreamReader StandardInput Declaration StreamWriter StandardInput { get; } Property Value Type Description StreamWriter StandardOutput Declaration StreamReader StandardOutput { get; } Property Value Type Description StreamReader StartInfo Declaration ProcessOptions StartInfo { get; } Property Value Type Description ProcessOptions Methods Kill() Declaration void Kill() Start() Declaration void Start() WaitForExit(Int32) Declaration bool WaitForExit(int timeMs) Parameters Type Name Description Int32 timeMs Returns Type Description Boolean WaitForExitAsync(Int32) Declaration Task<bool> WaitForExitAsync(int timeMs) Parameters Type Name Description Int32 timeMs Returns Type Description Task < Boolean > Events Exited Declaration event EventHandler Exited Event Type Type Description EventHandler"
  },
  "reference/pluginapi/MediaBrowser.Model.Diagnostics.IProcessFactory.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Diagnostics.IProcessFactory.html",
    "title": "Interface IProcessFactory",
    "keywords": "Interface IProcessFactory Namespace : MediaBrowser.Model.Diagnostics Assembly : MediaBrowser.Model.dll Syntax public interface IProcessFactory Methods Create(ProcessOptions) Declaration IProcess Create(ProcessOptions options) Parameters Type Name Description ProcessOptions options Returns Type Description IProcess"
  },
  "reference/pluginapi/MediaBrowser.Model.Diagnostics.ProcessOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Diagnostics.ProcessOptions.html",
    "title": "Class ProcessOptions",
    "keywords": "Class ProcessOptions Inheritance Object ProcessOptions Namespace : MediaBrowser.Model.Diagnostics Assembly : MediaBrowser.Model.dll Syntax public class ProcessOptions Properties Arguments Declaration public string Arguments { get; set; } Property Value Type Description String CreateNoWindow Declaration public bool CreateNoWindow { get; set; } Property Value Type Description Boolean EnableRaisingEvents Declaration public bool EnableRaisingEvents { get; set; } Property Value Type Description Boolean ErrorDialog Declaration public bool ErrorDialog { get; set; } Property Value Type Description Boolean FileName Declaration public string FileName { get; set; } Property Value Type Description String IsHidden Declaration public bool IsHidden { get; set; } Property Value Type Description Boolean RedirectStandardError Declaration public bool RedirectStandardError { get; set; } Property Value Type Description Boolean RedirectStandardInput Declaration public bool RedirectStandardInput { get; set; } Property Value Type Description Boolean RedirectStandardOutput Declaration public bool RedirectStandardOutput { get; set; } Property Value Type Description Boolean UseShellExecute Declaration public bool UseShellExecute { get; set; } Property Value Type Description Boolean WorkingDirectory Declaration public string WorkingDirectory { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.AudioOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.AudioOptions.html",
    "title": "Class AudioOptions",
    "keywords": "Class AudioOptions Class AudioOptions. Inheritance Object AudioOptions VideoOptions Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class AudioOptions Constructors AudioOptions() Declaration public AudioOptions() Properties AudioTranscodingBitrate Gets or sets the audio transcoding bitrate. Declaration public int? AudioTranscodingBitrate { get; set; } Property Value Type Description Nullable < Int32 > The audio transcoding bitrate. Context Gets or sets the context. Declaration public EncodingContext Context { get; set; } Property Value Type Description EncodingContext The context. DeviceId Declaration public string DeviceId { get; set; } Property Value Type Description String EnableDirectPlay Declaration public bool EnableDirectPlay { get; set; } Property Value Type Description Boolean EnableDirectStream Declaration public bool EnableDirectStream { get; set; } Property Value Type Description Boolean ForceDirectPlay Declaration public bool ForceDirectPlay { get; set; } Property Value Type Description Boolean ForceDirectStream Declaration public bool ForceDirectStream { get; set; } Property Value Type Description Boolean ItemId Declaration public long ItemId { get; set; } Property Value Type Description Int64 MaxAudioChannels Allows an override of supported number of audio channels Example: DeviceProfile supports five channel, but user only has stereo speakers Declaration public int? MaxAudioChannels { get; set; } Property Value Type Description Nullable < Int32 > MaxBitrate The application's configured quality setting Declaration public long? MaxBitrate { get; set; } Property Value Type Description Nullable < Int64 > MediaSourceId Optional. Only needed if a specific AudioStreamIndex or SubtitleStreamIndex are requested. Declaration public string MediaSourceId { get; set; } Property Value Type Description String MediaSources Declaration public MediaSourceInfo[] MediaSources { get; set; } Property Value Type Description MediaSourceInfo [] Profile Declaration public DeviceProfile Profile { get; set; } Property Value Type Description DeviceProfile Methods GetMaxBitrate(Boolean) Gets the maximum bitrate. Declaration public long? GetMaxBitrate(bool isAudio) Parameters Type Name Description Boolean isAudio Returns Type Description Nullable < Int64 > System.Nullable<System.Int32>."
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.CodecProfile.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.CodecProfile.html",
    "title": "Class CodecProfile",
    "keywords": "Class CodecProfile Inheritance Object CodecProfile Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class CodecProfile Constructors CodecProfile() Declaration public CodecProfile() Properties ApplyConditions Declaration public ProfileCondition[] ApplyConditions { get; set; } Property Value Type Description ProfileCondition [] Codec Declaration public string Codec { get; set; } Property Value Type Description String Conditions Declaration public ProfileCondition[] Conditions { get; set; } Property Value Type Description ProfileCondition [] Container Declaration public string Container { get; set; } Property Value Type Description String Type Declaration public CodecType Type { get; set; } Property Value Type Description CodecType Methods ContainsAnyCodec(ReadOnlyMemory<Char>[], ReadOnlySpan<Char>) Declaration public bool ContainsAnyCodec(ReadOnlyMemory<char>[] codec, ReadOnlySpan<char> container) Parameters Type Name Description ReadOnlyMemory < Char >[] codec ReadOnlySpan < Char > container Returns Type Description Boolean ContainsAnyCodec(ReadOnlySpan<Char>, ReadOnlySpan<Char>) Declaration public bool ContainsAnyCodec(ReadOnlySpan<char> codec, ReadOnlySpan<char> container) Parameters Type Name Description ReadOnlySpan < Char > codec ReadOnlySpan < Char > container Returns Type Description Boolean GetCodecs() Declaration public ReadOnlyMemory<char>[] GetCodecs() Returns Type Description ReadOnlyMemory < Char >[]"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.CodecType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.CodecType.html",
    "title": "Enum CodecType",
    "keywords": "Enum CodecType Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public enum CodecType Fields Name Description Audio Video VideoAudio Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<CodecType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.ConditionProcessor.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.ConditionProcessor.html",
    "title": "Class ConditionProcessor",
    "keywords": "Class ConditionProcessor Inheritance Object ConditionProcessor Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class ConditionProcessor Methods IsAudioConditionSatisfied(ProfileCondition, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>) Declaration public bool IsAudioConditionSatisfied(ProfileCondition condition, int? audioChannels, int? audioBitrate, int? audioSampleRate, int? audioBitDepth) Parameters Type Name Description ProfileCondition condition Nullable < Int32 > audioChannels Nullable < Int32 > audioBitrate Nullable < Int32 > audioSampleRate Nullable < Int32 > audioBitDepth Returns Type Description Boolean IsImageConditionSatisfied(ProfileCondition, Nullable<Int32>, Nullable<Int32>) Declaration public bool IsImageConditionSatisfied(ProfileCondition condition, int? width, int? height) Parameters Type Name Description ProfileCondition condition Nullable < Int32 > width Nullable < Int32 > height Returns Type Description Boolean IsVideoAudioConditionSatisfied(ProfileCondition, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, ReadOnlySpan<Char>, Nullable<Boolean>) Declaration public bool IsVideoAudioConditionSatisfied(ProfileCondition condition, int? audioChannels, int? audioBitrate, int? audioSampleRate, int? audioBitDepth, ReadOnlySpan<char> audioProfile, bool? isSecondaryTrack) Parameters Type Name Description ProfileCondition condition Nullable < Int32 > audioChannels Nullable < Int32 > audioBitrate Nullable < Int32 > audioSampleRate Nullable < Int32 > audioBitDepth ReadOnlySpan < Char > audioProfile Nullable < Boolean > isSecondaryTrack Returns Type Description Boolean IsVideoConditionSatisfied(ProfileCondition, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, Nullable<Double>, Single, Nullable<TransportStreamTimestamp>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, ReadOnlySpan<Char>) Declaration public bool IsVideoConditionSatisfied(ProfileCondition condition, int? width, int? height, int? videoBitDepth, int? videoBitrate, ReadOnlySpan<char> videoProfile, ReadOnlySpan<char> videoRange, double? videoLevel, float videoFramerate, TransportStreamTimestamp? timestamp, bool? isAnamorphic, bool? isInterlaced, int? refFrames, int? numVideoStreams, int? numAudioStreams, ReadOnlySpan<char> videoCodecTag) Parameters Type Name Description ProfileCondition condition Nullable < Int32 > width Nullable < Int32 > height Nullable < Int32 > videoBitDepth Nullable < Int32 > videoBitrate ReadOnlySpan < Char > videoProfile ReadOnlySpan < Char > videoRange Nullable < Double > videoLevel Single videoFramerate Nullable < TransportStreamTimestamp > timestamp Nullable < Boolean > isAnamorphic Nullable < Boolean > isInterlaced Nullable < Int32 > refFrames Nullable < Int32 > numVideoStreams Nullable < Int32 > numAudioStreams ReadOnlySpan < Char > videoCodecTag Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.ContainerProfile.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.ContainerProfile.html",
    "title": "Class ContainerProfile",
    "keywords": "Class ContainerProfile Inheritance Object ContainerProfile Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class ContainerProfile Constructors ContainerProfile() Declaration public ContainerProfile() Fields SplitChars Declaration public static char[] SplitChars Field Value Type Description Char [] Properties Conditions Declaration public ProfileCondition[] Conditions { get; set; } Property Value Type Description ProfileCondition [] Container Declaration public string Container { get; set; } Property Value Type Description String Type Declaration public DlnaProfileType Type { get; set; } Property Value Type Description DlnaProfileType Methods ContainsContainer(ReadOnlyMemory<Char>[], Boolean, ReadOnlySpan<Char>) Declaration public static bool ContainsContainer(ReadOnlyMemory<char>[] profileContainers, bool isNegativeList, ReadOnlySpan<char> inputContainer) Parameters Type Name Description ReadOnlyMemory < Char >[] profileContainers Boolean isNegativeList ReadOnlySpan < Char > inputContainer Returns Type Description Boolean ContainsContainer(ReadOnlyMemory<Char>[], ReadOnlySpan<Char>) Declaration public static bool ContainsContainer(ReadOnlyMemory<char>[] profileContainers, ReadOnlySpan<char> inputContainer) Parameters Type Name Description ReadOnlyMemory < Char >[] profileContainers ReadOnlySpan < Char > inputContainer Returns Type Description Boolean ContainsContainer(ReadOnlySpan<Char>) Declaration public bool ContainsContainer(ReadOnlySpan<char> container) Parameters Type Name Description ReadOnlySpan < Char > container Returns Type Description Boolean ContainsContainer(ReadOnlySpan<Char>, ReadOnlySpan<Char>) Declaration public static bool ContainsContainer(ReadOnlySpan<char> profileContainers, ReadOnlySpan<char> inputContainer) Parameters Type Name Description ReadOnlySpan < Char > profileContainers ReadOnlySpan < Char > inputContainer Returns Type Description Boolean GetContainers() Declaration public ReadOnlyMemory<char>[] GetContainers() Returns Type Description ReadOnlyMemory < Char >[] SplitValue(ReadOnlySpan<Char>) Declaration public static ReadOnlyMemory<char>[] SplitValue(ReadOnlySpan<char> value) Parameters Type Name Description ReadOnlySpan < Char > value Returns Type Description ReadOnlyMemory < Char >[] SplitValueToStrings(String) Declaration public static string[] SplitValueToStrings(string value) Parameters Type Name Description String value Returns Type Description String []"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.ContentFeatureBuilder.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.ContentFeatureBuilder.html",
    "title": "Class ContentFeatureBuilder",
    "keywords": "Class ContentFeatureBuilder Inheritance Object ContentFeatureBuilder Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class ContentFeatureBuilder Constructors ContentFeatureBuilder(DeviceProfile) Declaration public ContentFeatureBuilder(DeviceProfile profile) Parameters Type Name Description DeviceProfile profile Methods BuildAudioHeader(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Boolean, Int64, TranscodeSeekInfo) Declaration public string BuildAudioHeader(ReadOnlySpan<char> container, ReadOnlySpan<char> audioCodec, int? audioBitrate, int? audioSampleRate, int? audioChannels, int? audioBitDepth, bool isDirectStream, long runtimeTicks, TranscodeSeekInfo transcodeSeekInfo) Parameters Type Name Description ReadOnlySpan < Char > container ReadOnlySpan < Char > audioCodec Nullable < Int32 > audioBitrate Nullable < Int32 > audioSampleRate Nullable < Int32 > audioChannels Nullable < Int32 > audioBitDepth Boolean isDirectStream Int64 runtimeTicks TranscodeSeekInfo transcodeSeekInfo Returns Type Description String BuildImageHeader(ReadOnlySpan<Char>, Nullable<Int32>, Nullable<Int32>, Boolean, String) Declaration public string BuildImageHeader(ReadOnlySpan<char> container, int? width, int? height, bool isDirectStream, string orgPn = null) Parameters Type Name Description ReadOnlySpan < Char > container Nullable < Int32 > width Nullable < Int32 > height Boolean isDirectStream String orgPn Returns Type Description String BuildVideoHeader(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, TransportStreamTimestamp, Boolean, Int64, ReadOnlySpan<Char>, ReadOnlySpan<Char>, Nullable<Double>, Single, TranscodeSeekInfo, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, ReadOnlySpan<Char>) Declaration public List<string> BuildVideoHeader(ReadOnlySpan<char> container, ReadOnlySpan<char> videoCodec, ReadOnlySpan<char> audioCodec, int? width, int? height, int? bitDepth, int? videoBitrate, TransportStreamTimestamp timestamp, bool isDirectStream, long runtimeTicks, ReadOnlySpan<char> videoProfile, ReadOnlySpan<char> videoRange, double? videoLevel, float videoFramerate, TranscodeSeekInfo transcodeSeekInfo, bool? isAnamorphic, bool? isInterlaced, int? refFrames, int? numVideoStreams, int? numAudioStreams, ReadOnlySpan<char> videoCodecTag) Parameters Type Name Description ReadOnlySpan < Char > container ReadOnlySpan < Char > videoCodec ReadOnlySpan < Char > audioCodec Nullable < Int32 > width Nullable < Int32 > height Nullable < Int32 > bitDepth Nullable < Int32 > videoBitrate TransportStreamTimestamp timestamp Boolean isDirectStream Int64 runtimeTicks ReadOnlySpan < Char > videoProfile ReadOnlySpan < Char > videoRange Nullable < Double > videoLevel Single videoFramerate TranscodeSeekInfo transcodeSeekInfo Nullable < Boolean > isAnamorphic Nullable < Boolean > isInterlaced Nullable < Int32 > refFrames Nullable < Int32 > numVideoStreams Nullable < Int32 > numAudioStreams ReadOnlySpan < Char > videoCodecTag Returns Type Description List < String >"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.DeviceProfile.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.DeviceProfile.html",
    "title": "Class DeviceProfile",
    "keywords": "Class DeviceProfile Inheritance Object DeviceProfile Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class DeviceProfile Constructors DeviceProfile() Declaration public DeviceProfile() Properties CodecProfiles Declaration public CodecProfile[] CodecProfiles { get; set; } Property Value Type Description CodecProfile [] ContainerProfiles Declaration public ContainerProfile[] ContainerProfiles { get; set; } Property Value Type Description ContainerProfile [] DirectPlayProfiles Gets or sets the direct play profiles. Declaration public DirectPlayProfile[] DirectPlayProfiles { get; set; } Property Value Type Description DirectPlayProfile [] The direct play profiles. Id Declaration public string Id { get; set; } Property Value Type Description String MaxStaticMusicBitrate Declaration public int? MaxStaticMusicBitrate { get; set; } Property Value Type Description Nullable < Int32 > MaxStreamingBitrate Declaration public long? MaxStreamingBitrate { get; set; } Property Value Type Description Nullable < Int64 > MusicStreamingTranscodingBitrate Declaration public int? MusicStreamingTranscodingBitrate { get; set; } Property Value Type Description Nullable < Int32 > Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. ResponseProfiles Declaration public ResponseProfile[] ResponseProfiles { get; set; } Property Value Type Description ResponseProfile [] SubtitleProfiles Declaration public SubtitleProfile[] SubtitleProfiles { get; set; } Property Value Type Description SubtitleProfile [] SupportedMediaTypes Declaration public string SupportedMediaTypes { get; set; } Property Value Type Description String TranscodingProfiles Gets or sets the transcoding profiles. Declaration public TranscodingProfile[] TranscodingProfiles { get; set; } Property Value Type Description TranscodingProfile [] The transcoding profiles. Methods GetAudioMediaProfile(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>) Declaration public ResponseProfile GetAudioMediaProfile(ReadOnlySpan<char> container, ReadOnlySpan<char> audioCodec, int? audioChannels, int? audioBitrate, int? audioSampleRate, int? audioBitDepth) Parameters Type Name Description ReadOnlySpan < Char > container ReadOnlySpan < Char > audioCodec Nullable < Int32 > audioChannels Nullable < Int32 > audioBitrate Nullable < Int32 > audioSampleRate Nullable < Int32 > audioBitDepth Returns Type Description ResponseProfile GetAudioTranscodingProfile(ReadOnlySpan<Char>, ReadOnlySpan<Char>) Declaration public TranscodingProfile GetAudioTranscodingProfile(ReadOnlySpan<char> container, ReadOnlySpan<char> audioCodec) Parameters Type Name Description ReadOnlySpan < Char > container ReadOnlySpan < Char > audioCodec Returns Type Description TranscodingProfile GetImageMediaProfile(ReadOnlySpan<Char>, Nullable<Int32>, Nullable<Int32>) Declaration public ResponseProfile GetImageMediaProfile(ReadOnlySpan<char> container, int? width, int? height) Parameters Type Name Description ReadOnlySpan < Char > container Nullable < Int32 > width Nullable < Int32 > height Returns Type Description ResponseProfile GetSupportedMediaTypes() Declaration public ReadOnlyMemory<char>[] GetSupportedMediaTypes() Returns Type Description ReadOnlyMemory < Char >[] GetVideoMediaProfile(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, Nullable<Double>, Single, TransportStreamTimestamp, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, ReadOnlySpan<Char>) Declaration public ResponseProfile GetVideoMediaProfile(ReadOnlySpan<char> container, ReadOnlySpan<char> audioCodec, ReadOnlySpan<char> videoCodec, int? width, int? height, int? bitDepth, int? videoBitrate, ReadOnlySpan<char> videoProfile, ReadOnlySpan<char> videoRange, double? videoLevel, float videoFramerate, TransportStreamTimestamp timestamp, bool? isAnamorphic, bool? isInterlaced, int? refFrames, int? numVideoStreams, int? numAudioStreams, ReadOnlySpan<char> videoCodecTag) Parameters Type Name Description ReadOnlySpan < Char > container ReadOnlySpan < Char > audioCodec ReadOnlySpan < Char > videoCodec Nullable < Int32 > width Nullable < Int32 > height Nullable < Int32 > bitDepth Nullable < Int32 > videoBitrate ReadOnlySpan < Char > videoProfile ReadOnlySpan < Char > videoRange Nullable < Double > videoLevel Single videoFramerate TransportStreamTimestamp timestamp Nullable < Boolean > isAnamorphic Nullable < Boolean > isInterlaced Nullable < Int32 > refFrames Nullable < Int32 > numVideoStreams Nullable < Int32 > numAudioStreams ReadOnlySpan < Char > videoCodecTag Returns Type Description ResponseProfile GetVideoTranscodingProfile(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) Declaration public TranscodingProfile GetVideoTranscodingProfile(ReadOnlySpan<char> container, ReadOnlySpan<char> audioCodec, ReadOnlySpan<char> videoCodec) Parameters Type Name Description ReadOnlySpan < Char > container ReadOnlySpan < Char > audioCodec ReadOnlySpan < Char > videoCodec Returns Type Description TranscodingProfile"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.DirectPlayProfile.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.DirectPlayProfile.html",
    "title": "Class DirectPlayProfile",
    "keywords": "Class DirectPlayProfile Inheritance Object DirectPlayProfile Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class DirectPlayProfile Properties AudioCodec Declaration public string AudioCodec { get; set; } Property Value Type Description String Container Declaration public string Container { get; set; } Property Value Type Description String Type Declaration public DlnaProfileType Type { get; set; } Property Value Type Description DlnaProfileType VideoCodec Declaration public string VideoCodec { get; set; } Property Value Type Description String Methods SupportsAudioCodec(ReadOnlySpan<Char>) Declaration public bool SupportsAudioCodec(ReadOnlySpan<char> codec) Parameters Type Name Description ReadOnlySpan < Char > codec Returns Type Description Boolean SupportsContainer(ReadOnlySpan<Char>) Declaration public bool SupportsContainer(ReadOnlySpan<char> container) Parameters Type Name Description ReadOnlySpan < Char > container Returns Type Description Boolean SupportsVideoCodec(ReadOnlySpan<Char>) Declaration public bool SupportsVideoCodec(ReadOnlySpan<char> codec) Parameters Type Name Description ReadOnlySpan < Char > codec Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.DlnaFlags.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.DlnaFlags.html",
    "title": "Enum DlnaFlags",
    "keywords": "Enum DlnaFlags Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax [Flags] public enum DlnaFlags : ulong Fields Name Description BackgroundTransferMode ByteBasedSeek ConnectionStall DlnaV15 InteractiveTransferMode PlayContainer RtspPause S0Increase SenderPaced SnIncrease StreamingTransferMode TimeBasedSeek Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<DlnaFlags>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.DlnaMaps.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.DlnaMaps.html",
    "title": "Class DlnaMaps",
    "keywords": "Class DlnaMaps Inheritance Object DlnaMaps Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class DlnaMaps Methods FlagsToString(DlnaFlags) Declaration public static string FlagsToString(DlnaFlags flags) Parameters Type Name Description DlnaFlags flags Returns Type Description String GetImageOrgOpValue() Declaration public static string GetImageOrgOpValue() Returns Type Description String GetOrgOpValue(Boolean, Boolean, TranscodeSeekInfo) Declaration public static string GetOrgOpValue(bool hasKnownRuntime, bool isDirectStream, TranscodeSeekInfo profileTranscodeSeekInfo) Parameters Type Name Description Boolean hasKnownRuntime Boolean isDirectStream TranscodeSeekInfo profileTranscodeSeekInfo Returns Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.DlnaProfileType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.DlnaProfileType.html",
    "title": "Enum DlnaProfileType",
    "keywords": "Enum DlnaProfileType Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public enum DlnaProfileType Fields Name Description Audio Photo Video Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<DlnaProfileType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.EncodingContext.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.EncodingContext.html",
    "title": "Enum EncodingContext",
    "keywords": "Enum EncodingContext Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public enum EncodingContext Fields Name Description Static Streaming Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<EncodingContext>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.html",
    "title": "Namespace MediaBrowser.Model.Dlna",
    "keywords": "Namespace MediaBrowser.Model.Dlna Classes AudioOptions Class AudioOptions. CodecProfile ConditionProcessor ContainerProfile ContentFeatureBuilder DeviceProfile DirectPlayProfile DlnaMaps MediaFormatProfileResolver MediaStreamSelector ProfileCondition RequestedStreamInfo ResolutionConfiguration ResolutionNormalizer ResolutionOptions ResponseProfile StreamBuilder StreamInfo Class StreamInfo. SubtitleProfile SubtitleStreamInfo TranscodingProfile UpnpNotificationInfo VideoOptions Class VideoOptions. Interfaces IDeviceDiscovery IDeviceProfileResolver ITranscoderSupport Enums CodecType DlnaFlags DlnaProfileType EncodingContext MediaFormatProfile PlaybackErrorCode ProfileConditionType ProfileConditionValue SubtitleDeliveryMethod TranscodeSeekInfo"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.IDeviceDiscovery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.IDeviceDiscovery.html",
    "title": "Interface IDeviceDiscovery",
    "keywords": "Interface IDeviceDiscovery Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public interface IDeviceDiscovery Methods AddNotificationTypeFilter(String) Declaration void AddNotificationTypeFilter(string filter) Parameters Type Name Description String filter RemoveNotificationTypeFilter(String) Declaration void RemoveNotificationTypeFilter(string filter) Parameters Type Name Description String filter Events DeviceDiscovered Declaration event EventHandler<GenericEventArgs<UpnpNotificationInfo>> DeviceDiscovered Event Type Type Description EventHandler < GenericEventArgs < UpnpNotificationInfo >> DeviceLeft Declaration event EventHandler<GenericEventArgs<UpnpNotificationInfo>> DeviceLeft Event Type Type Description EventHandler < GenericEventArgs < UpnpNotificationInfo >>"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.IDeviceProfileResolver.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.IDeviceProfileResolver.html",
    "title": "Interface IDeviceProfileResolver",
    "keywords": "Interface IDeviceProfileResolver Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Controller.dll Syntax public interface IDeviceProfileResolver Methods GetProfile(String) Declaration DeviceProfile GetProfile(string id) Parameters Type Name Description String id Returns Type Description DeviceProfile"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.ITranscoderSupport.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.ITranscoderSupport.html",
    "title": "Interface ITranscoderSupport",
    "keywords": "Interface ITranscoderSupport Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public interface ITranscoderSupport Methods CanEncodeToAudioCodec(ReadOnlySpan<Char>) Declaration bool CanEncodeToAudioCodec(ReadOnlySpan<char> codec) Parameters Type Name Description ReadOnlySpan < Char > codec Returns Type Description Boolean CanEncodeToSubtitleCodec(ReadOnlySpan<Char>) Declaration bool CanEncodeToSubtitleCodec(ReadOnlySpan<char> codec) Parameters Type Name Description ReadOnlySpan < Char > codec Returns Type Description Boolean CanExtractSubtitles(String, EncodingContext) Declaration bool CanExtractSubtitles(string codec, EncodingContext encodingContext) Parameters Type Name Description String codec EncodingContext encodingContext Returns Type Description Boolean SupportsSubtitleConversionTo(MediaSourceInfo, MediaStream, ReadOnlySpan<Char>, EncodingContext, SubtitleDeliveryMethod) Declaration bool SupportsSubtitleConversionTo(MediaSourceInfo mediaSource, MediaStream mediaStream, ReadOnlySpan<char> toCodec, EncodingContext context, SubtitleDeliveryMethod deliveryMethod) Parameters Type Name Description MediaSourceInfo mediaSource MediaStream mediaStream ReadOnlySpan < Char > toCodec EncodingContext context SubtitleDeliveryMethod deliveryMethod Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.MediaFormatProfile.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.MediaFormatProfile.html",
    "title": "Enum MediaFormatProfile",
    "keywords": "Enum MediaFormatProfile Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public enum MediaFormatProfile Fields Name Description AAC_ADTS AAC_ADTS_320 AAC_ISO AAC_ISO_320 AVC_3GPP_BL_QCIF15_AAC AVC_MP4_HP_HD_AAC AVC_MP4_LPCM AVC_MP4_MP_HD_1080i_AAC AVC_MP4_MP_HD_720p_AAC AVC_MP4_MP_SD_AAC_MULT5 AVC_MP4_MP_SD_AC3 AVC_MP4_MP_SD_MPEG1_L3 AVC_TS_HD_50_LPCM_T AVC_TS_HD_DTS_ISO AVC_TS_HD_DTS_T AVC_TS_HP_HD_MPEG1_L2_ISO AVC_TS_HP_HD_MPEG1_L2_T AVC_TS_HP_SD_MPEG1_L2_ISO AVC_TS_HP_SD_MPEG1_L2_T AVC_TS_MP_HD_AAC_MULT5 AVC_TS_MP_HD_AAC_MULT5_ISO AVC_TS_MP_HD_AAC_MULT5_T AVC_TS_MP_HD_AC3 AVC_TS_MP_HD_AC3_ISO AVC_TS_MP_HD_AC3_T AVC_TS_MP_HD_MPEG1_L3 AVC_TS_MP_HD_MPEG1_L3_ISO AVC_TS_MP_HD_MPEG1_L3_T AVC_TS_MP_SD_AAC_MULT5 AVC_TS_MP_SD_AAC_MULT5_ISO AVC_TS_MP_SD_AAC_MULT5_T AVC_TS_MP_SD_AC3 AVC_TS_MP_SD_AC3_ISO AVC_TS_MP_SD_AC3_T AVC_TS_MP_SD_MPEG1_L3 AVC_TS_MP_SD_MPEG1_L3_ISO AVC_TS_MP_SD_MPEG1_L3_T AVI DVR_MS FLAC FLV GIF_LRG JPEG_LRG JPEG_MED JPEG_SM JPEG_TN LPCM16_44_MONO LPCM16_44_STEREO LPCM16_48_MONO LPCM16_48_STEREO MATROSKA MP3 MPEG_PS_NTSC MPEG_PS_PAL MPEG_TS_JP_T MPEG_TS_SD_EU MPEG_TS_SD_EU_ISO MPEG_TS_SD_EU_T MPEG_TS_SD_KO MPEG_TS_SD_KO_ISO MPEG_TS_SD_KO_T MPEG_TS_SD_NA MPEG_TS_SD_NA_ISO MPEG_TS_SD_NA_T MPEG1 MPEG4_H263_3GPP_P0_L10_AMR MPEG4_H263_MP4_P0_L10_AAC MPEG4_P2_3GPP_SP_L0B_AAC MPEG4_P2_3GPP_SP_L0B_AMR MPEG4_P2_MP4_ASP_AAC MPEG4_P2_MP4_NDSD MPEG4_P2_MP4_SP_L6_AAC MPEG4_P2_TS_ASP_AAC MPEG4_P2_TS_ASP_AAC_ISO MPEG4_P2_TS_ASP_AAC_T MPEG4_P2_TS_ASP_AC3 MPEG4_P2_TS_ASP_AC3_ISO MPEG4_P2_TS_ASP_AC3_T MPEG4_P2_TS_ASP_MPEG1_L3 MPEG4_P2_TS_ASP_MPEG1_L3_ISO MPEG4_P2_TS_ASP_MPEG1_L3_T MPEG4_P2_TS_ASP_MPEG2_L2 MPEG4_P2_TS_ASP_MPEG2_L2_ISO MPEG4_P2_TS_ASP_MPEG2_L2_T OGG OGV PNG_LRG PNG_TN RAW VC1_ASF_AP_L1_WMA VC1_ASF_AP_L2_WMA VC1_ASF_AP_L3_WMA VC1_TS_AP_L1_AC3_ISO VC1_TS_AP_L2_AC3_ISO VC1_TS_HD_DTS_ISO VC1_TS_HD_DTS_T WMA_BASE WMA_FULL WMVHIGH_FULL WMVHIGH_PRO WMVMED_BASE WMVMED_FULL WMVMED_PRO WTV Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<MediaFormatProfile>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.MediaFormatProfileResolver.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.MediaFormatProfileResolver.html",
    "title": "Class MediaFormatProfileResolver",
    "keywords": "Class MediaFormatProfileResolver Inheritance Object MediaFormatProfileResolver Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class MediaFormatProfileResolver Methods ResolveAudioFormat(ReadOnlySpan<Char>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>) Declaration public MediaFormatProfile? ResolveAudioFormat(ReadOnlySpan<char> container, int? bitrate, int? frequency, int? channels) Parameters Type Name Description ReadOnlySpan < Char > container Nullable < Int32 > bitrate Nullable < Int32 > frequency Nullable < Int32 > channels Returns Type Description Nullable < MediaFormatProfile > ResolveImageFormat(ReadOnlySpan<Char>, Nullable<Int32>, Nullable<Int32>) Declaration public MediaFormatProfile? ResolveImageFormat(ReadOnlySpan<char> container, int? width, int? height) Parameters Type Name Description ReadOnlySpan < Char > container Nullable < Int32 > width Nullable < Int32 > height Returns Type Description Nullable < MediaFormatProfile > ResolveVideoFormat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, Nullable<Int32>, Nullable<Int32>, TransportStreamTimestamp) Declaration public string[] ResolveVideoFormat(ReadOnlySpan<char> container, ReadOnlySpan<char> videoCodec, ReadOnlySpan<char> audioCodec, int? width, int? height, TransportStreamTimestamp timestampType) Parameters Type Name Description ReadOnlySpan < Char > container ReadOnlySpan < Char > videoCodec ReadOnlySpan < Char > audioCodec Nullable < Int32 > width Nullable < Int32 > height TransportStreamTimestamp timestampType Returns Type Description String []"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.MediaStreamSelector.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.MediaStreamSelector.html",
    "title": "Class MediaStreamSelector",
    "keywords": "Class MediaStreamSelector Inheritance Object MediaStreamSelector Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public static class MediaStreamSelector Methods GetDefaultAudioStreamIndex(List<MediaStream>, String[], Boolean) Declaration public static int? GetDefaultAudioStreamIndex(List<MediaStream> streams, string[] preferredLanguages, bool preferDefaultTrack) Parameters Type Name Description List < MediaStream > streams String [] preferredLanguages Boolean preferDefaultTrack Returns Type Description Nullable < Int32 > GetDefaultSubtitleStream(List<MediaStream>, String[], SubtitlePlaybackMode, Boolean, String, SubtitleProfile[]) Declaration public static MediaStream GetDefaultSubtitleStream(List<MediaStream> streams, string[] preferredLanguages, SubtitlePlaybackMode mode, bool rememberSubtitleSelections, string audioTrackLanguage, SubtitleProfile[] subtitleProfiles) Parameters Type Name Description List < MediaStream > streams String [] preferredLanguages SubtitlePlaybackMode mode Boolean rememberSubtitleSelections String audioTrackLanguage SubtitleProfile [] subtitleProfiles Returns Type Description MediaStream"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.PlaybackErrorCode.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.PlaybackErrorCode.html",
    "title": "Enum PlaybackErrorCode",
    "keywords": "Enum PlaybackErrorCode Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public enum PlaybackErrorCode Fields Name Description NoCompatibleStream NotAllowed RateLimitExceeded Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<PlaybackErrorCode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.ProfileCondition.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.ProfileCondition.html",
    "title": "Class ProfileCondition",
    "keywords": "Class ProfileCondition Inheritance Object ProfileCondition Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class ProfileCondition Constructors ProfileCondition() Declaration public ProfileCondition() ProfileCondition(ProfileConditionType, ProfileConditionValue, String) Declaration public ProfileCondition(ProfileConditionType condition, ProfileConditionValue property, string value) Parameters Type Name Description ProfileConditionType condition ProfileConditionValue property String value ProfileCondition(ProfileConditionType, ProfileConditionValue, String, Boolean) Declaration public ProfileCondition(ProfileConditionType condition, ProfileConditionValue property, string value, bool isRequired) Parameters Type Name Description ProfileConditionType condition ProfileConditionValue property String value Boolean isRequired Properties Condition Declaration public ProfileConditionType Condition { get; set; } Property Value Type Description ProfileConditionType IsRequired Declaration public bool IsRequired { get; set; } Property Value Type Description Boolean Property Declaration public ProfileConditionValue Property { get; set; } Property Value Type Description ProfileConditionValue Value Declaration public string Value { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.ProfileConditionType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.ProfileConditionType.html",
    "title": "Enum ProfileConditionType",
    "keywords": "Enum ProfileConditionType Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public enum ProfileConditionType Fields Name Description Equals EqualsAny GreaterThanEqual LessThanEqual NotEquals Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ProfileConditionType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.ProfileConditionValue.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.ProfileConditionValue.html",
    "title": "Enum ProfileConditionValue",
    "keywords": "Enum ProfileConditionValue Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public enum ProfileConditionValue Fields Name Description AudioBitDepth AudioBitrate AudioChannels AudioProfile AudioSampleRate Has64BitOffsets Height IsAnamorphic IsAvc IsInterlaced IsSecondaryAudio NumAudioStreams NumVideoStreams PacketLength RefFrames VideoBitDepth VideoBitrate VideoCodecTag VideoFramerate VideoLevel VideoProfile VideoRange VideoTimestamp Width Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ProfileConditionValue>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.RequestedStreamInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.RequestedStreamInfo.html",
    "title": "Class RequestedStreamInfo",
    "keywords": "Class RequestedStreamInfo Inheritance Object RequestedStreamInfo Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class RequestedStreamInfo Properties AudioChannels Declaration public int? AudioChannels { get; set; } Property Value Type Description Nullable < Int32 > Bitrate Declaration public int? Bitrate { get; set; } Property Value Type Description Nullable < Int32 > Codecs Declaration public string[] Codecs { get; set; } Property Value Type Description String [] Index Declaration public int Index { get; set; } Property Value Type Description Int32 IsDefault Declaration public bool IsDefault { get; set; } Property Value Type Description Boolean OriginalStream Declaration public MediaStream OriginalStream { get; set; } Property Value Type Description MediaStream SampleRate Declaration public int? SampleRate { get; set; } Property Value Type Description Nullable < Int32 > SubtitleDeliveryMethod Declaration public SubtitleDeliveryMethod SubtitleDeliveryMethod { get; set; } Property Value Type Description SubtitleDeliveryMethod SuppportedCodecs Declaration public string[] SuppportedCodecs { get; set; } Property Value Type Description String []"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.ResolutionConfiguration.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.ResolutionConfiguration.html",
    "title": "Class ResolutionConfiguration",
    "keywords": "Class ResolutionConfiguration Inheritance Object ResolutionConfiguration Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class ResolutionConfiguration Constructors ResolutionConfiguration(Int32, Int32) Declaration public ResolutionConfiguration(int maxWidth, int maxBitrate) Parameters Type Name Description Int32 maxWidth Int32 maxBitrate Properties MaxBitrate Declaration public int MaxBitrate { get; set; } Property Value Type Description Int32 MaxWidth Declaration public int MaxWidth { get; set; } Property Value Type Description Int32"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.ResolutionNormalizer.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.ResolutionNormalizer.html",
    "title": "Class ResolutionNormalizer",
    "keywords": "Class ResolutionNormalizer Inheritance Object ResolutionNormalizer Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class ResolutionNormalizer Methods Normalize(Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Int32, Double, Nullable<Int32>, Nullable<Int32>) Declaration public static ResolutionOptions Normalize(int? inputBitrate, int? inputWidth, int? inputHeight, int outputBitrate, double bitrateScaleFactor, int? maxWidth, int? maxHeight) Parameters Type Name Description Nullable < Int32 > inputBitrate Nullable < Int32 > inputWidth Nullable < Int32 > inputHeight Int32 outputBitrate Double bitrateScaleFactor Nullable < Int32 > maxWidth Nullable < Int32 > maxHeight Returns Type Description ResolutionOptions"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.ResolutionOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.ResolutionOptions.html",
    "title": "Class ResolutionOptions",
    "keywords": "Class ResolutionOptions Inheritance Object ResolutionOptions Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class ResolutionOptions Properties MaxHeight Declaration public int? MaxHeight { get; set; } Property Value Type Description Nullable < Int32 > MaxWidth Declaration public int? MaxWidth { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.ResponseProfile.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.ResponseProfile.html",
    "title": "Class ResponseProfile",
    "keywords": "Class ResponseProfile Inheritance Object ResponseProfile Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class ResponseProfile Constructors ResponseProfile() Declaration public ResponseProfile() Properties AudioCodec Declaration public string AudioCodec { get; set; } Property Value Type Description String Conditions Declaration public ProfileCondition[] Conditions { get; set; } Property Value Type Description ProfileCondition [] Container Declaration public string Container { get; set; } Property Value Type Description String MimeType Declaration public string MimeType { get; set; } Property Value Type Description String OrgPn Declaration public string OrgPn { get; set; } Property Value Type Description String Type Declaration public DlnaProfileType Type { get; set; } Property Value Type Description DlnaProfileType VideoCodec Declaration public string VideoCodec { get; set; } Property Value Type Description String Methods GetAudioCodecs() Declaration public ReadOnlyMemory<char>[] GetAudioCodecs() Returns Type Description ReadOnlyMemory < Char >[] GetContainers() Declaration public ReadOnlyMemory<char>[] GetContainers() Returns Type Description ReadOnlyMemory < Char >[] GetVideoCodecs() Declaration public ReadOnlyMemory<char>[] GetVideoCodecs() Returns Type Description ReadOnlyMemory < Char >[]"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.StreamBuilder.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.StreamBuilder.html",
    "title": "Class StreamBuilder",
    "keywords": "Class StreamBuilder Inheritance Object StreamBuilder Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class StreamBuilder Constructors StreamBuilder(ITranscoderSupport, ILogger) Declaration public StreamBuilder(ITranscoderSupport transcoderSupport, ILogger logger) Parameters Type Name Description ITranscoderSupport transcoderSupport ILogger logger StreamBuilder(ITranscoderSupport, ILogger, UserConfiguration) Declaration public StreamBuilder(ITranscoderSupport transcoderSupport, ILogger logger, UserConfiguration userConfiguration) Parameters Type Name Description ITranscoderSupport transcoderSupport ILogger logger UserConfiguration userConfiguration Properties PreferredSubtitleLanguages Declaration public string[] PreferredSubtitleLanguages { get; set; } Property Value Type Description String [] UserSubtitlePlaybackMode Declaration public SubtitlePlaybackMode? UserSubtitlePlaybackMode { get; set; } Property Value Type Description Nullable < SubtitlePlaybackMode > Methods BuildAudioItem(AudioOptions) Declaration public StreamInfo BuildAudioItem(AudioOptions options) Parameters Type Name Description AudioOptions options Returns Type Description StreamInfo BuildVideoItem(VideoOptions) Declaration public StreamInfo BuildVideoItem(VideoOptions options) Parameters Type Name Description VideoOptions options Returns Type Description StreamInfo GetSubtitleProfile(MediaSourceInfo, MediaStream, SubtitleProfile[], PlayMethod, ITranscoderSupport, EncodingContext, ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) Declaration public static SubtitleProfile GetSubtitleProfile(MediaSourceInfo mediaSource, MediaStream subtitleStream, SubtitleProfile[] subtitleProfiles, PlayMethod playMethod, ITranscoderSupport transcoderSupport, EncodingContext encodingContext, ReadOnlySpan<char> outputContainer, ReadOnlySpan<char> transcodingSubProtocol, ReadOnlySpan<char> manifestSubtitleFormat) Parameters Type Name Description MediaSourceInfo mediaSource MediaStream subtitleStream SubtitleProfile [] subtitleProfiles PlayMethod playMethod ITranscoderSupport transcoderSupport EncodingContext encodingContext ReadOnlySpan < Char > outputContainer ReadOnlySpan < Char > transcodingSubProtocol ReadOnlySpan < Char > manifestSubtitleFormat Returns Type Description SubtitleProfile NormalizeMediaSourceFormatIntoSingleContainer(ReadOnlySpan<Char>, ReadOnlySpan<Char>, DeviceProfile, DlnaProfileType) Declaration public static string NormalizeMediaSourceFormatIntoSingleContainer(ReadOnlySpan<char> inputContainer, ReadOnlySpan<char> inputPath, DeviceProfile profile, DlnaProfileType type) Parameters Type Name Description ReadOnlySpan < Char > inputContainer ReadOnlySpan < Char > inputPath DeviceProfile profile DlnaProfileType type Returns Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.StreamInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.StreamInfo.html",
    "title": "Class StreamInfo",
    "keywords": "Class StreamInfo Class StreamInfo. Inheritance Object StreamInfo Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class StreamInfo Constructors StreamInfo() Declaration public StreamInfo() Properties AddSubtitleStreamIndexesToUrl Declaration public bool AddSubtitleStreamIndexesToUrl { get; set; } Property Value Type Description Boolean AllowInterlacedVideoStreamCopy Declaration public bool AllowInterlacedVideoStreamCopy { get; set; } Property Value Type Description Boolean AudioStreams Declaration public RequestedStreamInfo[] AudioStreams { get; set; } Property Value Type Description RequestedStreamInfo [] BreakOnNonKeyFrames Declaration public bool BreakOnNonKeyFrames { get; set; } Property Value Type Description Boolean Container Declaration public string Container { get; set; } Property Value Type Description String Context Declaration public EncodingContext Context { get; set; } Property Value Type Description EncodingContext CopyTimestamps Declaration public bool CopyTimestamps { get; set; } Property Value Type Description Boolean DeviceId Declaration public string DeviceId { get; set; } Property Value Type Description String DeviceProfile Declaration public DeviceProfile DeviceProfile { get; set; } Property Value Type Description DeviceProfile DeviceProfileId Declaration public string DeviceProfileId { get; set; } Property Value Type Description String EnableMpegtsM2TsMode Declaration public bool EnableMpegtsM2TsMode { get; set; } Property Value Type Description Boolean EstimateContentLength Declaration public bool EstimateContentLength { get; set; } Property Value Type Description Boolean IsDirectStream Declaration public bool IsDirectStream { get; } Property Value Type Description Boolean IsTargetAnamorphic Declaration public bool? IsTargetAnamorphic { get; } Property Value Type Description Nullable < Boolean > IsTargetInterlaced Declaration public bool? IsTargetInterlaced { get; } Property Value Type Description Nullable < Boolean > ItemId Declaration public long ItemId { get; set; } Property Value Type Description Int64 ManifestSubtitles Declaration public string ManifestSubtitles { get; set; } Property Value Type Description String MaxFramerate Declaration public float? MaxFramerate { get; set; } Property Value Type Description Nullable < Single > MaxHeight Declaration public int? MaxHeight { get; set; } Property Value Type Description Nullable < Int32 > MaxWidth Declaration public int? MaxWidth { get; set; } Property Value Type Description Nullable < Int32 > MediaSource Declaration public MediaSourceInfo MediaSource { get; set; } Property Value Type Description MediaSourceInfo MediaSourceId Declaration public string MediaSourceId { get; } Property Value Type Description String MediaType Declaration public DlnaProfileType MediaType { get; set; } Property Value Type Description DlnaProfileType MinSegments Declaration public int? MinSegments { get; set; } Property Value Type Description Nullable < Int32 > PlayMethod Declaration public PlayMethod PlayMethod { get; set; } Property Value Type Description PlayMethod PlaySessionId Declaration public string PlaySessionId { get; set; } Property Value Type Description String RequireNonAnamorphic Declaration public bool RequireNonAnamorphic { get; set; } Property Value Type Description Boolean RunTimeTicks Declaration public long? RunTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > SegmentLength Declaration public int? SegmentLength { get; set; } Property Value Type Description Nullable < Int32 > StartPositionTicks Declaration public long StartPositionTicks { get; set; } Property Value Type Description Int64 StreamOptions Declaration public Dictionary<string, string> StreamOptions { get; } Property Value Type Description Dictionary < String , String > SubProtocol Declaration public string SubProtocol { get; set; } Property Value Type Description String SubtitleStreams Declaration public RequestedStreamInfo[] SubtitleStreams { get; set; } Property Value Type Description RequestedStreamInfo [] TargetFramerate Predicts the audio sample rate that will be in the output stream Declaration public float? TargetFramerate { get; } Property Value Type Description Nullable < Single > TargetHeight Declaration public int? TargetHeight { get; } Property Value Type Description Nullable < Int32 > TargetRefFrames Gets the target reference frames. Declaration public int? TargetRefFrames { get; } Property Value Type Description Nullable < Int32 > The target reference frames. TargetSize Predicts the audio channels that will be in the output stream Declaration public long? TargetSize { get; } Property Value Type Description Nullable < Int64 > TargetTimestamp Declaration public TransportStreamTimestamp TargetTimestamp { get; } Property Value Type Description TransportStreamTimestamp TargetTotalBitrate Declaration public int? TargetTotalBitrate { get; } Property Value Type Description Nullable < Int32 > TargetVideoBitDepth Predicts the audio sample rate that will be in the output stream Declaration public int? TargetVideoBitDepth { get; } Property Value Type Description Nullable < Int32 > TargetVideoBitrate Declaration public int? TargetVideoBitrate { get; } Property Value Type Description Nullable < Int32 > TargetVideoCodec Declaration public string[] TargetVideoCodec { get; } Property Value Type Description String [] TargetVideoCodecTag Gets the target video codec tag. Declaration public string TargetVideoCodecTag { get; } Property Value Type Description String The target video codec tag. TargetVideoLevel Predicts the audio sample rate that will be in the output stream Declaration public double? TargetVideoLevel { get; } Property Value Type Description Nullable < Double > TargetVideoProfile Predicts the audio sample rate that will be in the output stream Declaration public string TargetVideoProfile { get; } Property Value Type Description String TargetVideoStream Returns the video stream that will be used Declaration public MediaStream TargetVideoStream { get; } Property Value Type Description MediaStream TargetWidth Declaration public int? TargetWidth { get; } Property Value Type Description Nullable < Int32 > TranscodeReasons Declaration public TranscodeReason[] TranscodeReasons { get; set; } Property Value Type Description TranscodeReason [] TranscodeSeekInfo Declaration public TranscodeSeekInfo TranscodeSeekInfo { get; set; } Property Value Type Description TranscodeSeekInfo TranscodingMaxAudioChannels Declaration public int? TranscodingMaxAudioChannels { get; set; } Property Value Type Description Nullable < Int32 > VideoBitrate Declaration public int? VideoBitrate { get; set; } Property Value Type Description Nullable < Int32 > VideoCodecs Declaration public string[] VideoCodecs { get; set; } Property Value Type Description String [] VideoSideDataSubs Declaration public string VideoSideDataSubs { get; set; } Property Value Type Description String Methods GetOption(ReadOnlySpan<Char>, String) Declaration public string GetOption(ReadOnlySpan<char> qualifier, string name) Parameters Type Name Description ReadOnlySpan < Char > qualifier String name Returns Type Description String GetOption(String) Declaration public string GetOption(string name) Parameters Type Name Description String name Returns Type Description String GetSelectableStreams(MediaStreamType) Declaration public List<MediaStream> GetSelectableStreams(MediaStreamType type) Parameters Type Name Description MediaStreamType type Returns Type Description List < MediaStream > GetSubtitleProfiles(ITranscoderSupport, Boolean, String, String) Declaration public List<SubtitleStreamInfo> GetSubtitleProfiles(ITranscoderSupport transcoderSupport, bool includeSelectedTrackOnly, string baseUrl, string accessToken) Parameters Type Name Description ITranscoderSupport transcoderSupport Boolean includeSelectedTrackOnly String baseUrl String accessToken Returns Type Description List < SubtitleStreamInfo > GetTargetAudioBitDepth(RequestedStreamInfo) Predicts the audio sample rate that will be in the output stream Declaration public int? GetTargetAudioBitDepth(RequestedStreamInfo targetAudioStream) Parameters Type Name Description RequestedStreamInfo targetAudioStream Returns Type Description Nullable < Int32 > GetTargetAudioBitDepth(ReadOnlySpan<Char>) Declaration public int? GetTargetAudioBitDepth(ReadOnlySpan<char> codec) Parameters Type Name Description ReadOnlySpan < Char > codec Returns Type Description Nullable < Int32 > GetTargetAudioBitrate(RequestedStreamInfo) Predicts the audio bitrate that will be in the output stream Declaration public int? GetTargetAudioBitrate(RequestedStreamInfo audioStream) Parameters Type Name Description RequestedStreamInfo audioStream Returns Type Description Nullable < Int32 > GetTargetAudioChannels(RequestedStreamInfo) Predicts the audio channels that will be in the output stream Declaration public int? GetTargetAudioChannels(RequestedStreamInfo targetAudioStream) Parameters Type Name Description RequestedStreamInfo targetAudioStream Returns Type Description Nullable < Int32 > GetTargetAudioCodec(RequestedStreamInfo) Predicts the audio codec that will be in the output stream Declaration public string[] GetTargetAudioCodec(RequestedStreamInfo audioStream) Parameters Type Name Description RequestedStreamInfo audioStream Returns Type Description String [] GetTargetAudioSampleRate(MediaStream) Predicts the audio sample rate that will be in the output stream Declaration public int? GetTargetAudioSampleRate(MediaStream targetAudioStream) Parameters Type Name Description MediaStream targetAudioStream Returns Type Description Nullable < Int32 > GetTargetRefFrames(ReadOnlySpan<Char>) Declaration public int? GetTargetRefFrames(ReadOnlySpan<char> codec) Parameters Type Name Description ReadOnlySpan < Char > codec Returns Type Description Nullable < Int32 > GetTargetVideoBitDepth(ReadOnlySpan<Char>) Declaration public int? GetTargetVideoBitDepth(ReadOnlySpan<char> codec) Parameters Type Name Description ReadOnlySpan < Char > codec Returns Type Description Nullable < Int32 > GetTargetVideoLevel(ReadOnlySpan<Char>) Declaration public double? GetTargetVideoLevel(ReadOnlySpan<char> codec) Parameters Type Name Description ReadOnlySpan < Char > codec Returns Type Description Nullable < Double > SetOption(ReadOnlySpan<Char>, String, String) Declaration public void SetOption(ReadOnlySpan<char> qualifier, string name, string value) Parameters Type Name Description ReadOnlySpan < Char > qualifier String name String value SetOption(String, String) Declaration public void SetOption(string name, string value) Parameters Type Name Description String name String value ToUrl(String, String) Declaration public string ToUrl(string baseUrl, string accessToken) Parameters Type Name Description String baseUrl String accessToken Returns Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.SubtitleDeliveryMethod.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.SubtitleDeliveryMethod.html",
    "title": "Enum SubtitleDeliveryMethod",
    "keywords": "Enum SubtitleDeliveryMethod Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public enum SubtitleDeliveryMethod Fields Name Description Embed Multiplex subtitles into the media stream. Encode Burn-in subtitles into the video. External Deliver subtitles as separate file or stream. Hls Deliver subtitles via HLS. VideoSideData Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SubtitleDeliveryMethod>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.SubtitleProfile.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.SubtitleProfile.html",
    "title": "Class SubtitleProfile",
    "keywords": "Class SubtitleProfile Inheritance Object SubtitleProfile Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class SubtitleProfile Properties Container Declaration public string Container { get; set; } Property Value Type Description String DidlMode Declaration public string DidlMode { get; set; } Property Value Type Description String Format Declaration public string Format { get; set; } Property Value Type Description String Language Declaration public string Language { get; set; } Property Value Type Description String Method Declaration public SubtitleDeliveryMethod Method { get; set; } Property Value Type Description SubtitleDeliveryMethod Protocol Declaration public string Protocol { get; set; } Property Value Type Description String Methods GetLanguages() Declaration public ReadOnlyMemory<char>[] GetLanguages() Returns Type Description ReadOnlyMemory < Char >[] SupportsLanguage(ReadOnlySpan<Char>) Declaration public bool SupportsLanguage(ReadOnlySpan<char> subLanguage) Parameters Type Name Description ReadOnlySpan < Char > subLanguage Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.SubtitleStreamInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.SubtitleStreamInfo.html",
    "title": "Class SubtitleStreamInfo",
    "keywords": "Class SubtitleStreamInfo Inheritance Object SubtitleStreamInfo Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class SubtitleStreamInfo Properties DeliveryMethod Declaration public SubtitleDeliveryMethod DeliveryMethod { get; set; } Property Value Type Description SubtitleDeliveryMethod DisplayTitle Declaration public string DisplayTitle { get; set; } Property Value Type Description String Format Declaration public string Format { get; set; } Property Value Type Description String Index Declaration public int Index { get; set; } Property Value Type Description Int32 IsExternalUrl Declaration public bool IsExternalUrl { get; set; } Property Value Type Description Boolean IsForced Declaration public bool IsForced { get; set; } Property Value Type Description Boolean Language Declaration public string Language { get; set; } Property Value Type Description String Url Declaration public string Url { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.TranscodeSeekInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.TranscodeSeekInfo.html",
    "title": "Enum TranscodeSeekInfo",
    "keywords": "Enum TranscodeSeekInfo Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public enum TranscodeSeekInfo Fields Name Description Auto Bytes Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<TranscodeSeekInfo>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.TranscodingProfile.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.TranscodingProfile.html",
    "title": "Class TranscodingProfile",
    "keywords": "Class TranscodingProfile Inheritance Object TranscodingProfile Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class TranscodingProfile Properties AllowInterlacedVideoStreamCopy Declaration public bool AllowInterlacedVideoStreamCopy { get; set; } Property Value Type Description Boolean AudioCodec Declaration public string AudioCodec { get; set; } Property Value Type Description String BreakOnNonKeyFrames Declaration public bool BreakOnNonKeyFrames { get; set; } Property Value Type Description Boolean Container Declaration public string Container { get; set; } Property Value Type Description String Context Declaration public EncodingContext Context { get; set; } Property Value Type Description EncodingContext CopyTimestamps Declaration public bool CopyTimestamps { get; set; } Property Value Type Description Boolean EnableMpegtsM2TsMode Declaration public bool EnableMpegtsM2TsMode { get; set; } Property Value Type Description Boolean EstimateContentLength Declaration public bool EstimateContentLength { get; set; } Property Value Type Description Boolean ManifestSubtitles Declaration public string ManifestSubtitles { get; set; } Property Value Type Description String MaxAudioChannels Declaration public string MaxAudioChannels { get; set; } Property Value Type Description String MaxManifestSubtitles Declaration public int MaxManifestSubtitles { get; set; } Property Value Type Description Int32 MinSegments Declaration public int MinSegments { get; set; } Property Value Type Description Int32 Protocol Declaration public string Protocol { get; set; } Property Value Type Description String SegmentLength Declaration public int SegmentLength { get; set; } Property Value Type Description Int32 TranscodeSeekInfo Declaration public TranscodeSeekInfo TranscodeSeekInfo { get; set; } Property Value Type Description TranscodeSeekInfo Type Declaration public DlnaProfileType Type { get; set; } Property Value Type Description DlnaProfileType VideoCodec Declaration public string VideoCodec { get; set; } Property Value Type Description String Methods GetAudioCodecs() Declaration public ReadOnlyMemory<char>[] GetAudioCodecs() Returns Type Description ReadOnlyMemory < Char >[]"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.UpnpNotificationInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.UpnpNotificationInfo.html",
    "title": "Class UpnpNotificationInfo",
    "keywords": "Class UpnpNotificationInfo Inheritance Object UpnpNotificationInfo Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class UpnpNotificationInfo Properties LocalIpAddress Declaration public IPAddress LocalIpAddress { get; set; } Property Value Type Description IPAddress LocalPort Declaration public int LocalPort { get; set; } Property Value Type Description Int32 Location Declaration public Uri Location { get; set; } Property Value Type Description Uri NotificationType Declaration public string NotificationType { get; set; } Property Value Type Description String Usn Declaration public string Usn { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Dlna.VideoOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dlna.VideoOptions.html",
    "title": "Class VideoOptions",
    "keywords": "Class VideoOptions Class VideoOptions. Inheritance Object AudioOptions VideoOptions Inherited Members AudioOptions.EnableDirectPlay AudioOptions.EnableDirectStream AudioOptions.ForceDirectPlay AudioOptions.ForceDirectStream AudioOptions.ItemId AudioOptions.MediaSources AudioOptions.Profile AudioOptions.MediaSourceId AudioOptions.DeviceId AudioOptions.MaxAudioChannels AudioOptions.MaxBitrate AudioOptions.Context AudioOptions.AudioTranscodingBitrate AudioOptions.GetMaxBitrate(Boolean) Namespace : MediaBrowser.Model.Dlna Assembly : MediaBrowser.Model.dll Syntax public class VideoOptions : AudioOptions Properties AudioStreamIndex Declaration public int? AudioStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > IncludeAllAudioStreams Declaration public bool IncludeAllAudioStreams { get; set; } Property Value Type Description Boolean IncludeAllSubtitleStreams Declaration public bool IncludeAllSubtitleStreams { get; set; } Property Value Type Description Boolean SubtitleStreamIndex Declaration public int? SubtitleStreamIndex { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/MediaBrowser.Model.Drawing.DrawingUtils.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Drawing.DrawingUtils.html",
    "title": "Class DrawingUtils",
    "keywords": "Class DrawingUtils Class DrawingUtils Inheritance Object DrawingUtils Namespace : MediaBrowser.Model.Drawing Assembly : MediaBrowser.Model.dll Syntax public static class DrawingUtils Methods Resize(ImageSize, Double, Double, Double, Double) Resizes a set of dimensions Declaration public static ImageSize Resize(ImageSize size, double width, double height, double maxWidth, double maxHeight) Parameters Type Name Description ImageSize size The original size object Double width A new fixed width, if desired Double height A new fixed height, if desired Double maxWidth A max fixed width, if desired Double maxHeight A max fixed height, if desired Returns Type Description ImageSize A new size object"
  },
  "reference/pluginapi/MediaBrowser.Model.Drawing.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Drawing.html",
    "title": "Namespace MediaBrowser.Model.Drawing",
    "keywords": "Namespace MediaBrowser.Model.Drawing Classes DrawingUtils Class DrawingUtils Structs ImageSize Struct ImageSize Enums ImageFormat Enum ImageOutputFormat ImageOrientation"
  },
  "reference/pluginapi/MediaBrowser.Model.Drawing.ImageFormat.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Drawing.ImageFormat.html",
    "title": "Enum ImageFormat",
    "keywords": "Enum ImageFormat Enum ImageOutputFormat Namespace : MediaBrowser.Model.Drawing Assembly : MediaBrowser.Model.dll Syntax public enum ImageFormat Fields Name Description Bmp The BMP Gif The GIF Jpg The JPG Png The PNG Webp The webp Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ImageFormat>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Drawing.ImageOrientation.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Drawing.ImageOrientation.html",
    "title": "Enum ImageOrientation",
    "keywords": "Enum ImageOrientation Namespace : MediaBrowser.Model.Drawing Assembly : MediaBrowser.Model.dll Syntax public enum ImageOrientation Fields Name Description BottomLeft BottomRight LeftBottom LeftTop RightBottom RightTop TopLeft TopRight Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ImageOrientation>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Drawing.ImageSize.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Drawing.ImageSize.html",
    "title": "Struct ImageSize",
    "keywords": "Struct ImageSize Struct ImageSize Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Namespace : MediaBrowser.Model.Drawing Assembly : MediaBrowser.Model.dll Syntax public struct ImageSize Constructors ImageSize(Double, Double) Declaration public ImageSize(double width, double height) Parameters Type Name Description Double width Double height ImageSize(Int32, Int32) Declaration public ImageSize(int width, int height) Parameters Type Name Description Int32 width Int32 height Properties Height Gets or sets the height. Declaration public double Height { get; set; } Property Value Type Description Double The height. Width Gets or sets the width. Declaration public double Width { get; set; } Property Value Type Description Double The width. Methods Equals(ImageSize) Declaration public bool Equals(ImageSize size) Parameters Type Name Description ImageSize size Returns Type Description Boolean ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.BaseItemDto.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.BaseItemDto.html",
    "title": "Class BaseItemDto",
    "keywords": "Class BaseItemDto This is strictly used as a data transfer object from the api layer. This holds information about a BaseItem in a format that is convenient for the client. Inheritance Object BaseItemDto Implements IHasProviderIds IItemDto IHasServerId Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class BaseItemDto : IHasProviderIds, IItemDto, IHasServerId Properties AffiliateCallSign Declaration public string AffiliateCallSign { get; set; } Property Value Type Description String AirDays Gets or sets the air days. Declaration public DayOfWeek[] AirDays { get; set; } Property Value Type Description DayOfWeek [] The air days. AirsAfterSeasonNumber Declaration public int? AirsAfterSeasonNumber { get; set; } Property Value Type Description Nullable < Int32 > AirsBeforeEpisodeNumber Declaration public int? AirsBeforeEpisodeNumber { get; set; } Property Value Type Description Nullable < Int32 > AirsBeforeSeasonNumber Declaration public int? AirsBeforeSeasonNumber { get; set; } Property Value Type Description Nullable < Int32 > Album Gets or sets the album. Declaration public string Album { get; set; } Property Value Type Description String The album. AlbumArtist Gets or sets the album artist. Declaration public string AlbumArtist { get; set; } Property Value Type Description String The album artist. AlbumArtists Gets or sets the album artists. Declaration public NameIdPair[] AlbumArtists { get; set; } Property Value Type Description NameIdPair [] The album artists. AlbumCount Declaration public int? AlbumCount { get; set; } Property Value Type Description Nullable < Int32 > AlbumId Gets or sets the album id. Declaration public string AlbumId { get; set; } Property Value Type Description String The album id. AlbumPrimaryImageTag Gets or sets the album image tag. Declaration public string AlbumPrimaryImageTag { get; set; } Property Value Type Description String The album image tag. Altitude Declaration public double? Altitude { get; set; } Property Value Type Description Nullable < Double > Aperture Declaration public double? Aperture { get; set; } Property Value Type Description Nullable < Double > ArtistItems Gets or sets the artist items. Declaration public NameIdPair[] ArtistItems { get; set; } Property Value Type Description NameIdPair [] The artist items. Artists Gets or sets the artists. Declaration public string[] Artists { get; set; } Property Value Type Description String [] The artists. AsSeries Declaration public bool? AsSeries { get; set; } Property Value Type Description Nullable < Boolean > BackdropImageTags Gets or sets the backdrop image tags. Declaration public string[] BackdropImageTags { get; set; } Property Value Type Description String [] The backdrop image tags. Bitrate Declaration public int? Bitrate { get; set; } Property Value Type Description Nullable < Int32 > CameraMake Declaration public string CameraMake { get; set; } Property Value Type Description String CameraModel Declaration public string CameraModel { get; set; } Property Value Type Description String CanDelete Declaration public bool? CanDelete { get; set; } Property Value Type Description Nullable < Boolean > CanDownload Declaration public bool? CanDownload { get; set; } Property Value Type Description Nullable < Boolean > ChannelId Gets or sets the channel identifier. Declaration public string ChannelId { get; set; } Property Value Type Description String The channel identifier. ChannelName Declaration public string ChannelName { get; set; } Property Value Type Description String ChannelNumber Declaration public string ChannelNumber { get; set; } Property Value Type Description String ChannelPrimaryImageTag Gets or sets the channel primary image tag. Declaration public string ChannelPrimaryImageTag { get; set; } Property Value Type Description String The channel primary image tag. Chapters Gets or sets the chapters. Declaration public List<ChapterInfo> Chapters { get; set; } Property Value Type Description List < ChapterInfo > The chapters. ChildCount Gets or sets the child count. Declaration public int? ChildCount { get; set; } Property Value Type Description Nullable < Int32 > The child count. CollectionType Gets or sets the type of the collection. Declaration public string CollectionType { get; set; } Property Value Type Description String The type of the collection. CommunityRating Gets or sets the community rating. Declaration public float? CommunityRating { get; set; } Property Value Type Description Nullable < Single > The community rating. CompletionPercentage Gets or sets the completion percentage. Declaration public double? CompletionPercentage { get; set; } Property Value Type Description Nullable < Double > The completion percentage. Composers Declaration public NameIdPair[] Composers { get; set; } Property Value Type Description NameIdPair [] Container Declaration public string Container { get; set; } Property Value Type Description String CriticRating Gets or sets the critic rating. Declaration public float? CriticRating { get; set; } Property Value Type Description Nullable < Single > The critic rating. CurrentProgram Gets or sets the current program. Declaration public BaseItemDto CurrentProgram { get; set; } Property Value Type Description BaseItemDto The current program. CustomRating Gets or sets the custom rating. Declaration public string CustomRating { get; set; } Property Value Type Description String The custom rating. DateCreated Gets or sets the date created. Declaration public DateTimeOffset? DateCreated { get; set; } Property Value Type Description Nullable < DateTimeOffset > The date created. Disabled Declaration public bool? Disabled { get; set; } Property Value Type Description Nullable < Boolean > DisplayOrder Gets or sets the display order. Declaration public string DisplayOrder { get; set; } Property Value Type Description String The display order. DisplayPreferencesId Gets or sets the display preferences id. Declaration public string DisplayPreferencesId { get; set; } Property Value Type Description String The display preferences id. EndDate Gets or sets the end date. Declaration public DateTimeOffset? EndDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The end date. EpisodeTitle Gets or sets the episode title. Declaration public string EpisodeTitle { get; set; } Property Value Type Description String The episode title. Etag Gets or sets the etag. Declaration public string Etag { get; set; } Property Value Type Description String The etag. ExposureTime Declaration public double? ExposureTime { get; set; } Property Value Type Description Nullable < Double > ExternalUrls Gets or sets the external urls. Declaration public ExternalUrl[] ExternalUrls { get; set; } Property Value Type Description ExternalUrl [] The external urls. ExtraType Declaration public string ExtraType { get; set; } Property Value Type Description String FileName Declaration public string FileName { get; set; } Property Value Type Description String FocalLength Declaration public double? FocalLength { get; set; } Property Value Type Description Nullable < Double > ForcedSortName Declaration public string ForcedSortName { get; set; } Property Value Type Description String GameSystem Gets or sets the game system. Declaration public string GameSystem { get; set; } Property Value Type Description String The game system. GameSystemId Declaration public long? GameSystemId { get; set; } Property Value Type Description Nullable < Int64 > GenreItems Declaration public NameLongIdPair[] GenreItems { get; set; } Property Value Type Description NameLongIdPair [] Genres Gets or sets the genres. Declaration public string[] Genres { get; set; } Property Value Type Description String [] The genres. Guid Declaration public string Guid { get; set; } Property Value Type Description String Height Declaration public int? Height { get; set; } Property Value Type Description Nullable < Int32 > Id Gets or sets the id. Declaration public string Id { get; set; } Property Value Type Description String The id. ImageOrientation Declaration public ImageOrientation? ImageOrientation { get; set; } Property Value Type Description Nullable < ImageOrientation > ImageTags Gets or sets the image tags. Declaration public Dictionary<ImageType, string> ImageTags { get; set; } Property Value Type Description Dictionary < ImageType , String > The image tags. IndexNumber Gets or sets the index number. Declaration public int? IndexNumber { get; set; } Property Value Type Description Nullable < Int32 > The index number. IndexNumberEnd Gets or sets the index number end. Declaration public int? IndexNumberEnd { get; set; } Property Value Type Description Nullable < Int32 > The index number end. IsFolder Gets or sets a value indicating whether this instance is folder. Declaration public bool? IsFolder { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is folder; otherwise, false . IsKids Gets or sets a value indicating whether this instance is kids. Declaration public bool? IsKids { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is kids; otherwise, false . IsLive Gets or sets a value indicating whether this instance is live. Declaration public bool? IsLive { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is live; otherwise, false . IsMovie Gets or sets a value indicating whether this instance is movie. Declaration public bool? IsMovie { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is movie; otherwise, false . IsNew Declaration public bool? IsNew { get; set; } Property Value Type Description Nullable < Boolean > IsNews Gets or sets a value indicating whether this instance is news. Declaration public bool? IsNews { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is news; otherwise, false . IsoSpeedRating Declaration public int? IsoSpeedRating { get; set; } Property Value Type Description Nullable < Int32 > IsPremiere Gets or sets a value indicating whether this instance is premiere. Declaration public bool? IsPremiere { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is premiere; otherwise, false . IsRepeat Gets or sets a value indicating whether this instance is repeat. Declaration public bool? IsRepeat { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is repeat; otherwise, false . IsSeries Gets or sets a value indicating whether this instance is series. Declaration public bool? IsSeries { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is series; otherwise, false . IsSports Gets or sets a value indicating whether this instance is sports. Declaration public bool? IsSports { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is sports; otherwise, false . Latitude Declaration public double? Latitude { get; set; } Property Value Type Description Nullable < Double > ListingsChannelId Declaration public string ListingsChannelId { get; set; } Property Value Type Description String ListingsChannelName Declaration public string ListingsChannelName { get; set; } Property Value Type Description String ListingsChannelNumber Declaration public string ListingsChannelNumber { get; set; } Property Value Type Description String ListingsId Declaration public string ListingsId { get; set; } Property Value Type Description String ListingsPath Declaration public string ListingsPath { get; set; } Property Value Type Description String ListingsProviderId Declaration public string ListingsProviderId { get; set; } Property Value Type Description String LocalTrailerCount Gets or sets the local trailer count. Declaration public int? LocalTrailerCount { get; set; } Property Value Type Description Nullable < Int32 > The local trailer count. LocationType Gets or sets the type of the location. Declaration public LocationType? LocationType { get; set; } Property Value Type Description Nullable < LocationType > The type of the location. LockData Gets or sets a value indicating whether [enable internet providers]. Declaration public bool? LockData { get; set; } Property Value Type Description Nullable < Boolean > true if [enable internet providers]; otherwise, false . LockedFields Gets or sets the locked fields. Declaration public MetadataFields[] LockedFields { get; set; } Property Value Type Description MetadataFields [] The locked fields. Longitude Declaration public double? Longitude { get; set; } Property Value Type Description Nullable < Double > ManagementId Declaration public string ManagementId { get; set; } Property Value Type Description String MediaSources Gets or sets the media versions. Declaration public MediaSourceInfo[] MediaSources { get; set; } Property Value Type Description MediaSourceInfo [] The media versions. MediaStreams Gets or sets the media streams. Declaration public MediaStream[] MediaStreams { get; set; } Property Value Type Description MediaStream [] The media streams. MediaType Gets or sets the type of the media. Declaration public string MediaType { get; set; } Property Value Type Description String The type of the media. MovieCount Declaration public int? MovieCount { get; set; } Property Value Type Description Nullable < Int32 > MusicVideoCount Declaration public int? MusicVideoCount { get; set; } Property Value Type Description Nullable < Int32 > Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Number Gets or sets the number. Declaration public string Number { get; set; } Property Value Type Description String The number. OfficialRating Gets or sets the official rating. Declaration public string OfficialRating { get; set; } Property Value Type Description String The official rating. OriginalTitle Declaration public string OriginalTitle { get; set; } Property Value Type Description String Overview Gets or sets the overview. Declaration public string Overview { get; set; } Property Value Type Description String The overview. ParentBackdropImageTags Gets or sets the parent backdrop image tags. Declaration public string[] ParentBackdropImageTags { get; set; } Property Value Type Description String [] The parent backdrop image tags. ParentBackdropItemId If the item does not have any backdrops, this will hold the Id of the Parent that has one. Declaration public string ParentBackdropItemId { get; set; } Property Value Type Description String The parent backdrop item id. ParentId Gets or sets the parent id. Declaration public string ParentId { get; set; } Property Value Type Description String The parent id. ParentIndexNumber Gets or sets the parent index number. Declaration public int? ParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > The parent index number. ParentLogoImageTag Gets or sets the parent logo image tag. Declaration public string ParentLogoImageTag { get; set; } Property Value Type Description String The parent logo image tag. ParentLogoItemId If the item does not have a logo, this will hold the Id of the Parent that has one. Declaration public string ParentLogoItemId { get; set; } Property Value Type Description String The parent logo item id. ParentThumbImageTag Gets or sets the parent thumb image tag. Declaration public string ParentThumbImageTag { get; set; } Property Value Type Description String The parent thumb image tag. ParentThumbItemId Gets or sets the parent thumb item id. Declaration public string ParentThumbItemId { get; set; } Property Value Type Description String The parent thumb item id. PartCount Gets or sets the part count. Declaration public int? PartCount { get; set; } Property Value Type Description Nullable < Int32 > The part count. Path Gets or sets the path. Declaration public string Path { get; set; } Property Value Type Description String The path. People Gets or sets the people. Declaration public BaseItemPerson[] People { get; set; } Property Value Type Description BaseItemPerson [] The people. PlayAccess Gets or sets the play access. Declaration public PlayAccess? PlayAccess { get; set; } Property Value Type Description Nullable < PlayAccess > The play access. PlaylistItemId Gets or sets the playlist item identifier. Declaration public string PlaylistItemId { get; set; } Property Value Type Description String The playlist item identifier. PreferredMetadataCountryCode Declaration public string PreferredMetadataCountryCode { get; set; } Property Value Type Description String PreferredMetadataLanguage Declaration public string PreferredMetadataLanguage { get; set; } Property Value Type Description String Prefix Gets or sets the Prefix. Declaration public string Prefix { get; set; } Property Value Type Description String The Prefix. PremiereDate Gets or sets the premiere date. Declaration public DateTimeOffset? PremiereDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The premiere date. PresentationUniqueKey Declaration public string PresentationUniqueKey { get; set; } Property Value Type Description String PrimaryImageAspectRatio Gets or sets the primary image aspect ratio, after image enhancements. Declaration public double? PrimaryImageAspectRatio { get; set; } Property Value Type Description Nullable < Double > The primary image aspect ratio. ProductionLocations Declaration public string[] ProductionLocations { get; set; } Property Value Type Description String [] ProductionYear Gets or sets the production year. Declaration public int? ProductionYear { get; set; } Property Value Type Description Nullable < Int32 > The production year. ProviderIds Gets or sets the provider ids. Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary The provider ids. RecursiveItemCount Gets or sets the recursive item count. Declaration public int? RecursiveItemCount { get; set; } Property Value Type Description Nullable < Int32 > The recursive item count. RemoteTrailers Gets or sets the trailer urls. Declaration public MediaUrl[] RemoteTrailers { get; set; } Property Value Type Description MediaUrl [] The trailer urls. RunTimeTicks Gets or sets the run time ticks. Declaration public long? RunTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > The run time ticks. SeasonId Gets or sets the season identifier. Declaration public string SeasonId { get; set; } Property Value Type Description String The season identifier. SeasonName Gets or sets the name of the season. Declaration public string SeasonName { get; set; } Property Value Type Description String The name of the season. SeriesCount Declaration public int? SeriesCount { get; set; } Property Value Type Description Nullable < Int32 > SeriesId Gets or sets the series id. Declaration public string SeriesId { get; set; } Property Value Type Description String The series id. SeriesName Gets or sets the name of the series. Declaration public string SeriesName { get; set; } Property Value Type Description String The name of the series. SeriesPrimaryImageTag Gets or sets the series primary image tag. Declaration public string SeriesPrimaryImageTag { get; set; } Property Value Type Description String The series primary image tag. SeriesStudio Gets or sets the series studio. Declaration public string SeriesStudio { get; set; } Property Value Type Description String The series studio. SeriesTimerId Gets or sets the series timer identifier. Declaration public string SeriesTimerId { get; set; } Property Value Type Description String The series timer identifier. ServerId Gets or sets the server identifier. Declaration public string ServerId { get; set; } Property Value Type Description String The server identifier. ShutterSpeed Declaration public double? ShutterSpeed { get; set; } Property Value Type Description Nullable < Double > Size Declaration public long? Size { get; set; } Property Value Type Description Nullable < Int64 > Software Declaration public string Software { get; set; } Property Value Type Description String SongCount Declaration public int? SongCount { get; set; } Property Value Type Description Nullable < Int32 > SortIndexNumber Declaration public int? SortIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > SortName Gets or sets the name of the sort. Declaration public string SortName { get; set; } Property Value Type Description String The name of the sort. SortParentIndexNumber Declaration public int? SortParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > SpecialFeatureCount Gets or sets the special feature count. Declaration public int? SpecialFeatureCount { get; set; } Property Value Type Description Nullable < Int32 > The special feature count. StartDate The start date of the recording, in UTC. Declaration public DateTimeOffset? StartDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > Status Gets or sets the status. Declaration public string Status { get; set; } Property Value Type Description String The status. Studios Gets or sets the studios. Declaration public NameLongIdPair[] Studios { get; set; } Property Value Type Description NameLongIdPair [] The studios. Subviews Declaration public string[] Subviews { get; set; } Property Value Type Description String [] SupportsResume Declaration public bool? SupportsResume { get; set; } Property Value Type Description Nullable < Boolean > SupportsSync Gets or sets a value indicating whether [supports synchronize]. Declaration public bool? SupportsSync { get; set; } Property Value Type Description Nullable < Boolean > TagItems Declaration public NameLongIdPair[] TagItems { get; set; } Property Value Type Description NameLongIdPair [] Taglines Gets or sets the taglines. Declaration public string[] Taglines { get; set; } Property Value Type Description String [] The taglines. Tags Gets or sets the tags. Declaration public string[] Tags { get; set; } Property Value Type Description String [] The tags. TimerId Gets or sets the timer identifier. Declaration public string TimerId { get; set; } Property Value Type Description String The timer identifier. TimerType Declaration public TimerType? TimerType { get; set; } Property Value Type Description Nullable < TimerType > Type Gets or sets the type. Declaration public string Type { get; set; } Property Value Type Description String The type. UserData User data for this item based on the user it's being requested for Declaration public UserItemDataDto UserData { get; set; } Property Value Type Description UserItemDataDto The user data. Video3DFormat Gets or sets the video3 D format. Declaration public Video3DFormat? Video3DFormat { get; set; } Property Value Type Description Nullable < Video3DFormat > The video3 D format. Width Declaration public int? Width { get; set; } Property Value Type Description Nullable < Int32 > Methods IsType(ReadOnlySpan<Char>) Determines whether the specified type is type. Declaration public bool IsType(ReadOnlySpan<char> type) Parameters Type Name Description ReadOnlySpan < Char > type The type. Returns Type Description Boolean true if the specified type is type; otherwise, false . Implements IHasProviderIds IItemDto IHasServerId Extension Methods ProviderIdsExtensions.HasProviderId(IHasProviderIds, MetadataProviders) ProviderIdsExtensions.HasProviderId(IHasProviderIds, String) ProviderIdsExtensions.GetProviderId(IHasProviderIds, MetadataProviders) ProviderIdsExtensions.GetProviderId(IHasProviderIds, String) ProviderIdsExtensions.GetProviderIds(IHasProviderIds, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, String, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, String, String[]) ProviderIdsExtensions.SetProviderId(IHasProviderIds, MetadataProviders, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, MetadataProviders, String[])"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.BaseItemPerson.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.BaseItemPerson.html",
    "title": "Class BaseItemPerson",
    "keywords": "Class BaseItemPerson This is used by the api to get information about a Person within a BaseItem Inheritance Object BaseItemPerson Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class BaseItemPerson Properties HasPrimaryImage Gets a value indicating whether this instance has primary image. Declaration [IgnoreDataMember] public bool HasPrimaryImage { get; } Property Value Type Description Boolean true if this instance has primary image; otherwise, false . Id Gets or sets the identifier. Declaration public string Id { get; set; } Property Value Type Description String The identifier. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. PrimaryImageTag Gets or sets the primary image tag. Declaration public string PrimaryImageTag { get; set; } Property Value Type Description String The primary image tag. Role Gets or sets the role. Declaration public string Role { get; set; } Property Value Type Description String The role. Type Gets or sets the type. Declaration public PersonType Type { get; set; } Property Value Type Description PersonType The type."
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.GameSystemSummary.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.GameSystemSummary.html",
    "title": "Class GameSystemSummary",
    "keywords": "Class GameSystemSummary Class GameSystemSummary Inheritance Object GameSystemSummary Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class GameSystemSummary Constructors GameSystemSummary() Initializes a new instance of the GameSystemSummary class. Declaration public GameSystemSummary() Properties ClientInstalledGameCount Gets or sets the client installed game count. Declaration public int ClientInstalledGameCount { get; set; } Property Value Type Description Int32 The client installed game count. DisplayName Gets or sets the name. Declaration public string DisplayName { get; set; } Property Value Type Description String The name. GameCount Gets or sets the game count. Declaration public int GameCount { get; set; } Property Value Type Description Int32 The game count. GameFileExtensions Gets or sets the game extensions. Declaration public string[] GameFileExtensions { get; set; } Property Value Type Description String [] The game extensions. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name."
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.html",
    "title": "Namespace MediaBrowser.Model.Dto",
    "keywords": "Namespace MediaBrowser.Model.Dto Classes BaseItemDto This is strictly used as a data transfer object from the api layer. This holds information about a BaseItem in a format that is convenient for the client. BaseItemPerson This is used by the api to get information about a Person within a BaseItem GameSystemSummary Class GameSystemSummary ImageByNameInfo ImageInfo Class ImageInfo ImageOptions Class ImageOptions ItemCounts Class LibrarySummary ItemIndex Class ItemIndex LinkedItemInfo MediaSourceInfo MetadataEditorInfo NameGuidPair NameIdPair NameLongIdPair NameValuePair RecommendationDto UserDto Class UserDto UserItemDataDto Class UserItemDataDto Interfaces IHasServerId IItemDto Interface IItemDto Enums MediaSourceType RatingType RecommendationType"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.IHasServerId.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.IHasServerId.html",
    "title": "Interface IHasServerId",
    "keywords": "Interface IHasServerId Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public interface IHasServerId Properties ServerId Declaration string ServerId { get; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.IItemDto.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.IItemDto.html",
    "title": "Interface IItemDto",
    "keywords": "Interface IItemDto Interface IItemDto Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public interface IItemDto Properties PrimaryImageAspectRatio Gets or sets the primary image aspect ratio. Declaration double? PrimaryImageAspectRatio { get; set; } Property Value Type Description Nullable < Double > The primary image aspect ratio."
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.ImageByNameInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.ImageByNameInfo.html",
    "title": "Class ImageByNameInfo",
    "keywords": "Class ImageByNameInfo Inheritance Object ImageByNameInfo Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class ImageByNameInfo Properties Context Gets or sets the context. Declaration public string Context { get; set; } Property Value Type Description String The context. FileLength Gets or sets the length of the file. Declaration public long FileLength { get; set; } Property Value Type Description Int64 The length of the file. Format Gets or sets the format. Declaration public string Format { get; set; } Property Value Type Description String The format. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Theme Gets or sets the theme. Declaration public string Theme { get; set; } Property Value Type Description String The theme."
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.ImageInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.ImageInfo.html",
    "title": "Class ImageInfo",
    "keywords": "Class ImageInfo Class ImageInfo Inheritance Object ImageInfo Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class ImageInfo Fields ImageTag The image tag Declaration public string ImageTag Field Value Type Description String Properties Filename Declaration public string Filename { get; set; } Property Value Type Description String Height Gets or sets the height. Declaration public int? Height { get; set; } Property Value Type Description Nullable < Int32 > The height. ImageIndex Gets or sets the index of the image. Declaration public int? ImageIndex { get; set; } Property Value Type Description Nullable < Int32 > The index of the image. ImageType Gets or sets the type of the image. Declaration public ImageType ImageType { get; set; } Property Value Type Description ImageType The type of the image. Path Gets or sets the path. Declaration public string Path { get; set; } Property Value Type Description String The path. Size Gets or sets the size. Declaration public long Size { get; set; } Property Value Type Description Int64 The size. Width Gets or sets the width. Declaration public int? Width { get; set; } Property Value Type Description Nullable < Int32 > The width."
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.ImageOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.ImageOptions.html",
    "title": "Class ImageOptions",
    "keywords": "Class ImageOptions Class ImageOptions Inheritance Object ImageOptions Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class ImageOptions Constructors ImageOptions() Initializes a new instance of the ImageOptions class. Declaration public ImageOptions() Properties AddPlayedIndicator Gets or sets a value indicating whether [add played indicator]. Declaration public bool AddPlayedIndicator { get; set; } Property Value Type Description Boolean true if [add played indicator]; otherwise, false . BackgroundColor Gets or sets the color of the background. Declaration public string BackgroundColor { get; set; } Property Value Type Description String The color of the background. CropWhitespace Gets or sets a value indicating whether [crop whitespace]. Declaration public bool? CropWhitespace { get; set; } Property Value Type Description Nullable < Boolean > null if [crop whitespace] contains no value, true if [crop whitespace]; otherwise, false . EnableImageEnhancers Gets or sets a value indicating whether [enable image enhancers]. Declaration public bool EnableImageEnhancers { get; set; } Property Value Type Description Boolean true if [enable image enhancers]; otherwise, false . Format Gets or sets the format. Declaration public ImageFormat? Format { get; set; } Property Value Type Description Nullable < ImageFormat > The format. Height Gets or sets the height. Declaration public int? Height { get; set; } Property Value Type Description Nullable < Int32 > The height. ImageIndex Gets or sets the index of the image. Declaration public int? ImageIndex { get; set; } Property Value Type Description Nullable < Int32 > The index of the image. ImageType Gets or sets the type of the image. Declaration public ImageType ImageType { get; set; } Property Value Type Description ImageType The type of the image. MaxHeight Gets or sets the height of the max. Declaration public int? MaxHeight { get; set; } Property Value Type Description Nullable < Int32 > The height of the max. MaxWidth Gets or sets the width of the max. Declaration public int? MaxWidth { get; set; } Property Value Type Description Nullable < Int32 > The width of the max. PercentPlayed Gets or sets the percent played. Declaration public int? PercentPlayed { get; set; } Property Value Type Description Nullable < Int32 > The percent played. Quality Gets or sets the quality. Declaration public int? Quality { get; set; } Property Value Type Description Nullable < Int32 > The quality. Tag Gets or sets the image tag. If set this will result in strong, unconditional response caching Declaration public string Tag { get; set; } Property Value Type Description String The hash. UnPlayedCount Gets or sets the un played count. Declaration public int? UnPlayedCount { get; set; } Property Value Type Description Nullable < Int32 > The un played count. Width Gets or sets the width. Declaration public int? Width { get; set; } Property Value Type Description Nullable < Int32 > The width."
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.ItemCounts.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.ItemCounts.html",
    "title": "Class ItemCounts",
    "keywords": "Class ItemCounts Class LibrarySummary Inheritance Object ItemCounts Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class ItemCounts Properties AlbumCount Gets or sets the album count. Declaration public int AlbumCount { get; set; } Property Value Type Description Int32 The album count. ArtistCount Declaration public int ArtistCount { get; set; } Property Value Type Description Int32 BookCount Gets or sets the book count. Declaration public int BookCount { get; set; } Property Value Type Description Int32 The book count. BoxSetCount Gets or sets the box set count. Declaration public int BoxSetCount { get; set; } Property Value Type Description Int32 The box set count. EpisodeCount Gets or sets the episode count. Declaration public int EpisodeCount { get; set; } Property Value Type Description Int32 The episode count. GameCount Gets or sets the game count. Declaration public int GameCount { get; set; } Property Value Type Description Int32 The game count. GameSystemCount Gets or sets the game system count. Declaration public int GameSystemCount { get; set; } Property Value Type Description Int32 The game system count. ItemCount Declaration public int ItemCount { get; set; } Property Value Type Description Int32 MovieCount Gets or sets the movie count. Declaration public int MovieCount { get; set; } Property Value Type Description Int32 The movie count. MusicVideoCount Gets or sets the music video count. Declaration public int MusicVideoCount { get; set; } Property Value Type Description Int32 The music video count. ProgramCount Declaration public int ProgramCount { get; set; } Property Value Type Description Int32 SeriesCount Gets or sets the series count. Declaration public int SeriesCount { get; set; } Property Value Type Description Int32 The series count. SongCount Gets or sets the song count. Declaration public int SongCount { get; set; } Property Value Type Description Int32 The song count. TrailerCount Gets or sets the trailer count. Declaration public int TrailerCount { get; set; } Property Value Type Description Int32 The trailer count."
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.ItemIndex.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.ItemIndex.html",
    "title": "Class ItemIndex",
    "keywords": "Class ItemIndex Class ItemIndex Inheritance Object ItemIndex Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class ItemIndex Properties ItemCount Gets or sets the item count. Declaration public int ItemCount { get; set; } Property Value Type Description Int32 The item count. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name."
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.LinkedItemInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.LinkedItemInfo.html",
    "title": "Class LinkedItemInfo",
    "keywords": "Class LinkedItemInfo Inheritance Object NameLongIdPair LinkedItemInfo Implements IEquatable < NameLongIdPair > IHasProviderIds IEquatable < LinkedItemInfo > Inherited Members NameLongIdPair.Name NameLongIdPair.Id NameLongIdPair.Equals(NameLongIdPair) Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class LinkedItemInfo : NameLongIdPair, IEquatable<NameLongIdPair>, IHasProviderIds, IEquatable<LinkedItemInfo> Constructors LinkedItemInfo() Declaration public LinkedItemInfo() LinkedItemInfo(NameLongIdPair) Declaration public LinkedItemInfo(NameLongIdPair item) Parameters Type Name Description NameLongIdPair item Properties ProviderIds Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary Methods Equals(LinkedItemInfo) Declaration public bool Equals(LinkedItemInfo other) Parameters Type Name Description LinkedItemInfo other Returns Type Description Boolean Implements System.IEquatable<T> IHasProviderIds System.IEquatable<T> Extension Methods ProviderIdsExtensions.HasProviderId(IHasProviderIds, MetadataProviders) ProviderIdsExtensions.HasProviderId(IHasProviderIds, String) ProviderIdsExtensions.GetProviderId(IHasProviderIds, MetadataProviders) ProviderIdsExtensions.GetProviderId(IHasProviderIds, String) ProviderIdsExtensions.GetProviderIds(IHasProviderIds, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, String, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, String, String[]) ProviderIdsExtensions.SetProviderId(IHasProviderIds, MetadataProviders, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, MetadataProviders, String[])"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.MediaSourceInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.MediaSourceInfo.html",
    "title": "Class MediaSourceInfo",
    "keywords": "Class MediaSourceInfo Inheritance Object MediaSourceInfo MediaInfo Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class MediaSourceInfo Constructors MediaSourceInfo() Declaration public MediaSourceInfo() Properties AnalyzeDurationMs Declaration [Obsolete] public int? AnalyzeDurationMs { get; set; } Property Value Type Description Nullable < Int32 > Bitrate Declaration public int? Bitrate { get; set; } Property Value Type Description Nullable < Int32 > BufferMs Declaration [Obsolete] public int? BufferMs { get; set; } Property Value Type Description Nullable < Int32 > Container Declaration public string Container { get; set; } Property Value Type Description String ContainerStartTimeTicks Declaration public long? ContainerStartTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > DefaultAudioStream Declaration [IgnoreDataMember] public MediaStream DefaultAudioStream { get; } Property Value Type Description MediaStream DefaultAudioStreamIndex Declaration public int? DefaultAudioStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > DefaultSubtitleStreamIndex Declaration public int? DefaultSubtitleStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > DirectStreamUrl Declaration public string DirectStreamUrl { get; set; } Property Value Type Description String EncoderPath Declaration public string EncoderPath { get; set; } Property Value Type Description String EncoderProtocol Declaration public MediaProtocol? EncoderProtocol { get; set; } Property Value Type Description Nullable < MediaProtocol > Formats Declaration public string[] Formats { get; set; } Property Value Type Description String [] Id Declaration public string Id { get; set; } Property Value Type Description String IsInfiniteStream Declaration public bool IsInfiniteStream { get; set; } Property Value Type Description Boolean IsRemote Differentiate internet url vs local network Declaration public bool IsRemote { get; set; } Property Value Type Description Boolean ItemId Used only by our Windows app. Not used by Emby Server. Declaration public string ItemId { get; set; } Property Value Type Description String LiveStreamId Declaration public string LiveStreamId { get; set; } Property Value Type Description String MediaStreams Declaration public List<MediaStream> MediaStreams { get; set; } Property Value Type Description List < MediaStream > Name Declaration public string Name { get; set; } Property Value Type Description String OpenToken Declaration public string OpenToken { get; set; } Property Value Type Description String Path Declaration public string Path { get; set; } Property Value Type Description String Protocol Declaration public MediaProtocol Protocol { get; set; } Property Value Type Description MediaProtocol ReadAtNativeFramerate Declaration [Obsolete] public bool ReadAtNativeFramerate { get; set; } Property Value Type Description Boolean RequiredHttpHeaders Declaration public Dictionary<string, string> RequiredHttpHeaders { get; set; } Property Value Type Description Dictionary < String , String > RequiresClosing Declaration public bool RequiresClosing { get; set; } Property Value Type Description Boolean RequiresLooping Declaration public bool RequiresLooping { get; set; } Property Value Type Description Boolean RequiresOpening Declaration public bool RequiresOpening { get; set; } Property Value Type Description Boolean RunTimeTicks Declaration public long? RunTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > ServerId Used only by our Windows app. Not used by Emby Server. Declaration public string ServerId { get; set; } Property Value Type Description String Size Declaration public long? Size { get; set; } Property Value Type Description Nullable < Int64 > SortName Declaration public string SortName { get; set; } Property Value Type Description String SupportsDirectPlay Declaration public bool SupportsDirectPlay { get; set; } Property Value Type Description Boolean SupportsDirectStream Declaration public bool SupportsDirectStream { get; set; } Property Value Type Description Boolean SupportsProbing Declaration [Obsolete] public bool SupportsProbing { get; set; } Property Value Type Description Boolean SupportsTranscoding Declaration public bool SupportsTranscoding { get; set; } Property Value Type Description Boolean Timestamp Declaration public TransportStreamTimestamp? Timestamp { get; set; } Property Value Type Description Nullable < TransportStreamTimestamp > TranscodeReasons Declaration [IgnoreDataMember] public TranscodeReason[] TranscodeReasons { get; set; } Property Value Type Description TranscodeReason [] TranscodingContainer Declaration public string TranscodingContainer { get; set; } Property Value Type Description String TranscodingSubProtocol Declaration public string TranscodingSubProtocol { get; set; } Property Value Type Description String TranscodingUrl Declaration public string TranscodingUrl { get; set; } Property Value Type Description String Type Declaration public MediaSourceType Type { get; set; } Property Value Type Description MediaSourceType Video3DFormat Declaration public Video3DFormat? Video3DFormat { get; set; } Property Value Type Description Nullable < Video3DFormat > VideoStream Declaration [IgnoreDataMember] public MediaStream VideoStream { get; } Property Value Type Description MediaStream Methods GetDefaultAudioStream(Nullable<Int32>) Declaration public MediaStream GetDefaultAudioStream(int? defaultIndex) Parameters Type Name Description Nullable < Int32 > defaultIndex Returns Type Description MediaStream GetMediaStream(MediaStreamType, Int32) Declaration public MediaStream GetMediaStream(MediaStreamType type, int index) Parameters Type Name Description MediaStreamType type Int32 index Returns Type Description MediaStream GetMediaStreams(MediaStreamType) Declaration public List<MediaStream> GetMediaStreams(MediaStreamType type) Parameters Type Name Description MediaStreamType type Returns Type Description List < MediaStream > GetStreamCount(MediaStreamType) Declaration public int? GetStreamCount(MediaStreamType type) Parameters Type Name Description MediaStreamType type Returns Type Description Nullable < Int32 > InferTotalBitrate(Boolean) Declaration public void InferTotalBitrate(bool force = false) Parameters Type Name Description Boolean force IsSecondaryAudio(MediaStream) Declaration public bool? IsSecondaryAudio(MediaStream stream) Parameters Type Name Description MediaStream stream Returns Type Description Nullable < Boolean > ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description String A string that represents the current object. Overrides Object.ToString()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.MediaSourceType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.MediaSourceType.html",
    "title": "Enum MediaSourceType",
    "keywords": "Enum MediaSourceType Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public enum MediaSourceType Fields Name Description Default Grouping Placeholder Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<MediaSourceType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.MetadataEditorInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.MetadataEditorInfo.html",
    "title": "Class MetadataEditorInfo",
    "keywords": "Class MetadataEditorInfo Inheritance Object MetadataEditorInfo Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class MetadataEditorInfo Constructors MetadataEditorInfo() Declaration public MetadataEditorInfo() Properties Countries Declaration public CountryInfo[] Countries { get; set; } Property Value Type Description CountryInfo [] Cultures Declaration public CultureDto[] Cultures { get; set; } Property Value Type Description CultureDto [] ExternalIdInfos Declaration public ExternalIdInfo[] ExternalIdInfos { get; set; } Property Value Type Description ExternalIdInfo [] ParentalRatingOptions Declaration public ParentalRating[] ParentalRatingOptions { get; set; } Property Value Type Description ParentalRating []"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.NameGuidPair.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.NameGuidPair.html",
    "title": "Class NameGuidPair",
    "keywords": "Class NameGuidPair Inheritance Object NameGuidPair Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class NameGuidPair Properties Id Gets or sets the identifier. Declaration public Guid Id { get; set; } Property Value Type Description Guid The identifier. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name."
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.NameIdPair.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.NameIdPair.html",
    "title": "Class NameIdPair",
    "keywords": "Class NameIdPair Inheritance Object NameIdPair Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class NameIdPair Properties Id Gets or sets the identifier. Declaration public string Id { get; set; } Property Value Type Description String The identifier. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name."
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.NameLongIdPair.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.NameLongIdPair.html",
    "title": "Class NameLongIdPair",
    "keywords": "Class NameLongIdPair Inheritance Object NameLongIdPair LinkedItemInfo Implements IEquatable < NameLongIdPair > Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class NameLongIdPair : IEquatable<NameLongIdPair> Properties Id Gets or sets the identifier. Declaration public long Id { get; set; } Property Value Type Description Int64 The identifier. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Methods Equals(NameLongIdPair) Declaration public bool Equals(NameLongIdPair other) Parameters Type Name Description NameLongIdPair other Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.NameValuePair.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.NameValuePair.html",
    "title": "Class NameValuePair",
    "keywords": "Class NameValuePair Inheritance Object NameValuePair Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class NameValuePair Constructors NameValuePair() Declaration public NameValuePair() NameValuePair(String, String) Declaration public NameValuePair(string name, string value) Parameters Type Name Description String name String value Properties Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Value Gets or sets the value. Declaration public string Value { get; set; } Property Value Type Description String The value. Methods ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description String A string that represents the current object. Overrides Object.ToString()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.RatingType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.RatingType.html",
    "title": "Enum RatingType",
    "keywords": "Enum RatingType Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public enum RatingType Fields Name Description Likes Score Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<RatingType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.RecommendationDto.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.RecommendationDto.html",
    "title": "Class RecommendationDto",
    "keywords": "Class RecommendationDto Inheritance Object RecommendationDto Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class RecommendationDto Properties BaselineItemName Declaration public string BaselineItemName { get; set; } Property Value Type Description String CategoryId Declaration public long CategoryId { get; set; } Property Value Type Description Int64 Items Declaration public BaseItemDto[] Items { get; set; } Property Value Type Description BaseItemDto [] RecommendationType Declaration public RecommendationType RecommendationType { get; set; } Property Value Type Description RecommendationType"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.RecommendationType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.RecommendationType.html",
    "title": "Enum RecommendationType",
    "keywords": "Enum RecommendationType Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public enum RecommendationType Fields Name Description HasActorFromRecentlyPlayed HasDirectorFromRecentlyPlayed HasLikedActor HasLikedDirector SimilarToLikedItem SimilarToRecentlyPlayed Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<RecommendationType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.UserDto.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.UserDto.html",
    "title": "Class UserDto",
    "keywords": "Class UserDto Class UserDto Inheritance Object UserDto Implements IItemDto IHasServerId Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class UserDto : IItemDto, IHasServerId Properties Configuration Gets or sets the configuration. Declaration public UserConfiguration Configuration { get; set; } Property Value Type Description UserConfiguration The configuration. ConnectLinkType Gets or sets the type of the connect link. Declaration public UserLinkType? ConnectLinkType { get; set; } Property Value Type Description Nullable < UserLinkType > The type of the connect link. ConnectUserName Gets or sets the name of the connect user. Declaration public string ConnectUserName { get; set; } Property Value Type Description String The name of the connect user. DateCreated Declaration public DateTimeOffset? DateCreated { get; set; } Property Value Type Description Nullable < DateTimeOffset > EnableAutoLogin Declaration public bool? EnableAutoLogin { get; set; } Property Value Type Description Nullable < Boolean > HasConfiguredEasyPassword Gets or sets a value indicating whether this instance has configured easy password. Declaration public bool HasConfiguredEasyPassword { get; set; } Property Value Type Description Boolean true if this instance has configured easy password; otherwise, false . HasConfiguredPassword Gets or sets a value indicating whether this instance has configured password. Declaration public bool HasConfiguredPassword { get; set; } Property Value Type Description Boolean true if this instance has configured password; otherwise, false . HasPassword Gets or sets a value indicating whether this instance has password. Declaration public bool HasPassword { get; set; } Property Value Type Description Boolean true if this instance has password; otherwise, false . Id Gets or sets the id. Declaration public Guid Id { get; set; } Property Value Type Description Guid The id. LastActivityDate Gets or sets the last activity date. Declaration public DateTimeOffset? LastActivityDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The last activity date. LastLoginDate Gets or sets the last login date. Declaration public DateTimeOffset? LastLoginDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The last login date. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Policy Gets or sets the policy. Declaration public UserPolicy Policy { get; set; } Property Value Type Description UserPolicy The policy. Prefix Declaration public string Prefix { get; set; } Property Value Type Description String PrimaryImageAspectRatio Gets or sets the primary image aspect ratio. Declaration public double? PrimaryImageAspectRatio { get; set; } Property Value Type Description Nullable < Double > The primary image aspect ratio. PrimaryImageTag Gets or sets the primary image tag. Declaration public string PrimaryImageTag { get; set; } Property Value Type Description String The primary image tag. ServerId Gets or sets the server identifier. Declaration public string ServerId { get; set; } Property Value Type Description String The server identifier. ServerName Gets or sets the name of the server. This is not used by the server and is for client-side usage only. Declaration public string ServerName { get; set; } Property Value Type Description String The name of the server. Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IItemDto IHasServerId"
  },
  "reference/pluginapi/MediaBrowser.Model.Dto.UserItemDataDto.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Dto.UserItemDataDto.html",
    "title": "Class UserItemDataDto",
    "keywords": "Class UserItemDataDto Class UserItemDataDto Inheritance Object UserItemDataDto Namespace : MediaBrowser.Model.Dto Assembly : MediaBrowser.Model.dll Syntax public class UserItemDataDto Properties IsFavorite Gets or sets a value indicating whether this instance is favorite. Declaration public bool IsFavorite { get; set; } Property Value Type Description Boolean true if this instance is favorite; otherwise, false . ItemId Gets or sets the item identifier. Declaration public string ItemId { get; set; } Property Value Type Description String The item identifier. Key Gets or sets the key. Declaration public string Key { get; set; } Property Value Type Description String The key. LastPlayedDate Gets or sets the last played date. Declaration public DateTimeOffset? LastPlayedDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The last played date. PlaybackPositionTicks Gets or sets the playback position ticks. Declaration public long PlaybackPositionTicks { get; set; } Property Value Type Description Int64 The playback position ticks. PlayCount Gets or sets the play count. Declaration public int PlayCount { get; set; } Property Value Type Description Int32 The play count. Played Gets or sets a value indicating whether this UserItemDataDto is played. Declaration public bool Played { get; set; } Property Value Type Description Boolean true if played; otherwise, false . PlayedPercentage Gets or sets the played percentage. Declaration public double? PlayedPercentage { get; set; } Property Value Type Description Nullable < Double > The played percentage. Rating Gets or sets the rating. Declaration public double? Rating { get; set; } Property Value Type Description Nullable < Double > The rating. ServerId Used only by our Windows app. Not used by Emby Server. Declaration public string ServerId { get; set; } Property Value Type Description String UnplayedItemCount Gets or sets the unplayed item count. Declaration public int? UnplayedItemCount { get; set; } Property Value Type Description Nullable < Int32 > The unplayed item count."
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.ChapterInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.ChapterInfo.html",
    "title": "Class ChapterInfo",
    "keywords": "Class ChapterInfo Class ChapterInfo Inheritance Object ChapterInfo Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class ChapterInfo Properties ChapterIndex Declaration public int ChapterIndex { get; set; } Property Value Type Description Int32 ImageDateModified Declaration [IgnoreDataMember] public DateTimeOffset ImageDateModified { get; set; } Property Value Type Description DateTimeOffset ImagePath Gets or sets the image path. Declaration [IgnoreDataMember] public string ImagePath { get; set; } Property Value Type Description String The image path. ImageTag Declaration public string ImageTag { get; set; } Property Value Type Description String MarkerType Declaration public MarkerType MarkerType { get; set; } Property Value Type Description MarkerType Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. StartPositionTicks Gets or sets the start position ticks. Declaration public long StartPositionTicks { get; set; } Property Value Type Description Int64 The start position ticks."
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.CollectionDisplayOrder.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.CollectionDisplayOrder.html",
    "title": "Enum CollectionDisplayOrder",
    "keywords": "Enum CollectionDisplayOrder Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum CollectionDisplayOrder Fields Name Description PremiereDate SortName Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<CollectionDisplayOrder>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.CollectionType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.CollectionType.html",
    "title": "Class CollectionType",
    "keywords": "Class CollectionType Inheritance Object CollectionType Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public static class CollectionType Fields AudioBooks Declaration public static ReadOnlyMemory<char> AudioBooks Field Value Type Description ReadOnlyMemory < Char > Books Declaration public static ReadOnlyMemory<char> Books Field Value Type Description ReadOnlyMemory < Char > BoxSets Declaration public static ReadOnlyMemory<char> BoxSets Field Value Type Description ReadOnlyMemory < Char > Games Declaration public static ReadOnlyMemory<char> Games Field Value Type Description ReadOnlyMemory < Char > HomeVideos Declaration public static ReadOnlyMemory<char> HomeVideos Field Value Type Description ReadOnlyMemory < Char > LiveTv Declaration public static ReadOnlyMemory<char> LiveTv Field Value Type Description ReadOnlyMemory < Char > Movies Declaration public static ReadOnlyMemory<char> Movies Field Value Type Description ReadOnlyMemory < Char > Music Declaration public static ReadOnlyMemory<char> Music Field Value Type Description ReadOnlyMemory < Char > MusicVideos Declaration public static ReadOnlyMemory<char> MusicVideos Field Value Type Description ReadOnlyMemory < Char > Photos Declaration public static ReadOnlyMemory<char> Photos Field Value Type Description ReadOnlyMemory < Char > Playlists Declaration public static ReadOnlyMemory<char> Playlists Field Value Type Description ReadOnlyMemory < Char > Trailers Declaration public static ReadOnlyMemory<char> Trailers Field Value Type Description ReadOnlyMemory < Char > TvShows Declaration public static ReadOnlyMemory<char> TvShows Field Value Type Description ReadOnlyMemory < Char >"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.DisplayPreferences.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.DisplayPreferences.html",
    "title": "Class DisplayPreferences",
    "keywords": "Class DisplayPreferences Defines the display preferences for any item that supports them (usually Folders) Inheritance Object DisplayPreferences Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class DisplayPreferences Constructors DisplayPreferences() Initializes a new instance of the DisplayPreferences class. Declaration public DisplayPreferences() Properties Client Gets or sets the client Declaration public string Client { get; set; } Property Value Type Description String CustomPrefs Gets or sets the custom prefs. Declaration public Dictionary<string, string> CustomPrefs { get; set; } Property Value Type Description Dictionary < String , String > The custom prefs. Id Gets or sets the user id. Declaration public string Id { get; set; } Property Value Type Description String The user id. IndexBy Gets or sets the index by. Declaration public string IndexBy { get; set; } Property Value Type Description String The index by. PrimaryImageHeight Gets or sets the height of the primary image. Declaration public int PrimaryImageHeight { get; set; } Property Value Type Description Int32 The height of the primary image. PrimaryImageWidth Gets or sets the width of the primary image. Declaration public int PrimaryImageWidth { get; set; } Property Value Type Description Int32 The width of the primary image. RememberIndexing Gets or sets a value indicating whether [remember indexing]. Declaration public bool RememberIndexing { get; set; } Property Value Type Description Boolean true if [remember indexing]; otherwise, false . RememberSorting Gets or sets a value indicating whether [remember sorting]. Declaration public bool RememberSorting { get; set; } Property Value Type Description Boolean true if [remember sorting]; otherwise, false . ScrollDirection Gets or sets the scroll direction. Declaration public ScrollDirection ScrollDirection { get; set; } Property Value Type Description ScrollDirection The scroll direction. ShowBackdrop Gets or sets a value indicating whether to show backdrops on this item. Declaration public bool ShowBackdrop { get; set; } Property Value Type Description Boolean true if showing backdrops; otherwise, false . SortBy Gets or sets the sort by. Declaration public string SortBy { get; set; } Property Value Type Description String The sort by. SortOrder Gets or sets the sort order. Declaration public SortOrder SortOrder { get; set; } Property Value Type Description SortOrder The sort order. ViewType Gets or sets the type of the view. Declaration public string ViewType { get; set; } Property Value Type Description String The type of the view."
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.EmptyRequestResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.EmptyRequestResult.html",
    "title": "Class EmptyRequestResult",
    "keywords": "Class EmptyRequestResult Inheritance Object EmptyRequestResult Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class EmptyRequestResult"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.ExtraType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.ExtraType.html",
    "title": "Enum ExtraType",
    "keywords": "Enum ExtraType Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum ExtraType Fields Name Description AdditionalPart BehindTheScenes Clip DeletedScene Interview Sample Scene ThemeSong ThemeVideo Trailer Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ExtraType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.html",
    "title": "Namespace MediaBrowser.Model.Entities",
    "keywords": "Namespace MediaBrowser.Model.Entities Classes ChapterInfo Class ChapterInfo CollectionType DisplayPreferences Defines the display preferences for any item that supports them (usually Folders) EmptyRequestResult LibraryUpdateInfo Class LibraryUpdateInfo MBRegistrationRecord MediaContainer MediaStream Class MediaStream MediaType Class MediaType MediaUrl ParentalRating Class ParentalRating PluginSecurityInfo Class PluginSecurityInfo ProviderIdDictionary ProviderIdsExtensions Class ProviderIdsExtensions SpecialFolder VirtualFolderInfo Used to hold information about a user's list of configured virtual folders Structs Luid Implements a locally unique ID. Interfaces IHasProviderIds Since BaseItem and DTOBaseItem both have ProviderIds, this interface helps avoid code repition by using extension methods Enums CollectionDisplayOrder ExtraType ImageType Enum ImageType LocationType Enum LocationType MarkerType MediaStreamType Enum MediaStreamType MetadataFields Enum MetadataFields MetadataProviders Enum MetadataProviders PersonType ScrollDirection Enum ScrollDirection SeriesDisplayOrder SeriesStatus Enum SeriesStatus SortOrder Enum SortOrder SubtitleLocationType UserDataSaveReason Enum UserDataSaveReason Video3DFormat"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.IHasProviderIds.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.IHasProviderIds.html",
    "title": "Interface IHasProviderIds",
    "keywords": "Interface IHasProviderIds Since BaseItem and DTOBaseItem both have ProviderIds, this interface helps avoid code repition by using extension methods Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public interface IHasProviderIds Properties ProviderIds Gets or sets the provider ids. Declaration ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary The provider ids. Extension Methods ProviderIdsExtensions.HasProviderId(IHasProviderIds, MetadataProviders) ProviderIdsExtensions.HasProviderId(IHasProviderIds, String) ProviderIdsExtensions.GetProviderId(IHasProviderIds, MetadataProviders) ProviderIdsExtensions.GetProviderId(IHasProviderIds, String) ProviderIdsExtensions.GetProviderIds(IHasProviderIds, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, String, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, String, String[]) ProviderIdsExtensions.SetProviderId(IHasProviderIds, MetadataProviders, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, MetadataProviders, String[])"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.ImageType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.ImageType.html",
    "title": "Enum ImageType",
    "keywords": "Enum ImageType Enum ImageType Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum ImageType Fields Name Description Art The art Backdrop The backdrop Banner The banner Box The box BoxRear The box rear Chapter The chapter image Disc The disc Logo The logo LogoLight LogoLightColor Menu The menu Primary The primary Screenshot The screenshot Thumb The thumb Thumbnail Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ImageType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.LibraryUpdateInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.LibraryUpdateInfo.html",
    "title": "Class LibraryUpdateInfo",
    "keywords": "Class LibraryUpdateInfo Class LibraryUpdateInfo Inheritance Object LibraryUpdateInfo Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class LibraryUpdateInfo Constructors LibraryUpdateInfo() Initializes a new instance of the LibraryUpdateInfo class. Declaration public LibraryUpdateInfo() Properties CollectionFolders Declaration public string[] CollectionFolders { get; set; } Property Value Type Description String [] FoldersAddedTo Gets or sets the folders added to. Declaration public string[] FoldersAddedTo { get; set; } Property Value Type Description String [] The folders added to. FoldersRemovedFrom Gets or sets the folders removed from. Declaration public string[] FoldersRemovedFrom { get; set; } Property Value Type Description String [] The folders removed from. IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean ItemsAdded Gets or sets the items added. Declaration public string[] ItemsAdded { get; set; } Property Value Type Description String [] The items added. ItemsRemoved Gets or sets the items removed. Declaration public string[] ItemsRemoved { get; set; } Property Value Type Description String [] The items removed. ItemsUpdated Gets or sets the items updated. Declaration public string[] ItemsUpdated { get; set; } Property Value Type Description String [] The items updated."
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.LocationType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.LocationType.html",
    "title": "Enum LocationType",
    "keywords": "Enum LocationType Enum LocationType Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum LocationType Fields Name Description FileSystem The file system Virtual The virtual Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<LocationType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.Luid.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.Luid.html",
    "title": "Struct Luid",
    "keywords": "Struct Luid Implements a locally unique ID. Implements IEquatable < Luid > IComparable IComparable < Luid > ISerializable ICloneable Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax [Serializable] public struct Luid : IEquatable<Luid>, IComparable, IComparable<Luid>, ISerializable, ICloneable Constructors Luid(Int64) Initializes a new instance of the Luid struct. Declaration public Luid(long value) Parameters Type Name Description Int64 value The value. Luid(String) Initializes a new instance of the Luid struct. Declaration public Luid(string luidString) Parameters Type Name Description String luidString The luid string. Properties Empty Gets the empty Luid. Declaration public static readonly Luid Empty { get; } Property Value Type Description Luid The empty Luid. Methods Clone() Creates a new object that is a copy of the current instance. Declaration public object Clone() Returns Type Description Object A new object that is a copy of this instance. CompareTo(Luid) Declaration public int CompareTo(Luid value) Parameters Type Name Description Luid value Returns Type Description Int32 CompareTo(Object) Declaration public int CompareTo(object value) Parameters Type Name Description Object value Returns Type Description Int32 Equals(Luid) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Luid other) Parameters Type Name Description Luid other An object to compare with this object. Returns Type Description Boolean true if the current object is equal to the other parameter; otherwise, false. Equals(Object) Determines whether the specified Object , is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The Object to compare with this instance. Returns Type Description Boolean true if the specified Object is equal to this instance; otherwise, false . Overrides ValueType.Equals(Object) GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ValueType.GetHashCode() GetNumericValue() Gets the numeric value. Declaration public long GetNumericValue() Returns Type Description Int64 The numeric value. NewLuid() Declaration public static Luid NewLuid() Returns Type Description Luid ToString() Converts to string. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides ValueType.ToString() ToString(Boolean) Converts to string. Declaration public string ToString(bool excludeBraces) Parameters Type Name Description Boolean excludeBraces Returns Type Description String A String that represents this instance. TryParse(String, out Luid) Declaration public static bool TryParse(string value, out Luid result) Parameters Type Name Description String value Luid result Returns Type Description Boolean TryParse(String, IFormatProvider, out Luid) Declaration public static bool TryParse(string value, IFormatProvider provider, out Luid result) Parameters Type Name Description String value IFormatProvider provider Luid result Returns Type Description Boolean Operators Equality(Luid, Luid) Declaration public static bool operator ==(Luid x, Luid y) Parameters Type Name Description Luid x Luid y Returns Type Description Boolean Implicit(Int32 to Luid) Declaration public static implicit operator Luid(int value) Parameters Type Name Description Int32 value Returns Type Description Luid Implicit(Int64 to Luid) Declaration public static implicit operator Luid(long value) Parameters Type Name Description Int64 value Returns Type Description Luid Implicit(String to Luid) Declaration public static implicit operator Luid(string value) Parameters Type Name Description String value Returns Type Description Luid Inequality(Luid, Luid) Declaration public static bool operator !=(Luid x, Luid y) Parameters Type Name Description Luid x Luid y Returns Type Description Boolean Explicit Interface Implementations ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.SerializationFormatter)] void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.IEquatable<T> System.IComparable System.IComparable<T> System.Runtime.Serialization.ISerializable System.ICloneable See Also IEquatable <T> ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.MarkerType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.MarkerType.html",
    "title": "Enum MarkerType",
    "keywords": "Enum MarkerType Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum MarkerType Fields Name Description Chapter CreditsStart IntroEnd IntroStart Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<MarkerType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.MBRegistrationRecord.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.MBRegistrationRecord.html",
    "title": "Class MBRegistrationRecord",
    "keywords": "Class MBRegistrationRecord Inheritance Object MBRegistrationRecord Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class MBRegistrationRecord Properties ExpirationDate Declaration public DateTimeOffset ExpirationDate { get; set; } Property Value Type Description DateTimeOffset IsRegistered Declaration public bool IsRegistered { get; set; } Property Value Type Description Boolean IsTrial Declaration public bool IsTrial { get; set; } Property Value Type Description Boolean IsValid Declaration public bool IsValid { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.MediaContainer.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.MediaContainer.html",
    "title": "Class MediaContainer",
    "keywords": "Class MediaContainer Inheritance Object MediaContainer Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class MediaContainer Fields Aac Declaration public static ReadOnlyMemory<char> Aac Field Value Type Description ReadOnlyMemory < Char > Adts Declaration public static ReadOnlyMemory<char> Adts Field Value Type Description ReadOnlyMemory < Char > Asf Declaration public static ReadOnlyMemory<char> Asf Field Value Type Description ReadOnlyMemory < Char > Avi Declaration public static ReadOnlyMemory<char> Avi Field Value Type Description ReadOnlyMemory < Char > Bluray Declaration public static ReadOnlyMemory<char> Bluray Field Value Type Description ReadOnlyMemory < Char > BlurayIso Declaration public static ReadOnlyMemory<char> BlurayIso Field Value Type Description ReadOnlyMemory < Char > Bmp Declaration public static ReadOnlyMemory<char> Bmp Field Value Type Description ReadOnlyMemory < Char > Dvd Declaration public static ReadOnlyMemory<char> Dvd Field Value Type Description ReadOnlyMemory < Char > DvdIso Declaration public static ReadOnlyMemory<char> DvdIso Field Value Type Description ReadOnlyMemory < Char > Dvrms Declaration public static ReadOnlyMemory<char> Dvrms Field Value Type Description ReadOnlyMemory < Char > Flac Declaration public static ReadOnlyMemory<char> Flac Field Value Type Description ReadOnlyMemory < Char > Flv Declaration public static ReadOnlyMemory<char> Flv Field Value Type Description ReadOnlyMemory < Char > Gif Declaration public static ReadOnlyMemory<char> Gif Field Value Type Description ReadOnlyMemory < Char > Iso Declaration public static ReadOnlyMemory<char> Iso Field Value Type Description ReadOnlyMemory < Char > Jpeg Declaration public static ReadOnlyMemory<char> Jpeg Field Value Type Description ReadOnlyMemory < Char > Jpg Declaration public static ReadOnlyMemory<char> Jpg Field Value Type Description ReadOnlyMemory < Char > Lpcm Declaration public static ReadOnlyMemory<char> Lpcm Field Value Type Description ReadOnlyMemory < Char > M2ts Declaration public static ReadOnlyMemory<char> M2ts Field Value Type Description ReadOnlyMemory < Char > M4v Declaration public static ReadOnlyMemory<char> M4v Field Value Type Description ReadOnlyMemory < Char > Mkv Declaration public static ReadOnlyMemory<char> Mkv Field Value Type Description ReadOnlyMemory < Char > Mp3 Declaration public static ReadOnlyMemory<char> Mp3 Field Value Type Description ReadOnlyMemory < Char > Mp4 Declaration public static ReadOnlyMemory<char> Mp4 Field Value Type Description ReadOnlyMemory < Char > Mpeg Declaration public static ReadOnlyMemory<char> Mpeg Field Value Type Description ReadOnlyMemory < Char > Mpeg1Video Declaration public static ReadOnlyMemory<char> Mpeg1Video Field Value Type Description ReadOnlyMemory < Char > Mpeg2Ps Declaration public static ReadOnlyMemory<char> Mpeg2Ps Field Value Type Description ReadOnlyMemory < Char > Mpeg2Ts Declaration public static ReadOnlyMemory<char> Mpeg2Ts Field Value Type Description ReadOnlyMemory < Char > MpegTs Declaration public static ReadOnlyMemory<char> MpegTs Field Value Type Description ReadOnlyMemory < Char > Mpg Declaration public static ReadOnlyMemory<char> Mpg Field Value Type Description ReadOnlyMemory < Char > Mts Declaration public static ReadOnlyMemory<char> Mts Field Value Type Description ReadOnlyMemory < Char > Oga Declaration public static ReadOnlyMemory<char> Oga Field Value Type Description ReadOnlyMemory < Char > Ogg Declaration public static ReadOnlyMemory<char> Ogg Field Value Type Description ReadOnlyMemory < Char > Ogm Declaration public static ReadOnlyMemory<char> Ogm Field Value Type Description ReadOnlyMemory < Char > Ogv Declaration public static ReadOnlyMemory<char> Ogv Field Value Type Description ReadOnlyMemory < Char > Png Declaration public static ReadOnlyMemory<char> Png Field Value Type Description ReadOnlyMemory < Char > Rar Declaration public static ReadOnlyMemory<char> Rar Field Value Type Description ReadOnlyMemory < Char > Raw Declaration public static ReadOnlyMemory<char> Raw Field Value Type Description ReadOnlyMemory < Char > Rec Declaration public static ReadOnlyMemory<char> Rec Field Value Type Description ReadOnlyMemory < Char > Rmvb Declaration public static ReadOnlyMemory<char> Rmvb Field Value Type Description ReadOnlyMemory < Char > SevenZ Declaration public static ReadOnlyMemory<char> SevenZ Field Value Type Description ReadOnlyMemory < Char > Strm Declaration public static ReadOnlyMemory<char> Strm Field Value Type Description ReadOnlyMemory < Char > Threegp Declaration public static ReadOnlyMemory<char> Threegp Field Value Type Description ReadOnlyMemory < Char > Tp Declaration public static ReadOnlyMemory<char> Tp Field Value Type Description ReadOnlyMemory < Char > Ts Declaration public static ReadOnlyMemory<char> Ts Field Value Type Description ReadOnlyMemory < Char > Vob Declaration public static ReadOnlyMemory<char> Vob Field Value Type Description ReadOnlyMemory < Char > Wma Declaration public static ReadOnlyMemory<char> Wma Field Value Type Description ReadOnlyMemory < Char > Wmv Declaration public static ReadOnlyMemory<char> Wmv Field Value Type Description ReadOnlyMemory < Char > Wtv Declaration public static ReadOnlyMemory<char> Wtv Field Value Type Description ReadOnlyMemory < Char > Zip Declaration public static ReadOnlyMemory<char> Zip Field Value Type Description ReadOnlyMemory < Char >"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.MediaStream.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.MediaStream.html",
    "title": "Class MediaStream",
    "keywords": "Class MediaStream Class MediaStream Inheritance Object MediaStream Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class MediaStream Properties AspectRatio Gets or sets the aspect ratio. Probe Field: display_aspect_ratio Applies to: Video . Actual type: Emby.Media.Model.Types.Rational . Declaration public string AspectRatio { get; set; } Property Value Type Description String The aspect ratio as string. AttachmentSize Gets or sets the size of the attachment. Declaration public int? AttachmentSize { get; set; } Property Value Type Description Nullable < Int32 > The size of the attachment. AverageFrameRate Gets or sets the average frame rate.. Probe Field: avg_frame_rate Applies to: Video . Actual type: Emby.Media.Model.Types.Rational . Declaration public float? AverageFrameRate { get; set; } Property Value Type Description Nullable < Single > The average frame rate as float. BitDepth Gets or sets the bit depth. Probe Field: bits_per_sample or bits_per_raw_sample Applies to: Video , Audio . Declaration public int? BitDepth { get; set; } Property Value Type Description Nullable < Int32 > The bit depth. BitRate Gets or sets the bit rate. Probe Field: bit_rate Applies to: Video , Audio . Declaration public int? BitRate { get; set; } Property Value Type Description Nullable < Int32 > The bit rate. Remarks THIS VALUE IS PROCESSED BY CUSTOM LOGIC AND DOES NOT NECESSARILY MATCH FFPROBE RESULTS! ChannelLayout Gets or sets the channel layout. Probe Field: channel_layout Applies to: Audio Related Enum: ChannelLayout . Declaration public string ChannelLayout { get; set; } Property Value Type Description String The channel layout string. Channels Gets or sets the audio channel count. Probe Field: channels Applies to: Audio . Declaration public int? Channels { get; set; } Property Value Type Description Nullable < Int32 > The audio channel count. Codec Gets or sets the codec. Probe Field: codec_name Applies to: Video , Audio , Subtitle Related Enums: T:Emby.Media.Model.Enums.VideoMediaTypes , Emby.Media.Model.Enums.AudioMediaTypes , Emby.Media.Model.Enums.SubtitleMediaTypes . Declaration public string Codec { get; set; } Property Value Type Description String The codec tag. CodecTag Gets or sets the codec tag. Probe Field: codec_tag Applies to: Video , Audio , Subtitle . Declaration public string CodecTag { get; set; } Property Value Type Description String The codec tag. CodecTimeBase Gets or sets the codec time-base. Probe Field: codec_time_base Applies to: Video , Audio , Subtitle . Actual type: Emby.Media.Model.Types.Rational . Declaration public string CodecTimeBase { get; set; } Property Value Type Description String The codec time-base as string. ColorPrimaries Gets or sets the chromaticity coordinates of the source primaries. Probe Field: color_primaries Applies to: Video Related Enum: Emby.Media.Model.Enums.ColorPrimaries . Declaration public string ColorPrimaries { get; set; } Property Value Type Description String The chromaticity coordinates of the source primaries as string. ColorSpace Gets or sets the YUV colorspace type. Probe Field: color_space Applies to: Video Related Enum: Emby.Media.Model.Enums.ColorSpaces . Declaration public string ColorSpace { get; set; } Property Value Type Description String The YUV colorspace type as string. ColorTransfer Gets or sets the color transfer characteristics. Probe Field: color_transfer Applies to: Video Related Enum: Emby.Media.Model.Enums.ColorTransfers . Declaration public string ColorTransfer { get; set; } Property Value Type Description String The color transfer characteristics value as string. Comment Gets or sets the comment. Probe Field: tags[\"comment\"] Applies to: Video , Audio , Subtitle . Declaration public string Comment { get; set; } Property Value Type Description String The comment. DeliveryMethod Gets or sets the method. Declaration public SubtitleDeliveryMethod? DeliveryMethod { get; set; } Property Value Type Description Nullable < SubtitleDeliveryMethod > The method. Remarks Custom property set by the application. DeliveryUrl Gets or sets the delivery URL. Declaration public string DeliveryUrl { get; set; } Property Value Type Description String The delivery URL. Remarks Custom property set by the application. DisplayLanguage Gets or sets the display language. Declaration public string DisplayLanguage { get; set; } Property Value Type Description String The display language. Remarks Custom property set by the application. DisplayTitle Gets or sets the display title. Declaration public string DisplayTitle { get; set; } Property Value Type Description String The display title. Remarks Custom property set by the application. Extradata Gets or sets the extradata. Probe Field: extradata Applies to: Video , Audio , Subtitle . Declaration public string Extradata { get; set; } Property Value Type Description String The codec extradata as string. Remarks Currently, this value is only parsed for subtitle streams with codec Emby.Media.Model.Enums.SubtitleMediaTypes.dvb_teletext . Height Gets or sets the height. Probe Field: height Applies to: Video . Declaration public int? Height { get; set; } Property Value Type Description Nullable < Int32 > The height. Index Gets or sets the index of the stream inside its container. Probe Field: index Applies to: Video , Audio , Subtitle . Declaration public int Index { get; set; } Property Value Type Description Int32 The index of the stream. IsAnamorphic Gets a value indicating whether this instance is anamorphic. Declaration public bool? IsAnamorphic { get; set; } Property Value Type Description Nullable < Boolean > true if this instance is anamorphic; otherwise, false . IsAVC Gets or sets the IsAVC property. Declaration [Obsolete] public bool? IsAVC { get; set; } Property Value Type Description Nullable < Boolean > The IsAVC property. Remarks This is redundant. AVC means H264 codec. IsClosedCaptions Declaration [IgnoreDataMember] public bool IsClosedCaptions { get; } Property Value Type Description Boolean IsDefault Gets or sets a value indicating whether this instance is default. Probe Field: disposition[\"default\"] Applies to: Video , Audio , Subtitle . Declaration public bool IsDefault { get; set; } Property Value Type Description Boolean true if this instance is default; otherwise, false . IsExternal Gets or sets a value indicating whether this instance is external. Declaration public bool IsExternal { get; set; } Property Value Type Description Boolean true if this instance is external; otherwise, false . Remarks Custom property set by the application. IsExternalUrl Gets or sets a value indicating whether this instance is external URL. Declaration public bool? IsExternalUrl { get; set; } Property Value Type Description Nullable < Boolean > null if [is external URL] contains no value, true if [is external URL]; otherwise, false . Remarks Custom property set by the application. IsForced Gets or sets a value indicating whether this instance is forced. Probe Field: disposition[\"forced\"] Applies to: Video , Audio , Subtitle . Declaration public bool IsForced { get; set; } Property Value Type Description Boolean true if this instance is forced; otherwise, false . IsInterlaced Gets or sets a value indicating whether this instance is interlaced. Probe Field: field_order != progressive Applies to: Video . Declaration public bool IsInterlaced { get; set; } Property Value Type Description Boolean true if this instance is interlaced; otherwise, false . IsTextSubtitleStream Declaration public bool IsTextSubtitleStream { get; } Property Value Type Description Boolean ItemId Used only by our Windows app. Not used by Emby Server. Declaration public string ItemId { get; set; } Property Value Type Description String Language Gets or sets the language. Probe Field: tags[\"language\"] Applies to: Audio , Subtitle . Declaration public string Language { get; set; } Property Value Type Description String The language. Level Gets or sets the codec level. Probe Field: level Applies to: Video Related Enums: Emby.Media.Model.Enums.AvcLevels , Emby.Media.Model.Enums.H263Levels , Emby.Media.Model.Enums.HevcLevels , Emby.Media.Model.Enums.Mpeg2Levels , Emby.Media.Model.Enums.Vc1Levels , Emby.Media.Model.Enums.Mpeg4Levels , Emby.Media.Model.Enums.Vp8Levels , Emby.Media.Model.Enums.Vp9Levels . Declaration public double? Level { get; set; } Property Value Type Description Nullable < Double > The codec level as string. MimeType Gets or sets the type of the MIME. Declaration public string MimeType { get; set; } Property Value Type Description String The type of the MIME. NalLengthSize Gets or sets the nal length size. Probe Field: nal_length_size Applies to: Video of type Emby.Media.Model.Enums.VideoMediaTypes.h264 . Actual type: Int32 . Declaration public string NalLengthSize { get; set; } Property Value Type Description String The nal length size as string. Path Gets or sets the filename. Declaration public string Path { get; set; } Property Value Type Description String The filename. PixelFormat Gets or sets the pixel format. Probe Field: pix_fmt Applies to: Video . Actual type: PixelFormat . Declaration public string PixelFormat { get; set; } Property Value Type Description String The pixel format as string. Profile Gets or sets the profile. Probe Field: profile Applies to: Video , Audio Related Enums: Emby.Media.Model.Enums.AacProfiles , Emby.Media.Model.Enums.AvcProfiles , Emby.Media.Model.Enums.H263Profiles , Emby.Media.Model.Enums.HevcProfiles , Emby.Media.Model.Enums.Mpeg2Profiles , Emby.Media.Model.Enums.Vc1Profiles , Emby.Media.Model.Enums.Mpeg4Profiles , Emby.Media.Model.Enums.Vp8Profiles , Emby.Media.Model.Enums.Vp9Profiles . Declaration public string Profile { get; set; } Property Value Type Description String The profile as string. Protocol Declaration public MediaProtocol Protocol { get; set; } Property Value Type Description MediaProtocol RealFrameRate Gets or sets the real frame rate.. Probe Field: r_frame_rate Applies to: Video . Actual type: Emby.Media.Model.Types.Rational . Declaration public float? RealFrameRate { get; set; } Property Value Type Description Nullable < Single > The real frame rate as float. RefFrames Gets or sets the reference frames. Probe Field: refs Applies to: Video . Declaration public int? RefFrames { get; set; } Property Value Type Description Nullable < Int32 > The reference frames. Rotation Declaration public int? Rotation { get; set; } Property Value Type Description Nullable < Int32 > SampleRate Gets or sets the sample rate. Probe Field: sample_rate Applies to: Audio Related Enum: Emby.Media.Model.Enums.SampleRates . Declaration public int? SampleRate { get; set; } Property Value Type Description Nullable < Int32 > The sample rate as string. ServerId Used only by our Windows app. Not used by Emby Server. Declaration public string ServerId { get; set; } Property Value Type Description String StreamStartTimeTicks Gets or sets the start time of the stream. Probe Field: start_time Applies to: Video , Audio , Subtitle . Actual type: TimeSpan . Declaration public long? StreamStartTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > The start time of the stream as ticks. SubtitleLocationType Declaration public SubtitleLocationType? SubtitleLocationType { get; } Property Value Type Description Nullable < SubtitleLocationType > SupportsExternalStream Gets or sets a value indicating whether [supports external stream]. Declaration public bool SupportsExternalStream { get; set; } Property Value Type Description Boolean true if [supports external stream]; otherwise, false . TimeBase Gets or sets the time-base. Probe Field: time_base Applies to: Video , Audio , Subtitle . Actual type: Emby.Media.Model.Types.Rational . Declaration public string TimeBase { get; set; } Property Value Type Description String The time-base as string. Title Gets or sets the title. Probe Field: tags[\"title\"] Applies to: Video , Audio , Subtitle . Declaration public string Title { get; set; } Property Value Type Description String The title. Type Gets or sets the stream type. Probe Field: codec_type Applies to: Video , Audio , Subtitle , Attachment Related Enums: MediaStreamType . Declaration public MediaStreamType Type { get; set; } Property Value Type Description MediaStreamType The stream type as string. VideoRange Declaration public string VideoRange { get; } Property Value Type Description String Width Gets or sets the width. Probe Field: width Applies to: Video . Declaration public int? Width { get; set; } Property Value Type Description Nullable < Int32 > The width. Methods IsTextFormat(ReadOnlySpan<Char>) Declaration public static bool IsTextFormat(ReadOnlySpan<char> codec) Parameters Type Name Description ReadOnlySpan < Char > codec Returns Type Description Boolean IsTextFormat(String) Declaration public static bool IsTextFormat(string codec) Parameters Type Name Description String codec Returns Type Description Boolean ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description String A string that represents the current object. Overrides Object.ToString()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.MediaStreamType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.MediaStreamType.html",
    "title": "Enum MediaStreamType",
    "keywords": "Enum MediaStreamType Enum MediaStreamType Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum MediaStreamType Fields Name Description Attachment An attachment stream. Audio An audio stream. Data A data stream. EmbeddedImage An embedded image. Subtitle A subtitle stream. Unknown Unknown type of stream. Video A video stream. Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<MediaStreamType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.MediaType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.MediaType.html",
    "title": "Class MediaType",
    "keywords": "Class MediaType Class MediaType Inheritance Object MediaType Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class MediaType Fields Audio The audio Declaration public const string Audio = \"Audio\" Field Value Type Description String Book The book Declaration public const string Book = \"Book\" Field Value Type Description String Game The game Declaration public const string Game = \"Game\" Field Value Type Description String Photo The photo Declaration public const string Photo = \"Photo\" Field Value Type Description String Video The video Declaration public const string Video = \"Video\" Field Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.MediaUrl.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.MediaUrl.html",
    "title": "Class MediaUrl",
    "keywords": "Class MediaUrl Inheritance Object MediaUrl Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class MediaUrl Properties Name Declaration public string Name { get; set; } Property Value Type Description String Url Declaration public string Url { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.MetadataFields.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.MetadataFields.html",
    "title": "Enum MetadataFields",
    "keywords": "Enum MetadataFields Enum MetadataFields Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum MetadataFields Fields Name Description Cast The cast ChannelNumber Collections Genres The genres Name The name OfficialRating The official rating OriginalTitle Overview The overview ProductionLocations The production locations Runtime The runtime SortName Studios The studios Tags The tags Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<MetadataFields>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.MetadataProviders.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.MetadataProviders.html",
    "title": "Enum MetadataProviders",
    "keywords": "Enum MetadataProviders Enum MetadataProviders Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum MetadataProviders Fields Name Description AudioDbAlbum AudioDbArtist Gamesdb Imdb The imdb MusicBrainzAlbum MusicBrainzAlbumArtist MusicBrainzArtist MusicBrainzReleaseGroup MusicBrainzTrack Tmdb The TMDB TmdbCollection Tvcom The tvcom Tvdb The TVDB TvMaze TvRage Zap2It Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<MetadataProviders>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.ParentalRating.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.ParentalRating.html",
    "title": "Class ParentalRating",
    "keywords": "Class ParentalRating Class ParentalRating Inheritance Object ParentalRating Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class ParentalRating Constructors ParentalRating() Declaration public ParentalRating() ParentalRating(String, Int32) Declaration public ParentalRating(string name, int value) Parameters Type Name Description String name Int32 value Properties Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Value Gets or sets the value. Declaration public int Value { get; set; } Property Value Type Description Int32 The value."
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.PersonType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.PersonType.html",
    "title": "Enum PersonType",
    "keywords": "Enum PersonType Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum PersonType Fields Name Description Actor Composer Conductor Director GuestStar Lyricist Producer Writer Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<PersonType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.PluginSecurityInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.PluginSecurityInfo.html",
    "title": "Class PluginSecurityInfo",
    "keywords": "Class PluginSecurityInfo Class PluginSecurityInfo Inheritance Object PluginSecurityInfo Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class PluginSecurityInfo Properties IsMBSupporter Gets or sets a value indicating whether this instance is MB supporter. Declaration public bool IsMBSupporter { get; set; } Property Value Type Description Boolean true if this instance is MB supporter; otherwise, false . SupporterKey Gets or sets the supporter key. Declaration public string SupporterKey { get; set; } Property Value Type Description String The supporter key."
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.ProviderIdDictionary.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.ProviderIdDictionary.html",
    "title": "Class ProviderIdDictionary",
    "keywords": "Class ProviderIdDictionary Inheritance Object Dictionary < String , String > ProviderIdDictionary Implements IDictionary < String , String > ICollection < KeyValuePair < String , String >> IReadOnlyDictionary < String , String > IReadOnlyCollection < KeyValuePair < String , String >> IEnumerable < KeyValuePair < String , String >> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, String>.Add(String, String) Dictionary<String, String>.Clear() Dictionary<String, String>.ContainsKey(String) Dictionary<String, String>.ContainsValue(String) Dictionary<String, String>.GetEnumerator() Dictionary<String, String>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, String>.OnDeserialization(Object) Dictionary<String, String>.Remove(String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() Dictionary<String, String>.ICollection.CopyTo(Array, Int32) Dictionary<String, String>.IDictionary.Add(Object, Object) Dictionary<String, String>.IDictionary.Contains(Object) Dictionary<String, String>.IDictionary.GetEnumerator() Dictionary<String, String>.IDictionary.Remove(Object) Dictionary<String, String>.IEnumerable.GetEnumerator() Dictionary<String, String>.TryGetValue(String, String) Dictionary<String, String>.Comparer Dictionary<String, String>.Count Dictionary<String, String>.Item[String] Dictionary<String, String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values Dictionary<String, String>.ICollection.IsSynchronized Dictionary<String, String>.ICollection.SyncRoot Dictionary<String, String>.IDictionary.IsFixedSize Dictionary<String, String>.IDictionary.IsReadOnly Dictionary<String, String>.IDictionary.Item[Object] Dictionary<String, String>.IDictionary.Keys Dictionary<String, String>.IDictionary.Values Dictionary<String, String>.Values Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class ProviderIdDictionary : Dictionary<string, string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Constructors ProviderIdDictionary() Declaration public ProviderIdDictionary() ProviderIdDictionary(Dictionary<String, String>) Declaration public ProviderIdDictionary(Dictionary<string, string> source) Parameters Type Name Description Dictionary < String , String > source Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.IEnumerable System.Runtime.Serialization.IDeserializationCallback System.Runtime.Serialization.ISerializable Extension Methods LinqExtensions.ToArray<TSource>(IEnumerable<TSource>, Int32) SortExtensions.OrderByString<T>(IEnumerable<T>, Func<T, String>) SortExtensions.OrderByStringDescending<T>(IEnumerable<T>, Func<T, String>)"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.ProviderIdsExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.ProviderIdsExtensions.html",
    "title": "Class ProviderIdsExtensions",
    "keywords": "Class ProviderIdsExtensions Class ProviderIdsExtensions Inheritance Object ProviderIdsExtensions Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public static class ProviderIdsExtensions Methods GetProviderId(IHasProviderIds, MetadataProviders) Gets a provider id Declaration public static string GetProviderId(this IHasProviderIds instance, MetadataProviders provider) Parameters Type Name Description IHasProviderIds instance The instance. MetadataProviders provider The provider. Returns Type Description String System.String. GetProviderId(IHasProviderIds, String) Gets a provider id Declaration public static string GetProviderId(this IHasProviderIds instance, string name) Parameters Type Name Description IHasProviderIds instance The instance. String name The name. Returns Type Description String System.String. GetProviderIds(IHasProviderIds, String) Declaration public static string[] GetProviderIds(this IHasProviderIds instance, string name) Parameters Type Name Description IHasProviderIds instance String name Returns Type Description String [] HasProviderId(IHasProviderIds, MetadataProviders) Determines whether [has provider identifier] [the specified instance]. Declaration public static bool HasProviderId(this IHasProviderIds instance, MetadataProviders provider) Parameters Type Name Description IHasProviderIds instance The instance. MetadataProviders provider The provider. Returns Type Description Boolean true if [has provider identifier] [the specified instance]; otherwise, false . HasProviderId(IHasProviderIds, String) Declaration public static bool HasProviderId(this IHasProviderIds instance, string provider) Parameters Type Name Description IHasProviderIds instance String provider Returns Type Description Boolean SetProviderId(IHasProviderIds, MetadataProviders, String) Sets a provider id Declaration public static void SetProviderId(this IHasProviderIds instance, MetadataProviders provider, string value) Parameters Type Name Description IHasProviderIds instance The instance. MetadataProviders provider The provider. String value The value. SetProviderId(IHasProviderIds, MetadataProviders, String[]) Declaration public static void SetProviderId(this IHasProviderIds instance, MetadataProviders provider, string[] value) Parameters Type Name Description IHasProviderIds instance MetadataProviders provider String [] value SetProviderId(IHasProviderIds, String, String) Sets a provider id Declaration public static void SetProviderId(this IHasProviderIds instance, string name, string value) Parameters Type Name Description IHasProviderIds instance The instance. String name The name. String value The value. SetProviderId(IHasProviderIds, String, String[]) Declaration public static void SetProviderId(this IHasProviderIds instance, string name, string[] values) Parameters Type Name Description IHasProviderIds instance String name String [] values"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.ScrollDirection.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.ScrollDirection.html",
    "title": "Enum ScrollDirection",
    "keywords": "Enum ScrollDirection Enum ScrollDirection Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum ScrollDirection Fields Name Description Horizontal The horizontal Vertical The vertical Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ScrollDirection>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.SeriesDisplayOrder.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.SeriesDisplayOrder.html",
    "title": "Enum SeriesDisplayOrder",
    "keywords": "Enum SeriesDisplayOrder Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum SeriesDisplayOrder Fields Name Description Absolute Aired Dvd Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SeriesDisplayOrder>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.SeriesStatus.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.SeriesStatus.html",
    "title": "Enum SeriesStatus",
    "keywords": "Enum SeriesStatus Enum SeriesStatus Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum SeriesStatus Fields Name Description Continuing The continuing Ended The ended Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SeriesStatus>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.SortOrder.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.SortOrder.html",
    "title": "Enum SortOrder",
    "keywords": "Enum SortOrder Enum SortOrder Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum SortOrder Fields Name Description Ascending The ascending Descending The descending Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SortOrder>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.SpecialFolder.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.SpecialFolder.html",
    "title": "Class SpecialFolder",
    "keywords": "Class SpecialFolder Inheritance Object SpecialFolder Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public static class SpecialFolder Fields MovieCollections Declaration public const string MovieCollections = \"MovieCollections\" Field Value Type Description String MovieLatest Declaration public const string MovieLatest = \"MovieLatest\" Field Value Type Description String MovieMovies Declaration public const string MovieMovies = \"MovieMovies\" Field Value Type Description String MovieResume Declaration public const string MovieResume = \"MovieResume\" Field Value Type Description String TvLatest Declaration public const string TvLatest = \"TvLatest\" Field Value Type Description String TvNextUp Declaration public const string TvNextUp = \"TvNextUp\" Field Value Type Description String TvResume Declaration public const string TvResume = \"TvResume\" Field Value Type Description String TvShowSeries Declaration public const string TvShowSeries = \"TvShowSeries\" Field Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.SubtitleLocationType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.SubtitleLocationType.html",
    "title": "Enum SubtitleLocationType",
    "keywords": "Enum SubtitleLocationType Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum SubtitleLocationType Fields Name Description InternalStream VideoSideData Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SubtitleLocationType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.UserDataSaveReason.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.UserDataSaveReason.html",
    "title": "Enum UserDataSaveReason",
    "keywords": "Enum UserDataSaveReason Enum UserDataSaveReason Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum UserDataSaveReason Fields Name Description Import The import PlaybackFinished The playback finished PlaybackProgress The playback progress PlaybackStart The playback start TogglePlayed The toggle played UpdateHideFromResume UpdateUserRating The update user rating Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<UserDataSaveReason>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.Video3DFormat.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.Video3DFormat.html",
    "title": "Enum Video3DFormat",
    "keywords": "Enum Video3DFormat Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public enum Video3DFormat Fields Name Description FullSideBySide FullTopAndBottom HalfSideBySide HalfTopAndBottom MVC Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<Video3DFormat>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Entities.VirtualFolderInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Entities.VirtualFolderInfo.html",
    "title": "Class VirtualFolderInfo",
    "keywords": "Class VirtualFolderInfo Used to hold information about a user's list of configured virtual folders Inheritance Object VirtualFolderInfo Namespace : MediaBrowser.Model.Entities Assembly : MediaBrowser.Model.dll Syntax public class VirtualFolderInfo Constructors VirtualFolderInfo() Initializes a new instance of the VirtualFolderInfo class. Declaration public VirtualFolderInfo() Properties CollectionType Gets or sets the type of the collection. Declaration public string CollectionType { get; set; } Property Value Type Description String The type of the collection. ItemId Gets or sets the item identifier. Declaration public string ItemId { get; set; } Property Value Type Description String The item identifier. LibraryOptions Declaration public LibraryOptions LibraryOptions { get; set; } Property Value Type Description LibraryOptions Locations Gets or sets the locations. Declaration public string[] Locations { get; set; } Property Value Type Description String [] The locations. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. PrimaryImageItemId Gets or sets the primary image item identifier. Declaration public string PrimaryImageItemId { get; set; } Property Value Type Description String The primary image item identifier. RefreshProgress Declaration public double? RefreshProgress { get; set; } Property Value Type Description Nullable < Double > RefreshStatus Declaration public string RefreshStatus { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Events.GenericEventArgs-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Events.GenericEventArgs-1.html",
    "title": "Class GenericEventArgs<T>",
    "keywords": "Class GenericEventArgs<T> Provides a generic EventArgs subclass that can hold any kind of object Inheritance Object EventArgs GenericEventArgs<T> Inherited Members EventArgs.Empty Namespace : MediaBrowser.Model.Events Assembly : MediaBrowser.Model.dll Syntax public class GenericEventArgs<T> : EventArgs Type Parameters Name Description T Constructors GenericEventArgs() Initializes a new instance of the GenericEventArgs<T> class. Declaration public GenericEventArgs() GenericEventArgs(T) Initializes a new instance of the GenericEventArgs<T> class. Declaration public GenericEventArgs(T arg) Parameters Type Name Description T arg The argument. Properties Argument Gets or sets the argument. Declaration public T Argument { get; set; } Property Value Type Description T The argument."
  },
  "reference/pluginapi/MediaBrowser.Model.Events.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Events.html",
    "title": "Namespace MediaBrowser.Model.Events",
    "keywords": "Namespace MediaBrowser.Model.Events Classes GenericEventArgs<T> Provides a generic EventArgs subclass that can hold any kind of object"
  },
  "reference/pluginapi/MediaBrowser.Model.Extensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Extensions.html",
    "title": "Namespace MediaBrowser.Model.Extensions",
    "keywords": "Namespace MediaBrowser.Model.Extensions Classes LinqExtensions ListHelper StringHelper Isolating these helpers allow this entire project to be easily converted to Java"
  },
  "reference/pluginapi/MediaBrowser.Model.Extensions.LinqExtensions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Extensions.LinqExtensions.html",
    "title": "Class LinqExtensions",
    "keywords": "Class LinqExtensions Inheritance Object LinqExtensions Namespace : MediaBrowser.Model.Extensions Assembly : MediaBrowser.Model.dll Syntax public static class LinqExtensions Methods ToArray<TSource>(IEnumerable<TSource>, Int32) Declaration public static TSource[] ToArray<TSource>(this IEnumerable<TSource> source, int count) Parameters Type Name Description IEnumerable <TSource> source Int32 count Returns Type Description TSource[] Type Parameters Name Description TSource"
  },
  "reference/pluginapi/MediaBrowser.Model.Extensions.ListHelper.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Extensions.ListHelper.html",
    "title": "Class ListHelper",
    "keywords": "Class ListHelper Inheritance Object ListHelper Namespace : MediaBrowser.Model.Extensions Assembly : MediaBrowser.Model.dll Syntax public static class ListHelper Methods Contains(List<ReadOnlyMemory<Char>>, ReadOnlySpan<Char>, StringComparison) Declaration public static bool Contains(List<ReadOnlyMemory<char>> list, ReadOnlySpan<char> value, StringComparison stringComparison) Parameters Type Name Description List < ReadOnlyMemory < Char >> list ReadOnlySpan < Char > value StringComparison stringComparison Returns Type Description Boolean ContainsIgnoreCase(ReadOnlyMemory<Char>[], ReadOnlySpan<Char>) Declaration public static bool ContainsIgnoreCase(ReadOnlyMemory<char>[] list, ReadOnlySpan<char> value) Parameters Type Name Description ReadOnlyMemory < Char >[] list ReadOnlySpan < Char > value Returns Type Description Boolean ContainsIgnoreCase(String[], ReadOnlySpan<Char>) Declaration public static bool ContainsIgnoreCase(string[] list, ReadOnlySpan<char> value) Parameters Type Name Description String [] list ReadOnlySpan < Char > value Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Extensions.StringHelper.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Extensions.StringHelper.html",
    "title": "Class StringHelper",
    "keywords": "Class StringHelper Isolating these helpers allow this entire project to be easily converted to Java Inheritance Object StringHelper Namespace : MediaBrowser.Model.Extensions Assembly : MediaBrowser.Model.dll Syntax public static class StringHelper Methods ContainsIgnoreCase(String, String) Returns a value indicating whether a specified substring occurs within a string. Strings are compared using OrdinalIgnoreCase . Declaration public static bool ContainsIgnoreCase(this string str1, string str2) Parameters Type Name Description String str1 The string to be sought. String str2 The string to seek. Returns Type Description Boolean true if the str2 parameter occurs within str1 , or if str2 is the empty string (\"\"); otherwise, false. Remarks Returns false in case str1 is null. Does not throw. EqualsIgnoreCase(String, String) Determines whether two specified String objects have the same value. Strings are compared using OrdinalIgnoreCase . Declaration public static bool EqualsIgnoreCase(this string str1, string str2) Parameters Type Name Description String str1 The first string to compare, or null. String str2 The second string to compare, or null. Returns Type Description Boolean true if the value of the str1 parameter is equal to the value of the str2 parameter; otherwise, false. IndexOf(ReadOnlySpan<Char>, Char, Int32) Declaration public static int IndexOf(this ReadOnlySpan<char> value, char srch, int startIndex) Parameters Type Name Description ReadOnlySpan < Char > value Char srch Int32 startIndex Returns Type Description Int32 IndexOf(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Int32, StringComparison) Declaration public static int IndexOf(this ReadOnlySpan<char> value, ReadOnlySpan<char> srch, int startIndex, StringComparison comparison) Parameters Type Name Description ReadOnlySpan < Char > value ReadOnlySpan < Char > srch Int32 startIndex StringComparison comparison Returns Type Description Int32 Replace(String, String, String, StringComparison) Replaces the specified STR. Declaration public static string Replace(this string str, string oldValue, string newValue, StringComparison comparison) Parameters Type Name Description String str The STR. String oldValue The old value. String newValue The new value. StringComparison comparison The comparison. Returns Type Description String System.String. Split(ReadOnlySpan<Char>, Char[]) Declaration public static ReadOnlyMemory<char>[] Split(this ReadOnlySpan<char> value, char[] splitChars) Parameters Type Name Description ReadOnlySpan < Char > value Char [] splitChars Returns Type Description ReadOnlyMemory < Char >[]"
  },
  "reference/pluginapi/MediaBrowser.Model.GenericEdit.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.GenericEdit.html",
    "title": "Namespace MediaBrowser.Model.GenericEdit",
    "keywords": "Namespace MediaBrowser.Model.GenericEdit Interfaces IEditableObject IEditObjectContainer"
  },
  "reference/pluginapi/MediaBrowser.Model.GenericEdit.IEditableObject.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.GenericEdit.IEditableObject.html",
    "title": "Interface IEditableObject",
    "keywords": "Interface IEditableObject Namespace : MediaBrowser.Model.GenericEdit Assembly : MediaBrowser.Model.dll Syntax public interface IEditableObject Properties EditorDescription Gets the editor description. Declaration string EditorDescription { get; } Property Value Type Description String The editor description. EditorTitle Gets the editor title. Declaration string EditorTitle { get; } Property Value Type Description String The editor title. Methods CreateEditContainer() Declaration IEditObjectContainer CreateEditContainer() Returns Type Description IEditObjectContainer DeserializeFromJsonStream(Stream, IJsonSerializer) Declaration IEditableObject DeserializeFromJsonStream(Stream jsonStream, IJsonSerializer serializer) Parameters Type Name Description Stream jsonStream IJsonSerializer serializer Returns Type Description IEditableObject DeserializeFromJsonString(String, IJsonSerializer) Declaration IEditableObject DeserializeFromJsonString(string jsonString, IJsonSerializer serializer) Parameters Type Name Description String jsonString IJsonSerializer serializer Returns Type Description IEditableObject"
  },
  "reference/pluginapi/MediaBrowser.Model.GenericEdit.IEditObjectContainer.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.GenericEdit.IEditObjectContainer.html",
    "title": "Interface IEditObjectContainer",
    "keywords": "Interface IEditObjectContainer Namespace : MediaBrowser.Model.GenericEdit Assembly : MediaBrowser.Model.dll Syntax public interface IEditObjectContainer Properties DefaultObject Declaration object DefaultObject { get; } Property Value Type Description Object Object Declaration object Object { get; } Property Value Type Description Object TypeName Declaration string TypeName { get; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Globalization.CountryInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Globalization.CountryInfo.html",
    "title": "Class CountryInfo",
    "keywords": "Class CountryInfo Class CountryInfo Inheritance Object CountryInfo Namespace : MediaBrowser.Model.Globalization Assembly : MediaBrowser.Model.dll Syntax public class CountryInfo Constructors CountryInfo(String, String, String, String, String) Initializes a new instance of the CountryInfo class. Declaration public CountryInfo(string name, string englishName, string displayName, string twoLetterIsoRegionName, string threeLetterIsoRegionName) Parameters Type Name Description String name The name. String englishName Name of the english. String displayName The display name. String twoLetterIsoRegionName Name of the two letter iso region. String threeLetterIsoRegionName Name of the three letter iso region. Properties DisplayName Gets or sets the display name. Declaration public string DisplayName { get; set; } Property Value Type Description String The display name. EnglishName Gets or sets the English name. Declaration public string EnglishName { get; set; } Property Value Type Description String The English name. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. ThreeLetterISORegionName Gets or sets the name of the three letter ISO region. Declaration public string ThreeLetterISORegionName { get; set; } Property Value Type Description String The name of the three letter ISO region. TwoLetterISORegionName Gets or sets the name of the two letter ISO region. Declaration public string TwoLetterISORegionName { get; set; } Property Value Type Description String The name of the two letter ISO region."
  },
  "reference/pluginapi/MediaBrowser.Model.Globalization.CountryList.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Globalization.CountryList.html",
    "title": "Class CountryList",
    "keywords": "Class CountryList Inheritance Object List < CountryInfo > CountryList Implements IList < CountryInfo > ICollection < CountryInfo > IReadOnlyList < CountryInfo > IReadOnlyCollection < CountryInfo > IEnumerable < CountryInfo > IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<MediaBrowser.Model.Globalization.CountryInfo>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<MediaBrowser.Model.Globalization.CountryInfo>.System.Collections.IList.set_Item(System.Int32, System.Object) List<CountryInfo>.Add(CountryInfo) List<CountryInfo>.AddRange(IEnumerable<CountryInfo>) List<CountryInfo>.AsReadOnly() List<CountryInfo>.BinarySearch(CountryInfo) List<CountryInfo>.BinarySearch(CountryInfo, IComparer<CountryInfo>) List<CountryInfo>.BinarySearch(Int32, Int32, CountryInfo, IComparer<CountryInfo>) List<CountryInfo>.Clear() List<CountryInfo>.Contains(CountryInfo) List<CountryInfo>.ConvertAll<TOutput>(Converter<CountryInfo, TOutput>) List<CountryInfo>.CopyTo(CountryInfo[]) List<CountryInfo>.CopyTo(CountryInfo[], Int32) List<CountryInfo>.CopyTo(Int32, CountryInfo[], Int32, Int32) List<CountryInfo>.Exists(Predicate<CountryInfo>) List<CountryInfo>.Find(Predicate<CountryInfo>) List<CountryInfo>.FindAll(Predicate<CountryInfo>) List<CountryInfo>.FindIndex(Int32, Int32, Predicate<CountryInfo>) List<CountryInfo>.FindIndex(Int32, Predicate<CountryInfo>) List<CountryInfo>.FindIndex(Predicate<CountryInfo>) List<CountryInfo>.FindLast(Predicate<CountryInfo>) List<CountryInfo>.FindLastIndex(Int32, Int32, Predicate<CountryInfo>) List<CountryInfo>.FindLastIndex(Int32, Predicate<CountryInfo>) List<CountryInfo>.FindLastIndex(Predicate<CountryInfo>) List<CountryInfo>.ForEach(Action<CountryInfo>) List<CountryInfo>.GetEnumerator() List<CountryInfo>.GetRange(Int32, Int32) List<CountryInfo>.IndexOf(CountryInfo) List<CountryInfo>.IndexOf(CountryInfo, Int32) List<CountryInfo>.IndexOf(CountryInfo, Int32, Int32) List<CountryInfo>.Insert(Int32, CountryInfo) List<CountryInfo>.InsertRange(Int32, IEnumerable<CountryInfo>) List<CountryInfo>.LastIndexOf(CountryInfo) List<CountryInfo>.LastIndexOf(CountryInfo, Int32) List<CountryInfo>.LastIndexOf(CountryInfo, Int32, Int32) List<CountryInfo>.Remove(CountryInfo) List<CountryInfo>.RemoveAll(Predicate<CountryInfo>) List<CountryInfo>.RemoveAt(Int32) List<CountryInfo>.RemoveRange(Int32, Int32) List<CountryInfo>.Reverse() List<CountryInfo>.Reverse(Int32, Int32) List<CountryInfo>.Sort() List<CountryInfo>.Sort(IComparer<CountryInfo>) List<CountryInfo>.Sort(Comparison<CountryInfo>) List<CountryInfo>.Sort(Int32, Int32, IComparer<CountryInfo>) List<CountryInfo>.IEnumerable<CountryInfo>.GetEnumerator() List<CountryInfo>.ICollection.CopyTo(Array, Int32) List<CountryInfo>.IEnumerable.GetEnumerator() List<CountryInfo>.IList.Add(Object) List<CountryInfo>.IList.Contains(Object) List<CountryInfo>.IList.IndexOf(Object) List<CountryInfo>.IList.Insert(Int32, Object) List<CountryInfo>.IList.Remove(Object) List<CountryInfo>.ToArray() List<CountryInfo>.TrimExcess() List<CountryInfo>.TrueForAll(Predicate<CountryInfo>) List<CountryInfo>.Capacity List<CountryInfo>.Count List<CountryInfo>.Item[Int32] List<CountryInfo>.ICollection<CountryInfo>.IsReadOnly List<CountryInfo>.ICollection.IsSynchronized List<CountryInfo>.ICollection.SyncRoot List<CountryInfo>.IList.IsFixedSize List<CountryInfo>.IList.IsReadOnly List<CountryInfo>.IList.Item[Int32] Namespace : MediaBrowser.Model.Globalization Assembly : MediaBrowser.Model.dll Syntax public class CountryList : List<CountryInfo>, IList<CountryInfo>, ICollection<CountryInfo>, IReadOnlyList<CountryInfo>, IReadOnlyCollection<CountryInfo>, IEnumerable<CountryInfo>, IList, ICollection, IEnumerable Methods CreateList(Boolean, Boolean) Creates a country list. Declaration public static CountryList CreateList(bool localizeDisplayNames = false, bool createDynamically = false) Parameters Type Name Description Boolean localizeDisplayNames if set to true , the DisplayName property will be localized by the current culture. Boolean createDynamically if set to true , the list will be created by calling GetCultures(CultureTypes) , otherwise, the static list defined in this class will be used. Returns Type Description CountryList A CountryList. Find(ReadOnlySpan<Char>) Finds a CountryInfo from a search string. Declaration public CountryInfo Find(ReadOnlySpan<char> countryString) Parameters Type Name Description ReadOnlySpan < Char > countryString The search string. Returns Type Description CountryInfo A CountryInfo. Find(String) Finds a CountryInfo from a search string. Declaration public CountryInfo Find(string countryString) Parameters Type Name Description String countryString The search string. Returns Type Description CountryInfo A CountryInfo. Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods LinqExtensions.ToArray<TSource>(IEnumerable<TSource>, Int32) SortExtensions.OrderByString<T>(IEnumerable<T>, Func<T, String>) SortExtensions.OrderByStringDescending<T>(IEnumerable<T>, Func<T, String>)"
  },
  "reference/pluginapi/MediaBrowser.Model.Globalization.CultureDto.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Globalization.CultureDto.html",
    "title": "Class CultureDto",
    "keywords": "Class CultureDto Class CultureDto Inheritance Object CultureDto Namespace : MediaBrowser.Model.Globalization Assembly : MediaBrowser.Model.dll Syntax public class CultureDto Properties DisplayName Gets or sets the display name. Declaration public string DisplayName { get; set; } Property Value Type Description String The display name. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. ThreeLetterISOLanguageName Gets or sets the name of the three letter ISO language. Declaration public string ThreeLetterISOLanguageName { get; } Property Value Type Description String The name of the three letter ISO language. ThreeLetterISOLanguageNames Declaration public string[] ThreeLetterISOLanguageNames { get; set; } Property Value Type Description String [] TwoLetterISOLanguageName Gets or sets the name of the two letter ISO language. Declaration public string TwoLetterISOLanguageName { get; } Property Value Type Description String The name of the two letter ISO language. TwoLetterISOLanguageNames Declaration public string[] TwoLetterISOLanguageNames { get; set; } Property Value Type Description String [] Methods ContainsLanguage(ReadOnlySpan<Char>) Declaration public bool ContainsLanguage(ReadOnlySpan<char> language) Parameters Type Name Description ReadOnlySpan < Char > language Returns Type Description Boolean ContainsLanguage(String) Declaration public bool ContainsLanguage(string language) Parameters Type Name Description String language Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Globalization.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Globalization.html",
    "title": "Namespace MediaBrowser.Model.Globalization",
    "keywords": "Namespace MediaBrowser.Model.Globalization Classes CountryInfo Class CountryInfo CountryList CultureDto Class CultureDto LocalizatonOption Interfaces ILocalizationManager Interface ILocalizationManager"
  },
  "reference/pluginapi/MediaBrowser.Model.Globalization.ILocalizationManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Globalization.ILocalizationManager.html",
    "title": "Interface ILocalizationManager",
    "keywords": "Interface ILocalizationManager Interface ILocalizationManager Namespace : MediaBrowser.Model.Globalization Assembly : MediaBrowser.Model.dll Syntax public interface ILocalizationManager Methods FindCountryInfo(ReadOnlySpan<Char>) Declaration CountryInfo FindCountryInfo(ReadOnlySpan<char> country) Parameters Type Name Description ReadOnlySpan < Char > country Returns Type Description CountryInfo FindLanguageInfo(ReadOnlySpan<Char>) Declaration CultureDto FindLanguageInfo(ReadOnlySpan<char> language) Parameters Type Name Description ReadOnlySpan < Char > language Returns Type Description CultureDto FindLanguageInfo(String, String) Declaration CultureDto FindLanguageInfo(string language, string displayName) Parameters Type Name Description String language String displayName Returns Type Description CultureDto GetCountries() Gets the countries. Declaration CountryInfo[] GetCountries() Returns Type Description CountryInfo [] IEnumerable{CountryInfo}. GetCultures() Gets the cultures. Declaration CultureDto[] GetCultures() Returns Type Description CultureDto [] IEnumerable{CultureDto}. GetLocalizationOptions() Gets the localization options. Declaration LocalizatonOption[] GetLocalizationOptions() Returns Type Description LocalizatonOption [] IEnumerable{LocalizatonOption}. GetLocalizedString(String) Gets the localized string. Declaration string GetLocalizedString(string phrase) Parameters Type Name Description String phrase The phrase. Returns Type Description String System.String. GetLocalizedString(String, String) Gets the localized string. Declaration string GetLocalizedString(string phrase, string culture) Parameters Type Name Description String phrase The phrase. String culture The culture. Returns Type Description String System.String. GetParentalRatings() Gets the parental ratings. Declaration ParentalRating[] GetParentalRatings() Returns Type Description ParentalRating [] IEnumerable{ParentalRating}. GetParentalRatings(String) Declaration ParentalRating[] GetParentalRatings(string countryCode) Parameters Type Name Description String countryCode Returns Type Description ParentalRating [] GetRatingLevel(ReadOnlySpan<Char>) Gets the rating level. Declaration int? GetRatingLevel(ReadOnlySpan<char> rating) Parameters Type Name Description ReadOnlySpan < Char > rating The rating. Returns Type Description Nullable < Int32 > System.Int32. RemoveDiacritics(String) Declaration string RemoveDiacritics(string text) Parameters Type Name Description String text Returns Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Globalization.LocalizatonOption.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Globalization.LocalizatonOption.html",
    "title": "Class LocalizatonOption",
    "keywords": "Class LocalizatonOption Inheritance Object LocalizatonOption Namespace : MediaBrowser.Model.Globalization Assembly : MediaBrowser.Model.dll Syntax public class LocalizatonOption Properties Name Declaration public string Name { get; set; } Property Value Type Description String Value Declaration public string Value { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.FileAccessMode.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.FileAccessMode.html",
    "title": "Enum FileAccessMode",
    "keywords": "Enum FileAccessMode Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public enum FileAccessMode Fields Name Description Read Write Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<FileAccessMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.FileOpenMode.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.FileOpenMode.html",
    "title": "Enum FileOpenMode",
    "keywords": "Enum FileOpenMode Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public enum FileOpenMode Fields Name Description Create CreateNew Open OpenOrCreate Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<FileOpenMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.FileOpenOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.FileOpenOptions.html",
    "title": "Enum FileOpenOptions",
    "keywords": "Enum FileOpenOptions Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax [Flags] public enum FileOpenOptions Fields Name Description Asynchronous DeleteOnClose Encrypted None RandomAccess SequentialScan WriteThrough Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<FileOpenOptions>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.FileShareMode.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.FileShareMode.html",
    "title": "Enum FileShareMode",
    "keywords": "Enum FileShareMode Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public enum FileShareMode Fields Name Description None Read ReadWrite Write Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<FileShareMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.FileSystemEntryInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.FileSystemEntryInfo.html",
    "title": "Class FileSystemEntryInfo",
    "keywords": "Class FileSystemEntryInfo Class FileSystemEntryInfo Inheritance Object FileSystemEntryInfo Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public class FileSystemEntryInfo Properties Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Path Gets or sets the path. Declaration public string Path { get; set; } Property Value Type Description String The path. Type Gets or sets the type. Declaration public FileSystemEntryType Type { get; set; } Property Value Type Description FileSystemEntryType The type."
  },
  "reference/pluginapi/MediaBrowser.Model.IO.FileSystemEntryType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.FileSystemEntryType.html",
    "title": "Enum FileSystemEntryType",
    "keywords": "Enum FileSystemEntryType Enum FileSystemEntryType Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public enum FileSystemEntryType Fields Name Description Directory The directory File The file NetworkComputer The network computer NetworkShare The network share Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<FileSystemEntryType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.FileSystemMetadata.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.FileSystemMetadata.html",
    "title": "Class FileSystemMetadata",
    "keywords": "Class FileSystemMetadata Inheritance Object FileSystemMetadata Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public class FileSystemMetadata Properties CreationTimeUtc Gets or sets the creation time UTC. Declaration public DateTimeOffset CreationTimeUtc { get; set; } Property Value Type Description DateTimeOffset The creation time UTC. DirectoryName Gets or sets the name of the directory. Declaration public string DirectoryName { get; set; } Property Value Type Description String The name of the directory. Exists Gets or sets a value indicating whether this FileSystemMetadata is exists. Declaration public bool Exists { get; set; } Property Value Type Description Boolean true if exists; otherwise, false . Extension Gets or sets the extension. Declaration public string Extension { get; set; } Property Value Type Description String The extension. FullName Gets or sets the full name. Declaration public string FullName { get; set; } Property Value Type Description String The full name. IsDirectory Gets a value indicating whether this instance is directory. Declaration public bool IsDirectory { get; set; } Property Value Type Description Boolean true if this instance is directory; otherwise, false . LastWriteTimeUtc Gets or sets the last write time UTC. Declaration public DateTimeOffset LastWriteTimeUtc { get; set; } Property Value Type Description DateTimeOffset The last write time UTC. Length Gets or sets the length. Declaration public long Length { get; set; } Property Value Type Description Int64 The length. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name."
  },
  "reference/pluginapi/MediaBrowser.Model.IO.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.html",
    "title": "Namespace MediaBrowser.Model.IO",
    "keywords": "Namespace MediaBrowser.Model.IO Classes FileSystemEntryInfo Class FileSystemEntryInfo FileSystemMetadata StreamDefaults Class StreamDefaults StreamHandler Interfaces IFileSystem Interface IFileSystem IMediaMount IMediaMounter IMediaMountManager IShortcutHandler IStreamHelper IZipClient Interface IZipClient Enums FileAccessMode FileOpenMode FileOpenOptions FileShareMode FileSystemEntryType Enum FileSystemEntryType"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.IFileSystem.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.IFileSystem.html",
    "title": "Interface IFileSystem",
    "keywords": "Interface IFileSystem Interface IFileSystem Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public interface IFileSystem Properties CommonFolders Returns a list of drives and common folders for convienent folder browsing. Declaration IEnumerable<FileSystemMetadata> CommonFolders { get; } Property Value Type Description IEnumerable < FileSystemMetadata > DefaultDirectory Declaration string DefaultDirectory { get; } Property Value Type Description String DirectorySeparatorChar Declaration char DirectorySeparatorChar { get; } Property Value Type Description Char Methods AreEqual(ReadOnlySpan<Char>, ReadOnlySpan<Char>) Declaration bool AreEqual(ReadOnlySpan<char> path1, ReadOnlySpan<char> path2) Parameters Type Name Description ReadOnlySpan < Char > path1 ReadOnlySpan < Char > path2 Returns Type Description Boolean ContainsSubPath(ReadOnlySpan<Char>, ReadOnlySpan<Char>) Determines whether [contains sub path] [the specified parent path]. Declaration bool ContainsSubPath(ReadOnlySpan<char> parentPath, ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > parentPath The parent path. ReadOnlySpan < Char > path The path. Returns Type Description Boolean true if [contains sub path] [the specified parent path]; otherwise, false . CopyFile(String, String, Boolean) Copies the file. Declaration void CopyFile(string source, string target, bool overwrite) Parameters Type Name Description String source The source. String target The target. Boolean overwrite if set to true [overwrite]. CreateDirectory(String) Creates the directory. Declaration void CreateDirectory(string path) Parameters Type Name Description String path The path. DeleteDirectory(String, Boolean) Deletes the directory. Declaration void DeleteDirectory(string path, bool recursive) Parameters Type Name Description String path The path. Boolean recursive if set to true [recursive]. DeleteDirectory(String, Boolean, Boolean) Declaration void DeleteDirectory(string path, bool recursive, bool sendToRecycleBin) Parameters Type Name Description String path Boolean recursive Boolean sendToRecycleBin DeleteFile(String) Deletes the file. Declaration void DeleteFile(string path) Parameters Type Name Description String path The path. DeleteFile(String, Boolean) Declaration void DeleteFile(string path, bool sendToRecycleBin) Parameters Type Name Description String path Boolean sendToRecycleBin DirectoryExists(String) Directories the exists. Declaration bool DirectoryExists(string path) Parameters Type Name Description String path The path. Returns Type Description Boolean true if XXXX, false otherwise. FileExists(String) Files the exists. Declaration bool FileExists(string path) Parameters Type Name Description String path The path. Returns Type Description Boolean true if XXXX, false otherwise. GetCreationTimeUtc(FileSystemMetadata) Gets the creation time UTC. Declaration DateTimeOffset GetCreationTimeUtc(FileSystemMetadata info) Parameters Type Name Description FileSystemMetadata info The information. Returns Type Description DateTimeOffset DateTime. GetCreationTimeUtc(String) Gets the creation time UTC. Declaration DateTimeOffset GetCreationTimeUtc(string path) Parameters Type Name Description String path The path. Returns Type Description DateTimeOffset DateTime. GetDirectories(String, Boolean) Gets the directories. Declaration IEnumerable<FileSystemMetadata> GetDirectories(string path, bool recursive = false) Parameters Type Name Description String path The path. Boolean recursive if set to true [recursive]. Returns Type Description IEnumerable < FileSystemMetadata > IEnumerable<DirectoryInfo>. GetDirectoryInfo(String) Returns a FileSystemMetadata object for the specified directory path. Declaration FileSystemMetadata GetDirectoryInfo(string path) Parameters Type Name Description String path A path to a directory. Returns Type Description FileSystemMetadata A FileSystemMetadata object. Remarks If the specified path points to a file, the returned FileSystemMetadata object's IsDirectory property will be set to true and the Exists property will be set to false. For automatic handling of files and directories, use GetFileSystemInfo(String) . GetDirectoryName(ReadOnlySpan<Char>) Declaration ReadOnlySpan<char> GetDirectoryName(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path Returns Type Description ReadOnlySpan < Char > GetDirectoryName(String) Declaration string GetDirectoryName(string path) Parameters Type Name Description String path Returns Type Description String GetDirectoryPaths(String, Boolean) Gets the directory paths. Declaration IEnumerable<string> GetDirectoryPaths(string path, bool recursive = false) Parameters Type Name Description String path The path. Boolean recursive if set to true [recursive]. Returns Type Description IEnumerable < String > IEnumerable<System.String>. GetDriveInfo(String) Declaration DriveInfo GetDriveInfo(string path) Parameters Type Name Description String path Returns Type Description DriveInfo GetDrives() Declaration List<FileSystemMetadata> GetDrives() Returns Type Description List < FileSystemMetadata > GetFileInfo(String) Returns a FileSystemMetadata object for the specified file path. Declaration FileSystemMetadata GetFileInfo(string path) Parameters Type Name Description String path A path to a file. Returns Type Description FileSystemMetadata A FileSystemMetadata object. Remarks If the specified path points to a directory, the returned FileSystemMetadata object's IsDirectory property and the Exists property will both be set to false. For automatic handling of files and directories, use GetFileSystemInfo(String) . GetFileNameWithoutExtension(FileSystemMetadata) Gets the file name without extension. Declaration string GetFileNameWithoutExtension(FileSystemMetadata info) Parameters Type Name Description FileSystemMetadata info The information. Returns Type Description String System.String. GetFileNameWithoutExtension(ReadOnlySpan<Char>) Gets the file name without extension. Declaration ReadOnlySpan<char> GetFileNameWithoutExtension(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path The path. Returns Type Description ReadOnlySpan < Char > System.String. GetFileNameWithoutExtension(String) Declaration string GetFileNameWithoutExtension(string path) Parameters Type Name Description String path Returns Type Description String GetFilePaths(String, Boolean) Gets the file paths. Declaration IEnumerable<string> GetFilePaths(string path, bool recursive = false) Parameters Type Name Description String path The path. Boolean recursive if set to true [recursive]. Returns Type Description IEnumerable < String > IEnumerable<System.String>. GetFilePaths(String, String[], Boolean, Boolean) Declaration IEnumerable<string> GetFilePaths(string path, string[] extensions, bool enableCaseSensitiveExtensions, bool recursive) Parameters Type Name Description String path String [] extensions Boolean enableCaseSensitiveExtensions Boolean recursive Returns Type Description IEnumerable < String > GetFiles(String, Boolean) Gets the files. Declaration IEnumerable<FileSystemMetadata> GetFiles(string path, bool recursive = false) Parameters Type Name Description String path Boolean recursive Returns Type Description IEnumerable < FileSystemMetadata > GetFiles(String, String[], Boolean, Boolean) Declaration IEnumerable<FileSystemMetadata> GetFiles(string path, string[] extensions, bool enableCaseSensitiveExtensions, bool recursive) Parameters Type Name Description String path String [] extensions Boolean enableCaseSensitiveExtensions Boolean recursive Returns Type Description IEnumerable < FileSystemMetadata > GetFileStream(String, FileOpenMode, FileAccessMode, FileOpenOptions) Declaration Stream GetFileStream(string path, FileOpenMode mode, FileAccessMode access, FileOpenOptions fileOpenOptions) Parameters Type Name Description String path FileOpenMode mode FileAccessMode access FileOpenOptions fileOpenOptions Returns Type Description Stream GetFileStream(String, FileOpenMode, FileAccessMode, FileOpenOptions, Int64) Declaration Stream GetFileStream(string path, FileOpenMode mode, FileAccessMode access, FileOpenOptions fileOpenOptions, long preAllocationSize) Parameters Type Name Description String path FileOpenMode mode FileAccessMode access FileOpenOptions fileOpenOptions Int64 preAllocationSize Returns Type Description Stream GetFileStream(String, FileOpenMode, FileAccessMode, FileShareMode, FileOpenOptions) Declaration Stream GetFileStream(string path, FileOpenMode mode, FileAccessMode access, FileShareMode share, FileOpenOptions fileOpenOptions) Parameters Type Name Description String path FileOpenMode mode FileAccessMode access FileShareMode share FileOpenOptions fileOpenOptions Returns Type Description Stream GetFileStream(String, FileOpenMode, FileAccessMode, FileShareMode, FileOpenOptions, Int64) Declaration Stream GetFileStream(string path, FileOpenMode mode, FileAccessMode access, FileShareMode share, FileOpenOptions fileOpenOptions, long preAllocationSize) Parameters Type Name Description String path FileOpenMode mode FileAccessMode access FileShareMode share FileOpenOptions fileOpenOptions Int64 preAllocationSize Returns Type Description Stream GetFileStream(String, FileOpenMode, FileAccessMode, FileShareMode, Boolean) Gets the file stream. Declaration Stream GetFileStream(string path, FileOpenMode mode, FileAccessMode access, FileShareMode share, bool isAsync = false) Parameters Type Name Description String path The path. FileOpenMode mode The mode. FileAccessMode access The access. FileShareMode share The share. Boolean isAsync if set to true [is asynchronous]. Returns Type Description Stream FileStream. GetFileStream(String, FileOpenMode, FileAccessMode, FileShareMode, Int32, FileOpenOptions) Declaration Stream GetFileStream(string path, FileOpenMode mode, FileAccessMode access, FileShareMode share, int bufferSize, FileOpenOptions fileOpenOptions) Parameters Type Name Description String path FileOpenMode mode FileAccessMode access FileShareMode share Int32 bufferSize FileOpenOptions fileOpenOptions Returns Type Description Stream GetFileStream(String, FileOpenMode, FileAccessMode, FileShareMode, Int32, FileOpenOptions, Int64) Declaration Stream GetFileStream(string path, FileOpenMode mode, FileAccessMode access, FileShareMode share, int bufferSize, FileOpenOptions fileOpenOptions, long preAllocationSize) Parameters Type Name Description String path FileOpenMode mode FileAccessMode access FileShareMode share Int32 bufferSize FileOpenOptions fileOpenOptions Int64 preAllocationSize Returns Type Description Stream GetFileStream(String, FileOpenMode, FileAccessMode, Boolean) Declaration Stream GetFileStream(string path, FileOpenMode mode, FileAccessMode access, bool isAsync = false) Parameters Type Name Description String path FileOpenMode mode FileAccessMode access Boolean isAsync Returns Type Description Stream GetFileSystemEntries(String, Boolean) Gets the file system entries. Declaration IEnumerable<FileSystemMetadata> GetFileSystemEntries(string path, bool recursive = false) Parameters Type Name Description String path The path. Boolean recursive if set to true [recursive]. Returns Type Description IEnumerable < FileSystemMetadata > IEnumerable<FileSystemMetadata>. GetFileSystemEntryPaths(String, Boolean) Gets the file system entry paths. Declaration IEnumerable<string> GetFileSystemEntryPaths(string path, bool recursive = false) Parameters Type Name Description String path The path. Boolean recursive if set to true [recursive]. Returns Type Description IEnumerable < String > IEnumerable<System.String>. GetFileSystemInfo(String) Returns a FileSystemMetadata object for the specified file or directory path. Declaration FileSystemMetadata GetFileSystemInfo(string path) Parameters Type Name Description String path A path to a file or directory. Returns Type Description FileSystemMetadata A FileSystemMetadata object. Remarks If the specified path points to a directory, the returned FileSystemMetadata object's IsDirectory property will be set to true and all other properties will reflect the properties of the directory. GetFullPath(String) Declaration string GetFullPath(string path) Parameters Type Name Description String path Returns Type Description String GetLastWriteTimeUtc(FileSystemMetadata) Gets the last write time UTC. Declaration DateTimeOffset GetLastWriteTimeUtc(FileSystemMetadata info) Parameters Type Name Description FileSystemMetadata info The information. Returns Type Description DateTimeOffset DateTime. GetLastWriteTimeUtc(String) Gets the last write time UTC. Declaration DateTimeOffset GetLastWriteTimeUtc(string path) Parameters Type Name Description String path The path. Returns Type Description DateTimeOffset DateTime. GetLastWriteTimeUtc(String, Boolean) Declaration DateTimeOffset GetLastWriteTimeUtc(string path, bool fileExists) Parameters Type Name Description String path Boolean fileExists Returns Type Description DateTimeOffset GetValidFilename(String) Gets the valid filename. Declaration string GetValidFilename(string filename) Parameters Type Name Description String filename The filename. Returns Type Description String System.String. IsPathFile(ReadOnlySpan<Char>) Determines whether [is path file] [the specified path]. Declaration bool IsPathFile(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path The path. Returns Type Description Boolean true if [is path file] [the specified path]; otherwise, false . IsRootPath(ReadOnlySpan<Char>) Determines whether [is root path] [the specified path]. Declaration bool IsRootPath(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path The path. Returns Type Description Boolean true if [is root path] [the specified path]; otherwise, false . MakeAbsolutePath(ReadOnlySpan<Char>, ReadOnlySpan<Char>) Declaration ReadOnlySpan<char> MakeAbsolutePath(ReadOnlySpan<char> folderPath, ReadOnlySpan<char> filePath) Parameters Type Name Description ReadOnlySpan < Char > folderPath ReadOnlySpan < Char > filePath Returns Type Description ReadOnlySpan < Char > MoveDirectory(String, String) Moves the directory. Declaration void MoveDirectory(string source, string target) Parameters Type Name Description String source The source. String target The target. MoveFile(String, String) Moves the file. Declaration void MoveFile(string source, string target) Parameters Type Name Description String source The source. String target The target. NormalizePath(ReadOnlySpan<Char>) Normalizes the path. Declaration ReadOnlySpan<char> NormalizePath(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path The path. Returns Type Description ReadOnlySpan < Char > System.String. OpenRead(String) Opens the read. Declaration Stream OpenRead(string path) Parameters Type Name Description String path The path. Returns Type Description Stream Stream. ReadAllBytesAsync(String, CancellationToken) Declaration Task<byte[]> ReadAllBytesAsync(string path, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path CancellationToken cancellationToken Returns Type Description Task < Byte []> ReadAllLines(String) Declaration string[] ReadAllLines(string path) Parameters Type Name Description String path Returns Type Description String [] ReadAllLinesAsync(String, CancellationToken) Declaration Task<string[]> ReadAllLinesAsync(string path, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path CancellationToken cancellationToken Returns Type Description Task < String []> ReadAllText(String) Declaration string ReadAllText(string path) Parameters Type Name Description String path Returns Type Description String ReadAllTextAsync(String, Encoding, CancellationToken) Reads all text. Declaration Task<string> ReadAllTextAsync(string path, Encoding encoding, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path The path. Encoding encoding The encoding. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > System.String. ReadAllTextAsync(String, CancellationToken) Reads all text. Declaration Task<string> ReadAllTextAsync(string path, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path The path. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < String > System.String. SetAttributes(String, Boolean, Boolean) Declaration void SetAttributes(string path, bool isHidden, bool readOnly) Parameters Type Name Description String path Boolean isHidden Boolean readOnly SetExecutable(String) Declaration void SetExecutable(string path) Parameters Type Name Description String path SetHidden(String, Boolean) Declaration void SetHidden(string path, bool isHidden) Parameters Type Name Description String path Boolean isHidden SetLastWriteTimeUtc(String, DateTime) Declaration void SetLastWriteTimeUtc(string path, DateTime lastWriteTimeUtc) Parameters Type Name Description String path DateTime lastWriteTimeUtc SetReadOnly(String, Boolean) Declaration void SetReadOnly(string path, bool readOnly) Parameters Type Name Description String path Boolean readOnly SupportsPathNatively(String) Declaration bool SupportsPathNatively(string path) Parameters Type Name Description String path Returns Type Description Boolean SwapFiles(String, String) Swaps the files. Declaration void SwapFiles(string file1, string file2) Parameters Type Name Description String file1 The file1. String file2 The file2. WriteAllBytes(String, Byte[]) Declaration void WriteAllBytes(string path, byte[] bytes) Parameters Type Name Description String path Byte [] bytes WriteAllBytesAsync(String, Byte[], CancellationToken) Declaration Task WriteAllBytesAsync(string path, byte[] bytes, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path Byte [] bytes CancellationToken cancellationToken Returns Type Description Task WriteAllLines(String, IEnumerable<String>) Declaration void WriteAllLines(string path, IEnumerable<string> lines) Parameters Type Name Description String path IEnumerable < String > lines WriteAllText(String, String) Writes all text. Declaration void WriteAllText(string path, string text) Parameters Type Name Description String path The path. String text The text. WriteAllText(String, String, Encoding) Writes all text. Declaration void WriteAllText(string path, string text, Encoding encoding) Parameters Type Name Description String path The path. String text The text. Encoding encoding The encoding. WriteAllTextAsync(String, String, Encoding, CancellationToken) Declaration Task WriteAllTextAsync(string path, string text, Encoding encoding, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path String text Encoding encoding CancellationToken cancellationToken Returns Type Description Task WriteAllTextAsync(String, String, CancellationToken) Declaration Task WriteAllTextAsync(string path, string text, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description String path String text CancellationToken cancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.IMediaMount.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.IMediaMount.html",
    "title": "Interface IMediaMount",
    "keywords": "Interface IMediaMount Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public interface IMediaMount : IDisposable Properties MountedPath Declaration string MountedPath { get; } Property Value Type Description String MountedProtocol Declaration MediaProtocol MountedProtocol { get; } Property Value Type Description MediaProtocol"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.IMediaMounter.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.IMediaMounter.html",
    "title": "Interface IMediaMounter",
    "keywords": "Interface IMediaMounter Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public interface IMediaMounter : IDisposable Properties Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. Methods CanMount(ReadOnlySpan<Char>, ReadOnlySpan<Char>) Determines whether this instance can mount the specified path. Declaration bool CanMount(ReadOnlySpan<char> mediaPath, ReadOnlySpan<char> container) Parameters Type Name Description ReadOnlySpan < Char > mediaPath The media path. ReadOnlySpan < Char > container The container. Returns Type Description Boolean true if this instance can mount the specified path; otherwise, false . Mount(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, CancellationToken) Mounts the specified media path. Declaration Task<IMediaMount> Mount(ReadOnlyMemory<char> mediaPath, ReadOnlyMemory<char> container, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Char > mediaPath The media path. ReadOnlyMemory < Char > container The container. CancellationToken cancellationToken The cancellation token. Returns Type Description Task < IMediaMount > IMediaMount. Exceptions Type Condition ArgumentNullException mediaPath IOException Unable to create mount."
  },
  "reference/pluginapi/MediaBrowser.Model.IO.IMediaMountManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.IMediaMountManager.html",
    "title": "Interface IMediaMountManager",
    "keywords": "Interface IMediaMountManager Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public interface IMediaMountManager : IDisposable Methods AddParts(IEnumerable<IMediaMounter>) Adds the parts. Declaration void AddParts(IEnumerable<IMediaMounter> mounters) Parameters Type Name Description IEnumerable < IMediaMounter > mounters The mounters. CanMount(ReadOnlySpan<Char>, ReadOnlySpan<Char>) Determines whether this instance can mount the specified path. Declaration bool CanMount(ReadOnlySpan<char> mediaPath, ReadOnlySpan<char> container) Parameters Type Name Description ReadOnlySpan < Char > mediaPath ReadOnlySpan < Char > container Returns Type Description Boolean Mount(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, CancellationToken) Mounts the specified media path. Declaration Task<IMediaMount> Mount(ReadOnlyMemory<char> mediaPath, ReadOnlyMemory<char> container, CancellationToken cancellationToken) Parameters Type Name Description ReadOnlyMemory < Char > mediaPath ReadOnlyMemory < Char > container CancellationToken cancellationToken Returns Type Description Task < IMediaMount >"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.IShortcutHandler.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.IShortcutHandler.html",
    "title": "Interface IShortcutHandler",
    "keywords": "Interface IShortcutHandler Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public interface IShortcutHandler Methods Create(String, String) Creates the specified shortcut path. Declaration void Create(string shortcutPath, string targetPath) Parameters Type Name Description String shortcutPath The shortcut path. String targetPath The target path. GetExtension() Gets the extension. Declaration ReadOnlySpan<char> GetExtension() Returns Type Description ReadOnlySpan < Char > Resolve(ReadOnlySpan<Char>) Resolves the specified shortcut path. Declaration ReadOnlySpan<char> Resolve(ReadOnlySpan<char> shortcutPath) Parameters Type Name Description ReadOnlySpan < Char > shortcutPath The shortcut path. Returns Type Description ReadOnlySpan < Char > System.String."
  },
  "reference/pluginapi/MediaBrowser.Model.IO.IStreamHelper.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.IStreamHelper.html",
    "title": "Interface IStreamHelper",
    "keywords": "Interface IStreamHelper Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public interface IStreamHelper Methods CopyToAsync(Stream, PipeWriter, Int32, Int32, CancellationToken) Declaration Task CopyToAsync(Stream source, PipeWriter writer, int bufferSize, int emptyReadLimit, CancellationToken cancellationToken) Parameters Type Name Description Stream source PipeWriter writer Int32 bufferSize Int32 emptyReadLimit CancellationToken cancellationToken Returns Type Description Task CopyToAsync(Stream, Stream, Int32, Int32, CancellationToken) Declaration Task CopyToAsync(Stream source, Stream writer, int bufferSize, int emptyReadLimit, CancellationToken cancellationToken) Parameters Type Name Description Stream source Stream writer Int32 bufferSize Int32 emptyReadLimit CancellationToken cancellationToken Returns Type Description Task CopyToAsyncWithMaxLength(Stream, PipeWriter, Int64, CancellationToken) Declaration Task CopyToAsyncWithMaxLength(Stream source, PipeWriter writer, long copyLength, CancellationToken cancellationToken) Parameters Type Name Description Stream source PipeWriter writer Int64 copyLength CancellationToken cancellationToken Returns Type Description Task CopyUntilCancelled(Stream, Stream, Int32, CancellationToken) Declaration Task CopyUntilCancelled(Stream source, Stream target, int bufferSize, CancellationToken cancellationToken) Parameters Type Name Description Stream source Stream target Int32 bufferSize CancellationToken cancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.IZipClient.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.IZipClient.html",
    "title": "Interface IZipClient",
    "keywords": "Interface IZipClient Interface IZipClient Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public interface IZipClient Methods ExtractAll(Stream, String, Boolean) Extracts all. Declaration void ExtractAll(Stream source, string targetPath, bool overwriteExistingFiles) Parameters Type Name Description Stream source The source. String targetPath The target path. Boolean overwriteExistingFiles if set to true [overwrite existing files]. ExtractAll(String, String, Boolean) Extracts all. Declaration void ExtractAll(string sourceFile, string targetPath, bool overwriteExistingFiles) Parameters Type Name Description String sourceFile The source file. String targetPath The target path. Boolean overwriteExistingFiles if set to true [overwrite existing files]. ExtractAllFrom7z(Stream, String, Boolean) Extracts all from7z. Declaration void ExtractAllFrom7z(Stream source, string targetPath, bool overwriteExistingFiles) Parameters Type Name Description Stream source The source. String targetPath The target path. Boolean overwriteExistingFiles if set to true [overwrite existing files]. ExtractAllFrom7z(String, String, Boolean) Extracts all from7z. Declaration void ExtractAllFrom7z(string sourceFile, string targetPath, bool overwriteExistingFiles) Parameters Type Name Description String sourceFile The source file. String targetPath The target path. Boolean overwriteExistingFiles if set to true [overwrite existing files]. ExtractAllFromGz(Stream, String, Boolean) Declaration void ExtractAllFromGz(Stream source, string targetPath, bool overwriteExistingFiles) Parameters Type Name Description Stream source String targetPath Boolean overwriteExistingFiles ExtractAllFromTar(Stream, String, Boolean) Extracts all from tar. Declaration void ExtractAllFromTar(Stream source, string targetPath, bool overwriteExistingFiles) Parameters Type Name Description Stream source The source. String targetPath The target path. Boolean overwriteExistingFiles if set to true [overwrite existing files]. ExtractAllFromTar(String, String, Boolean) Extracts all from tar. Declaration void ExtractAllFromTar(string sourceFile, string targetPath, bool overwriteExistingFiles) Parameters Type Name Description String sourceFile The source file. String targetPath The target path. Boolean overwriteExistingFiles if set to true [overwrite existing files]. ExtractAllFromZip(Stream, String, Boolean) Extracts all from zip. Declaration void ExtractAllFromZip(Stream source, string targetPath, bool overwriteExistingFiles) Parameters Type Name Description Stream source The source. String targetPath The target path. Boolean overwriteExistingFiles if set to true [overwrite existing files]. ExtractFirstFileFromGz(Stream, String, String) Declaration void ExtractFirstFileFromGz(Stream source, string targetPath, string defaultFileName) Parameters Type Name Description Stream source String targetPath String defaultFileName"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.StreamDefaults.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.StreamDefaults.html",
    "title": "Class StreamDefaults",
    "keywords": "Class StreamDefaults Class StreamDefaults Inheritance Object StreamDefaults Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public static class StreamDefaults Fields DefaultCopyToBufferSize The default copy to buffer size Declaration public const int DefaultCopyToBufferSize = 81920 Field Value Type Description Int32 DefaultFileStreamBufferSize The default file stream buffer size Declaration public const int DefaultFileStreamBufferSize = 81920 Field Value Type Description Int32"
  },
  "reference/pluginapi/MediaBrowser.Model.IO.StreamHandler.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.IO.StreamHandler.html",
    "title": "Class StreamHandler",
    "keywords": "Class StreamHandler Inheritance Object StreamHandler Implements IDisposable Namespace : MediaBrowser.Model.IO Assembly : MediaBrowser.Model.dll Syntax public class StreamHandler : IDisposable Constructors StreamHandler() Declaration public StreamHandler() Properties Handlers Declaration public IDisposable[] Handlers { get; set; } Property Value Type Description IDisposable [] Length Declaration public long? Length { get; set; } Property Value Type Description Nullable < Int64 > Stream Declaration public Stream Stream { get; set; } Property Value Type Description Stream TotalLength Declaration public long? TotalLength { get; set; } Property Value Type Description Nullable < Int64 > Methods Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "reference/pluginapi/MediaBrowser.Model.Library.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Library.html",
    "title": "Namespace MediaBrowser.Model.Library",
    "keywords": "Namespace MediaBrowser.Model.Library Classes UserViewQuery Enums PlayAccess"
  },
  "reference/pluginapi/MediaBrowser.Model.Library.PlayAccess.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Library.PlayAccess.html",
    "title": "Enum PlayAccess",
    "keywords": "Enum PlayAccess Namespace : MediaBrowser.Model.Library Assembly : MediaBrowser.Model.dll Syntax public enum PlayAccess Fields Name Description Full None Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<PlayAccess>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Library.UserViewQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Library.UserViewQuery.html",
    "title": "Class UserViewQuery",
    "keywords": "Class UserViewQuery Inheritance Object UserViewQuery Namespace : MediaBrowser.Model.Library Assembly : MediaBrowser.Model.dll Syntax public class UserViewQuery Constructors UserViewQuery() Declaration public UserViewQuery() Properties IncludeExternalContent Gets or sets a value indicating whether [include external content]. Declaration public bool IncludeExternalContent { get; set; } Property Value Type Description Boolean true if [include external content]; otherwise, false . IncludeHidden Gets or sets a value indicating whether [include hidden]. Declaration public bool IncludeHidden { get; set; } Property Value Type Description Boolean true if [include hidden]; otherwise, false . IncludeLiveTVView Declaration public bool IncludeLiveTVView { get; set; } Property Value Type Description Boolean UserId Gets or sets the user identifier. Declaration public long UserId { get; set; } Property Value Type Description Int64 The user identifier."
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.BaseTimerInfoDto.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.BaseTimerInfoDto.html",
    "title": "Class BaseTimerInfoDto",
    "keywords": "Class BaseTimerInfoDto Inheritance Object BaseTimerInfoDto SeriesTimerInfoDto TimerInfoDto Implements IHasServerId Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class BaseTimerInfoDto : IHasServerId Properties ChannelId ChannelId of the recording. Declaration public string ChannelId { get; set; } Property Value Type Description String ChannelName ChannelName of the recording. Declaration public string ChannelName { get; set; } Property Value Type Description String ChannelPrimaryImageTag Declaration public string ChannelPrimaryImageTag { get; set; } Property Value Type Description String EndDate The end date of the recording, in UTC. Declaration public DateTimeOffset EndDate { get; set; } Property Value Type Description DateTimeOffset Id Id of the recording. Declaration public string Id { get; set; } Property Value Type Description String IsPostPaddingRequired Gets or sets a value indicating whether this instance is post padding required. Declaration public bool IsPostPaddingRequired { get; set; } Property Value Type Description Boolean true if this instance is post padding required; otherwise, false . IsPrePaddingRequired Gets or sets a value indicating whether this instance is pre padding required. Declaration public bool IsPrePaddingRequired { get; set; } Property Value Type Description Boolean true if this instance is pre padding required; otherwise, false . KeepUntil Declaration public KeepUntil KeepUntil { get; set; } Property Value Type Description KeepUntil Name Name of the recording. Declaration public string Name { get; set; } Property Value Type Description String Overview Description of the recording. Declaration public string Overview { get; set; } Property Value Type Description String ParentBackdropImageTags Gets or sets the parent backdrop image tags. Declaration public string[] ParentBackdropImageTags { get; set; } Property Value Type Description String [] The parent backdrop image tags. ParentBackdropItemId If the item does not have any backdrops, this will hold the Id of the Parent that has one. Declaration public string ParentBackdropItemId { get; set; } Property Value Type Description String The parent backdrop item id. PostPaddingSeconds Gets or sets the post padding seconds. Declaration public int PostPaddingSeconds { get; set; } Property Value Type Description Int32 The post padding seconds. PrePaddingSeconds Gets or sets the pre padding seconds. Declaration public int PrePaddingSeconds { get; set; } Property Value Type Description Int32 The pre padding seconds. Priority Gets or sets the priority. Declaration public int Priority { get; set; } Property Value Type Description Int32 The priority. ProgramId Gets or sets the program identifier. Declaration public string ProgramId { get; set; } Property Value Type Description String The program identifier. ServerId Gets or sets the server identifier. Declaration public string ServerId { get; set; } Property Value Type Description String The server identifier. StartDate The start date of the recording, in UTC. Declaration public DateTimeOffset StartDate { get; set; } Property Value Type Description DateTimeOffset Type Declaration public string Type { get; set; } Property Value Type Description String Implements IHasServerId"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.ChannelOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.ChannelOptions.html",
    "title": "Class ChannelOptions",
    "keywords": "Class ChannelOptions Inheritance Object ChannelOptions Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class ChannelOptions Properties Disabled Declaration public bool Disabled { get; set; } Property Value Type Description Boolean Id Declaration public string Id { get; set; } Property Value Type Description String ListingsChannelId Declaration public string ListingsChannelId { get; set; } Property Value Type Description String ListingsProviderId Declaration public string ListingsProviderId { get; set; } Property Value Type Description String SortIndexNumber Declaration public int SortIndexNumber { get; set; } Property Value Type Description Int32"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.ChannelType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.ChannelType.html",
    "title": "Enum ChannelType",
    "keywords": "Enum ChannelType Enum ChannelType Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public enum ChannelType Fields Name Description Radio The radio TV The TV Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ChannelType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.GuideInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.GuideInfo.html",
    "title": "Class GuideInfo",
    "keywords": "Class GuideInfo Inheritance Object GuideInfo Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class GuideInfo Properties EndDate Gets or sets the end date. Declaration public DateTimeOffset EndDate { get; set; } Property Value Type Description DateTimeOffset The end date. StartDate Gets or sets the start date. Declaration public DateTimeOffset StartDate { get; set; } Property Value Type Description DateTimeOffset The start date."
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.html",
    "title": "Namespace MediaBrowser.Model.LiveTv",
    "keywords": "Namespace MediaBrowser.Model.LiveTv Classes BaseTimerInfoDto ChannelOptions GuideInfo KeywordInfo ListingsProviderInfo LiveTvInfo LiveTvOptions LiveTvServiceInfo Class ServiceInfo SeriesTimerInfoDto Class SeriesTimerInfoDto. SeriesTimerQuery TimerInfoDto TimerQuery TunerHostInfo Enums ChannelType Enum ChannelType KeepUntil KeywordType LiveTvServiceStatus LiveTvTunerStatus ProgramAudio RecordingStatus TimerType"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.KeepUntil.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.KeepUntil.html",
    "title": "Enum KeepUntil",
    "keywords": "Enum KeepUntil Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public enum KeepUntil Fields Name Description UntilDate UntilDeleted UntilSpaceNeeded UntilWatched Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<KeepUntil>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.KeywordInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.KeywordInfo.html",
    "title": "Class KeywordInfo",
    "keywords": "Class KeywordInfo Inheritance Object KeywordInfo Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class KeywordInfo Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description String KeywordType Declaration public KeywordType KeywordType { get; set; } Property Value Type Description KeywordType"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.KeywordType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.KeywordType.html",
    "title": "Enum KeywordType",
    "keywords": "Enum KeywordType Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public enum KeywordType Fields Name Description Actor Director EpisodeTitle Name Overview Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<KeywordType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.ListingsProviderInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.ListingsProviderInfo.html",
    "title": "Class ListingsProviderInfo",
    "keywords": "Class ListingsProviderInfo Inheritance Object ListingsProviderInfo Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class ListingsProviderInfo Constructors ListingsProviderInfo() Declaration public ListingsProviderInfo() Properties ChannelMappings Declaration public NameValuePair[] ChannelMappings { get; set; } Property Value Type Description NameValuePair [] Country Declaration public string Country { get; set; } Property Value Type Description String DataVersion Declaration public string DataVersion { get; set; } Property Value Type Description String EnableAllTuners Declaration public bool EnableAllTuners { get; set; } Property Value Type Description Boolean EnabledTuners Declaration public string[] EnabledTuners { get; set; } Property Value Type Description String [] Id Declaration public string Id { get; set; } Property Value Type Description String KidsCategories Declaration public string[] KidsCategories { get; set; } Property Value Type Description String [] ListingsId Declaration public string ListingsId { get; set; } Property Value Type Description String MovieCategories Declaration public string[] MovieCategories { get; set; } Property Value Type Description String [] MoviePrefix Declaration public string MoviePrefix { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String NewsCategories Declaration public string[] NewsCategories { get; set; } Property Value Type Description String [] Password Declaration public string Password { get; set; } Property Value Type Description String Path Declaration public string Path { get; set; } Property Value Type Description String PreferredLanguage Declaration public string PreferredLanguage { get; set; } Property Value Type Description String SetupUrl Declaration public string SetupUrl { get; set; } Property Value Type Description String SportsCategories Declaration public string[] SportsCategories { get; set; } Property Value Type Description String [] Type Declaration public string Type { get; set; } Property Value Type Description String UserAgent Declaration public string UserAgent { get; set; } Property Value Type Description String Username Declaration public string Username { get; set; } Property Value Type Description String ZipCode Declaration public string ZipCode { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.LiveTvInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.LiveTvInfo.html",
    "title": "Class LiveTvInfo",
    "keywords": "Class LiveTvInfo Inheritance Object LiveTvInfo Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class LiveTvInfo Properties EnabledUsers Gets or sets the enabled users. Declaration public string[] EnabledUsers { get; set; } Property Value Type Description String [] The enabled users. IsEnabled Gets or sets a value indicating whether this instance is enabled. Declaration public bool IsEnabled { get; set; } Property Value Type Description Boolean true if this instance is enabled; otherwise, false ."
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.LiveTvOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.LiveTvOptions.html",
    "title": "Class LiveTvOptions",
    "keywords": "Class LiveTvOptions Inheritance Object LiveTvOptions Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class LiveTvOptions Properties ChannelOptions Declaration public ChannelOptions[] ChannelOptions { get; set; } Property Value Type Description ChannelOptions [] EnableOriginalAudioWithEncodedRecordings Declaration public bool EnableOriginalAudioWithEncodedRecordings { get; set; } Property Value Type Description Boolean EnableRecordingSubfolders Declaration public bool EnableRecordingSubfolders { get; set; } Property Value Type Description Boolean GuideDays Declaration public int? GuideDays { get; set; } Property Value Type Description Nullable < Int32 > ListingProviders Declaration public ListingsProviderInfo[] ListingProviders { get; set; } Property Value Type Description ListingsProviderInfo [] MediaLocationsCreated Declaration public string[] MediaLocationsCreated { get; set; } Property Value Type Description String [] MovieRecordingPath Declaration public string MovieRecordingPath { get; set; } Property Value Type Description String PostPaddingSeconds Declaration public int PostPaddingSeconds { get; set; } Property Value Type Description Int32 PrePaddingSeconds Declaration public int PrePaddingSeconds { get; set; } Property Value Type Description Int32 RecordingPath Declaration public string RecordingPath { get; set; } Property Value Type Description String RecordingPostProcessor Declaration public string RecordingPostProcessor { get; set; } Property Value Type Description String RecordingPostProcessorArguments Declaration public string RecordingPostProcessorArguments { get; set; } Property Value Type Description String SeriesRecordingPath Declaration public string SeriesRecordingPath { get; set; } Property Value Type Description String TunerHosts Declaration public TunerHostInfo[] TunerHosts { get; set; } Property Value Type Description TunerHostInfo [] WakeServer Declaration public bool WakeServer { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.LiveTvServiceInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.LiveTvServiceInfo.html",
    "title": "Class LiveTvServiceInfo",
    "keywords": "Class LiveTvServiceInfo Class ServiceInfo Inheritance Object LiveTvServiceInfo Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class LiveTvServiceInfo Constructors LiveTvServiceInfo() Declaration public LiveTvServiceInfo() Properties HasUpdateAvailable Gets or sets a value indicating whether this instance has update available. Declaration public bool HasUpdateAvailable { get; set; } Property Value Type Description Boolean true if this instance has update available; otherwise, false . HomePageUrl Gets or sets the home page URL. Declaration public string HomePageUrl { get; set; } Property Value Type Description String The home page URL. IsVisible Gets or sets a value indicating whether this instance is visible. Declaration public bool IsVisible { get; set; } Property Value Type Description Boolean true if this instance is visible; otherwise, false . Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Status Gets or sets the status. Declaration public LiveTvServiceStatus Status { get; set; } Property Value Type Description LiveTvServiceStatus The status. StatusMessage Gets or sets the status message. Declaration public string StatusMessage { get; set; } Property Value Type Description String The status message. Tuners Declaration public string[] Tuners { get; set; } Property Value Type Description String [] Version Gets or sets the version. Declaration public string Version { get; set; } Property Value Type Description String The version."
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.LiveTvServiceStatus.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.LiveTvServiceStatus.html",
    "title": "Enum LiveTvServiceStatus",
    "keywords": "Enum LiveTvServiceStatus Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public enum LiveTvServiceStatus Fields Name Description Ok Unavailable Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<LiveTvServiceStatus>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.LiveTvTunerStatus.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.LiveTvTunerStatus.html",
    "title": "Enum LiveTvTunerStatus",
    "keywords": "Enum LiveTvTunerStatus Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public enum LiveTvTunerStatus Fields Name Description Available Disabled LiveTv RecordingTv Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<LiveTvTunerStatus>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.ProgramAudio.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.ProgramAudio.html",
    "title": "Enum ProgramAudio",
    "keywords": "Enum ProgramAudio Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public enum ProgramAudio Fields Name Description Atmos Dolby DolbyDigital Mono Stereo Thx Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ProgramAudio>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.RecordingStatus.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.RecordingStatus.html",
    "title": "Enum RecordingStatus",
    "keywords": "Enum RecordingStatus Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public enum RecordingStatus Fields Name Description Cancelled Completed ConflictedNotOk ConflictedOk Error InProgress New Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<RecordingStatus>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.SeriesTimerInfoDto.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.SeriesTimerInfoDto.html",
    "title": "Class SeriesTimerInfoDto",
    "keywords": "Class SeriesTimerInfoDto Class SeriesTimerInfoDto. Inheritance Object BaseTimerInfoDto SeriesTimerInfoDto Implements IHasServerId Inherited Members BaseTimerInfoDto.Id BaseTimerInfoDto.Type BaseTimerInfoDto.ServerId BaseTimerInfoDto.ChannelId BaseTimerInfoDto.ChannelName BaseTimerInfoDto.ChannelPrimaryImageTag BaseTimerInfoDto.ProgramId BaseTimerInfoDto.Name BaseTimerInfoDto.Overview BaseTimerInfoDto.StartDate BaseTimerInfoDto.EndDate BaseTimerInfoDto.Priority BaseTimerInfoDto.PrePaddingSeconds BaseTimerInfoDto.PostPaddingSeconds BaseTimerInfoDto.IsPrePaddingRequired BaseTimerInfoDto.ParentBackdropItemId BaseTimerInfoDto.ParentBackdropImageTags BaseTimerInfoDto.IsPostPaddingRequired BaseTimerInfoDto.KeepUntil Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class SeriesTimerInfoDto : BaseTimerInfoDto, IHasServerId Constructors SeriesTimerInfoDto() Declaration public SeriesTimerInfoDto() Properties ChannelIds Declaration public string[] ChannelIds { get; set; } Property Value Type Description String [] Days Gets or sets the days. Declaration public DayOfWeek[] Days { get; set; } Property Value Type Description DayOfWeek [] The days. ImageTags Gets or sets the image tags. Declaration public Dictionary<ImageType, string> ImageTags { get; set; } Property Value Type Description Dictionary < ImageType , String > The image tags. KeepUpTo Declaration public int KeepUpTo { get; set; } Property Value Type Description Int32 Keywords Declaration public KeywordInfo[] Keywords { get; set; } Property Value Type Description KeywordInfo [] MaxRecordingSeconds Declaration public int MaxRecordingSeconds { get; set; } Property Value Type Description Int32 ParentPrimaryImageItemId Gets or sets the parent primary image item identifier. Declaration public string ParentPrimaryImageItemId { get; set; } Property Value Type Description String The parent primary image item identifier. ParentPrimaryImageTag Gets or sets the parent primary image tag. Declaration public string ParentPrimaryImageTag { get; set; } Property Value Type Description String The parent primary image tag. ParentThumbImageTag Gets or sets the parent thumb image tag. Declaration public string ParentThumbImageTag { get; set; } Property Value Type Description String The parent thumb image tag. ParentThumbItemId Gets or sets the parent thumb item id. Declaration public string ParentThumbItemId { get; set; } Property Value Type Description String The parent thumb item id. RecordAnyChannel Gets or sets a value indicating whether [record any channel]. Declaration public bool RecordAnyChannel { get; set; } Property Value Type Description Boolean true if [record any channel]; otherwise, false . RecordAnyTime Gets or sets a value indicating whether [record any time]. Declaration public bool RecordAnyTime { get; set; } Property Value Type Description Boolean true if [record any time]; otherwise, false . RecordNewOnly Gets or sets a value indicating whether [record new only]. Declaration public bool RecordNewOnly { get; set; } Property Value Type Description Boolean true if [record new only]; otherwise, false . SeriesId Declaration public string SeriesId { get; set; } Property Value Type Description String SkipEpisodesInLibrary Declaration public bool SkipEpisodesInLibrary { get; set; } Property Value Type Description Boolean TimerType Declaration public TimerType TimerType { get; } Property Value Type Description TimerType Implements IHasServerId"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.SeriesTimerQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.SeriesTimerQuery.html",
    "title": "Class SeriesTimerQuery",
    "keywords": "Class SeriesTimerQuery Inheritance Object SeriesTimerQuery Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class SeriesTimerQuery Properties Limit Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > SortBy Gets or sets the sort by - SortName, Priority Declaration public string SortBy { get; set; } Property Value Type Description String The sort by. SortOrder Gets or sets the sort order. Declaration public SortOrder SortOrder { get; set; } Property Value Type Description SortOrder The sort order. StartIndex Declaration public int StartIndex { get; set; } Property Value Type Description Int32"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.TimerInfoDto.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.TimerInfoDto.html",
    "title": "Class TimerInfoDto",
    "keywords": "Class TimerInfoDto Inheritance Object BaseTimerInfoDto TimerInfoDto Implements IHasServerId Inherited Members BaseTimerInfoDto.Id BaseTimerInfoDto.Type BaseTimerInfoDto.ServerId BaseTimerInfoDto.ChannelId BaseTimerInfoDto.ChannelName BaseTimerInfoDto.ChannelPrimaryImageTag BaseTimerInfoDto.ProgramId BaseTimerInfoDto.Name BaseTimerInfoDto.Overview BaseTimerInfoDto.StartDate BaseTimerInfoDto.EndDate BaseTimerInfoDto.Priority BaseTimerInfoDto.PrePaddingSeconds BaseTimerInfoDto.PostPaddingSeconds BaseTimerInfoDto.IsPrePaddingRequired BaseTimerInfoDto.ParentBackdropItemId BaseTimerInfoDto.ParentBackdropImageTags BaseTimerInfoDto.IsPostPaddingRequired BaseTimerInfoDto.KeepUntil Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class TimerInfoDto : BaseTimerInfoDto, IHasServerId Constructors TimerInfoDto() Declaration public TimerInfoDto() Properties ProgramInfo Gets or sets the program information. Declaration public BaseItemDto ProgramInfo { get; set; } Property Value Type Description BaseItemDto The program information. RunTimeTicks Gets or sets the run time ticks. Declaration public long? RunTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > The run time ticks. SeriesTimerId Gets or sets the series timer identifier. Declaration public string SeriesTimerId { get; set; } Property Value Type Description String The series timer identifier. Status Gets or sets the status. Declaration public RecordingStatus Status { get; set; } Property Value Type Description RecordingStatus The status. TimerType Declaration public TimerType TimerType { get; } Property Value Type Description TimerType Implements IHasServerId"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.TimerQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.TimerQuery.html",
    "title": "Class TimerQuery",
    "keywords": "Class TimerQuery Inheritance Object TimerQuery Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class TimerQuery Properties ChannelId Gets or sets the channel identifier. Declaration public string ChannelId { get; set; } Property Value Type Description String The channel identifier. Id Declaration public string Id { get; set; } Property Value Type Description String IsActive Declaration public bool? IsActive { get; set; } Property Value Type Description Nullable < Boolean > IsScheduled Declaration public bool? IsScheduled { get; set; } Property Value Type Description Nullable < Boolean > SeriesTimerId Gets or sets the series timer identifier. Declaration public string SeriesTimerId { get; set; } Property Value Type Description String The series timer identifier."
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.TimerType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.TimerType.html",
    "title": "Enum TimerType",
    "keywords": "Enum TimerType Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public enum TimerType Fields Name Description DateTime Keyword Program Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<TimerType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.LiveTv.TunerHostInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.LiveTv.TunerHostInfo.html",
    "title": "Class TunerHostInfo",
    "keywords": "Class TunerHostInfo Inheritance Object TunerHostInfo Namespace : MediaBrowser.Model.LiveTv Assembly : MediaBrowser.Model.dll Syntax public class TunerHostInfo Properties AllowHWTranscoding Declaration public bool AllowHWTranscoding { get; set; } Property Value Type Description Boolean DataVersion Declaration public int DataVersion { get; set; } Property Value Type Description Int32 DeviceId Declaration public string DeviceId { get; set; } Property Value Type Description String FriendlyName Declaration public string FriendlyName { get; set; } Property Value Type Description String Id Declaration public string Id { get; set; } Property Value Type Description String ImportFavoritesOnly Declaration public bool ImportFavoritesOnly { get; set; } Property Value Type Description Boolean ProviderOptions Declaration public string ProviderOptions { get; set; } Property Value Type Description String Referrer Declaration public string Referrer { get; set; } Property Value Type Description String SetupUrl Declaration public string SetupUrl { get; set; } Property Value Type Description String Source Declaration public string Source { get; set; } Property Value Type Description String TunerCount Declaration public int TunerCount { get; set; } Property Value Type Description Int32 Type Declaration public string Type { get; set; } Property Value Type Description String Url Declaration public string Url { get; set; } Property Value Type Description String UserAgent Declaration public string UserAgent { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Logging.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Logging.html",
    "title": "Namespace MediaBrowser.Model.Logging",
    "keywords": "Namespace MediaBrowser.Model.Logging Classes LogHelper Class LogHelper NullLogger Interfaces IConsoleLogger ILogger Interface ILogger ILogManager Interface ILogManager Enums LogSeverity Enum LogSeverity"
  },
  "reference/pluginapi/MediaBrowser.Model.Logging.IConsoleLogger.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Logging.IConsoleLogger.html",
    "title": "Interface IConsoleLogger",
    "keywords": "Interface IConsoleLogger Namespace : MediaBrowser.Model.Logging Assembly : MediaBrowser.Model.dll Syntax public interface IConsoleLogger Methods WriteLine(String) Declaration void WriteLine(string message) Parameters Type Name Description String message"
  },
  "reference/pluginapi/MediaBrowser.Model.Logging.ILogger.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Logging.ILogger.html",
    "title": "Interface ILogger",
    "keywords": "Interface ILogger Interface ILogger Namespace : MediaBrowser.Model.Logging Assembly : MediaBrowser.Model.dll Syntax public interface ILogger Methods Debug(ReadOnlyMemory<Char>) Declaration void Debug(ReadOnlyMemory<char> message) Parameters Type Name Description ReadOnlyMemory < Char > message Debug(String, Object[]) Debugs the specified message. Declaration void Debug(string message, params object[] paramList) Parameters Type Name Description String message The message. Object [] paramList The param list. Error(ReadOnlyMemory<Char>) Declaration void Error(ReadOnlyMemory<char> message) Parameters Type Name Description ReadOnlyMemory < Char > message Error(String, Object[]) Errors the specified message. Declaration void Error(string message, params object[] paramList) Parameters Type Name Description String message The message. Object [] paramList The param list. ErrorException(String, Exception, Object[]) Logs the exception. Declaration void ErrorException(string message, Exception exception, params object[] paramList) Parameters Type Name Description String message The message. Exception exception The exception. Object [] paramList The param list. Fatal(String, Object[]) Fatals the specified message. Declaration void Fatal(string message, params object[] paramList) Parameters Type Name Description String message The message. Object [] paramList The param list. FatalException(String, Exception, Object[]) Fatals the exception. Declaration void FatalException(string message, Exception exception, params object[] paramList) Parameters Type Name Description String message The message. Exception exception The exception. Object [] paramList The param list. Info(ReadOnlyMemory<Char>) Declaration void Info(ReadOnlyMemory<char> message) Parameters Type Name Description ReadOnlyMemory < Char > message Info(String, Object[]) Infoes the specified message. Declaration void Info(string message, params object[] paramList) Parameters Type Name Description String message The message. Object [] paramList The param list. Log(LogSeverity, ReadOnlyMemory<Char>) Declaration void Log(LogSeverity severity, ReadOnlyMemory<char> message) Parameters Type Name Description LogSeverity severity ReadOnlyMemory < Char > message Log(LogSeverity, String, Object[]) Logs the specified severity. Declaration void Log(LogSeverity severity, string message, params object[] paramList) Parameters Type Name Description LogSeverity severity The severity. String message The message. Object [] paramList The parameter list. LogMultiline(String, LogSeverity, StringBuilder) Logs the multiline. Declaration void LogMultiline(string message, LogSeverity severity, StringBuilder additionalContent) Parameters Type Name Description String message The message. LogSeverity severity The severity. StringBuilder additionalContent Content of the additional. Warn(ReadOnlyMemory<Char>) Declaration void Warn(ReadOnlyMemory<char> message) Parameters Type Name Description ReadOnlyMemory < Char > message Warn(String, Object[]) Warns the specified message. Declaration void Warn(string message, params object[] paramList) Parameters Type Name Description String message The message. Object [] paramList The param list."
  },
  "reference/pluginapi/MediaBrowser.Model.Logging.ILogManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Logging.ILogManager.html",
    "title": "Interface ILogManager",
    "keywords": "Interface ILogManager Interface ILogManager Namespace : MediaBrowser.Model.Logging Assembly : MediaBrowser.Model.dll Syntax public interface ILogManager Properties ExceptionMessagePrefix Gets or sets the exception message prefix. Declaration string ExceptionMessagePrefix { get; set; } Property Value Type Description String The exception message prefix. LogSeverity Gets or sets the log level. Declaration LogSeverity LogSeverity { get; set; } Property Value Type Description LogSeverity The log level. Methods AddConsoleOutput() Adds the console output. Declaration void AddConsoleOutput() Flush() Flushes this instance. Declaration void Flush() GetLogger(String) Gets the logger. Declaration ILogger GetLogger(string name) Parameters Type Name Description String name The name. Returns Type Description ILogger ILogger. ReloadLogger(LogSeverity, CancellationToken) Reloads the logger. Declaration Task ReloadLogger(LogSeverity severity, CancellationToken cancellationToken) Parameters Type Name Description LogSeverity severity CancellationToken cancellationToken Returns Type Description Task RemoveConsoleOutput() Removes the console output. Declaration void RemoveConsoleOutput() Events LoggerLoaded Occurs when [logger loaded]. Declaration event EventHandler LoggerLoaded Event Type Type Description EventHandler"
  },
  "reference/pluginapi/MediaBrowser.Model.Logging.LogHelper.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Logging.LogHelper.html",
    "title": "Class LogHelper",
    "keywords": "Class LogHelper Class LogHelper Inheritance Object LogHelper Namespace : MediaBrowser.Model.Logging Assembly : MediaBrowser.Model.dll Syntax public static class LogHelper Methods GetLogMessage(Exception) Gets the log message. Declaration public static StringBuilder GetLogMessage(Exception exception) Parameters Type Name Description Exception exception The exception. Returns Type Description StringBuilder StringBuilder."
  },
  "reference/pluginapi/MediaBrowser.Model.Logging.LogSeverity.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Logging.LogSeverity.html",
    "title": "Enum LogSeverity",
    "keywords": "Enum LogSeverity Enum LogSeverity Namespace : MediaBrowser.Model.Logging Assembly : MediaBrowser.Model.dll Syntax public enum LogSeverity Fields Name Description Debug The debug Error The error Fatal The fatal Info The info Warn The warn Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<LogSeverity>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Logging.NullLogger.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Logging.NullLogger.html",
    "title": "Class NullLogger",
    "keywords": "Class NullLogger Inheritance Object NullLogger Implements ILogger Namespace : MediaBrowser.Model.Logging Assembly : MediaBrowser.Model.dll Syntax public class NullLogger : ILogger Methods Debug(ReadOnlyMemory<Char>) Declaration public void Debug(ReadOnlyMemory<char> message) Parameters Type Name Description ReadOnlyMemory < Char > message Debug(String, Object[]) Declaration public void Debug(string message, params object[] paramList) Parameters Type Name Description String message Object [] paramList Error(ReadOnlyMemory<Char>) Declaration public void Error(ReadOnlyMemory<char> message) Parameters Type Name Description ReadOnlyMemory < Char > message Error(String, Object[]) Declaration public void Error(string message, params object[] paramList) Parameters Type Name Description String message Object [] paramList ErrorException(String, Exception, Object[]) Declaration public void ErrorException(string message, Exception exception, params object[] paramList) Parameters Type Name Description String message Exception exception Object [] paramList Fatal(String, Object[]) Declaration public void Fatal(string message, params object[] paramList) Parameters Type Name Description String message Object [] paramList FatalException(String, Exception, Object[]) Declaration public void FatalException(string message, Exception exception, params object[] paramList) Parameters Type Name Description String message Exception exception Object [] paramList Info(ReadOnlyMemory<Char>) Declaration public void Info(ReadOnlyMemory<char> message) Parameters Type Name Description ReadOnlyMemory < Char > message Info(String, Object[]) Declaration public void Info(string message, params object[] paramList) Parameters Type Name Description String message Object [] paramList Log(LogSeverity, ReadOnlyMemory<Char>) Declaration public void Log(LogSeverity severity, ReadOnlyMemory<char> message) Parameters Type Name Description LogSeverity severity ReadOnlyMemory < Char > message Log(LogSeverity, String, Object[]) Declaration public void Log(LogSeverity severity, string message, params object[] paramList) Parameters Type Name Description LogSeverity severity String message Object [] paramList LogMultiline(String, LogSeverity, StringBuilder) Declaration public void LogMultiline(string message, LogSeverity severity, StringBuilder additionalContent) Parameters Type Name Description String message LogSeverity severity StringBuilder additionalContent Warn(ReadOnlyMemory<Char>) Declaration public void Warn(ReadOnlyMemory<char> message) Parameters Type Name Description ReadOnlyMemory < Char > message Warn(String, Object[]) Declaration public void Warn(string message, params object[] paramList) Parameters Type Name Description String message Object [] paramList Implements ILogger"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.AudioCodec.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.AudioCodec.html",
    "title": "Class AudioCodec",
    "keywords": "Class AudioCodec Inheritance Object AudioCodec Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public class AudioCodec Fields Aac Declaration public static ReadOnlyMemory<char> Aac Field Value Type Description ReadOnlyMemory < Char > Ac3 Declaration public static ReadOnlyMemory<char> Ac3 Field Value Type Description ReadOnlyMemory < Char > Amrnb Declaration public static ReadOnlyMemory<char> Amrnb Field Value Type Description ReadOnlyMemory < Char > Dts Declaration public static ReadOnlyMemory<char> Dts Field Value Type Description ReadOnlyMemory < Char > Lpcm Declaration public static ReadOnlyMemory<char> Lpcm Field Value Type Description ReadOnlyMemory < Char > Mp2 Declaration public static ReadOnlyMemory<char> Mp2 Field Value Type Description ReadOnlyMemory < Char > Mp3 Declaration public static ReadOnlyMemory<char> Mp3 Field Value Type Description ReadOnlyMemory < Char > Opus Declaration public static ReadOnlyMemory<char> Opus Field Value Type Description ReadOnlyMemory < Char > Wma Declaration public static ReadOnlyMemory<char> Wma Field Value Type Description ReadOnlyMemory < Char > WmaPro Declaration public static ReadOnlyMemory<char> WmaPro Field Value Type Description ReadOnlyMemory < Char >"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.Container.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.Container.html",
    "title": "Class Container",
    "keywords": "Class Container Inheritance Object Container Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public class Container Fields MKV Declaration public const string MKV = \"mkv\" Field Value Type Description String MP4 Declaration public const string MP4 = \"mp4\" Field Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.html",
    "title": "Namespace MediaBrowser.Model.MediaInfo",
    "keywords": "Namespace MediaBrowser.Model.MediaInfo Classes AudioCodec Container LiveStreamRequest LiveStreamResponse MediaInfo PlaybackInfoRequest PlaybackInfoResponse SubtitleCodec SubtitleTrackEvent SubtitleTrackInfo VideoCodec Enums MediaProtocol TransportStreamTimestamp"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.LiveStreamRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.LiveStreamRequest.html",
    "title": "Class LiveStreamRequest",
    "keywords": "Class LiveStreamRequest Inheritance Object LiveStreamRequest Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public class LiveStreamRequest Constructors LiveStreamRequest() Declaration public LiveStreamRequest() LiveStreamRequest(AudioOptions) Declaration public LiveStreamRequest(AudioOptions options) Parameters Type Name Description AudioOptions options Properties AllowAudioStreamCopy Declaration public bool AllowAudioStreamCopy { get; set; } Property Value Type Description Boolean AllowInterlacedVideoStreamCopy Declaration public bool AllowInterlacedVideoStreamCopy { get; set; } Property Value Type Description Boolean AllowVideoStreamCopy Declaration public bool AllowVideoStreamCopy { get; set; } Property Value Type Description Boolean AudioStreamIndex Declaration public int? AudioStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > DeviceProfile Declaration public DeviceProfile DeviceProfile { get; set; } Property Value Type Description DeviceProfile DirectPlayProtocols Declaration public MediaProtocol[] DirectPlayProtocols { get; set; } Property Value Type Description MediaProtocol [] EnableDirectPlay Declaration public bool EnableDirectPlay { get; set; } Property Value Type Description Boolean EnableDirectStream Declaration public bool EnableDirectStream { get; set; } Property Value Type Description Boolean EnableTranscoding Declaration public bool EnableTranscoding { get; set; } Property Value Type Description Boolean ItemId Declaration public long ItemId { get; set; } Property Value Type Description Int64 MaxAudioChannels Declaration public int? MaxAudioChannels { get; set; } Property Value Type Description Nullable < Int32 > MaxStreamingBitrate Declaration public long? MaxStreamingBitrate { get; set; } Property Value Type Description Nullable < Int64 > OpenToken Declaration public string OpenToken { get; set; } Property Value Type Description String PlaySessionId Declaration public string PlaySessionId { get; set; } Property Value Type Description String StartTimeTicks Declaration public long? StartTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > SubtitleStreamIndex Declaration public int? SubtitleStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > UserId Declaration public string UserId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.LiveStreamResponse.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.LiveStreamResponse.html",
    "title": "Class LiveStreamResponse",
    "keywords": "Class LiveStreamResponse Inheritance Object LiveStreamResponse Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public class LiveStreamResponse Properties MediaSource Declaration public MediaSourceInfo MediaSource { get; set; } Property Value Type Description MediaSourceInfo"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.MediaInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.MediaInfo.html",
    "title": "Class MediaInfo",
    "keywords": "Class MediaInfo Inheritance Object MediaSourceInfo MediaInfo Implements IHasProviderIds Inherited Members MediaSourceInfo.Protocol MediaSourceInfo.Id MediaSourceInfo.Path MediaSourceInfo.EncoderPath MediaSourceInfo.EncoderProtocol MediaSourceInfo.Type MediaSourceInfo.Container MediaSourceInfo.Size MediaSourceInfo.Name MediaSourceInfo.SortName MediaSourceInfo.IsRemote MediaSourceInfo.RunTimeTicks MediaSourceInfo.ContainerStartTimeTicks MediaSourceInfo.SupportsTranscoding MediaSourceInfo.SupportsDirectStream MediaSourceInfo.SupportsDirectPlay MediaSourceInfo.IsInfiniteStream MediaSourceInfo.RequiresOpening MediaSourceInfo.OpenToken MediaSourceInfo.RequiresClosing MediaSourceInfo.LiveStreamId MediaSourceInfo.BufferMs MediaSourceInfo.RequiresLooping MediaSourceInfo.SupportsProbing MediaSourceInfo.Video3DFormat MediaSourceInfo.MediaStreams MediaSourceInfo.Formats MediaSourceInfo.Bitrate MediaSourceInfo.Timestamp MediaSourceInfo.RequiredHttpHeaders MediaSourceInfo.DirectStreamUrl MediaSourceInfo.TranscodingUrl MediaSourceInfo.TranscodingSubProtocol MediaSourceInfo.TranscodingContainer MediaSourceInfo.AnalyzeDurationMs MediaSourceInfo.ReadAtNativeFramerate MediaSourceInfo.InferTotalBitrate(Boolean) MediaSourceInfo.TranscodeReasons MediaSourceInfo.DefaultAudioStreamIndex MediaSourceInfo.DefaultSubtitleStreamIndex MediaSourceInfo.DefaultAudioStream MediaSourceInfo.GetDefaultAudioStream(Nullable<Int32>) MediaSourceInfo.VideoStream MediaSourceInfo.GetMediaStream(MediaStreamType, Int32) MediaSourceInfo.GetMediaStreams(MediaStreamType) MediaSourceInfo.GetStreamCount(MediaStreamType) MediaSourceInfo.IsSecondaryAudio(MediaStream) MediaSourceInfo.ItemId MediaSourceInfo.ServerId MediaSourceInfo.ToString() Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public class MediaInfo : MediaSourceInfo, IHasProviderIds Properties Album Gets or sets the album. Declaration public string Album { get; set; } Property Value Type Description String The album. AlbumArtists Gets or sets the album artists. Declaration public string[] AlbumArtists { get; set; } Property Value Type Description String [] The album artists. AlbumTags Declaration public string[] AlbumTags { get; set; } Property Value Type Description String [] Artists Gets or sets the artists. Declaration public string[] Artists { get; set; } Property Value Type Description String [] The artists. Chapters Declaration public ChapterInfo[] Chapters { get; set; } Property Value Type Description ChapterInfo [] Composers Gets or sets the studios. Declaration public string[] Composers { get; set; } Property Value Type Description String [] The studios. DateCreated Declaration public DateTimeOffset? DateCreated { get; set; } Property Value Type Description Nullable < DateTimeOffset > Genres Declaration public string[] Genres { get; set; } Property Value Type Description String [] IndexNumber Declaration public int? IndexNumber { get; set; } Property Value Type Description Nullable < Int32 > OfficialRating Gets or sets the official rating. Declaration public string OfficialRating { get; set; } Property Value Type Description String The official rating. OfficialRatingDescription Gets or sets the official rating description. Declaration public string OfficialRatingDescription { get; set; } Property Value Type Description String The official rating description. Overview Gets or sets the overview. Declaration public string Overview { get; set; } Property Value Type Description String The overview. ParentIndexNumber Declaration public int? ParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > People Declaration public BaseItemPerson[] People { get; set; } Property Value Type Description BaseItemPerson [] PremiereDate Declaration public DateTimeOffset? PremiereDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > ProductionYear Declaration public int? ProductionYear { get; set; } Property Value Type Description Nullable < Int32 > ProviderIds Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary Studios Declaration public string[] Studios { get; set; } Property Value Type Description String [] Tags Declaration public string[] Tags { get; set; } Property Value Type Description String [] Implements IHasProviderIds Extension Methods ProviderIdsExtensions.HasProviderId(IHasProviderIds, MetadataProviders) ProviderIdsExtensions.HasProviderId(IHasProviderIds, String) ProviderIdsExtensions.GetProviderId(IHasProviderIds, MetadataProviders) ProviderIdsExtensions.GetProviderId(IHasProviderIds, String) ProviderIdsExtensions.GetProviderIds(IHasProviderIds, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, String, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, String, String[]) ProviderIdsExtensions.SetProviderId(IHasProviderIds, MetadataProviders, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, MetadataProviders, String[])"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.MediaProtocol.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.MediaProtocol.html",
    "title": "Enum MediaProtocol",
    "keywords": "Enum MediaProtocol Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public enum MediaProtocol Fields Name Description File Ftp Http Mms Rtmp Rtp Rtsp Udp Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<MediaProtocol>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.PlaybackInfoRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.PlaybackInfoRequest.html",
    "title": "Class PlaybackInfoRequest",
    "keywords": "Class PlaybackInfoRequest Inheritance Object PlaybackInfoRequest Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public class PlaybackInfoRequest Constructors PlaybackInfoRequest() Declaration public PlaybackInfoRequest() Properties AllowAudioStreamCopy Declaration public bool AllowAudioStreamCopy { get; set; } Property Value Type Description Boolean AllowInterlacedVideoStreamCopy Declaration public bool AllowInterlacedVideoStreamCopy { get; set; } Property Value Type Description Boolean AllowVideoStreamCopy Declaration public bool AllowVideoStreamCopy { get; set; } Property Value Type Description Boolean AudioStreamIndex Declaration public int? AudioStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > AutoOpenLiveStream Declaration public bool AutoOpenLiveStream { get; set; } Property Value Type Description Boolean CurrentPlaySessionId Declaration public string CurrentPlaySessionId { get; set; } Property Value Type Description String DeviceProfile Declaration public DeviceProfile DeviceProfile { get; set; } Property Value Type Description DeviceProfile DirectPlayProtocols Declaration public MediaProtocol[] DirectPlayProtocols { get; set; } Property Value Type Description MediaProtocol [] EnableDirectPlay Declaration public bool EnableDirectPlay { get; set; } Property Value Type Description Boolean EnableDirectStream Declaration public bool EnableDirectStream { get; set; } Property Value Type Description Boolean EnableTranscoding Declaration public bool EnableTranscoding { get; set; } Property Value Type Description Boolean Id Declaration public string Id { get; set; } Property Value Type Description String IsPlayback Declaration public bool IsPlayback { get; set; } Property Value Type Description Boolean LiveStreamId Declaration public string LiveStreamId { get; set; } Property Value Type Description String MaxAudioChannels Declaration public int? MaxAudioChannels { get; set; } Property Value Type Description Nullable < Int32 > MaxStreamingBitrate Declaration public long? MaxStreamingBitrate { get; set; } Property Value Type Description Nullable < Int64 > MediaSourceId Declaration public string MediaSourceId { get; set; } Property Value Type Description String StartTimeTicks Declaration public long? StartTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > SubtitleStreamIndex Declaration public int? SubtitleStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > UserId Declaration public string UserId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.PlaybackInfoResponse.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.PlaybackInfoResponse.html",
    "title": "Class PlaybackInfoResponse",
    "keywords": "Class PlaybackInfoResponse Inheritance Object PlaybackInfoResponse Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public class PlaybackInfoResponse Constructors PlaybackInfoResponse() Declaration public PlaybackInfoResponse() Properties ErrorCode Gets or sets the error code. Declaration public PlaybackErrorCode? ErrorCode { get; set; } Property Value Type Description Nullable < PlaybackErrorCode > The error code. MediaSources Gets or sets the media sources. Declaration public MediaSourceInfo[] MediaSources { get; set; } Property Value Type Description MediaSourceInfo [] The media sources. PlaySessionId Gets or sets the play session identifier. Declaration public string PlaySessionId { get; set; } Property Value Type Description String The play session identifier."
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.SubtitleCodec.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.SubtitleCodec.html",
    "title": "Class SubtitleCodec",
    "keywords": "Class SubtitleCodec Inheritance Object SubtitleCodec Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public class SubtitleCodec Fields DVB_TELETEXT Declaration public static ReadOnlyMemory<char> DVB_TELETEXT Field Value Type Description ReadOnlyMemory < Char > DVBSUB Declaration public static ReadOnlyMemory<char> DVBSUB Field Value Type Description ReadOnlyMemory < Char > DVDSUB Declaration public static ReadOnlyMemory<char> DVDSUB Field Value Type Description ReadOnlyMemory < Char > Mov_Text Declaration public static ReadOnlyMemory<char> Mov_Text Field Value Type Description ReadOnlyMemory < Char > PGSSUB Declaration public static ReadOnlyMemory<char> PGSSUB Field Value Type Description ReadOnlyMemory < Char > SRT Declaration public static ReadOnlyMemory<char> SRT Field Value Type Description ReadOnlyMemory < Char >"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.SubtitleTrackEvent.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.SubtitleTrackEvent.html",
    "title": "Class SubtitleTrackEvent",
    "keywords": "Class SubtitleTrackEvent Inheritance Object SubtitleTrackEvent Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public class SubtitleTrackEvent Properties EndPositionTicks Declaration public long? EndPositionTicks { get; set; } Property Value Type Description Nullable < Int64 > Id Declaration public string Id { get; set; } Property Value Type Description String StartPositionTicks Declaration public long? StartPositionTicks { get; set; } Property Value Type Description Nullable < Int64 > Text Declaration public string Text { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.SubtitleTrackInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.SubtitleTrackInfo.html",
    "title": "Class SubtitleTrackInfo",
    "keywords": "Class SubtitleTrackInfo Inheritance Object SubtitleTrackInfo Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public class SubtitleTrackInfo Properties TrackEvents Declaration public SubtitleTrackEvent[] TrackEvents { get; set; } Property Value Type Description SubtitleTrackEvent []"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.TransportStreamTimestamp.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.TransportStreamTimestamp.html",
    "title": "Enum TransportStreamTimestamp",
    "keywords": "Enum TransportStreamTimestamp Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public enum TransportStreamTimestamp Fields Name Description None Valid Zero Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<TransportStreamTimestamp>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.MediaInfo.VideoCodec.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.MediaInfo.VideoCodec.html",
    "title": "Class VideoCodec",
    "keywords": "Class VideoCodec Inheritance Object VideoCodec Namespace : MediaBrowser.Model.MediaInfo Assembly : MediaBrowser.Model.dll Syntax public class VideoCodec Fields H263 Declaration public static ReadOnlyMemory<char> H263 Field Value Type Description ReadOnlyMemory < Char > H264 Declaration public static ReadOnlyMemory<char> H264 Field Value Type Description ReadOnlyMemory < Char > H265 Declaration public static ReadOnlyMemory<char> H265 Field Value Type Description ReadOnlyMemory < Char > Hevc Declaration public static ReadOnlyMemory<char> Hevc Field Value Type Description ReadOnlyMemory < Char > Mjpeg Declaration public static ReadOnlyMemory<char> Mjpeg Field Value Type Description ReadOnlyMemory < Char > MPEG1 Declaration public static ReadOnlyMemory<char> MPEG1 Field Value Type Description ReadOnlyMemory < Char > Mpeg2Video Declaration public static ReadOnlyMemory<char> Mpeg2Video Field Value Type Description ReadOnlyMemory < Char > MPEG4 Declaration public static ReadOnlyMemory<char> MPEG4 Field Value Type Description ReadOnlyMemory < Char > MSMPEG4 Declaration public static ReadOnlyMemory<char> MSMPEG4 Field Value Type Description ReadOnlyMemory < Char > VC1 Declaration public static ReadOnlyMemory<char> VC1 Field Value Type Description ReadOnlyMemory < Char > VP9 Declaration public static ReadOnlyMemory<char> VP9 Field Value Type Description ReadOnlyMemory < Char > Wmv Declaration public static ReadOnlyMemory<char> Wmv Field Value Type Description ReadOnlyMemory < Char >"
  },
  "reference/pluginapi/MediaBrowser.Model.Net.EndPointInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Net.EndPointInfo.html",
    "title": "Class EndPointInfo",
    "keywords": "Class EndPointInfo Inheritance Object EndPointInfo Namespace : MediaBrowser.Model.Net Assembly : MediaBrowser.Model.dll Syntax public class EndPointInfo Properties IsInNetwork Declaration public bool IsInNetwork { get; set; } Property Value Type Description Boolean IsLocal Declaration public bool IsLocal { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Net.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Net.html",
    "title": "Namespace MediaBrowser.Model.Net",
    "keywords": "Namespace MediaBrowser.Model.Net Classes EndPointInfo HttpException Class HttpException MimeTypes Class MimeTypes NetworkShare SocketCreateException SocketReceiveResult Used by the sockets wrapper to hold raw data received from a UDP socket. WebSocketMessage<T> Class WebSocketMessage Interfaces ISocket Provides a common interface across platforms for UDP sockets used by this SSDP implementation. ISocketFactory Implemented by components that can create a platform specific UDP socket implementation, and wrap it in the cross platform ISocket interface. Enums NetworkShareType Enum NetworkShareType"
  },
  "reference/pluginapi/MediaBrowser.Model.Net.HttpException.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Net.HttpException.html",
    "title": "Class HttpException",
    "keywords": "Class HttpException Class HttpException Inheritance Object Exception HttpException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Namespace : MediaBrowser.Model.Net Assembly : MediaBrowser.Model.dll Syntax public class HttpException : Exception, ISerializable Constructors HttpException(String) Initializes a new instance of the HttpException class. Declaration public HttpException(string message) Parameters Type Name Description String message The message. HttpException(String, Exception) Initializes a new instance of the HttpException class. Declaration public HttpException(string message, Exception innerException) Parameters Type Name Description String message The message. Exception innerException The inner exception. Properties IsTimedOut Gets or sets a value indicating whether this instance is timed out. Declaration public bool IsTimedOut { get; set; } Property Value Type Description Boolean true if this instance is timed out; otherwise, false . StatusCode Gets or sets the status code. Declaration public HttpStatusCode? StatusCode { get; set; } Property Value Type Description Nullable < HttpStatusCode > The status code. Implements System.Runtime.Serialization.ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Model.Net.ISocket.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Net.ISocket.html",
    "title": "Interface ISocket",
    "keywords": "Interface ISocket Provides a common interface across platforms for UDP sockets used by this SSDP implementation. Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Model.Net Assembly : MediaBrowser.Model.dll Syntax public interface ISocket : IDisposable Properties LocalIPAddress Declaration IPAddress LocalIPAddress { get; } Property Value Type Description IPAddress Methods BeginReceive(Byte[], Int32, Int32, AsyncCallback) Declaration IAsyncResult BeginReceive(byte[] buffer, int offset, int count, AsyncCallback callback) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count AsyncCallback callback Returns Type Description IAsyncResult EndReceive(IAsyncResult) Declaration SocketReceiveResult EndReceive(IAsyncResult result) Parameters Type Name Description IAsyncResult result Returns Type Description SocketReceiveResult Receive(Byte[], Int32, Int32) Declaration int Receive(byte[] buffer, int offset, int count) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count Returns Type Description Int32 ReceiveAsync(Byte[], Int32, Int32, CancellationToken) Declaration Task<SocketReceiveResult> ReceiveAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer Int32 offset Int32 count CancellationToken cancellationToken Returns Type Description Task < SocketReceiveResult > SendToAsync(Byte[], Int32, Int32, IPEndPoint, CancellationToken) Sends a UDP message to a particular end point (uni or multicast). Declaration Task SendToAsync(byte[] buffer, int offset, int bytes, IPEndPoint endPoint, CancellationToken cancellationToken) Parameters Type Name Description Byte [] buffer Int32 offset Int32 bytes IPEndPoint endPoint CancellationToken cancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Model.Net.ISocketFactory.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Net.ISocketFactory.html",
    "title": "Interface ISocketFactory",
    "keywords": "Interface ISocketFactory Implemented by components that can create a platform specific UDP socket implementation, and wrap it in the cross platform ISocket interface. Namespace : MediaBrowser.Model.Net Assembly : MediaBrowser.Model.dll Syntax public interface ISocketFactory Methods CreateNetworkStream(ISocket, Boolean) Declaration Stream CreateNetworkStream(ISocket socket, bool ownsSocket) Parameters Type Name Description ISocket socket Boolean ownsSocket Returns Type Description Stream CreateTcpSocket(IPAddress, Int32) Declaration ISocket CreateTcpSocket(IPAddress remoteAddress, int remotePort) Parameters Type Name Description IPAddress remoteAddress Int32 remotePort Returns Type Description ISocket CreateUdpBroadcastSocket(Int32) Declaration ISocket CreateUdpBroadcastSocket(int localPort) Parameters Type Name Description Int32 localPort Returns Type Description ISocket CreateUdpBroadcastSocket(Int32, IPAddress) Declaration ISocket CreateUdpBroadcastSocket(int localPort, IPAddress ipAddress) Parameters Type Name Description Int32 localPort IPAddress ipAddress Returns Type Description ISocket CreateUdpSocket(Int32) Createa a new unicast socket using the specified local port number. Declaration ISocket CreateUdpSocket(int localPort) Parameters Type Name Description Int32 localPort The local port to bind to. Returns Type Description ISocket A ISocket implementation."
  },
  "reference/pluginapi/MediaBrowser.Model.Net.MimeTypes.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Net.MimeTypes.html",
    "title": "Class MimeTypes",
    "keywords": "Class MimeTypes Class MimeTypes Inheritance Object MimeTypes Namespace : MediaBrowser.Model.Net Assembly : MediaBrowser.Model.dll Syntax public static class MimeTypes Methods GetExtensionFromMediaContainer(String, DlnaProfileType) Declaration public static string GetExtensionFromMediaContainer(string container, DlnaProfileType mediaType) Parameters Type Name Description String container DlnaProfileType mediaType Returns Type Description String GetMimeType(ReadOnlySpan<Char>) Declaration public static string GetMimeType(ReadOnlySpan<char> path) Parameters Type Name Description ReadOnlySpan < Char > path Returns Type Description String GetMimeType(ReadOnlySpan<Char>, Boolean) Declaration public static string GetMimeType(ReadOnlySpan<char> path, bool enableStreamDefault) Parameters Type Name Description ReadOnlySpan < Char > path Boolean enableStreamDefault Returns Type Description String GetMimeType(String) Declaration public static string GetMimeType(string path) Parameters Type Name Description String path Returns Type Description String GetMimeType(String, Boolean) Gets the type of the MIME. Declaration public static string GetMimeType(string path, bool enableStreamDefault) Parameters Type Name Description String path Boolean enableStreamDefault Returns Type Description String GetMimeTypeFromMediaContainer(ReadOnlySpan<Char>, DlnaProfileType, Boolean) Declaration public static string GetMimeTypeFromMediaContainer(ReadOnlySpan<char> container, DlnaProfileType mediaType, bool enableStreamDefault) Parameters Type Name Description ReadOnlySpan < Char > container DlnaProfileType mediaType Boolean enableStreamDefault Returns Type Description String ToExtension(ReadOnlySpan<Char>) Declaration public static string ToExtension(ReadOnlySpan<char> mimeType) Parameters Type Name Description ReadOnlySpan < Char > mimeType Returns Type Description String ToExtension(String) Declaration public static string ToExtension(string mimeType) Parameters Type Name Description String mimeType Returns Type Description String ToExtensions(String) Declaration public static string[] ToExtensions(string mimeType) Parameters Type Name Description String mimeType Returns Type Description String []"
  },
  "reference/pluginapi/MediaBrowser.Model.Net.NetworkShare.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Net.NetworkShare.html",
    "title": "Class NetworkShare",
    "keywords": "Class NetworkShare Inheritance Object NetworkShare Namespace : MediaBrowser.Model.Net Assembly : MediaBrowser.Model.dll Syntax public class NetworkShare Properties Name Share name Declaration public string Name { get; set; } Property Value Type Description String Path Local path Declaration public string Path { get; set; } Property Value Type Description String Remark Comment Declaration public string Remark { get; set; } Property Value Type Description String Server The name of the computer that this share belongs to Declaration public string Server { get; set; } Property Value Type Description String ShareType Share type Declaration public NetworkShareType ShareType { get; set; } Property Value Type Description NetworkShareType"
  },
  "reference/pluginapi/MediaBrowser.Model.Net.NetworkShareType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Net.NetworkShareType.html",
    "title": "Enum NetworkShareType",
    "keywords": "Enum NetworkShareType Enum NetworkShareType Namespace : MediaBrowser.Model.Net Assembly : MediaBrowser.Model.dll Syntax public enum NetworkShareType Fields Name Description Device Device share Disk Disk share Ipc IPC share Printer Printer share Special Special share Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<NetworkShareType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Net.SocketCreateException.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Net.SocketCreateException.html",
    "title": "Class SocketCreateException",
    "keywords": "Class SocketCreateException Inheritance Object Exception SocketCreateException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Namespace : MediaBrowser.Model.Net Assembly : MediaBrowser.Model.dll Syntax public class SocketCreateException : Exception, ISerializable Constructors SocketCreateException(String, Exception) Declaration public SocketCreateException(string errorCode, Exception originalException) Parameters Type Name Description String errorCode Exception originalException Properties ErrorCode Declaration public string ErrorCode { get; } Property Value Type Description String Implements System.Runtime.Serialization.ISerializable"
  },
  "reference/pluginapi/MediaBrowser.Model.Net.SocketReceiveResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Net.SocketReceiveResult.html",
    "title": "Class SocketReceiveResult",
    "keywords": "Class SocketReceiveResult Used by the sockets wrapper to hold raw data received from a UDP socket. Inheritance Object SocketReceiveResult Namespace : MediaBrowser.Model.Net Assembly : MediaBrowser.Model.dll Syntax public sealed class SocketReceiveResult Properties Buffer The buffer to place received data into. Declaration public byte[] Buffer { get; set; } Property Value Type Description Byte [] LocalIPAddress Declaration public IPAddress LocalIPAddress { get; set; } Property Value Type Description IPAddress ReceivedBytes The number of bytes received. Declaration public int ReceivedBytes { get; set; } Property Value Type Description Int32 RemoteEndPoint Declaration public IPEndPoint RemoteEndPoint { get; set; } Property Value Type Description IPEndPoint"
  },
  "reference/pluginapi/MediaBrowser.Model.Net.WebSocketMessage-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Net.WebSocketMessage-1.html",
    "title": "Class WebSocketMessage<T>",
    "keywords": "Class WebSocketMessage<T> Class WebSocketMessage Inheritance Object WebSocketMessage<T> WebSocketMessageInfo Namespace : MediaBrowser.Model.Net Assembly : MediaBrowser.Model.dll Syntax public class WebSocketMessage<T> Type Parameters Name Description T Properties Data Gets or sets the data. Declaration public T Data { get; set; } Property Value Type Description T The data. MessageId Declaration public string MessageId { get; set; } Property Value Type Description String MessageType Gets or sets the type of the message. Declaration public string MessageType { get; set; } Property Value Type Description String The type of the message. ServerId Declaration public string ServerId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Notifications.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Notifications.html",
    "title": "Namespace MediaBrowser.Model.Notifications",
    "keywords": "Namespace MediaBrowser.Model.Notifications Classes NotificationOption NotificationOptions NotificationRequest NotificationTypeInfo Enums NotificationLevel NotificationType SendToUserType"
  },
  "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationLevel.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationLevel.html",
    "title": "Enum NotificationLevel",
    "keywords": "Enum NotificationLevel Namespace : MediaBrowser.Model.Notifications Assembly : MediaBrowser.Model.dll Syntax public enum NotificationLevel Fields Name Description Error Normal Warning Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<NotificationLevel>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationOption.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationOption.html",
    "title": "Class NotificationOption",
    "keywords": "Class NotificationOption Inheritance Object NotificationOption Namespace : MediaBrowser.Model.Notifications Assembly : MediaBrowser.Model.dll Syntax public class NotificationOption Properties DisabledMonitorUsers User Ids to not monitor (it's opt out) Declaration public string[] DisabledMonitorUsers { get; set; } Property Value Type Description String [] DisabledServices Gets or sets the disabled services. Declaration public string[] DisabledServices { get; set; } Property Value Type Description String [] The disabled services. Enabled Gets or sets a value indicating whether this NotificationOption is enabled. Declaration public bool Enabled { get; set; } Property Value Type Description Boolean true if enabled; otherwise, false . SendToUserMode Gets or sets the send to user mode. Declaration public SendToUserType SendToUserMode { get; set; } Property Value Type Description SendToUserType The send to user mode. SendToUsers User Ids to send to (if SendToUserMode == Custom) Declaration public string[] SendToUsers { get; set; } Property Value Type Description String [] Type Declaration public string Type { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationOptions.html",
    "title": "Class NotificationOptions",
    "keywords": "Class NotificationOptions Inheritance Object NotificationOptions Namespace : MediaBrowser.Model.Notifications Assembly : MediaBrowser.Model.dll Syntax public class NotificationOptions Constructors NotificationOptions() Declaration public NotificationOptions() Properties Options Declaration public NotificationOption[] Options { get; set; } Property Value Type Description NotificationOption [] Methods GetOptions(ReadOnlySpan<Char>) Declaration public NotificationOption GetOptions(ReadOnlySpan<char> type) Parameters Type Name Description ReadOnlySpan < Char > type Returns Type Description NotificationOption IsEnabled(ReadOnlySpan<Char>) Declaration public bool IsEnabled(ReadOnlySpan<char> type) Parameters Type Name Description ReadOnlySpan < Char > type Returns Type Description Boolean IsEnabledToMonitorUser(ReadOnlySpan<Char>, Guid) Declaration public bool IsEnabledToMonitorUser(ReadOnlySpan<char> type, Guid userId) Parameters Type Name Description ReadOnlySpan < Char > type Guid userId Returns Type Description Boolean IsEnabledToSendToUser(ReadOnlySpan<Char>, ReadOnlySpan<Char>, UserPolicy) Declaration public bool IsEnabledToSendToUser(ReadOnlySpan<char> type, ReadOnlySpan<char> userId, UserPolicy userPolicy) Parameters Type Name Description ReadOnlySpan < Char > type ReadOnlySpan < Char > userId UserPolicy userPolicy Returns Type Description Boolean IsServiceEnabled(ReadOnlySpan<Char>, ReadOnlySpan<Char>) Declaration public bool IsServiceEnabled(ReadOnlySpan<char> service, ReadOnlySpan<char> notificationType) Parameters Type Name Description ReadOnlySpan < Char > service ReadOnlySpan < Char > notificationType Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationRequest.html",
    "title": "Class NotificationRequest",
    "keywords": "Class NotificationRequest Inheritance Object NotificationRequest Namespace : MediaBrowser.Model.Notifications Assembly : MediaBrowser.Model.dll Syntax public class NotificationRequest Properties Date Declaration public DateTimeOffset Date { get; set; } Property Value Type Description DateTimeOffset Description Declaration public string Description { get; set; } Property Value Type Description String Level Declaration public NotificationLevel Level { get; set; } Property Value Type Description NotificationLevel Name Declaration public string Name { get; set; } Property Value Type Description String NotificationType The corresponding type name used in configuration. Not for display. Declaration public string NotificationType { get; set; } Property Value Type Description String SendToUserMode Declaration public SendToUserType? SendToUserMode { get; set; } Property Value Type Description Nullable < SendToUserType > Url Declaration public string Url { get; set; } Property Value Type Description String UserIds Declaration public long[] UserIds { get; set; } Property Value Type Description Int64 []"
  },
  "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationType.html",
    "title": "Enum NotificationType",
    "keywords": "Enum NotificationType Namespace : MediaBrowser.Model.Notifications Assembly : MediaBrowser.Model.dll Syntax public enum NotificationType Fields Name Description ApplicationUpdateAvailable ApplicationUpdateInstalled AudioPlayback AudioPlaybackStopped CameraImageUploaded EmbyNews GamePlayback GamePlaybackStopped InstallationFailed NewLibraryContent PluginError PluginInstalled PluginUninstalled PluginUpdateInstalled ServerRestartRequired TaskFailed UserLockedOut VideoPlayback VideoPlaybackStopped Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<NotificationType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationTypeInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Notifications.NotificationTypeInfo.html",
    "title": "Class NotificationTypeInfo",
    "keywords": "Class NotificationTypeInfo Inheritance Object NotificationTypeInfo Namespace : MediaBrowser.Model.Notifications Assembly : MediaBrowser.Model.dll Syntax public class NotificationTypeInfo Properties Category Declaration public string Category { get; set; } Property Value Type Description String Enabled Declaration public bool Enabled { get; set; } Property Value Type Description Boolean IsBasedOnUserEvent Declaration public bool IsBasedOnUserEvent { get; set; } Property Value Type Description Boolean Name Declaration public string Name { get; set; } Property Value Type Description String Type Declaration public string Type { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Notifications.SendToUserType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Notifications.SendToUserType.html",
    "title": "Enum SendToUserType",
    "keywords": "Enum SendToUserType Namespace : MediaBrowser.Model.Notifications Assembly : MediaBrowser.Model.dll Syntax public enum SendToUserType Fields Name Description Admins All Custom Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SendToUserType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Playlists.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Playlists.html",
    "title": "Namespace MediaBrowser.Model.Playlists",
    "keywords": "Namespace MediaBrowser.Model.Playlists Classes PlaylistCreationRequest PlaylistCreationResult PlaylistItemQuery"
  },
  "reference/pluginapi/MediaBrowser.Model.Playlists.PlaylistCreationRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Playlists.PlaylistCreationRequest.html",
    "title": "Class PlaylistCreationRequest",
    "keywords": "Class PlaylistCreationRequest Inheritance Object PlaylistCreationRequest Namespace : MediaBrowser.Model.Playlists Assembly : MediaBrowser.Model.dll Syntax public class PlaylistCreationRequest Constructors PlaylistCreationRequest() Declaration public PlaylistCreationRequest() Properties ItemIdList Declaration public long[] ItemIdList { get; set; } Property Value Type Description Int64 [] MediaType Declaration public string MediaType { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String UserId Declaration public long UserId { get; set; } Property Value Type Description Int64"
  },
  "reference/pluginapi/MediaBrowser.Model.Playlists.PlaylistCreationResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Playlists.PlaylistCreationResult.html",
    "title": "Class PlaylistCreationResult",
    "keywords": "Class PlaylistCreationResult Inheritance Object PlaylistCreationResult Namespace : MediaBrowser.Model.Playlists Assembly : MediaBrowser.Model.dll Syntax public class PlaylistCreationResult Properties Id Declaration public string Id { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Playlists.PlaylistItemQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Playlists.PlaylistItemQuery.html",
    "title": "Class PlaylistItemQuery",
    "keywords": "Class PlaylistItemQuery Inheritance Object PlaylistItemQuery Namespace : MediaBrowser.Model.Playlists Assembly : MediaBrowser.Model.dll Syntax public class PlaylistItemQuery Properties Fields Gets or sets the fields. Declaration public ItemFields[] Fields { get; set; } Property Value Type Description ItemFields [] The fields. Id Gets or sets the identifier. Declaration public string Id { get; set; } Property Value Type Description String The identifier. Limit Gets or sets the limit. Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > The limit. StartIndex Gets or sets the start index. Declaration public int? StartIndex { get; set; } Property Value Type Description Nullable < Int32 > The start index. UserId Gets or sets the user identifier. Declaration public string UserId { get; set; } Property Value Type Description String The user identifier."
  },
  "reference/pluginapi/MediaBrowser.Model.Plugins.BasePluginConfiguration.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Plugins.BasePluginConfiguration.html",
    "title": "Class BasePluginConfiguration",
    "keywords": "Class BasePluginConfiguration Class BasePluginConfiguration Inheritance Object BasePluginConfiguration Namespace : MediaBrowser.Model.Plugins Assembly : MediaBrowser.Model.dll Syntax public class BasePluginConfiguration"
  },
  "reference/pluginapi/MediaBrowser.Model.Plugins.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Plugins.html",
    "title": "Namespace MediaBrowser.Model.Plugins",
    "keywords": "Namespace MediaBrowser.Model.Plugins Classes BasePluginConfiguration Class BasePluginConfiguration PluginInfo This is a serializable stub class that is used by the api to provide information about installed plugins. PluginPageInfo TranslationInfo Interfaces IHasTranslations IHasWebPages"
  },
  "reference/pluginapi/MediaBrowser.Model.Plugins.IHasTranslations.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Plugins.IHasTranslations.html",
    "title": "Interface IHasTranslations",
    "keywords": "Interface IHasTranslations Namespace : MediaBrowser.Model.Plugins Assembly : MediaBrowser.Model.dll Syntax public interface IHasTranslations Methods GetTranslations() Declaration TranslationInfo[] GetTranslations() Returns Type Description TranslationInfo []"
  },
  "reference/pluginapi/MediaBrowser.Model.Plugins.IHasWebPages.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Plugins.IHasWebPages.html",
    "title": "Interface IHasWebPages",
    "keywords": "Interface IHasWebPages Namespace : MediaBrowser.Model.Plugins Assembly : MediaBrowser.Model.dll Syntax public interface IHasWebPages Methods GetPages() Declaration IEnumerable<PluginPageInfo> GetPages() Returns Type Description IEnumerable < PluginPageInfo >"
  },
  "reference/pluginapi/MediaBrowser.Model.Plugins.PluginInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Plugins.PluginInfo.html",
    "title": "Class PluginInfo",
    "keywords": "Class PluginInfo This is a serializable stub class that is used by the api to provide information about installed plugins. Inheritance Object PluginInfo Namespace : MediaBrowser.Model.Plugins Assembly : MediaBrowser.Model.dll Syntax public class PluginInfo Properties ConfigurationFileName Gets or sets the name of the configuration file. Declaration public string ConfigurationFileName { get; set; } Property Value Type Description String The name of the configuration file. Description Gets or sets the description. Declaration public string Description { get; set; } Property Value Type Description String The description. Id Gets or sets the unique id. Declaration public string Id { get; set; } Property Value Type Description String The unique id. ImageTag Gets or sets the image URL. Declaration public string ImageTag { get; set; } Property Value Type Description String The image URL. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Version Gets or sets the version. Declaration public string Version { get; set; } Property Value Type Description String The version."
  },
  "reference/pluginapi/MediaBrowser.Model.Plugins.PluginPageInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Plugins.PluginPageInfo.html",
    "title": "Class PluginPageInfo",
    "keywords": "Class PluginPageInfo Inheritance Object PluginPageInfo Namespace : MediaBrowser.Model.Plugins Assembly : MediaBrowser.Model.dll Syntax public class PluginPageInfo Properties DisplayName Declaration public string DisplayName { get; set; } Property Value Type Description String EmbeddedResourcePath Declaration public string EmbeddedResourcePath { get; set; } Property Value Type Description String EnableInMainMenu Declaration public bool EnableInMainMenu { get; set; } Property Value Type Description Boolean IsMainConfigPage Declaration public bool IsMainConfigPage { get; set; } Property Value Type Description Boolean MenuIcon Declaration public string MenuIcon { get; set; } Property Value Type Description String MenuSection Declaration public string MenuSection { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Plugins.TranslationInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Plugins.TranslationInfo.html",
    "title": "Class TranslationInfo",
    "keywords": "Class TranslationInfo Inheritance Object TranslationInfo Namespace : MediaBrowser.Model.Plugins Assembly : MediaBrowser.Model.dll Syntax public class TranslationInfo Properties EmbeddedResourcePath Declaration public string EmbeddedResourcePath { get; set; } Property Value Type Description String Locale Declaration public string Locale { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Providers.ExternalIdInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Providers.ExternalIdInfo.html",
    "title": "Class ExternalIdInfo",
    "keywords": "Class ExternalIdInfo Inheritance Object ExternalIdInfo Namespace : MediaBrowser.Model.Providers Assembly : MediaBrowser.Model.dll Syntax public class ExternalIdInfo Properties IsSupportedAsIdentifier Declaration public bool IsSupportedAsIdentifier { get; set; } Property Value Type Description Boolean Key Gets or sets the key. Declaration public string Key { get; set; } Property Value Type Description String The key. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. UrlFormatString Gets or sets the URL format string. Declaration public string UrlFormatString { get; set; } Property Value Type Description String The URL format string."
  },
  "reference/pluginapi/MediaBrowser.Model.Providers.ExternalUrl.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Providers.ExternalUrl.html",
    "title": "Class ExternalUrl",
    "keywords": "Class ExternalUrl Inheritance Object ExternalUrl Namespace : MediaBrowser.Model.Providers Assembly : MediaBrowser.Model.dll Syntax public class ExternalUrl Properties Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Url Gets or sets the type of the item. Declaration public string Url { get; set; } Property Value Type Description String The type of the item."
  },
  "reference/pluginapi/MediaBrowser.Model.Providers.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Providers.html",
    "title": "Namespace MediaBrowser.Model.Providers",
    "keywords": "Namespace MediaBrowser.Model.Providers Classes ExternalIdInfo ExternalUrl ImageProviderInfo Class ImageProviderInfo. RemoteImageInfo Class RemoteImageInfo RemoteImageQuery RemoteImageResult Class RemoteImageResult. RemoteSearchResult RemoteSubtitleInfo SubtitleProviderInfo"
  },
  "reference/pluginapi/MediaBrowser.Model.Providers.ImageProviderInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Providers.ImageProviderInfo.html",
    "title": "Class ImageProviderInfo",
    "keywords": "Class ImageProviderInfo Class ImageProviderInfo. Inheritance Object ImageProviderInfo Namespace : MediaBrowser.Model.Providers Assembly : MediaBrowser.Model.dll Syntax public class ImageProviderInfo Constructors ImageProviderInfo() Declaration public ImageProviderInfo() Properties Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. SupportedImages Declaration public ImageType[] SupportedImages { get; set; } Property Value Type Description ImageType []"
  },
  "reference/pluginapi/MediaBrowser.Model.Providers.RemoteImageInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Providers.RemoteImageInfo.html",
    "title": "Class RemoteImageInfo",
    "keywords": "Class RemoteImageInfo Class RemoteImageInfo Inheritance Object RemoteImageInfo Namespace : MediaBrowser.Model.Providers Assembly : MediaBrowser.Model.dll Syntax public class RemoteImageInfo Properties CommunityRating Gets or sets the community rating. Declaration public double? CommunityRating { get; set; } Property Value Type Description Nullable < Double > The community rating. DisplayLanguage Declaration public string DisplayLanguage { get; set; } Property Value Type Description String Height Gets or sets the height. Declaration public int? Height { get; set; } Property Value Type Description Nullable < Int32 > The height. Language Gets or sets the language. Declaration public string Language { get; set; } Property Value Type Description String The language. ProviderName Gets or sets the name of the provider. Declaration public string ProviderName { get; set; } Property Value Type Description String The name of the provider. RatingType Gets or sets the type of the rating. Declaration public RatingType RatingType { get; set; } Property Value Type Description RatingType The type of the rating. ThumbnailUrl Gets a url used for previewing a smaller version Declaration public string ThumbnailUrl { get; set; } Property Value Type Description String Type Gets or sets the type. Declaration public ImageType Type { get; set; } Property Value Type Description ImageType The type. Url Gets or sets the URL. Declaration public string Url { get; set; } Property Value Type Description String The URL. VoteCount Gets or sets the vote count. Declaration public int? VoteCount { get; set; } Property Value Type Description Nullable < Int32 > The vote count. Width Gets or sets the width. Declaration public int? Width { get; set; } Property Value Type Description Nullable < Int32 > The width."
  },
  "reference/pluginapi/MediaBrowser.Model.Providers.RemoteImageQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Providers.RemoteImageQuery.html",
    "title": "Class RemoteImageQuery",
    "keywords": "Class RemoteImageQuery Inheritance Object RemoteImageQuery Namespace : MediaBrowser.Model.Providers Assembly : MediaBrowser.Model.dll Syntax public class RemoteImageQuery Properties ImageType Declaration public ImageType? ImageType { get; set; } Property Value Type Description Nullable < ImageType > IncludeAllLanguages Declaration public bool IncludeAllLanguages { get; set; } Property Value Type Description Boolean IncludeDisabledProviders Declaration public bool IncludeDisabledProviders { get; set; } Property Value Type Description Boolean ProviderName Declaration public string ProviderName { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Providers.RemoteImageResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Providers.RemoteImageResult.html",
    "title": "Class RemoteImageResult",
    "keywords": "Class RemoteImageResult Class RemoteImageResult. Inheritance Object RemoteImageResult Namespace : MediaBrowser.Model.Providers Assembly : MediaBrowser.Model.dll Syntax public class RemoteImageResult Properties Images Gets or sets the images. Declaration public RemoteImageInfo[] Images { get; set; } Property Value Type Description RemoteImageInfo [] The images. Providers Gets or sets the providers. Declaration public string[] Providers { get; set; } Property Value Type Description String [] The providers. TotalRecordCount Gets or sets the total record count. Declaration public int TotalRecordCount { get; set; } Property Value Type Description Int32 The total record count."
  },
  "reference/pluginapi/MediaBrowser.Model.Providers.RemoteSearchResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Providers.RemoteSearchResult.html",
    "title": "Class RemoteSearchResult",
    "keywords": "Class RemoteSearchResult Inheritance Object RemoteSearchResult Implements IHasProviderIds Namespace : MediaBrowser.Model.Providers Assembly : MediaBrowser.Model.dll Syntax public class RemoteSearchResult : IHasProviderIds Properties AlbumArtist Declaration public RemoteSearchResult AlbumArtist { get; set; } Property Value Type Description RemoteSearchResult Artists Declaration public RemoteSearchResult[] Artists { get; set; } Property Value Type Description RemoteSearchResult [] DisambiguationComment Declaration public string DisambiguationComment { get; set; } Property Value Type Description String GameSystem Declaration public string GameSystem { get; set; } Property Value Type Description String ImageUrl Declaration public string ImageUrl { get; set; } Property Value Type Description String IndexNumber Declaration public int? IndexNumber { get; set; } Property Value Type Description Nullable < Int32 > IndexNumberEnd Declaration public int? IndexNumberEnd { get; set; } Property Value Type Description Nullable < Int32 > Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Overview Declaration public string Overview { get; set; } Property Value Type Description String ParentIndexNumber Declaration public int? ParentIndexNumber { get; set; } Property Value Type Description Nullable < Int32 > PremiereDate Declaration public DateTimeOffset? PremiereDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > ProductionYear Gets or sets the year. Declaration public int? ProductionYear { get; set; } Property Value Type Description Nullable < Int32 > The year. ProviderIds Gets or sets the provider ids. Declaration public ProviderIdDictionary ProviderIds { get; set; } Property Value Type Description ProviderIdDictionary The provider ids. SearchProviderName Declaration public string SearchProviderName { get; set; } Property Value Type Description String Implements IHasProviderIds Extension Methods ProviderIdsExtensions.HasProviderId(IHasProviderIds, MetadataProviders) ProviderIdsExtensions.HasProviderId(IHasProviderIds, String) ProviderIdsExtensions.GetProviderId(IHasProviderIds, MetadataProviders) ProviderIdsExtensions.GetProviderId(IHasProviderIds, String) ProviderIdsExtensions.GetProviderIds(IHasProviderIds, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, String, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, String, String[]) ProviderIdsExtensions.SetProviderId(IHasProviderIds, MetadataProviders, String) ProviderIdsExtensions.SetProviderId(IHasProviderIds, MetadataProviders, String[])"
  },
  "reference/pluginapi/MediaBrowser.Model.Providers.RemoteSubtitleInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Providers.RemoteSubtitleInfo.html",
    "title": "Class RemoteSubtitleInfo",
    "keywords": "Class RemoteSubtitleInfo Inheritance Object RemoteSubtitleInfo Namespace : MediaBrowser.Model.Providers Assembly : MediaBrowser.Model.dll Syntax public class RemoteSubtitleInfo Properties Author Declaration public string Author { get; set; } Property Value Type Description String Comment Declaration public string Comment { get; set; } Property Value Type Description String CommunityRating Declaration public float? CommunityRating { get; set; } Property Value Type Description Nullable < Single > DateCreated Declaration public DateTimeOffset? DateCreated { get; set; } Property Value Type Description Nullable < DateTimeOffset > DownloadCount Declaration public int? DownloadCount { get; set; } Property Value Type Description Nullable < Int32 > Format Declaration public string Format { get; set; } Property Value Type Description String Id Declaration public string Id { get; set; } Property Value Type Description String IsForced Declaration public bool? IsForced { get; set; } Property Value Type Description Nullable < Boolean > IsHashMatch Declaration public bool? IsHashMatch { get; set; } Property Value Type Description Nullable < Boolean > Language Declaration public string Language { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String ProviderName Declaration public string ProviderName { get; set; } Property Value Type Description String ThreeLetterISOLanguageName Declaration [Obsolete(\"Use language instead to return the language specified by the subtitle provider\")] public string ThreeLetterISOLanguageName { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Providers.SubtitleProviderInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Providers.SubtitleProviderInfo.html",
    "title": "Class SubtitleProviderInfo",
    "keywords": "Class SubtitleProviderInfo Inheritance Object SubtitleProviderInfo Namespace : MediaBrowser.Model.Providers Assembly : MediaBrowser.Model.dll Syntax public class SubtitleProviderInfo Properties Features Declaration public MetadataFeatures[] Features { get; set; } Property Value Type Description MetadataFeatures [] Id Declaration public string Id { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.AllThemeMediaResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.AllThemeMediaResult.html",
    "title": "Class AllThemeMediaResult",
    "keywords": "Class AllThemeMediaResult Inheritance Object AllThemeMediaResult Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class AllThemeMediaResult Constructors AllThemeMediaResult() Declaration public AllThemeMediaResult() Properties SoundtrackSongsResult Declaration public ThemeMediaResult SoundtrackSongsResult { get; set; } Property Value Type Description ThemeMediaResult ThemeSongsResult Declaration public ThemeMediaResult ThemeSongsResult { get; set; } Property Value Type Description ThemeMediaResult ThemeVideosResult Declaration public ThemeMediaResult ThemeVideosResult { get; set; } Property Value Type Description ThemeMediaResult"
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.EpisodeQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.EpisodeQuery.html",
    "title": "Class EpisodeQuery",
    "keywords": "Class EpisodeQuery Inheritance Object EpisodeQuery Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class EpisodeQuery Constructors EpisodeQuery() Declaration public EpisodeQuery() Properties Fields Gets or sets the fields. Declaration public ItemFields[] Fields { get; set; } Property Value Type Description ItemFields [] The fields. IsMissing Gets or sets a value indicating whether this instance is missing. Declaration public bool? IsMissing { get; set; } Property Value Type Description Nullable < Boolean > null if [is missing] contains no value, true if [is missing]; otherwise, false . IsVirtualUnaired Gets or sets a value indicating whether this instance is virtual unaired. Declaration public bool? IsVirtualUnaired { get; set; } Property Value Type Description Nullable < Boolean > null if [is virtual unaired] contains no value, true if [is virtual unaired]; otherwise, false . Limit Gets or sets the limit. Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > The limit. SeasonId Gets or sets the season identifier. Declaration public string SeasonId { get; set; } Property Value Type Description String The season identifier. SeasonNumber Gets or sets the season number. Declaration public int? SeasonNumber { get; set; } Property Value Type Description Nullable < Int32 > The season number. SeriesId Gets or sets the series identifier. Declaration public string SeriesId { get; set; } Property Value Type Description String The series identifier. StartIndex Gets or sets the start index. Declaration public int? StartIndex { get; set; } Property Value Type Description Nullable < Int32 > The start index. StartItemId Gets or sets the start item identifier. Declaration public string StartItemId { get; set; } Property Value Type Description String The start item identifier. UserId Gets or sets the user identifier. Declaration public string UserId { get; set; } Property Value Type Description String The user identifier."
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.html",
    "title": "Namespace MediaBrowser.Model.Querying",
    "keywords": "Namespace MediaBrowser.Model.Querying Classes AllThemeMediaResult EpisodeQuery ItemCountsQuery Class ItemCountsQuery ItemSortBy These represent sort orders that are known by the core LatestItemsQuery MovieRecommendationQuery NextUpQuery QueryFilters QueryFiltersLegacy QueryResult<T> SessionQuery Class SessionQuery SimilarItemsQuery ThemeMediaResult Class ThemeMediaResult UpcomingEpisodesQuery UserQuery Enums ItemFields Used to control the data that gets attached to DtoBaseItems ItemFilter Enum ItemFilter UserDataFields"
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.ItemCountsQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.ItemCountsQuery.html",
    "title": "Class ItemCountsQuery",
    "keywords": "Class ItemCountsQuery Class ItemCountsQuery Inheritance Object ItemCountsQuery Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class ItemCountsQuery Properties IsFavorite Gets or sets a value indicating whether this instance is favorite. Declaration public bool? IsFavorite { get; set; } Property Value Type Description Nullable < Boolean > null if [is favorite] contains no value, true if [is favorite]; otherwise, false . UserId Gets or sets the user id. Declaration public string UserId { get; set; } Property Value Type Description String The user id."
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.ItemFields.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.ItemFields.html",
    "title": "Enum ItemFields",
    "keywords": "Enum ItemFields Used to control the data that gets attached to DtoBaseItems Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public enum ItemFields Fields Name Description AirDays AirTime The air time AlternateMediaSources BasicSyncInfo Bitrate CanDelete The can delete CanDownload The can download ChannelImage ChannelInfo The channel information ChannelMappingInfo Chapters The chapters ChildCount CollectionName CommunityRating Container CriticRating CustomRating The custom rating DateCreated The date created of the item DateLastRefreshed DateLastSaved DateModified DisplayOrder DisplayPreferencesId Item display preferences EndDate Etag The etag ExternalId ExternalUrls The external urls ExtraIds FileName Genres Genres Guid Height Id IsInMixedFolder IsVirtualItem ItemCounts The item counts LocalTrailerCount MediaSources The media versions MediaStreams The media streams OfficialRating OriginalTitle Overview The item overview ParentId The id of the item's parent PartCount Path The physical path of the item People The list of people for the item PlayAccess Prefix PremiereDate PresentationUniqueKey PrimaryImageAspectRatio The aspect ratio of the primary image ProductionLocations The production locations ProductionYear ProgramPrimaryImageAspectRatio ProviderIds Imdb, tmdb, etc RecursiveItemCount RemoteTrailers The trailer url of the item RunTimeTicks SeasonUserData The season user data SeriesPresentationUniqueKey SeriesPrimaryImage SeriesStudio The series studio Settings The settings Size SortName The sort name of the item SpecialEpisodeNumbers The special episode numbers SpecialFeatureCount StartDate Status Studios The studios of the item SubViews Taglines The taglines of the item Tags The tags Video3DFormat Width Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ItemFields>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.ItemFilter.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.ItemFilter.html",
    "title": "Enum ItemFilter",
    "keywords": "Enum ItemFilter Enum ItemFilter Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public enum ItemFilter Fields Name Description Dislikes The dislikes IsFavorite The item is a favorite IsFavoriteOrLikes The is favorite or likes IsFolder The item is a folder IsNotFolder The item is not folder IsPlayed The item is played IsResumable The item is resumable IsUnplayed The item is unplayed Likes The likes Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ItemFilter>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.ItemSortBy.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.ItemSortBy.html",
    "title": "Class ItemSortBy",
    "keywords": "Class ItemSortBy These represent sort orders that are known by the core Inheritance Object ItemSortBy Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public static class ItemSortBy Fields AiredEpisodeOrder Declaration public const string AiredEpisodeOrder = \"AiredEpisodeOrder\" Field Value Type Description String AirTime Declaration public const string AirTime = \"AirTime\" Field Value Type Description String Album The album Declaration public const string Album = \"Album\" Field Value Type Description String AlbumArtist The album artist Declaration public const string AlbumArtist = \"AlbumArtist\" Field Value Type Description String Artist The artist Declaration public const string Artist = \"Artist\" Field Value Type Description String ChannelNumber Declaration public const string ChannelNumber = \"ChannelNumber\" Field Value Type Description String CommunityRating The community rating Declaration public const string CommunityRating = \"CommunityRating\" Field Value Type Description String Composer Declaration public const string Composer = \"Composer\" Field Value Type Description String Container Declaration public const string Container = \"Container\" Field Value Type Description String CriticRating The critic rating Declaration public const string CriticRating = \"CriticRating\" Field Value Type Description String DateCreated The date created Declaration public const string DateCreated = \"DateCreated\" Field Value Type Description String DateLastContentAdded Declaration public const string DateLastContentAdded = \"DateLastContentAdded\" Field Value Type Description String DateLastSaved Declaration public const string DateLastSaved = \"DateLastSaved\" Field Value Type Description String DatePlayed The date played Declaration public const string DatePlayed = \"DatePlayed\" Field Value Type Description String DefaultChannelOrder Declaration public const string DefaultChannelOrder = \"DefaultChannelOrder\" Field Value Type Description String EpisodeAbsoluteIndexNumber Declaration public const string EpisodeAbsoluteIndexNumber = \"EpisodeAbsoluteIndexNumber\" Field Value Type Description String Filename Declaration public const string Filename = \"Filename\" Field Value Type Description String GameSystem Declaration public const string GameSystem = \"GameSystem\" Field Value Type Description String IndexNumber Declaration public const string IndexNumber = \"IndexNumber\" Field Value Type Description String IsFavorite Declaration public const string IsFavorite = \"IsFavorite\" Field Value Type Description String IsFolder Declaration public const string IsFolder = \"IsFolder\" Field Value Type Description String IsPlayed Declaration public const string IsPlayed = \"IsPlayed\" Field Value Type Description String IsSpecialEpisode Declaration public const string IsSpecialEpisode = \"IsSpecialEpisode\" Field Value Type Description String IsUnplayed Declaration public const string IsUnplayed = \"IsUnplayed\" Field Value Type Description String ListItemOrder Declaration public const string ListItemOrder = \"ListItemOrder\" Field Value Type Description String Name Declaration public const string Name = \"Name\" Field Value Type Description String OfficialRating The official rating Declaration public const string OfficialRating = \"OfficialRating\" Field Value Type Description String ParentIndexNumber Declaration public const string ParentIndexNumber = \"ParentIndexNumber\" Field Value Type Description String Path Declaration public const string Path = \"Path\" Field Value Type Description String PlayCount The play count Declaration public const string PlayCount = \"PlayCount\" Field Value Type Description String Players Declaration public const string Players = \"Players\" Field Value Type Description String Prefix Declaration public const string Prefix = \"Prefix\" Field Value Type Description String PremiereDate The premiere date Declaration public const string PremiereDate = \"PremiereDate\" Field Value Type Description String ProductionYear The production year Declaration public const string ProductionYear = \"ProductionYear\" Field Value Type Description String Random The random Declaration public const string Random = \"Random\" Field Value Type Description String Resolution Declaration public const string Resolution = \"Resolution\" Field Value Type Description String Runtime The runtime Declaration public const string Runtime = \"Runtime\" Field Value Type Description String SeasonName Declaration public const string SeasonName = \"SeasonName\" Field Value Type Description String SeriesDatePlayed Declaration public const string SeriesDatePlayed = \"SeriesDatePlayed\" Field Value Type Description String SeriesSortName Declaration public const string SeriesSortName = \"SeriesSortName\" Field Value Type Description String SeriesSortNameOrSortName Declaration public const string SeriesSortNameOrSortName = \"SeriesSortNameOrSortName\" Field Value Type Description String Size Declaration public const string Size = \"Size\" Field Value Type Description String SortIndexNumber Declaration public const string SortIndexNumber = \"SortIndexNumber\" Field Value Type Description String SortName The sort name Declaration public const string SortName = \"SortName\" Field Value Type Description String SortParentIndexNumber Declaration public const string SortParentIndexNumber = \"SortParentIndexNumber\" Field Value Type Description String StartDate Declaration public const string StartDate = \"StartDate\" Field Value Type Description String Studio Declaration public const string Studio = \"Studio\" Field Value Type Description String VideoBitRate Declaration public const string VideoBitRate = \"VideoBitRate\" Field Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.LatestItemsQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.LatestItemsQuery.html",
    "title": "Class LatestItemsQuery",
    "keywords": "Class LatestItemsQuery Inheritance Object LatestItemsQuery Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class LatestItemsQuery Properties EnableImages Gets or sets a value indicating whether [enable images]. Declaration public bool? EnableImages { get; set; } Property Value Type Description Nullable < Boolean > null if [enable images] contains no value, true if [enable images]; otherwise, false . EnableImageTypes Gets or sets the enable image types. Declaration public ImageType[] EnableImageTypes { get; set; } Property Value Type Description ImageType [] The enable image types. Fields Fields to return within the items, in addition to basic information Declaration public ItemFields[] Fields { get; set; } Property Value Type Description ItemFields [] The fields. GroupItems Gets or sets a value indicating whether [group items]. Declaration public bool GroupItems { get; set; } Property Value Type Description Boolean true if [group items]; otherwise, false . ImageTypeLimit Gets or sets the image type limit. Declaration public int? ImageTypeLimit { get; set; } Property Value Type Description Nullable < Int32 > The image type limit. IncludeItemTypes Gets or sets the include item types. Declaration public string[] IncludeItemTypes { get; set; } Property Value Type Description String [] The include item types. IsPlayed Gets or sets a value indicating whether this instance is played. Declaration public bool? IsPlayed { get; set; } Property Value Type Description Nullable < Boolean > null if [is played] contains no value, true if [is played]; otherwise, false . Limit The maximum number of items to return Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > The limit. MediaTypes Declaration public string[] MediaTypes { get; set; } Property Value Type Description String [] ParentId Specify this to localize the search to a specific item or folder. Omit to use the root. Declaration public long ParentId { get; set; } Property Value Type Description Int64 The parent id. StartIndex Skips over a given number of items within the results. Use for paging. Declaration public int? StartIndex { get; set; } Property Value Type Description Nullable < Int32 > The start index. UserId The user to localize search results for Declaration public long UserId { get; set; } Property Value Type Description Int64 The user id."
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.MovieRecommendationQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.MovieRecommendationQuery.html",
    "title": "Class MovieRecommendationQuery",
    "keywords": "Class MovieRecommendationQuery Inheritance Object MovieRecommendationQuery Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class MovieRecommendationQuery Constructors MovieRecommendationQuery() Declaration public MovieRecommendationQuery() Properties CategoryLimit Gets or sets the category limit. Declaration public int CategoryLimit { get; set; } Property Value Type Description Int32 The category limit. Fields Gets or sets the fields. Declaration public ItemFields[] Fields { get; set; } Property Value Type Description ItemFields [] The fields. ItemLimit Gets or sets the item limit. Declaration public int ItemLimit { get; set; } Property Value Type Description Int32 The item limit. ParentId Gets or sets the parent identifier. Declaration public string ParentId { get; set; } Property Value Type Description String The parent identifier. UserId Gets or sets the user identifier. Declaration public string UserId { get; set; } Property Value Type Description String The user identifier."
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.NextUpQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.NextUpQuery.html",
    "title": "Class NextUpQuery",
    "keywords": "Class NextUpQuery Inheritance Object NextUpQuery Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class NextUpQuery Constructors NextUpQuery() Declaration public NextUpQuery() Properties EnableImages Gets or sets a value indicating whether [enable images]. Declaration public bool? EnableImages { get; set; } Property Value Type Description Nullable < Boolean > null if [enable images] contains no value, true if [enable images]; otherwise, false . EnableImageTypes Gets or sets the enable image types. Declaration public ImageType[] EnableImageTypes { get; set; } Property Value Type Description ImageType [] The enable image types. EnableTotalRecordCount Declaration public bool EnableTotalRecordCount { get; set; } Property Value Type Description Boolean Fields Fields to return within the items, in addition to basic information Declaration public ItemFields[] Fields { get; set; } Property Value Type Description ItemFields [] The fields. ImageTypeLimit Gets or sets the image type limit. Declaration public int? ImageTypeLimit { get; set; } Property Value Type Description Nullable < Int32 > The image type limit. Limit The maximum number of items to return Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > The limit. NotSyncedToTargetId Declaration public string NotSyncedToTargetId { get; set; } Property Value Type Description String ParentId Gets or sets the parent identifier. Declaration public long ParentId { get; set; } Property Value Type Description Int64 The parent identifier. SeriesId Gets or sets the series id. Declaration public long SeriesId { get; set; } Property Value Type Description Int64 The series id. StartIndex Skips over a given number of items within the results. Use for paging. Declaration public int? StartIndex { get; set; } Property Value Type Description Nullable < Int32 > The start index. UserId Gets or sets the user id. Declaration public long UserId { get; set; } Property Value Type Description Int64 The user id."
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.QueryFilters.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.QueryFilters.html",
    "title": "Class QueryFilters",
    "keywords": "Class QueryFilters Inheritance Object QueryFilters Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class QueryFilters Constructors QueryFilters() Declaration public QueryFilters() Properties Genres Declaration public NameLongIdPair[] Genres { get; set; } Property Value Type Description NameLongIdPair [] Studios Declaration public NameLongIdPair[] Studios { get; set; } Property Value Type Description NameLongIdPair [] Tags Declaration public string[] Tags { get; set; } Property Value Type Description String []"
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.QueryFiltersLegacy.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.QueryFiltersLegacy.html",
    "title": "Class QueryFiltersLegacy",
    "keywords": "Class QueryFiltersLegacy Inheritance Object QueryFiltersLegacy Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class QueryFiltersLegacy Constructors QueryFiltersLegacy() Declaration public QueryFiltersLegacy() Properties Genres Declaration public string[] Genres { get; set; } Property Value Type Description String [] OfficialRatings Declaration public string[] OfficialRatings { get; set; } Property Value Type Description String [] Tags Declaration public string[] Tags { get; set; } Property Value Type Description String [] Years Declaration public int[] Years { get; set; } Property Value Type Description Int32 []"
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.QueryResult-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.QueryResult-1.html",
    "title": "Class QueryResult<T>",
    "keywords": "Class QueryResult<T> Inheritance Object QueryResult<T> ThemeMediaResult Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class QueryResult<T> Type Parameters Name Description T Constructors QueryResult() Declaration public QueryResult() Properties Items Gets or sets the items. Declaration public T[] Items { get; set; } Property Value Type Description T[] The items. TotalRecordCount The total number of records available Declaration public int TotalRecordCount { get; set; } Property Value Type Description Int32 The total record count."
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.SessionQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.SessionQuery.html",
    "title": "Class SessionQuery",
    "keywords": "Class SessionQuery Class SessionQuery Inheritance Object SessionQuery Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class SessionQuery Properties ControllableByUserId Filter by sessions that are allowed to be controlled by a given user Declaration public string ControllableByUserId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.SimilarItemsQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.SimilarItemsQuery.html",
    "title": "Class SimilarItemsQuery",
    "keywords": "Class SimilarItemsQuery Inheritance Object SimilarItemsQuery Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class SimilarItemsQuery Properties Fields Fields to return within the items, in addition to basic information Declaration public ItemFields[] Fields { get; set; } Property Value Type Description ItemFields [] The fields. Id Gets or sets the id. Declaration public string Id { get; set; } Property Value Type Description String The id. Limit The maximum number of items to return Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > The limit. UserId The user to localize search results for Declaration public string UserId { get; set; } Property Value Type Description String The user id."
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.ThemeMediaResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.ThemeMediaResult.html",
    "title": "Class ThemeMediaResult",
    "keywords": "Class ThemeMediaResult Class ThemeMediaResult Inheritance Object QueryResult < BaseItemDto > ThemeMediaResult Inherited Members QueryResult<BaseItemDto>.Items QueryResult<BaseItemDto>.TotalRecordCount Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class ThemeMediaResult : QueryResult<BaseItemDto> Properties OwnerId Gets or sets the owner id. Declaration public long OwnerId { get; set; } Property Value Type Description Int64 The owner id."
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.UpcomingEpisodesQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.UpcomingEpisodesQuery.html",
    "title": "Class UpcomingEpisodesQuery",
    "keywords": "Class UpcomingEpisodesQuery Inheritance Object UpcomingEpisodesQuery Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class UpcomingEpisodesQuery Constructors UpcomingEpisodesQuery() Declaration public UpcomingEpisodesQuery() Properties EnableImages Gets or sets a value indicating whether [enable images]. Declaration public bool? EnableImages { get; set; } Property Value Type Description Nullable < Boolean > null if [enable images] contains no value, true if [enable images]; otherwise, false . EnableImageTypes Gets or sets the enable image types. Declaration public ImageType[] EnableImageTypes { get; set; } Property Value Type Description ImageType [] The enable image types. Fields Fields to return within the items, in addition to basic information Declaration public ItemFields[] Fields { get; set; } Property Value Type Description ItemFields [] The fields. ImageTypeLimit Gets or sets the image type limit. Declaration public int? ImageTypeLimit { get; set; } Property Value Type Description Nullable < Int32 > The image type limit. Limit The maximum number of items to return Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > The limit. ParentId Gets or sets the parent identifier. Declaration public string ParentId { get; set; } Property Value Type Description String The parent identifier. StartIndex Skips over a given number of items within the results. Use for paging. Declaration public int? StartIndex { get; set; } Property Value Type Description Nullable < Int32 > The start index. UserId Gets or sets the user id. Declaration public string UserId { get; set; } Property Value Type Description String The user id."
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.UserDataFields.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.UserDataFields.html",
    "title": "Enum UserDataFields",
    "keywords": "Enum UserDataFields Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public enum UserDataFields Fields Name Description UserDataKey Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<UserDataFields>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Querying.UserQuery.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Querying.UserQuery.html",
    "title": "Class UserQuery",
    "keywords": "Class UserQuery Inheritance Object UserQuery Namespace : MediaBrowser.Model.Querying Assembly : MediaBrowser.Model.dll Syntax public class UserQuery Properties ConnectAccessKey Declaration public string ConnectAccessKey { get; set; } Property Value Type Description String ConnectUserId Declaration public string ConnectUserId { get; set; } Property Value Type Description String EnableLiveTvAccess Declaration public bool? EnableLiveTvAccess { get; set; } Property Value Type Description Nullable < Boolean > EnableRemoteAccess Declaration public bool? EnableRemoteAccess { get; set; } Property Value Type Description Nullable < Boolean > EnableTotalRecordCount Declaration public bool EnableTotalRecordCount { get; set; } Property Value Type Description Boolean HasConnectAccessKey Declaration public bool? HasConnectAccessKey { get; set; } Property Value Type Description Nullable < Boolean > HasConnectUserId Declaration public bool? HasConnectUserId { get; set; } Property Value Type Description Nullable < Boolean > IsAdministrator Declaration public bool? IsAdministrator { get; set; } Property Value Type Description Nullable < Boolean > IsDisabled Declaration public bool? IsDisabled { get; set; } Property Value Type Description Nullable < Boolean > IsDisplayedOnDeviceId Declaration public string IsDisplayedOnDeviceId { get; set; } Property Value Type Description String IsHidden Declaration public bool? IsHidden { get; set; } Property Value Type Description Nullable < Boolean > IsHiddenRemotely Declaration public bool? IsHiddenRemotely { get; set; } Property Value Type Description Nullable < Boolean > Limit Declaration public int? Limit { get; set; } Property Value Type Description Nullable < Int32 > NameStartsWithOrGreater Declaration public string NameStartsWithOrGreater { get; set; } Property Value Type Description String OrderBy Declaration public Tuple<string, SortOrder>[] OrderBy { get; set; } Property Value Type Description Tuple < String , SortOrder >[] StartIndex Declaration public int StartIndex { get; set; } Property Value Type Description Int32"
  },
  "reference/pluginapi/MediaBrowser.Model.Serialization.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Serialization.html",
    "title": "Namespace MediaBrowser.Model.Serialization",
    "keywords": "Namespace MediaBrowser.Model.Serialization Classes IgnoreDataMemberAttribute JsonString Class holding a string that will be transparently parsed or emitted when serialising from or to JSON. Interfaces IJsonSerializer IXmlSerializer"
  },
  "reference/pluginapi/MediaBrowser.Model.Serialization.IgnoreDataMemberAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Serialization.IgnoreDataMemberAttribute.html",
    "title": "Class IgnoreDataMemberAttribute",
    "keywords": "Class IgnoreDataMemberAttribute Inheritance Object Attribute IgnoreDataMemberAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Serialization Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field, Inherited = false, AllowMultiple = false)] public sealed class IgnoreDataMemberAttribute : Attribute Constructors IgnoreDataMemberAttribute() Declaration public IgnoreDataMemberAttribute()"
  },
  "reference/pluginapi/MediaBrowser.Model.Serialization.IJsonSerializer.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Serialization.IJsonSerializer.html",
    "title": "Interface IJsonSerializer",
    "keywords": "Interface IJsonSerializer Namespace : MediaBrowser.Model.Serialization Assembly : MediaBrowser.Model.dll Syntax public interface IJsonSerializer Methods DeserializeFromBytes(ReadOnlySpan<Byte>, Type) Declaration object DeserializeFromBytes(ReadOnlySpan<byte> bytes, Type type) Parameters Type Name Description ReadOnlySpan < Byte > bytes Type type Returns Type Description Object DeserializeFromBytes<T>(ReadOnlySpan<Byte>) Declaration T DeserializeFromBytes<T>(ReadOnlySpan<byte> bytes) Parameters Type Name Description ReadOnlySpan < Byte > bytes Returns Type Description T Type Parameters Name Description T DeserializeFromFile<T>(String) Deserializes from file. Declaration T DeserializeFromFile<T>(string file) where T : class Parameters Type Name Description String file The file. Returns Type Description T ``0. Type Parameters Name Description T Exceptions Type Condition ArgumentNullException file DeserializeFromFileAsync(Type, String) Deserializes from file. Declaration Task<object> DeserializeFromFileAsync(Type type, string file) Parameters Type Name Description Type type The type. String file The file. Returns Type Description Task < Object > System.Object. Exceptions Type Condition ArgumentNullException type DeserializeFromFileAsync<T>(String) Declaration Task<T> DeserializeFromFileAsync<T>(string file) where T : class Parameters Type Name Description String file Returns Type Description Task <T> Type Parameters Name Description T DeserializeFromSpan(ReadOnlySpan<Char>, Type) Declaration object DeserializeFromSpan(ReadOnlySpan<char> json, Type type) Parameters Type Name Description ReadOnlySpan < Char > json Type type Returns Type Description Object DeserializeFromSpan<T>(ReadOnlySpan<Char>) Declaration T DeserializeFromSpan<T>(ReadOnlySpan<char> text) Parameters Type Name Description ReadOnlySpan < Char > text Returns Type Description T Type Parameters Name Description T DeserializeFromStream(Stream, Type) Deserializes from stream. Declaration object DeserializeFromStream(Stream stream, Type type) Parameters Type Name Description Stream stream The stream. Type type The type. Returns Type Description Object System.Object. Exceptions Type Condition ArgumentNullException stream DeserializeFromStream<T>(Stream) Deserializes from stream. Declaration T DeserializeFromStream<T>(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description T ``0. Type Parameters Name Description T Exceptions Type Condition ArgumentNullException stream DeserializeFromStreamAsync(Stream, Type) Declaration Task<object> DeserializeFromStreamAsync(Stream stream, Type type) Parameters Type Name Description Stream stream Type type Returns Type Description Task < Object > DeserializeFromStreamAsync<T>(Stream) Declaration Task<T> DeserializeFromStreamAsync<T>(Stream stream) Parameters Type Name Description Stream stream Returns Type Description Task <T> Type Parameters Name Description T DeserializeFromString(String, Type) Deserializes from string. Declaration object DeserializeFromString(string json, Type type) Parameters Type Name Description String json The json. Type type The type. Returns Type Description Object System.Object. Exceptions Type Condition ArgumentNullException json DeserializeFromString<T>(String) Deserializes from string. Declaration T DeserializeFromString<T>(string text) Parameters Type Name Description String text The text. Returns Type Description T ``0. Type Parameters Name Description T Exceptions Type Condition ArgumentNullException text SerializeToFile(Object, String) Serializes to file. Declaration void SerializeToFile(object obj, string file) Parameters Type Name Description Object obj The obj. String file The file. Exceptions Type Condition ArgumentNullException obj SerializeToSpan(Object) Declaration ReadOnlySpan<char> SerializeToSpan(object obj) Parameters Type Name Description Object obj Returns Type Description ReadOnlySpan < Char > SerializeToStream(Object, Stream) Serializes to stream. Declaration void SerializeToStream(object obj, Stream stream) Parameters Type Name Description Object obj The obj. Stream stream The stream. Exceptions Type Condition ArgumentNullException obj SerializeToString(Object) Serializes to string. Declaration string SerializeToString(object obj) Parameters Type Name Description Object obj The obj. Returns Type Description String System.String. Exceptions Type Condition ArgumentNullException obj"
  },
  "reference/pluginapi/MediaBrowser.Model.Serialization.IXmlSerializer.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Serialization.IXmlSerializer.html",
    "title": "Interface IXmlSerializer",
    "keywords": "Interface IXmlSerializer Namespace : MediaBrowser.Model.Serialization Assembly : MediaBrowser.Model.dll Syntax public interface IXmlSerializer Methods DeserializeFromBytes(Type, Byte[]) Deserializes from bytes. Declaration object DeserializeFromBytes(Type type, byte[] buffer) Parameters Type Name Description Type type The type. Byte [] buffer The buffer. Returns Type Description Object System.Object. DeserializeFromFile(Type, String) Deserializes from file. Declaration object DeserializeFromFile(Type type, string file) Parameters Type Name Description Type type The type. String file The file. Returns Type Description Object System.Object. DeserializeFromStream(Type, Stream) Deserializes from stream. Declaration object DeserializeFromStream(Type type, Stream stream) Parameters Type Name Description Type type The type. Stream stream The stream. Returns Type Description Object System.Object. SerializeToFile(Object, String) Serializes to file. Declaration void SerializeToFile(object obj, string file) Parameters Type Name Description Object obj The obj. String file The file. SerializeToStream(Object, Stream) Serializes to stream. Declaration void SerializeToStream(object obj, Stream stream) Parameters Type Name Description Object obj The obj. Stream stream The stream."
  },
  "reference/pluginapi/MediaBrowser.Model.Serialization.JsonString.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Serialization.JsonString.html",
    "title": "Class JsonString",
    "keywords": "Class JsonString Class holding a string that will be transparently parsed or emitted when serialising from or to JSON. Inheritance Object JsonString Namespace : MediaBrowser.Model.Serialization Assembly : MediaBrowser.Model.dll Syntax public class JsonString Properties Json Declaration public string Json { get; set; } Property Value Type Description String Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators Implicit(String to JsonString) Declaration public static implicit operator JsonString(string value) Parameters Type Name Description String value Returns Type Description JsonString"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.ApiMemberAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.ApiMemberAttribute.html",
    "title": "Class ApiMemberAttribute",
    "keywords": "Class ApiMemberAttribute Inheritance Object Attribute ApiMemberAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = true, Inherited = true)] public class ApiMemberAttribute : Attribute Properties AllowMultiple For query params, this specifies that a comma-separated list of values can be passed to the API. For path and body types, this field cannot be true. Declaration public bool AllowMultiple { get; set; } Property Value Type Description Boolean DataType For path, query, and header paramTypes, this field must be a primitive. For body, this can be a complex or container datatype. Declaration public string DataType { get; set; } Property Value Type Description String Description Gets or sets the human-readable description for the parameter. Declaration public string Description { get; set; } Property Value Type Description String ExcludeInSchema Whether to exclude this property from being included in the ModelSchema Declaration [Obsolete(\"This is not used for API documentation and is otherwise unused as well.\")] public bool ExcludeInSchema { get; set; } Property Value Type Description Boolean IsRequired For path, this is always true. Otherwise, this field tells the client whether or not the field must be supplied. Declaration public bool IsRequired { get; set; } Property Value Type Description Boolean Name Gets or sets unique name for the parameter. Each name must be unique, even if they are associated with different paramType values. Declaration public string Name { get; set; } Property Value Type Description String Remarks Other notes on the name field: If paramType is body, the name is used only for UI and codegeneration. If paramType is path, the name field must correspond to the associated path segment from the path field in the api object. If paramType is query, the name field corresponds to the query param name. ParameterType Gets or sets parameter type: It can be only one of the following: path, query, body, form, or header. Declaration public string ParameterType { get; set; } Property Value Type Description String Route Gets or sets route to which applies attribute, matches using StartsWith. By default applies to all routes. Declaration [Obsolete(\"This is not used for API documentation and is otherwise unused as well.\")] public string Route { get; set; } Property Value Type Description String Verb Gets or sets verb to which applies attribute. By default applies to all verbs. Declaration public string Verb { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.AutoInjectPropertyAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.AutoInjectPropertyAttribute.html",
    "title": "Class AutoInjectPropertyAttribute",
    "keywords": "Class AutoInjectPropertyAttribute Attribute to mark properties for automatic dependency injection. Inheritance Object Attribute AutoInjectPropertyAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = true)] public class AutoInjectPropertyAttribute : Attribute"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.html",
    "title": "Namespace MediaBrowser.Model.Services",
    "keywords": "Namespace MediaBrowser.Model.Services Classes ApiMemberAttribute AutoInjectPropertyAttribute Attribute to mark properties for automatic dependency injection. MyHttpUtility QueryParamCollection RouteAttribute Interfaces IAsyncStreamWriter IHasHeaders IHasRequestFilter IHttpFile IHttpResult IRequest IRequiresRequest IRequiresRequestStream IResponse IReturn IReturn<T> IReturnVoid IService"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IAsyncStreamWriter.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IAsyncStreamWriter.html",
    "title": "Interface IAsyncStreamWriter",
    "keywords": "Interface IAsyncStreamWriter Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IAsyncStreamWriter Methods WriteToAsync(IResponse, CancellationToken) Declaration Task WriteToAsync(IResponse response, CancellationToken cancellationToken) Parameters Type Name Description IResponse response CancellationToken cancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IHasHeaders.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IHasHeaders.html",
    "title": "Interface IHasHeaders",
    "keywords": "Interface IHasHeaders Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IHasHeaders Properties Headers Declaration IDictionary<string, string> Headers { get; } Property Value Type Description IDictionary < String , String >"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IHasRequestFilter.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IHasRequestFilter.html",
    "title": "Interface IHasRequestFilter",
    "keywords": "Interface IHasRequestFilter Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IHasRequestFilter Methods RequestFilter(IRequest, IResponse, Object, CancellationToken) The request filter is executed before the service. Declaration Task RequestFilter(IRequest req, IResponse res, object requestDto, CancellationToken cancellationToken) Parameters Type Name Description IRequest req The http request wrapper IResponse res The http response wrapper Object requestDto The request DTO CancellationToken cancellationToken The cancellation token. Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IHttpFile.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IHttpFile.html",
    "title": "Interface IHttpFile",
    "keywords": "Interface IHttpFile Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IHttpFile Properties ContentLength Declaration long ContentLength { get; } Property Value Type Description Int64 ContentType Declaration string ContentType { get; } Property Value Type Description String FileName Declaration string FileName { get; } Property Value Type Description String InputStream Declaration Stream InputStream { get; } Property Value Type Description Stream Name Declaration string Name { get; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IHttpResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IHttpResult.html",
    "title": "Interface IHttpResult",
    "keywords": "Interface IHttpResult Inherited Members IHasHeaders.Headers Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IHttpResult : IHasHeaders Properties ContentType The HTTP Response ContentType Declaration string ContentType { get; set; } Property Value Type Description String RequestContext Holds the request call context Declaration IRequest RequestContext { get; set; } Property Value Type Description IRequest Status The HTTP Response Status Declaration int Status { get; set; } Property Value Type Description Int32 StatusCode The HTTP Response Status Code Declaration HttpStatusCode StatusCode { get; set; } Property Value Type Description HttpStatusCode"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IRequest.html",
    "title": "Interface IRequest",
    "keywords": "Interface IRequest Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IRequest Properties AbsoluteUri Declaration string AbsoluteUri { get; } Property Value Type Description String Accept The value of the Accept HTTP Request Header Declaration string Accept { get; } Property Value Type Description String AcceptTypes Declaration string[] AcceptTypes { get; } Property Value Type Description String [] Authorization The value of the Authorization Header used to send the Api Key, null if not available Declaration string Authorization { get; } Property Value Type Description String CancellationToken Declaration CancellationToken CancellationToken { get; } Property Value Type Description CancellationToken ConnectionId Declaration string ConnectionId { get; } Property Value Type Description String ContentLength Declaration long ContentLength { get; } Property Value Type Description Int64 ContentType The request ContentType Declaration string ContentType { get; } Property Value Type Description String Dto The Request DTO, after it has been deserialized. Declaration object Dto { get; set; } Property Value Type Description Object Files Access to the multi-part/formdata files posted on this request Declaration IHttpFile[] Files { get; } Property Value Type Description IHttpFile [] Headers Declaration QueryParamCollection Headers { get; } Property Value Type Description QueryParamCollection HttpMethod The HTTP Verb Declaration string HttpMethod { get; } Property Value Type Description String InputStream Declaration Stream InputStream { get; } Property Value Type Description Stream IsLocal Declaration bool IsLocal { get; } Property Value Type Description Boolean IsSecureConnection e.g. is https or not Declaration bool IsSecureConnection { get; } Property Value Type Description Boolean IsSocketConnectionLocal Declaration bool IsSocketConnectionLocal { get; } Property Value Type Description Boolean Items Attach any data to this request that all filters and services can access. Declaration Dictionary<string, object> Items { get; } Property Value Type Description Dictionary < String , Object > PathInfo Declaration string PathInfo { get; } Property Value Type Description String Protocol Declaration string Protocol { get; } Property Value Type Description String QueryString Declaration QueryParamCollection QueryString { get; } Property Value Type Description QueryParamCollection RawUrl Declaration string RawUrl { get; } Property Value Type Description String RemoteIp The Remote Ip as reported by X-Forwarded-For, X-Real-IP or Request.UserHostAddress Declaration IPAddress RemoteIp { get; } Property Value Type Description IPAddress Response Declaration IResponse Response { get; } Property Value Type Description IResponse ResponseContentType The expected Response ContentType for this request Declaration string ResponseContentType { get; set; } Property Value Type Description String UserAgent Declaration string UserAgent { get; } Property Value Type Description String Verb The Verb / HttpMethod or Action for this request Declaration string Verb { get; } Property Value Type Description String XForwardedFor The IP Address of the X-Forwarded-For header, null if null or empty Declaration string XForwardedFor { get; } Property Value Type Description String XForwardedPort The Port number of the X-Forwarded-Port header, null if null or empty Declaration int? XForwardedPort { get; } Property Value Type Description Nullable < Int32 > XForwardedProtocol The http or https scheme of the X-Forwarded-Proto header, null if null or empty Declaration string XForwardedProtocol { get; } Property Value Type Description String XRealIp The value of the X-Real-IP header, null if null or empty Declaration string XRealIp { get; } Property Value Type Description String Methods GetFormData() Declaration Task<QueryParamCollection> GetFormData() Returns Type Description Task < QueryParamCollection > IsInLocalNetwork(CancellationToken) Declaration Task<bool> IsInLocalNetwork(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Boolean >"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IRequiresRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IRequiresRequest.html",
    "title": "Interface IRequiresRequest",
    "keywords": "Interface IRequiresRequest Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IRequiresRequest Properties Request Declaration IRequest Request { get; set; } Property Value Type Description IRequest"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IRequiresRequestStream.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IRequiresRequestStream.html",
    "title": "Interface IRequiresRequestStream",
    "keywords": "Interface IRequiresRequestStream Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IRequiresRequestStream Properties RequestStream The raw Http Request Input Stream Declaration Stream RequestStream { get; set; } Property Value Type Description Stream"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IResponse.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IResponse.html",
    "title": "Interface IResponse",
    "keywords": "Interface IResponse Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IResponse Properties ContentType Declaration string ContentType { get; set; } Property Value Type Description String Headers Declaration QueryParamCollection Headers { get; } Property Value Type Description QueryParamCollection IsClosed Gets a value indicating whether this instance is closed. Declaration bool IsClosed { get; } Property Value Type Description Boolean Items Declaration Dictionary<string, object> Items { get; } Property Value Type Description Dictionary < String , Object > OutputWriter Declaration PipeWriter OutputWriter { get; } Property Value Type Description PipeWriter Request Declaration IRequest Request { get; } Property Value Type Description IRequest SendChunked Declaration bool SendChunked { get; set; } Property Value Type Description Boolean SentHeaders Declaration bool SentHeaders { get; } Property Value Type Description Boolean StatusCode Declaration int StatusCode { get; set; } Property Value Type Description Int32 StatusDescription Declaration string StatusDescription { get; set; } Property Value Type Description String Methods AddHeader(String, String) Declaration void AddHeader(string name, string value) Parameters Type Name Description String name String value CompleteAsync() Signal that this response has been handled and no more processing should be done. When used in a request or response filter, no more filters or processing is done on this request. Declaration Task CompleteAsync() Returns Type Description Task GetHeader(String) Declaration string GetHeader(string name) Parameters Type Name Description String name Returns Type Description String Redirect(String) Declaration void Redirect(string url) Parameters Type Name Description String url SetContentLength(Int64) Declaration void SetContentLength(long contentLength) Parameters Type Name Description Int64 contentLength TransmitFile(String, Int64, Int64, FileShareMode, CancellationToken) Declaration Task TransmitFile(string path, long offset, long count, FileShareMode fileShareMode, CancellationToken cancellationToken) Parameters Type Name Description String path Int64 offset Int64 count FileShareMode fileShareMode CancellationToken cancellationToken Returns Type Description Task"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IReturn.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IReturn.html",
    "title": "Interface IReturn",
    "keywords": "Interface IReturn Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IReturn"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IReturn-1.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IReturn-1.html",
    "title": "Interface IReturn<T>",
    "keywords": "Interface IReturn<T> Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IReturn<T> : IReturn Type Parameters Name Description T"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IReturnVoid.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IReturnVoid.html",
    "title": "Interface IReturnVoid",
    "keywords": "Interface IReturnVoid Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IReturnVoid : IReturn"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.IService.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.IService.html",
    "title": "Interface IService",
    "keywords": "Interface IService Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public interface IService"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.MyHttpUtility.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.MyHttpUtility.html",
    "title": "Class MyHttpUtility",
    "keywords": "Class MyHttpUtility Inheritance Object MyHttpUtility Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public static class MyHttpUtility Methods ParseQueryString(String) Declaration public static QueryParamCollection ParseQueryString(string query) Parameters Type Name Description String query Returns Type Description QueryParamCollection RemoveQueryParamsFromQueryString(ReadOnlySpan<Char>, String[]) Declaration public static string RemoveQueryParamsFromQueryString(ReadOnlySpan<char> query, string[] keys) Parameters Type Name Description ReadOnlySpan < Char > query String [] keys Returns Type Description String RemoveQueryParamsFromUrl(ReadOnlySpan<Char>, String[]) Declaration public static string RemoveQueryParamsFromUrl(ReadOnlySpan<char> url, string[] keys) Parameters Type Name Description ReadOnlySpan < Char > url String [] keys Returns Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.QueryParamCollection.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.QueryParamCollection.html",
    "title": "Class QueryParamCollection",
    "keywords": "Class QueryParamCollection Inheritance Object List < NameValuePair > QueryParamCollection Implements IList < NameValuePair > ICollection < NameValuePair > IReadOnlyList < NameValuePair > IReadOnlyCollection < NameValuePair > IEnumerable < NameValuePair > IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<MediaBrowser.Model.Dto.NameValuePair>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<MediaBrowser.Model.Dto.NameValuePair>.System.Collections.IList.set_Item(System.Int32, System.Object) List<NameValuePair>.Add(NameValuePair) List<NameValuePair>.AddRange(IEnumerable<NameValuePair>) List<NameValuePair>.AsReadOnly() List<NameValuePair>.BinarySearch(NameValuePair) List<NameValuePair>.BinarySearch(NameValuePair, IComparer<NameValuePair>) List<NameValuePair>.BinarySearch(Int32, Int32, NameValuePair, IComparer<NameValuePair>) List<NameValuePair>.Clear() List<NameValuePair>.Contains(NameValuePair) List<NameValuePair>.ConvertAll<TOutput>(Converter<NameValuePair, TOutput>) List<NameValuePair>.CopyTo(NameValuePair[]) List<NameValuePair>.CopyTo(NameValuePair[], Int32) List<NameValuePair>.CopyTo(Int32, NameValuePair[], Int32, Int32) List<NameValuePair>.Exists(Predicate<NameValuePair>) List<NameValuePair>.Find(Predicate<NameValuePair>) List<NameValuePair>.FindAll(Predicate<NameValuePair>) List<NameValuePair>.FindIndex(Int32, Int32, Predicate<NameValuePair>) List<NameValuePair>.FindIndex(Int32, Predicate<NameValuePair>) List<NameValuePair>.FindIndex(Predicate<NameValuePair>) List<NameValuePair>.FindLast(Predicate<NameValuePair>) List<NameValuePair>.FindLastIndex(Int32, Int32, Predicate<NameValuePair>) List<NameValuePair>.FindLastIndex(Int32, Predicate<NameValuePair>) List<NameValuePair>.FindLastIndex(Predicate<NameValuePair>) List<NameValuePair>.ForEach(Action<NameValuePair>) List<NameValuePair>.GetEnumerator() List<NameValuePair>.GetRange(Int32, Int32) List<NameValuePair>.IndexOf(NameValuePair) List<NameValuePair>.IndexOf(NameValuePair, Int32) List<NameValuePair>.IndexOf(NameValuePair, Int32, Int32) List<NameValuePair>.Insert(Int32, NameValuePair) List<NameValuePair>.InsertRange(Int32, IEnumerable<NameValuePair>) List<NameValuePair>.LastIndexOf(NameValuePair) List<NameValuePair>.LastIndexOf(NameValuePair, Int32) List<NameValuePair>.LastIndexOf(NameValuePair, Int32, Int32) List<NameValuePair>.Remove(NameValuePair) List<NameValuePair>.RemoveAll(Predicate<NameValuePair>) List<NameValuePair>.RemoveAt(Int32) List<NameValuePair>.RemoveRange(Int32, Int32) List<NameValuePair>.Reverse() List<NameValuePair>.Reverse(Int32, Int32) List<NameValuePair>.Sort() List<NameValuePair>.Sort(IComparer<NameValuePair>) List<NameValuePair>.Sort(Comparison<NameValuePair>) List<NameValuePair>.Sort(Int32, Int32, IComparer<NameValuePair>) List<NameValuePair>.IEnumerable<NameValuePair>.GetEnumerator() List<NameValuePair>.ICollection.CopyTo(Array, Int32) List<NameValuePair>.IEnumerable.GetEnumerator() List<NameValuePair>.IList.Add(Object) List<NameValuePair>.IList.Contains(Object) List<NameValuePair>.IList.IndexOf(Object) List<NameValuePair>.IList.Insert(Int32, Object) List<NameValuePair>.IList.Remove(Object) List<NameValuePair>.ToArray() List<NameValuePair>.TrimExcess() List<NameValuePair>.TrueForAll(Predicate<NameValuePair>) List<NameValuePair>.Capacity List<NameValuePair>.Count List<NameValuePair>.Item[Int32] List<NameValuePair>.ICollection<NameValuePair>.IsReadOnly List<NameValuePair>.ICollection.IsSynchronized List<NameValuePair>.ICollection.SyncRoot List<NameValuePair>.IList.IsFixedSize List<NameValuePair>.IList.IsReadOnly List<NameValuePair>.IList.Item[Int32] Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax public class QueryParamCollection : List<NameValuePair>, IList<NameValuePair>, ICollection<NameValuePair>, IReadOnlyList<NameValuePair>, IReadOnlyCollection<NameValuePair>, IEnumerable<NameValuePair>, IList, ICollection, IEnumerable Constructors QueryParamCollection() Declaration public QueryParamCollection() QueryParamCollection(IDictionary<String, String>) Declaration public QueryParamCollection(IDictionary<string, string> headers) Parameters Type Name Description IDictionary < String , String > headers Properties Item[String] Gets or sets a query parameter value by name. A query may contain multiple values of the same name (i.e. \"x=1&x=2\"), in which case the value is an array, which works for both getting and setting. Declaration public string this[string name] { get; set; } Parameters Type Name Description String name The query parameter name Property Value Type Description String The query parameter value or array of values Keys Declaration public string[] Keys { get; } Property Value Type Description String [] Methods Add(String, String) Adds a new query parameter. Declaration public virtual void Add(string key, string value) Parameters Type Name Description String key String value Get(Int32) Declaration public string Get(int index) Parameters Type Name Description Int32 index Returns Type Description String Get(String) Declaration public string Get(string name) Parameters Type Name Description String name Returns Type Description String GetItems(String) Declaration public virtual List<NameValuePair> GetItems(string name) Parameters Type Name Description String name Returns Type Description List < NameValuePair > GetKey(Int32) Declaration public string GetKey(int index) Parameters Type Name Description Int32 index Returns Type Description String GetValues(Int32) Declaration public virtual string[] GetValues(int index) Parameters Type Name Description Int32 index Returns Type Description String [] GetValues(String) Declaration public virtual List<string> GetValues(string name) Parameters Type Name Description String name Returns Type Description List < String > Remove(String) Removes all parameters of the given name. Declaration public virtual int Remove(string name) Parameters Type Name Description String name Returns Type Description Int32 The number of parameters that were removed Exceptions Type Condition ArgumentNullException name is null. Set(String, String) Declaration public virtual void Set(string key, string value) Parameters Type Name Description String key String value ToDictionary() Declaration public Dictionary<string, string> ToDictionary() Returns Type Description Dictionary < String , String > ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods LinqExtensions.ToArray<TSource>(IEnumerable<TSource>, Int32) SortExtensions.OrderByString<T>(IEnumerable<T>, Func<T, String>) SortExtensions.OrderByStringDescending<T>(IEnumerable<T>, Func<T, String>)"
  },
  "reference/pluginapi/MediaBrowser.Model.Services.RouteAttribute.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Services.RouteAttribute.html",
    "title": "Class RouteAttribute",
    "keywords": "Class RouteAttribute Inheritance Object Attribute RouteAttribute Inherited Members Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Namespace : MediaBrowser.Model.Services Assembly : MediaBrowser.Model.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = true, Inherited = true)] public class RouteAttribute : Attribute Constructors RouteAttribute(String) Initializes an instance of the RouteAttribute class. Declaration public RouteAttribute(string path) Parameters Type Name Description String path The path template to map to the request. See RouteAttribute.Path for details on the correct format. RouteAttribute(String, String) Initializes an instance of the RouteAttribute class. Declaration public RouteAttribute(string path, string verbs) Parameters Type Name Description String path The path template to map to the request. See RouteAttribute.Path for details on the correct format. String verbs A comma-delimited list of HTTP verbs supported by the service. If unspecified, all verbs are assumed to be supported. Properties Description Declaration public string Description { get; set; } Property Value Type Description String IsHidden Declaration public bool IsHidden { get; set; } Property Value Type Description Boolean Notes Gets or sets longer text to explain the behaviour of the route. Declaration public string Notes { get; set; } Property Value Type Description String Path Gets or sets the path template to be mapped to the request. Declaration public string Path { get; set; } Property Value Type Description String A String value providing the path mapped to the request. Never null . Remarks Some examples of valid paths are: Variables are specified within \"{}\" brackets. Each variable in the path is mapped to the same-named property on the request DTO. At runtime, ServiceStack will parse the request URL, extract the variable values, instantiate the request DTO, and assign the variable values into the corresponding request properties, prior to passing the request DTO to the service object for processing. It is not necessary to specify all request properties as variables in the path. For unspecified properties, callers may provide values in the query string. For example: the URL \"http://services/Inventory?Category=Books&ItemId=12345\" causes the same request DTO to be processed as \"http://services/Inventory/Books/12345\", provided that the paths \"/Inventory\" (which supports the first URL) and \"/Inventory/{Category}/{ItemId}\" (which supports the second URL) are both mapped to the request DTO. Please note that while it is possible to specify property values in the query string, it is generally considered to be less RESTful and less desirable than to specify them as variables in the path. Using the query string to specify property values may also interfere with HTTP caching. The final variable in the path may contain a \"*\" suffix to grab all remaining segments in the path portion of the request URL and assign them to a single property on the request DTO. For example, if the path \"/Inventory/{ItemPath*}\" is mapped to the request DTO, then the request URL \"http://services/Inventory/Books/12345\" will result in a request DTO whose ItemPath property contains \"Books/12345\". You may only specify one such variable in the path, and it must be positioned at the end of the path. Priority Used to rank the precedences of route definitions in reverse routing. i.e. Priorities below 0 are auto-generated have less precedence. Declaration public int Priority { get; set; } Property Value Type Description Int32 Summary Gets or sets short summary of what the route does. Declaration public string Summary { get; set; } Property Value Type Description String Verbs Gets or sets a comma-delimited list of HTTP verbs supported by the service, such as \"GET,PUT,POST,DELETE\". Declaration public string Verbs { get; set; } Property Value Type Description String A String providing a comma-delimited list of HTTP verbs supported by the service, null or empty if all verbs are supported. Methods Equals(RouteAttribute) Declaration protected bool Equals(RouteAttribute other) Parameters Type Name Description RouteAttribute other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Attribute.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Attribute.GetHashCode()"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.BrowseRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.BrowseRequest.html",
    "title": "Class BrowseRequest",
    "keywords": "Class BrowseRequest Class BrowseRequest Inheritance Object BrowseRequest Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class BrowseRequest Properties ItemId Gets or sets the item id. Declaration public string ItemId { get; set; } Property Value Type Description String The item id. ItemName Gets or sets the name of the item. Declaration public string ItemName { get; set; } Property Value Type Description String The name of the item. ItemType Artist, Genre, Studio, Person, or any kind of BaseItem Declaration public string ItemType { get; set; } Property Value Type Description String The type of the item."
  },
  "reference/pluginapi/MediaBrowser.Model.Session.ClientCapabilities.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.ClientCapabilities.html",
    "title": "Class ClientCapabilities",
    "keywords": "Class ClientCapabilities Inheritance Object ClientCapabilities Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class ClientCapabilities Properties AppId Declaration public string AppId { get; set; } Property Value Type Description String DeviceProfile Declaration public DeviceProfile DeviceProfile { get; set; } Property Value Type Description DeviceProfile IconUrl Declaration public string IconUrl { get; set; } Property Value Type Description String PlayableMediaTypes Declaration public string[] PlayableMediaTypes { get; set; } Property Value Type Description String [] PushToken Declaration public string PushToken { get; set; } Property Value Type Description String PushTokenType Declaration public string PushTokenType { get; set; } Property Value Type Description String SupportedCommands Declaration public string[] SupportedCommands { get; set; } Property Value Type Description String [] SupportsMediaControl Declaration public bool SupportsMediaControl { get; set; } Property Value Type Description Boolean SupportsSync Declaration public bool SupportsSync { get; set; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.GeneralCommand.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.GeneralCommand.html",
    "title": "Class GeneralCommand",
    "keywords": "Class GeneralCommand Inheritance Object GeneralCommand Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class GeneralCommand Constructors GeneralCommand() Declaration public GeneralCommand() Properties Arguments Declaration public Dictionary<string, string> Arguments { get; set; } Property Value Type Description Dictionary < String , String > ControllingUserId Declaration public string ControllingUserId { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.GeneralCommandType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.GeneralCommandType.html",
    "title": "Enum GeneralCommandType",
    "keywords": "Enum GeneralCommandType This exists simply to identify a set of known commands. Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public enum GeneralCommandType Fields Name Description Back ChannelDown ChannelUp DisplayContent DisplayMessage GoHome GoToSearch GoToSettings Guide MoveDown MoveLeft MovePlaylistItem MoveRight MoveUp Mute NextLetter PageDown PageUp PlayMediaSource PlayTrailers PreviousLetter RemoveFromPlaylist Select SendKey SendString SetAudioStreamIndex SetCurrentPlaylistItem SetMaxStreamingBitrate SetPlaybackRate SetRepeatMode SetSubtitleOffset SetSubtitleStreamIndex SetVolume TakeScreenshot ToggleContextMenu ToggleFullscreen ToggleMute ToggleOsd ToggleStats Unmute VolumeDown VolumeUp Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<GeneralCommandType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.html",
    "title": "Namespace MediaBrowser.Model.Session",
    "keywords": "Namespace MediaBrowser.Model.Session Classes BrowseRequest Class BrowseRequest ClientCapabilities GeneralCommand MessageCommand PlaybackProgressInfo Class PlaybackProgressInfo. PlaybackStartInfo Class PlaybackStartInfo. PlaybackStopInfo Class PlaybackStopInfo. PlayerStateInfo PlayRequest Class PlayRequest PlaystateRequest QueueItem SessionUserInfo Class SessionUserInfo. TranscodingInfo UserDataChangeInfo Class UserDataChangeInfo Enums GeneralCommandType This exists simply to identify a set of known commands. PlayCommand Enum PlayCommand PlayMethod PlaystateCommand Enum PlaystateCommand ProgressEvent RepeatMode TranscodeReason"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.MessageCommand.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.MessageCommand.html",
    "title": "Class MessageCommand",
    "keywords": "Class MessageCommand Inheritance Object MessageCommand Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class MessageCommand Properties Header Declaration public string Header { get; set; } Property Value Type Description String Text Declaration public string Text { get; set; } Property Value Type Description String TimeoutMs Declaration public long? TimeoutMs { get; set; } Property Value Type Description Nullable < Int64 >"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.PlaybackProgressInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.PlaybackProgressInfo.html",
    "title": "Class PlaybackProgressInfo",
    "keywords": "Class PlaybackProgressInfo Class PlaybackProgressInfo. Inheritance Object PlaybackProgressInfo PlaybackStartInfo Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class PlaybackProgressInfo Constructors PlaybackProgressInfo() Declaration public PlaybackProgressInfo() Properties AspectRatio Declaration public string AspectRatio { get; set; } Property Value Type Description String AudioStreamIndex Gets or sets the index of the audio stream. Declaration public int? AudioStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > The index of the audio stream. Brightness Declaration public int? Brightness { get; set; } Property Value Type Description Nullable < Int32 > CanSeek Gets or sets a value indicating whether this instance can seek. Declaration public bool CanSeek { get; set; } Property Value Type Description Boolean true if this instance can seek; otherwise, false . EventName Declaration public ProgressEvent EventName { get; set; } Property Value Type Description ProgressEvent IsMuted Gets or sets a value indicating whether this instance is muted. Declaration public bool IsMuted { get; set; } Property Value Type Description Boolean true if this instance is muted; otherwise, false . IsPaused Gets or sets a value indicating whether this instance is paused. Declaration public bool IsPaused { get; set; } Property Value Type Description Boolean true if this instance is paused; otherwise, false . Item Gets or sets the item. Declaration public BaseItemDto Item { get; set; } Property Value Type Description BaseItemDto The item. ItemId Gets or sets the item identifier. Declaration public string ItemId { get; set; } Property Value Type Description String The item identifier. LiveStreamId Gets or sets the live stream identifier. Declaration public string LiveStreamId { get; set; } Property Value Type Description String The live stream identifier. MediaSourceId Gets or sets the media version identifier. Declaration public string MediaSourceId { get; set; } Property Value Type Description String The media version identifier. NowPlayingQueue Declaration public QueueItem[] NowPlayingQueue { get; set; } Property Value Type Description QueueItem [] PlaybackRate Declaration public double PlaybackRate { get; set; } Property Value Type Description Double PlaybackStartTimeTicks Declaration public long? PlaybackStartTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > PlaylistIndex Declaration public int PlaylistIndex { get; set; } Property Value Type Description Int32 PlaylistItemId Declaration public string PlaylistItemId { get; set; } Property Value Type Description String PlaylistItemIds Declaration public string[] PlaylistItemIds { get; set; } Property Value Type Description String [] PlaylistLength Declaration public int PlaylistLength { get; set; } Property Value Type Description Int32 PlayMethod Gets or sets the play method. Declaration public PlayMethod PlayMethod { get; set; } Property Value Type Description PlayMethod The play method. PlaySessionId Gets or sets the play session identifier. Declaration public string PlaySessionId { get; set; } Property Value Type Description String The play session identifier. PositionTicks Gets or sets the position ticks. Declaration public long? PositionTicks { get; set; } Property Value Type Description Nullable < Int64 > The position ticks. RepeatMode Gets or sets the repeat mode. Declaration public RepeatMode RepeatMode { get; set; } Property Value Type Description RepeatMode The repeat mode. RunTimeTicks Declaration public long? RunTimeTicks { get; set; } Property Value Type Description Nullable < Int64 > SessionId Gets or sets the session id. Declaration public string SessionId { get; set; } Property Value Type Description String The session id. SubtitleOffset Declaration public int SubtitleOffset { get; set; } Property Value Type Description Int32 SubtitleStreamIndex Gets or sets the index of the subtitle stream. Declaration public int? SubtitleStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > The index of the subtitle stream. VolumeLevel Gets or sets the volume level. Declaration public int? VolumeLevel { get; set; } Property Value Type Description Nullable < Int32 > The volume level."
  },
  "reference/pluginapi/MediaBrowser.Model.Session.PlaybackStartInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.PlaybackStartInfo.html",
    "title": "Class PlaybackStartInfo",
    "keywords": "Class PlaybackStartInfo Class PlaybackStartInfo. Inheritance Object PlaybackProgressInfo PlaybackStartInfo Inherited Members PlaybackProgressInfo.CanSeek PlaybackProgressInfo.Item PlaybackProgressInfo.NowPlayingQueue PlaybackProgressInfo.PlaylistItemId PlaybackProgressInfo.ItemId PlaybackProgressInfo.SessionId PlaybackProgressInfo.MediaSourceId PlaybackProgressInfo.AudioStreamIndex PlaybackProgressInfo.SubtitleStreamIndex PlaybackProgressInfo.IsPaused PlaybackProgressInfo.PlaylistIndex PlaybackProgressInfo.PlaylistLength PlaybackProgressInfo.IsMuted PlaybackProgressInfo.PositionTicks PlaybackProgressInfo.RunTimeTicks PlaybackProgressInfo.PlaybackStartTimeTicks PlaybackProgressInfo.VolumeLevel PlaybackProgressInfo.Brightness PlaybackProgressInfo.AspectRatio PlaybackProgressInfo.EventName PlaybackProgressInfo.PlayMethod PlaybackProgressInfo.LiveStreamId PlaybackProgressInfo.PlaySessionId PlaybackProgressInfo.RepeatMode PlaybackProgressInfo.SubtitleOffset PlaybackProgressInfo.PlaybackRate PlaybackProgressInfo.PlaylistItemIds Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class PlaybackStartInfo : PlaybackProgressInfo"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.PlaybackStopInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.PlaybackStopInfo.html",
    "title": "Class PlaybackStopInfo",
    "keywords": "Class PlaybackStopInfo Class PlaybackStopInfo. Inheritance Object PlaybackStopInfo Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class PlaybackStopInfo Properties Failed Gets or sets a value indicating whether this PlaybackStopInfo is failed. Declaration public bool Failed { get; set; } Property Value Type Description Boolean true if failed; otherwise, false . Item Gets or sets the item. Declaration public BaseItemDto Item { get; set; } Property Value Type Description BaseItemDto The item. ItemId Gets or sets the item identifier. Declaration public string ItemId { get; set; } Property Value Type Description String The item identifier. LiveStreamId Gets or sets the live stream identifier. Declaration public string LiveStreamId { get; set; } Property Value Type Description String The live stream identifier. MediaSourceId Gets or sets the media version identifier. Declaration public string MediaSourceId { get; set; } Property Value Type Description String The media version identifier. NextMediaType Declaration public string NextMediaType { get; set; } Property Value Type Description String NowPlayingQueue Declaration public QueueItem[] NowPlayingQueue { get; set; } Property Value Type Description QueueItem [] PlaylistIndex Declaration public int PlaylistIndex { get; set; } Property Value Type Description Int32 PlaylistItemId Declaration public string PlaylistItemId { get; set; } Property Value Type Description String PlaylistLength Declaration public int PlaylistLength { get; set; } Property Value Type Description Int32 PlaySessionId Gets or sets the play session identifier. Declaration public string PlaySessionId { get; set; } Property Value Type Description String The play session identifier. PositionTicks Gets or sets the position ticks. Declaration public long? PositionTicks { get; set; } Property Value Type Description Nullable < Int64 > The position ticks. SessionId Gets or sets the session id. Declaration public string SessionId { get; set; } Property Value Type Description String The session id."
  },
  "reference/pluginapi/MediaBrowser.Model.Session.PlayCommand.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.PlayCommand.html",
    "title": "Enum PlayCommand",
    "keywords": "Enum PlayCommand Enum PlayCommand Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public enum PlayCommand Fields Name Description PlayInstantMix The play instant mix PlayLast The play last PlayNext The play next PlayNow The play now PlayShuffle The play shuffle Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<PlayCommand>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.PlayerStateInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.PlayerStateInfo.html",
    "title": "Class PlayerStateInfo",
    "keywords": "Class PlayerStateInfo Inheritance Object PlayerStateInfo Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class PlayerStateInfo Constructors PlayerStateInfo() Declaration public PlayerStateInfo() Properties AudioStreamIndex Gets or sets the index of the now playing audio stream. Declaration public int? AudioStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > The index of the now playing audio stream. CanSeek Gets or sets a value indicating whether this instance can seek. Declaration public bool CanSeek { get; set; } Property Value Type Description Boolean true if this instance can seek; otherwise, false . IsMuted Gets or sets a value indicating whether this instance is muted. Declaration public bool IsMuted { get; set; } Property Value Type Description Boolean true if this instance is muted; otherwise, false . IsPaused Gets or sets a value indicating whether this instance is paused. Declaration public bool IsPaused { get; set; } Property Value Type Description Boolean true if this instance is paused; otherwise, false . MediaSourceId Gets or sets the now playing media version identifier. Declaration public string MediaSourceId { get; set; } Property Value Type Description String The now playing media version identifier. PlaybackRate Declaration public double PlaybackRate { get; set; } Property Value Type Description Double PlayMethod Gets or sets the play method. Declaration public PlayMethod? PlayMethod { get; set; } Property Value Type Description Nullable < PlayMethod > The play method. PositionTicks Gets or sets the now playing position ticks. Declaration public long? PositionTicks { get; set; } Property Value Type Description Nullable < Int64 > The now playing position ticks. RepeatMode Gets or sets the repeat mode. Declaration public RepeatMode RepeatMode { get; set; } Property Value Type Description RepeatMode The repeat mode. SubtitleOffset Declaration public int SubtitleOffset { get; set; } Property Value Type Description Int32 SubtitleStreamIndex Gets or sets the index of the now playing subtitle stream. Declaration public int? SubtitleStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > The index of the now playing subtitle stream. VolumeLevel Gets or sets the volume level. Declaration public int? VolumeLevel { get; set; } Property Value Type Description Nullable < Int32 > The volume level."
  },
  "reference/pluginapi/MediaBrowser.Model.Session.PlayMethod.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.PlayMethod.html",
    "title": "Enum PlayMethod",
    "keywords": "Enum PlayMethod Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public enum PlayMethod Fields Name Description DirectPlay DirectStream Transcode Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<PlayMethod>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.PlayRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.PlayRequest.html",
    "title": "Class PlayRequest",
    "keywords": "Class PlayRequest Class PlayRequest Inheritance Object PlayRequest Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class PlayRequest Properties AudioStreamIndex Declaration public int? AudioStreamIndex { get; set; } Property Value Type Description Nullable < Int32 > ControllingUserId Gets or sets the controlling user identifier. Declaration public string ControllingUserId { get; set; } Property Value Type Description String The controlling user identifier. ItemIds Gets or sets the item ids. Declaration public long[] ItemIds { get; set; } Property Value Type Description Int64 [] The item ids. MediaSourceId Declaration public string MediaSourceId { get; set; } Property Value Type Description String PlayCommand Gets or sets the play command. Declaration public PlayCommand PlayCommand { get; set; } Property Value Type Description PlayCommand The play command. StartIndex Declaration public int? StartIndex { get; set; } Property Value Type Description Nullable < Int32 > StartPositionTicks Gets or sets the start position ticks that the first item should be played at Declaration public long? StartPositionTicks { get; set; } Property Value Type Description Nullable < Int64 > The start position ticks. SubtitleStreamIndex Declaration public int? SubtitleStreamIndex { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.PlaystateCommand.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.PlaystateCommand.html",
    "title": "Enum PlaystateCommand",
    "keywords": "Enum PlaystateCommand Enum PlaystateCommand Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public enum PlaystateCommand Fields Name Description FastForward The fast forward NextTrack The next track Pause The pause PlayPause PreviousTrack The previous track Rewind The rewind Seek The seek Stop The stop Unpause The unpause Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<PlaystateCommand>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.PlaystateRequest.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.PlaystateRequest.html",
    "title": "Class PlaystateRequest",
    "keywords": "Class PlaystateRequest Inheritance Object PlaystateRequest Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class PlaystateRequest Properties Command Declaration public PlaystateCommand Command { get; set; } Property Value Type Description PlaystateCommand ControllingUserId Gets or sets the controlling user identifier. Declaration public string ControllingUserId { get; set; } Property Value Type Description String The controlling user identifier. SeekPositionTicks Declaration public long? SeekPositionTicks { get; set; } Property Value Type Description Nullable < Int64 >"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.ProgressEvent.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.ProgressEvent.html",
    "title": "Enum ProgressEvent",
    "keywords": "Enum ProgressEvent Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public enum ProgressEvent Fields Name Description AudioTrackChange Pause PlaybackRateChange PlaylistItemAdd PlaylistItemMove PlaylistItemRemove QualityChange RepeatModeChange StateChange SubtitleOffsetChange SubtitleTrackChange TimeUpdate Unpause VolumeChange Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ProgressEvent>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.QueueItem.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.QueueItem.html",
    "title": "Class QueueItem",
    "keywords": "Class QueueItem Inheritance Object QueueItem Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class QueueItem Properties Id Declaration public long Id { get; set; } Property Value Type Description Int64 PlaylistItemId Declaration public string PlaylistItemId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.RepeatMode.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.RepeatMode.html",
    "title": "Enum RepeatMode",
    "keywords": "Enum RepeatMode Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public enum RepeatMode Fields Name Description RepeatAll RepeatNone RepeatOne Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<RepeatMode>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.SessionUserInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.SessionUserInfo.html",
    "title": "Class SessionUserInfo",
    "keywords": "Class SessionUserInfo Class SessionUserInfo. Inheritance Object SessionUserInfo Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class SessionUserInfo Properties UserId Gets or sets the user identifier. Declaration public string UserId { get; set; } Property Value Type Description String The user identifier. UserInternalId Declaration [IgnoreDataMember] public long UserInternalId { get; set; } Property Value Type Description Int64 UserName Gets or sets the name of the user. Declaration public string UserName { get; set; } Property Value Type Description String The name of the user."
  },
  "reference/pluginapi/MediaBrowser.Model.Session.TranscodeReason.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.TranscodeReason.html",
    "title": "Enum TranscodeReason",
    "keywords": "Enum TranscodeReason Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public enum TranscodeReason Fields Name Description AnamorphicVideoNotSupported AudioBitDepthNotSupported AudioBitrateNotSupported AudioChannelsNotSupported AudioCodecNotSupported AudioProfileNotSupported AudioSampleRateNotSupported ContainerBitrateExceedsLimit ContainerNotSupported DirectPlayError InterlacedVideoNotSupported RefFramesNotSupported SecondaryAudioNotSupported SubtitleCodecNotSupported UnknownAudioStreamInfo UnknownVideoStreamInfo VideoBitDepthNotSupported VideoBitrateNotSupported VideoCodecNotSupported VideoFramerateNotSupported VideoLevelNotSupported VideoProfileNotSupported VideoRangeNotSupported VideoResolutionNotSupported Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<TranscodeReason>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.Transcoding.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.Transcoding.html",
    "title": "Namespace MediaBrowser.Model.Session.Transcoding",
    "keywords": "Namespace MediaBrowser.Model.Session.Transcoding Classes VideoPipelineInfo VpStepInfo Enums VpStepTypes Video Processing Step Type enum."
  },
  "reference/pluginapi/MediaBrowser.Model.Session.Transcoding.VideoPipelineInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.Transcoding.VideoPipelineInfo.html",
    "title": "Class VideoPipelineInfo",
    "keywords": "Class VideoPipelineInfo Inheritance Object List < VpStepInfo > VideoPipelineInfo Implements IList < VpStepInfo > ICollection < VpStepInfo > IReadOnlyList < VpStepInfo > IReadOnlyCollection < VpStepInfo > IEnumerable < VpStepInfo > IList ICollection IEnumerable Inherited Members System.Collections.Generic.List<MediaBrowser.Model.Session.Transcoding.VpStepInfo>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<MediaBrowser.Model.Session.Transcoding.VpStepInfo>.System.Collections.IList.set_Item(System.Int32, System.Object) List<VpStepInfo>.Add(VpStepInfo) List<VpStepInfo>.AddRange(IEnumerable<VpStepInfo>) List<VpStepInfo>.AsReadOnly() List<VpStepInfo>.BinarySearch(VpStepInfo) List<VpStepInfo>.BinarySearch(VpStepInfo, IComparer<VpStepInfo>) List<VpStepInfo>.BinarySearch(Int32, Int32, VpStepInfo, IComparer<VpStepInfo>) List<VpStepInfo>.Clear() List<VpStepInfo>.Contains(VpStepInfo) List<VpStepInfo>.ConvertAll<TOutput>(Converter<VpStepInfo, TOutput>) List<VpStepInfo>.CopyTo(VpStepInfo[]) List<VpStepInfo>.CopyTo(VpStepInfo[], Int32) List<VpStepInfo>.CopyTo(Int32, VpStepInfo[], Int32, Int32) List<VpStepInfo>.Exists(Predicate<VpStepInfo>) List<VpStepInfo>.Find(Predicate<VpStepInfo>) List<VpStepInfo>.FindAll(Predicate<VpStepInfo>) List<VpStepInfo>.FindIndex(Int32, Int32, Predicate<VpStepInfo>) List<VpStepInfo>.FindIndex(Int32, Predicate<VpStepInfo>) List<VpStepInfo>.FindIndex(Predicate<VpStepInfo>) List<VpStepInfo>.FindLast(Predicate<VpStepInfo>) List<VpStepInfo>.FindLastIndex(Int32, Int32, Predicate<VpStepInfo>) List<VpStepInfo>.FindLastIndex(Int32, Predicate<VpStepInfo>) List<VpStepInfo>.FindLastIndex(Predicate<VpStepInfo>) List<VpStepInfo>.ForEach(Action<VpStepInfo>) List<VpStepInfo>.GetEnumerator() List<VpStepInfo>.GetRange(Int32, Int32) List<VpStepInfo>.IndexOf(VpStepInfo) List<VpStepInfo>.IndexOf(VpStepInfo, Int32) List<VpStepInfo>.IndexOf(VpStepInfo, Int32, Int32) List<VpStepInfo>.Insert(Int32, VpStepInfo) List<VpStepInfo>.InsertRange(Int32, IEnumerable<VpStepInfo>) List<VpStepInfo>.LastIndexOf(VpStepInfo) List<VpStepInfo>.LastIndexOf(VpStepInfo, Int32) List<VpStepInfo>.LastIndexOf(VpStepInfo, Int32, Int32) List<VpStepInfo>.Remove(VpStepInfo) List<VpStepInfo>.RemoveAll(Predicate<VpStepInfo>) List<VpStepInfo>.RemoveAt(Int32) List<VpStepInfo>.RemoveRange(Int32, Int32) List<VpStepInfo>.Reverse() List<VpStepInfo>.Reverse(Int32, Int32) List<VpStepInfo>.Sort() List<VpStepInfo>.Sort(IComparer<VpStepInfo>) List<VpStepInfo>.Sort(Comparison<VpStepInfo>) List<VpStepInfo>.Sort(Int32, Int32, IComparer<VpStepInfo>) List<VpStepInfo>.IEnumerable<VpStepInfo>.GetEnumerator() List<VpStepInfo>.ICollection.CopyTo(Array, Int32) List<VpStepInfo>.IEnumerable.GetEnumerator() List<VpStepInfo>.IList.Add(Object) List<VpStepInfo>.IList.Contains(Object) List<VpStepInfo>.IList.IndexOf(Object) List<VpStepInfo>.IList.Insert(Int32, Object) List<VpStepInfo>.IList.Remove(Object) List<VpStepInfo>.ToArray() List<VpStepInfo>.TrimExcess() List<VpStepInfo>.TrueForAll(Predicate<VpStepInfo>) List<VpStepInfo>.Capacity List<VpStepInfo>.Count List<VpStepInfo>.Item[Int32] List<VpStepInfo>.ICollection<VpStepInfo>.IsReadOnly List<VpStepInfo>.ICollection.IsSynchronized List<VpStepInfo>.ICollection.SyncRoot List<VpStepInfo>.IList.IsFixedSize List<VpStepInfo>.IList.IsReadOnly List<VpStepInfo>.IList.Item[Int32] Namespace : MediaBrowser.Model.Session.Transcoding Assembly : MediaBrowser.Model.dll Syntax public class VideoPipelineInfo : List<VpStepInfo>, IList<VpStepInfo>, ICollection<VpStepInfo>, IReadOnlyList<VpStepInfo>, IReadOnlyCollection<VpStepInfo>, IEnumerable<VpStepInfo>, IList, ICollection, IEnumerable Properties SecondarySourceInfo Declaration public VideoPipelineInfo SecondarySourceInfo { get; set; } Property Value Type Description VideoPipelineInfo Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods LinqExtensions.ToArray<TSource>(IEnumerable<TSource>, Int32) SortExtensions.OrderByString<T>(IEnumerable<T>, Func<T, String>) SortExtensions.OrderByStringDescending<T>(IEnumerable<T>, Func<T, String>)"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.Transcoding.VpStepInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.Transcoding.VpStepInfo.html",
    "title": "Class VpStepInfo",
    "keywords": "Class VpStepInfo Inheritance Object VpStepInfo Namespace : MediaBrowser.Model.Session.Transcoding Assembly : MediaBrowser.Model.dll Syntax public abstract class VpStepInfo Properties FfmpegDescription Declaration public string FfmpegDescription { get; set; } Property Value Type Description String FfmpegName Declaration public string FfmpegName { get; set; } Property Value Type Description String FfmpegOptions Declaration public string FfmpegOptions { get; set; } Property Value Type Description String HardwareContextName Declaration public abstract string HardwareContextName { get; set; } Property Value Type Description String IsHardwareContext Declaration public abstract bool IsHardwareContext { get; set; } Property Value Type Description Boolean Name Declaration public virtual string Name { get; set; } Property Value Type Description String Param Declaration public string Param { get; set; } Property Value Type Description String ParamShort Declaration public string ParamShort { get; set; } Property Value Type Description String Short Declaration public virtual string Short { get; set; } Property Value Type Description String StepType Declaration public abstract VpStepTypes StepType { get; set; } Property Value Type Description VpStepTypes StepTypeName Declaration public abstract string StepTypeName { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.Transcoding.VpStepTypes.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.Transcoding.VpStepTypes.html",
    "title": "Enum VpStepTypes",
    "keywords": "Enum VpStepTypes Video Processing Step Type enum. Namespace : MediaBrowser.Model.Session.Transcoding Assembly : MediaBrowser.Model.dll Syntax public enum VpStepTypes Fields Name Description BurnInGraphicSubs BurnInTextSubs Censor ColorConversion ConnectTo Decoder Deinterlace Encoder GraphicSub2Text GraphicSub2Video ScaleSubs Scaling ShowSpeaker SplitCaptions StripStyles SubtitleOverlay TextMod TextSub2Video ToneMapping Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<VpStepTypes>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.TranscodingInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.TranscodingInfo.html",
    "title": "Class TranscodingInfo",
    "keywords": "Class TranscodingInfo Inheritance Object TranscodingInfo Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class TranscodingInfo Constructors TranscodingInfo() Declaration public TranscodingInfo() Properties AudioBitrate Declaration public int? AudioBitrate { get; set; } Property Value Type Description Nullable < Int32 > AudioChannels Declaration public int? AudioChannels { get; set; } Property Value Type Description Nullable < Int32 > AudioCodec Declaration public string AudioCodec { get; set; } Property Value Type Description String AverageCpuUsage Declaration public double? AverageCpuUsage { get; set; } Property Value Type Description Nullable < Double > Bitrate Declaration public int? Bitrate { get; set; } Property Value Type Description Nullable < Int32 > CompletionPercentage Declaration public double? CompletionPercentage { get; set; } Property Value Type Description Nullable < Double > Container Declaration public string Container { get; set; } Property Value Type Description String CpuHistory Declaration public Tuple<double, double>[] CpuHistory { get; set; } Property Value Type Description Tuple < Double , Double >[] CurrentCpuUsage Declaration public double? CurrentCpuUsage { get; set; } Property Value Type Description Nullable < Double > CurrentThrottle Declaration public int? CurrentThrottle { get; set; } Property Value Type Description Nullable < Int32 > Framerate Declaration public float? Framerate { get; set; } Property Value Type Description Nullable < Single > Height Declaration public int? Height { get; set; } Property Value Type Description Nullable < Int32 > IsAudioDirect Declaration public bool IsAudioDirect { get; set; } Property Value Type Description Boolean IsVideoDirect Declaration public bool IsVideoDirect { get; set; } Property Value Type Description Boolean SubProtocol Declaration public string SubProtocol { get; set; } Property Value Type Description String SubtitlePipelineInfos Declaration public VideoPipelineInfo[] SubtitlePipelineInfos { get; set; } Property Value Type Description VideoPipelineInfo [] TranscodeReasons Declaration public TranscodeReason[] TranscodeReasons { get; set; } Property Value Type Description TranscodeReason [] TranscodingPositionTicks Declaration public double? TranscodingPositionTicks { get; set; } Property Value Type Description Nullable < Double > TranscodingStartPositionTicks Declaration public double? TranscodingStartPositionTicks { get; set; } Property Value Type Description Nullable < Double > VideoBitrate Declaration public int? VideoBitrate { get; set; } Property Value Type Description Nullable < Int32 > VideoCodec Declaration public string VideoCodec { get; set; } Property Value Type Description String VideoDecoder Declaration public string VideoDecoder { get; set; } Property Value Type Description String VideoDecoderHwAccel Declaration public string VideoDecoderHwAccel { get; set; } Property Value Type Description String VideoDecoderIsHardware Declaration public bool VideoDecoderIsHardware { get; set; } Property Value Type Description Boolean VideoDecoderMediaType Declaration public string VideoDecoderMediaType { get; set; } Property Value Type Description String VideoEncoder Declaration public string VideoEncoder { get; set; } Property Value Type Description String VideoEncoderHwAccel Declaration public string VideoEncoderHwAccel { get; set; } Property Value Type Description String VideoEncoderIsHardware Declaration public bool VideoEncoderIsHardware { get; set; } Property Value Type Description Boolean VideoEncoderMediaType Declaration public string VideoEncoderMediaType { get; set; } Property Value Type Description String VideoPipelineInfo Declaration public VideoPipelineInfo VideoPipelineInfo { get; set; } Property Value Type Description VideoPipelineInfo Width Declaration public int? Width { get; set; } Property Value Type Description Nullable < Int32 >"
  },
  "reference/pluginapi/MediaBrowser.Model.Session.UserDataChangeInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Session.UserDataChangeInfo.html",
    "title": "Class UserDataChangeInfo",
    "keywords": "Class UserDataChangeInfo Class UserDataChangeInfo Inheritance Object UserDataChangeInfo Namespace : MediaBrowser.Model.Session Assembly : MediaBrowser.Model.dll Syntax public class UserDataChangeInfo Properties UserDataList Gets or sets the user data list. Declaration public UserItemDataDto[] UserDataList { get; set; } Property Value Type Description UserItemDataDto [] The user data list. UserId Gets or sets the user id. Declaration public string UserId { get; set; } Property Value Type Description String The user id."
  },
  "reference/pluginapi/MediaBrowser.Model.Ssdp.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Ssdp.html",
    "title": "Namespace MediaBrowser.Model.Ssdp",
    "keywords": "Namespace MediaBrowser.Model.Ssdp Classes SsdpDevice Base class representing the common details of a (root or embedded) device, either to be published or that has been located. SsdpEmbeddedDevice Represents a device that is a descendant of a SsdpRootDevice instance. SsdpRootDevice Represents a 'root' device, a device that has no parent. Used for publishing devices and for the root device in a tree of discovered devices. Interfaces ISsdpDevicePublisher Interface for components that publish the existence of SSDP devices."
  },
  "reference/pluginapi/MediaBrowser.Model.Ssdp.ISsdpDevicePublisher.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Ssdp.ISsdpDevicePublisher.html",
    "title": "Interface ISsdpDevicePublisher",
    "keywords": "Interface ISsdpDevicePublisher Interface for components that publish the existence of SSDP devices. Namespace : MediaBrowser.Model.Ssdp Assembly : MediaBrowser.Model.dll Syntax public interface ISsdpDevicePublisher Remarks Publishing a device includes sending notifications (alive and byebye) as well as responding to search requests when appropriate. Methods AddDevices(List<SsdpRootDevice>, CancellationToken) Adds a device (and it's children) to the list of devices being published by this server, making them discoverable to SSDP clients. Declaration Task AddDevices(List<SsdpRootDevice> devices, CancellationToken cancellationToken) Parameters Type Name Description List < SsdpRootDevice > devices The devices. CancellationToken cancellationToken The cancellation token. Returns Type Description Task RemoveDevices(List<SsdpRootDevice>, CancellationToken) Removes a device (and it's children) from the list of devices being published by this server, making them undiscoverable. Declaration Task RemoveDevices(List<SsdpRootDevice> devices, CancellationToken cancellationToken) Parameters Type Name Description List < SsdpRootDevice > devices CancellationToken cancellationToken Returns Type Description Task See Also SsdpRootDevice"
  },
  "reference/pluginapi/MediaBrowser.Model.Ssdp.SsdpDevice.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Ssdp.SsdpDevice.html",
    "title": "Class SsdpDevice",
    "keywords": "Class SsdpDevice Base class representing the common details of a (root or embedded) device, either to be published or that has been located. Inheritance Object SsdpDevice SsdpEmbeddedDevice SsdpRootDevice Namespace : MediaBrowser.Model.Ssdp Assembly : MediaBrowser.Model.dll Syntax public abstract class SsdpDevice Remarks Do not derive new types directly from this class. New device classes should derive from either SsdpRootDevice or SsdpEmbeddedDevice . Constructors SsdpDevice() Derived type constructor, allows constructing a device with no parent. Should only be used from derived types that are or inherit from SsdpRootDevice . Declaration protected SsdpDevice() Properties DeviceClass Declaration public string DeviceClass { get; set; } Property Value Type Description String Devices Returns a read-only enumerable set of SsdpDevice objects representing children of this device. Child devices are optional. Declaration public SsdpDevice[] Devices { get; } Property Value Type Description SsdpDevice [] DeviceType Sets or returns the core device type (not including namespace, version etc.). Required. Declaration public string DeviceType { get; set; } Property Value Type Description String DeviceTypeNamespace Sets or returns the namespace for the DeviceType of this device. Optional, but defaults to UPnP schema so should be changed if DeviceType is not a UPnP device type. Declaration public string DeviceTypeNamespace { get; set; } Property Value Type Description String DeviceVersion Sets or returns the version of the device type. Optional, defaults to 1. Declaration public int DeviceVersion { get; set; } Property Value Type Description Int32 Remarks Defaults to a value of 1. See Also DeviceType DeviceTypeNamespace FullDeviceType FriendlyName Sets or returns a friendly/display name for this device on the network. Something the user can identify the device/instance by, i.e Lounge Main Light. Required. Declaration public string FriendlyName { get; set; } Property Value Type Description String Remarks A short description for the end user. FullDeviceType Returns the full device type string. Declaration public string FullDeviceType { get; } Property Value Type Description String Remarks The format used is urn: DeviceTypeNamespace :device: DeviceType : DeviceVersion Manufacturer Sets or returns the name of the manufacturer of this device. Required. Declaration public string Manufacturer { get; set; } Property Value Type Description String ManufacturerUrl Sets or returns a URL to the manufacturers web site. Optional. Declaration public Uri ManufacturerUrl { get; set; } Property Value Type Description Uri ModelDescription Sets or returns a description of this device model. Recommended. Declaration public string ModelDescription { get; set; } Property Value Type Description String Remarks A long description for the end user. ModelName Sets or returns the name of this model. Required. Declaration public string ModelName { get; set; } Property Value Type Description String ModelNumber Sets or returns the number of this model. Recommended. Declaration public string ModelNumber { get; set; } Property Value Type Description String ModelUrl Sets or returns a URL to a web page with details of this device model. Optional. Declaration public Uri ModelUrl { get; set; } Property Value Type Description Uri Remarks Optional. May be relative to base URL. PresentationUrl Sets or returns the URL to a web page that can be used to configure/manager/use the device. Recommended. Declaration public Uri PresentationUrl { get; set; } Property Value Type Description Uri Remarks May be relative to base URL. SerialNumber Sets or returns the serial number for this device. Recommended. Declaration public string SerialNumber { get; set; } Property Value Type Description String Udn Returns (or sets*) a unique device name for this device. Optional, not recommended to be explicitly set. Declaration public string Udn { get; set; } Property Value Type Description String Remarks * In general you should not explicitly set this property. If it is not set (or set to null/empty string) the property will return a UDN value that is correct as per the UPnP specification, based on the other device properties. The setter is provided to allow for devices that do not correctly follow the specification (when we discover them), rather than to intentionally deviate from the specification. If a value is explicitly set, it is used verbatim, and so any prefix (such as uuid:) must be provided in the value. Upc Sets or returns the universal product code of the device, if any. Optional. Declaration public string Upc { get; set; } Property Value Type Description String Remarks If not blank, must be exactly 12 numeric digits. Uuid Sets or returns the universally unique identifier for this device (without the uuid: prefix). Required. Declaration public string Uuid { get; set; } Property Value Type Description String Remarks Must be the same over time for a specific device instance (i.e. must survive reboots). For UPnP 1.0 this can be any unique string. For UPnP 1.1 this should be a 128 bit number formatted in a specific way, preferably generated using the time and MAC based algorithm. See section 1.1.4 of http://upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v1.1.pdf for details. Technically this library implements UPnP 1.0, so any value is allowed, but we advise using UPnP 1.1 compatible values for good behaviour and forward compatibility with future versions. Methods AddDevice(SsdpEmbeddedDevice) Adds a child device to the Devices collection. Declaration public void AddDevice(SsdpEmbeddedDevice device) Parameters Type Name Description SsdpEmbeddedDevice device The SsdpEmbeddedDevice instance to add. Remarks If the device is already a member of the Devices collection, this method does nothing. Also sets the RootDevice property of the added device and all descendant devices to the relevant SsdpRootDevice instance. Exceptions Type Condition ArgumentNullException Thrown if the device argument is null. InvalidOperationException Thrown if the device is already associated with a different SsdpRootDevice instance than used in this tree. Can occur if you try to add the same device instance to more than one tree. Also thrown if you try to add a device to itself. ToRootDevice() Declaration public SsdpRootDevice ToRootDevice() Returns Type Description SsdpRootDevice See Also SsdpRootDevice SsdpEmbeddedDevice"
  },
  "reference/pluginapi/MediaBrowser.Model.Ssdp.SsdpEmbeddedDevice.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Ssdp.SsdpEmbeddedDevice.html",
    "title": "Class SsdpEmbeddedDevice",
    "keywords": "Class SsdpEmbeddedDevice Represents a device that is a descendant of a SsdpRootDevice instance. Inheritance Object SsdpDevice SsdpEmbeddedDevice Inherited Members SsdpDevice.ToRootDevice() SsdpDevice.DeviceType SsdpDevice.DeviceClass SsdpDevice.DeviceTypeNamespace SsdpDevice.DeviceVersion SsdpDevice.FullDeviceType SsdpDevice.Uuid SsdpDevice.Udn SsdpDevice.FriendlyName SsdpDevice.Manufacturer SsdpDevice.ManufacturerUrl SsdpDevice.ModelDescription SsdpDevice.ModelName SsdpDevice.ModelNumber SsdpDevice.ModelUrl SsdpDevice.SerialNumber SsdpDevice.Upc SsdpDevice.PresentationUrl SsdpDevice.Devices SsdpDevice.AddDevice(SsdpEmbeddedDevice) Namespace : MediaBrowser.Model.Ssdp Assembly : MediaBrowser.Model.dll Syntax public class SsdpEmbeddedDevice : SsdpDevice Constructors SsdpEmbeddedDevice() Default constructor. Declaration public SsdpEmbeddedDevice() Properties RootDevice Returns the SsdpRootDevice that is this device's first ancestor. If this device is itself an SsdpRootDevice , then returns a reference to itself. Declaration public SsdpRootDevice RootDevice { get; } Property Value Type Description SsdpRootDevice"
  },
  "reference/pluginapi/MediaBrowser.Model.Ssdp.SsdpRootDevice.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Ssdp.SsdpRootDevice.html",
    "title": "Class SsdpRootDevice",
    "keywords": "Class SsdpRootDevice Represents a 'root' device, a device that has no parent. Used for publishing devices and for the root device in a tree of discovered devices. Inheritance Object SsdpDevice SsdpRootDevice Inherited Members SsdpDevice.ToRootDevice() SsdpDevice.DeviceType SsdpDevice.DeviceClass SsdpDevice.DeviceTypeNamespace SsdpDevice.DeviceVersion SsdpDevice.FullDeviceType SsdpDevice.Uuid SsdpDevice.Udn SsdpDevice.FriendlyName SsdpDevice.Manufacturer SsdpDevice.ManufacturerUrl SsdpDevice.ModelDescription SsdpDevice.ModelName SsdpDevice.ModelNumber SsdpDevice.ModelUrl SsdpDevice.SerialNumber SsdpDevice.Upc SsdpDevice.PresentationUrl SsdpDevice.Devices SsdpDevice.AddDevice(SsdpEmbeddedDevice) Namespace : MediaBrowser.Model.Ssdp Assembly : MediaBrowser.Model.dll Syntax public class SsdpRootDevice : SsdpDevice Remarks Child (embedded) devices are represented by the SsdpDevice in the Devices property. Root devices contain some information that applies to the whole device tree and is therefore not present on child devices, such as CacheLifetime and SubLocation . Constructors SsdpRootDevice() Default constructor. Declaration public SsdpRootDevice() Properties SubLocation Declaration public string SubLocation { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Sync.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Sync.html",
    "title": "Namespace MediaBrowser.Model.Sync",
    "keywords": "Namespace MediaBrowser.Model.Sync Classes SyncJob SyncTarget Enums SyncCategory SyncJobStatus SyncJobUpdateReason"
  },
  "reference/pluginapi/MediaBrowser.Model.Sync.SyncCategory.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Sync.SyncCategory.html",
    "title": "Enum SyncCategory",
    "keywords": "Enum SyncCategory Namespace : MediaBrowser.Model.Sync Assembly : MediaBrowser.Model.dll Syntax public enum SyncCategory Fields Name Description Latest The latest NextUp The next up Resume The resume Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SyncCategory>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Sync.SyncJob.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Sync.SyncJob.html",
    "title": "Class SyncJob",
    "keywords": "Class SyncJob Inheritance Object SyncJob Namespace : MediaBrowser.Model.Sync Assembly : MediaBrowser.Model.dll Syntax public class SyncJob Properties AudioCodec Declaration public string AudioCodec { get; set; } Property Value Type Description String Bitrate Gets or sets the bitrate. Declaration public int? Bitrate { get; set; } Property Value Type Description Nullable < Int32 > The bitrate. Category Gets or sets the category. Declaration public SyncCategory? Category { get; set; } Property Value Type Description Nullable < SyncCategory > The category. Container Declaration public string Container { get; set; } Property Value Type Description String DateCreated Gets or sets the date created. Declaration public DateTimeOffset DateCreated { get; set; } Property Value Type Description DateTimeOffset The date created. DateLastModified Gets or sets the date last modified. Declaration public DateTimeOffset DateLastModified { get; set; } Property Value Type Description DateTimeOffset The date last modified. Id Gets or sets the identifier. Declaration public long Id { get; set; } Property Value Type Description Int64 The identifier. ItemCount Gets or sets the item count. Declaration public int ItemCount { get; set; } Property Value Type Description Int32 The item count. ItemLimit Gets or sets the item limit. Declaration public int? ItemLimit { get; set; } Property Value Type Description Nullable < Int32 > The item limit. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. ParentId Gets or sets the parent identifier. Declaration public long ParentId { get; set; } Property Value Type Description Int64 The parent identifier. ParentName Declaration public string ParentName { get; set; } Property Value Type Description String PrimaryImageItemId Declaration public string PrimaryImageItemId { get; set; } Property Value Type Description String PrimaryImageTag Declaration public string PrimaryImageTag { get; set; } Property Value Type Description String Profile Gets or sets the profile. Declaration public string Profile { get; set; } Property Value Type Description String The profile. Progress Gets or sets the current progress. Declaration public double Progress { get; set; } Property Value Type Description Double The current progress. Quality Gets or sets the quality. Declaration public string Quality { get; set; } Property Value Type Description String The quality. RequestedItemIds Gets or sets the requested item ids. Declaration public long[] RequestedItemIds { get; set; } Property Value Type Description Int64 [] The requested item ids. Status Gets or sets the status. Declaration public SyncJobStatus Status { get; set; } Property Value Type Description SyncJobStatus The status. SyncNewContent Gets or sets a value indicating whether [synchronize new content]. Declaration public bool SyncNewContent { get; set; } Property Value Type Description Boolean true if [synchronize new content]; otherwise, false . TargetId Gets or sets the device identifier. Declaration public string TargetId { get; set; } Property Value Type Description String The device identifier. TargetName Gets or sets the name of the target. Declaration public string TargetName { get; set; } Property Value Type Description String The name of the target. UnwatchedOnly Gets or sets a value indicating whether [unwatched only]. Declaration public bool UnwatchedOnly { get; set; } Property Value Type Description Boolean true if [unwatched only]; otherwise, false . UserId Gets or sets the user identifier. Declaration public long UserId { get; set; } Property Value Type Description Int64 The user identifier. VideoCodec Declaration public string VideoCodec { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Sync.SyncJobStatus.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Sync.SyncJobStatus.html",
    "title": "Enum SyncJobStatus",
    "keywords": "Enum SyncJobStatus Namespace : MediaBrowser.Model.Sync Assembly : MediaBrowser.Model.dll Syntax public enum SyncJobStatus Fields Name Description Completed CompletedWithError Converting Failed Queued ReadyToTransfer Transferring Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SyncJobStatus>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Sync.SyncJobUpdateReason.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Sync.SyncJobUpdateReason.html",
    "title": "Enum SyncJobUpdateReason",
    "keywords": "Enum SyncJobUpdateReason Namespace : MediaBrowser.Model.Sync Assembly : MediaBrowser.Model.dll Syntax public enum SyncJobUpdateReason Fields Name Description SettingsUpdated StatusChange TranscodingProgress TransferProgress Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SyncJobUpdateReason>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Sync.SyncTarget.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Sync.SyncTarget.html",
    "title": "Class SyncTarget",
    "keywords": "Class SyncTarget Inheritance Object SyncTarget Namespace : MediaBrowser.Model.Sync Assembly : MediaBrowser.Model.dll Syntax public class SyncTarget Properties Id Gets or sets the identifier. Declaration public string Id { get; set; } Property Value Type Description String The identifier. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name."
  },
  "reference/pluginapi/MediaBrowser.Model.System.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.System.html",
    "title": "Namespace MediaBrowser.Model.System",
    "keywords": "Namespace MediaBrowser.Model.System Classes LogFile PublicSystemInfo SystemInfo Class SystemInfo WakeOnLanInfo Interfaces IEnvironmentInfo IPowerManagement ISystemEvents Enums OperatingSystem"
  },
  "reference/pluginapi/MediaBrowser.Model.System.IEnvironmentInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.System.IEnvironmentInfo.html",
    "title": "Interface IEnvironmentInfo",
    "keywords": "Interface IEnvironmentInfo Namespace : MediaBrowser.Model.System Assembly : MediaBrowser.Model.dll Syntax public interface IEnvironmentInfo Properties FrameworkVersion Declaration string FrameworkVersion { get; } Property Value Type Description String IsWindowsService Declaration bool IsWindowsService { get; } Property Value Type Description Boolean OperatingSystem Declaration OperatingSystem OperatingSystem { get; } Property Value Type Description OperatingSystem OperatingSystemName Declaration string OperatingSystemName { get; } Property Value Type Description String OperatingSystemVersion Declaration string OperatingSystemVersion { get; } Property Value Type Description String OsArchitecture Gets the os architecture. Declaration string OsArchitecture { get; } Property Value Type Description String The os architecture. Remarks Corresponds to a value from System.Runtime.InteropServices.Architecture: X86, X64, Arm, Arm64 PathSeparator Declaration char PathSeparator { get; } Property Value Type Description Char ProcessArchitecture Gets the process architecture. Declaration string ProcessArchitecture { get; } Property Value Type Description String The process architecture. Remarks Corresponds to a value from System.Runtime.InteropServices.Architecture: X86, X64, Arm, Arm64 StackTrace Declaration string StackTrace { get; } Property Value Type Description String Methods GetEnvironmentVariable(String) Declaration string GetEnvironmentVariable(string name) Parameters Type Name Description String name Returns Type Description String SetProcessEnvironmentVariable(String, String) Declaration void SetProcessEnvironmentVariable(string name, string value) Parameters Type Name Description String name String value"
  },
  "reference/pluginapi/MediaBrowser.Model.System.IPowerManagement.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.System.IPowerManagement.html",
    "title": "Interface IPowerManagement",
    "keywords": "Interface IPowerManagement Namespace : MediaBrowser.Model.System Assembly : MediaBrowser.Model.dll Syntax public interface IPowerManagement Methods AllowSystemStandby() Declaration void AllowSystemStandby() PreventSystemStandby() Declaration void PreventSystemStandby() ScheduleWake(DateTimeOffset, String) Declaration void ScheduleWake(DateTimeOffset wakeTimeUtc, string displayName) Parameters Type Name Description DateTimeOffset wakeTimeUtc String displayName"
  },
  "reference/pluginapi/MediaBrowser.Model.System.ISystemEvents.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.System.ISystemEvents.html",
    "title": "Interface ISystemEvents",
    "keywords": "Interface ISystemEvents Namespace : MediaBrowser.Model.System Assembly : MediaBrowser.Model.dll Syntax public interface ISystemEvents Events DisplaySettingsChanged Declaration event EventHandler DisplaySettingsChanged Event Type Type Description EventHandler Resume Declaration event EventHandler Resume Event Type Type Description EventHandler SessionLogoff Declaration event EventHandler SessionLogoff Event Type Type Description EventHandler Suspend Declaration event EventHandler Suspend Event Type Type Description EventHandler SystemShutdown Declaration event EventHandler SystemShutdown Event Type Type Description EventHandler TimeChanged Declaration event EventHandler TimeChanged Event Type Type Description EventHandler"
  },
  "reference/pluginapi/MediaBrowser.Model.System.LogFile.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.System.LogFile.html",
    "title": "Class LogFile",
    "keywords": "Class LogFile Inheritance Object LogFile Namespace : MediaBrowser.Model.System Assembly : MediaBrowser.Model.dll Syntax public class LogFile Properties DateCreated Gets or sets the date created. Declaration public DateTimeOffset DateCreated { get; set; } Property Value Type Description DateTimeOffset The date created. DateModified Gets or sets the date modified. Declaration public DateTimeOffset DateModified { get; set; } Property Value Type Description DateTimeOffset The date modified. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. Size Gets or sets the size. Declaration public long Size { get; set; } Property Value Type Description Int64 The size."
  },
  "reference/pluginapi/MediaBrowser.Model.System.OperatingSystem.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.System.OperatingSystem.html",
    "title": "Enum OperatingSystem",
    "keywords": "Enum OperatingSystem Namespace : MediaBrowser.Model.System Assembly : MediaBrowser.Model.dll Syntax public enum OperatingSystem Fields Name Description Android BSD Linux OSX Windows Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<OperatingSystem>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.System.PublicSystemInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.System.PublicSystemInfo.html",
    "title": "Class PublicSystemInfo",
    "keywords": "Class PublicSystemInfo Inheritance Object PublicSystemInfo SystemInfo Namespace : MediaBrowser.Model.System Assembly : MediaBrowser.Model.dll Syntax public class PublicSystemInfo Properties Id Gets or sets the id. Declaration public string Id { get; set; } Property Value Type Description String The id. LocalAddress Gets or sets the local address. Declaration public string LocalAddress { get; } Property Value Type Description String The local address. LocalAddresses Declaration public string[] LocalAddresses { get; set; } Property Value Type Description String [] RemoteAddresses Declaration public string[] RemoteAddresses { get; set; } Property Value Type Description String [] ServerName Gets or sets the name of the server. Declaration public string ServerName { get; set; } Property Value Type Description String The name of the server. Version Gets or sets the version. Declaration public string Version { get; set; } Property Value Type Description String The version. WanAddress Gets or sets the wan address. Declaration public string WanAddress { get; } Property Value Type Description String The wan address."
  },
  "reference/pluginapi/MediaBrowser.Model.System.SystemInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.System.SystemInfo.html",
    "title": "Class SystemInfo",
    "keywords": "Class SystemInfo Class SystemInfo Inheritance Object PublicSystemInfo SystemInfo Inherited Members PublicSystemInfo.LocalAddress PublicSystemInfo.LocalAddresses PublicSystemInfo.WanAddress PublicSystemInfo.RemoteAddresses PublicSystemInfo.ServerName PublicSystemInfo.Version PublicSystemInfo.Id Namespace : MediaBrowser.Model.System Assembly : MediaBrowser.Model.dll Syntax public class SystemInfo : PublicSystemInfo Constructors SystemInfo() Initializes a new instance of the SystemInfo class. Declaration public SystemInfo() Properties CachePath Gets or sets the cache path. Declaration public string CachePath { get; set; } Property Value Type Description String The cache path. CanLaunchWebBrowser Declaration public bool CanLaunchWebBrowser { get; set; } Property Value Type Description Boolean CanSelfRestart Gets or sets a value indicating whether this instance can self restart. Declaration public bool CanSelfRestart { get; set; } Property Value Type Description Boolean true if this instance can self restart; otherwise, false . CanSelfUpdate Gets or sets a value indicating whether this instance can self update. Declaration public bool CanSelfUpdate { get; set; } Property Value Type Description Boolean true if this instance can self update; otherwise, false . CompletedInstallations Gets or sets the completed installations. Declaration public InstallationInfo[] CompletedInstallations { get; set; } Property Value Type Description InstallationInfo [] The completed installations. HardwareAccelerationRequiresPremiere Declaration public bool HardwareAccelerationRequiresPremiere { get; set; } Property Value Type Description Boolean HasPendingRestart Gets or sets a value indicating whether this instance has pending restart. Declaration public bool HasPendingRestart { get; set; } Property Value Type Description Boolean true if this instance has pending restart; otherwise, false . HasUpdateAvailable Gets or sets a value indicating whether this instance has update available. Declaration public bool HasUpdateAvailable { get; set; } Property Value Type Description Boolean true if this instance has update available; otherwise, false . HttpServerPortNumber Gets or sets the HTTP server port number. Declaration public int HttpServerPortNumber { get; set; } Property Value Type Description Int32 The HTTP server port number. HttpsPortNumber Gets or sets the HTTPS server port number. Declaration public int HttpsPortNumber { get; set; } Property Value Type Description Int32 The HTTPS server port number. InternalMetadataPath Gets or sets the internal metadata path. Declaration public string InternalMetadataPath { get; set; } Property Value Type Description String The internal metadata path. IsShuttingDown Declaration public bool IsShuttingDown { get; set; } Property Value Type Description Boolean ItemsByNamePath Gets or sets the items by name path. Declaration public string ItemsByNamePath { get; set; } Property Value Type Description String The items by name path. LogPath Gets or sets the log path. Declaration public string LogPath { get; set; } Property Value Type Description String The log path. OperatingSystem Gets or sets the operating sytem. Declaration public string OperatingSystem { get; set; } Property Value Type Description String The operating sytem. OperatingSystemDisplayName Gets or sets the display name of the operating system. Declaration public string OperatingSystemDisplayName { get; set; } Property Value Type Description String The display name of the operating system. PackageName Declaration public string PackageName { get; set; } Property Value Type Description String ProgramDataPath Gets or sets the program data path. Declaration public string ProgramDataPath { get; set; } Property Value Type Description String The program data path. SupportsAutoRunAtStartup Gets or sets a value indicating whether [supports automatic run at startup]. Declaration public bool SupportsAutoRunAtStartup { get; set; } Property Value Type Description Boolean true if [supports automatic run at startup]; otherwise, false . SupportsHttps Gets or sets a value indicating whether [enable HTTPS]. Declaration public bool SupportsHttps { get; set; } Property Value Type Description Boolean true if [enable HTTPS]; otherwise, false . SupportsLibraryMonitor Gets or sets a value indicating whether [supports library monitor]. Declaration public bool SupportsLibraryMonitor { get; set; } Property Value Type Description Boolean true if [supports library monitor]; otherwise, false . SupportsLocalPortConfiguration Declaration public bool SupportsLocalPortConfiguration { get; set; } Property Value Type Description Boolean SupportsWakeServer Declaration public bool SupportsWakeServer { get; set; } Property Value Type Description Boolean SystemUpdateLevel Declaration public PackageVersionClass SystemUpdateLevel { get; set; } Property Value Type Description PackageVersionClass TranscodingTempPath Gets or sets the transcoding temporary path. Declaration public string TranscodingTempPath { get; set; } Property Value Type Description String The transcoding temporary path. WebSocketPortNumber Gets or sets the web socket port number. Declaration public int WebSocketPortNumber { get; set; } Property Value Type Description Int32 The web socket port number."
  },
  "reference/pluginapi/MediaBrowser.Model.System.WakeOnLanInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.System.WakeOnLanInfo.html",
    "title": "Class WakeOnLanInfo",
    "keywords": "Class WakeOnLanInfo Inheritance Object WakeOnLanInfo Namespace : MediaBrowser.Model.System Assembly : MediaBrowser.Model.dll Syntax public class WakeOnLanInfo Constructors WakeOnLanInfo() Declaration public WakeOnLanInfo() Properties BroadcastAddress Declaration public string BroadcastAddress { get; set; } Property Value Type Description String MacAddress Declaration public string MacAddress { get; set; } Property Value Type Description String Port Declaration public int Port { get; set; } Property Value Type Description Int32"
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.html",
    "title": "Namespace MediaBrowser.Model.Tasks",
    "keywords": "Namespace MediaBrowser.Model.Tasks Classes ScheduledTaskHelpers Class ScheduledTaskHelpers TaskCompletionEventArgs TaskInfo Class TaskInfo TaskOptions TaskResult Class TaskExecutionInfo TaskTriggerInfo Class TaskTriggerInfo Interfaces IConfigurableScheduledTask IScheduledTask Interface IScheduledTaskWorker IScheduledTaskWorker Interface IScheduledTaskWorker ITaskManager ITaskTrigger Interface ITaskTrigger Enums SystemEvent Enum SystemEvent TaskCompletionStatus Enum TaskCompletionStatus TaskState Enum TaskState"
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.IConfigurableScheduledTask.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.IConfigurableScheduledTask.html",
    "title": "Interface IConfigurableScheduledTask",
    "keywords": "Interface IConfigurableScheduledTask Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public interface IConfigurableScheduledTask Properties IsEnabled Gets a value indicating whether this instance is enabled. Declaration bool IsEnabled { get; } Property Value Type Description Boolean true if this instance is enabled; otherwise, false . IsHidden Gets a value indicating whether this instance is hidden. Declaration bool IsHidden { get; } Property Value Type Description Boolean true if this instance is hidden; otherwise, false . IsLogged Declaration bool IsLogged { get; } Property Value Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.IScheduledTask.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.IScheduledTask.html",
    "title": "Interface IScheduledTask",
    "keywords": "Interface IScheduledTask Interface IScheduledTaskWorker Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public interface IScheduledTask Properties Category Gets the category. Declaration string Category { get; } Property Value Type Description String The category. Description Gets the description. Declaration string Description { get; } Property Value Type Description String The description. Key Declaration string Key { get; } Property Value Type Description String Name Gets the name of the task Declaration string Name { get; } Property Value Type Description String The name. Methods Execute(CancellationToken, IProgress<Double>) Executes the task Declaration Task Execute(CancellationToken cancellationToken, IProgress<double> progress) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. IProgress < Double > progress The progress. Returns Type Description Task Task. GetDefaultTriggers() Gets the default triggers. Declaration IEnumerable<TaskTriggerInfo> GetDefaultTriggers() Returns Type Description IEnumerable < TaskTriggerInfo > IEnumerable{BaseTaskTrigger}."
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.IScheduledTaskWorker.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.IScheduledTaskWorker.html",
    "title": "Interface IScheduledTaskWorker",
    "keywords": "Interface IScheduledTaskWorker Interface IScheduledTaskWorker Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public interface IScheduledTaskWorker : IDisposable Properties Category Gets the category. Declaration string Category { get; } Property Value Type Description String The category. CurrentProgress Gets the current progress. Declaration double? CurrentProgress { get; } Property Value Type Description Nullable < Double > The current progress. Description Gets the description. Declaration string Description { get; } Property Value Type Description String The description. Id Gets the unique id. Declaration string Id { get; } Property Value Type Description String The unique id. LastExecutionResult Gets the last execution result. Declaration TaskResult LastExecutionResult { get; } Property Value Type Description TaskResult The last execution result. Name Gets the name. Declaration string Name { get; } Property Value Type Description String The name. ScheduledTask Gets or sets the scheduled task. Declaration IScheduledTask ScheduledTask { get; } Property Value Type Description IScheduledTask The scheduled task. State Gets the state. Declaration TaskState State { get; } Property Value Type Description TaskState The state. Triggers Gets the triggers that define when the task will run Declaration TaskTriggerInfo[] Triggers { get; set; } Property Value Type Description TaskTriggerInfo [] The triggers. Exceptions Type Condition ArgumentNullException value Methods ReloadTriggerEvents() Reloads the trigger events. Declaration void ReloadTriggerEvents() Events TaskProgress Occurs when [task progress]. Declaration event EventHandler<GenericEventArgs<double>> TaskProgress Event Type Type Description EventHandler < GenericEventArgs < Double >>"
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.ITaskManager.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.ITaskManager.html",
    "title": "Interface ITaskManager",
    "keywords": "Interface ITaskManager Inherited Members IDisposable.Dispose() Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public interface ITaskManager : IDisposable Properties ScheduledTasks Gets the list of Scheduled Tasks Declaration IScheduledTaskWorker[] ScheduledTasks { get; } Property Value Type Description IScheduledTaskWorker [] The scheduled tasks. Methods AddTasks(IEnumerable<IScheduledTask>) Adds the tasks. Declaration void AddTasks(IEnumerable<IScheduledTask> tasks) Parameters Type Name Description IEnumerable < IScheduledTask > tasks The tasks. Cancel(IScheduledTaskWorker) Declaration void Cancel(IScheduledTaskWorker task) Parameters Type Name Description IScheduledTaskWorker task CancelIfRunning<T>() Cancels if running. Declaration bool CancelIfRunning<T>() where T : IScheduledTask Returns Type Description Boolean Type Parameters Name Description T CancelIfRunningAndQueue<T>() Cancels if running and queue. Declaration void CancelIfRunningAndQueue<T>() where T : IScheduledTask Type Parameters Name Description T CancelIfRunningAndQueue<T>(TaskOptions) Cancels if running and queue. Declaration void CancelIfRunningAndQueue<T>(TaskOptions options) where T : IScheduledTask Parameters Type Name Description TaskOptions options Task options. Type Parameters Name Description T Execute(IScheduledTaskWorker, TaskOptions) Declaration Task Execute(IScheduledTaskWorker task, TaskOptions options) Parameters Type Name Description IScheduledTaskWorker task TaskOptions options Returns Type Description Task Execute<T>() Declaration void Execute<T>() where T : IScheduledTask Type Parameters Name Description T QueueIfNotRunning<T>() Declaration void QueueIfNotRunning<T>() where T : IScheduledTask Type Parameters Name Description T QueueScheduledTask(IScheduledTask, TaskOptions) Queues the scheduled task. Declaration void QueueScheduledTask(IScheduledTask task, TaskOptions options) Parameters Type Name Description IScheduledTask task TaskOptions options QueueScheduledTask<T>() Queues the scheduled task. Declaration void QueueScheduledTask<T>() where T : IScheduledTask Type Parameters Name Description T QueueScheduledTask<T>(TaskOptions) Queues the scheduled task. Declaration void QueueScheduledTask<T>(TaskOptions options) where T : IScheduledTask Parameters Type Name Description TaskOptions options Task options. Type Parameters Name Description T RunTaskOnNextStartup(String) Declaration void RunTaskOnNextStartup(string key) Parameters Type Name Description String key Events TaskCompleted Declaration event EventHandler<TaskCompletionEventArgs> TaskCompleted Event Type Type Description EventHandler < TaskCompletionEventArgs > TaskExecuting Declaration event EventHandler<GenericEventArgs<IScheduledTaskWorker>> TaskExecuting Event Type Type Description EventHandler < GenericEventArgs < IScheduledTaskWorker >>"
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.ITaskTrigger.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.ITaskTrigger.html",
    "title": "Interface ITaskTrigger",
    "keywords": "Interface ITaskTrigger Interface ITaskTrigger Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public interface ITaskTrigger Properties TaskOptions Gets or sets the options of this task. Declaration TaskOptions TaskOptions { get; set; } Property Value Type Description TaskOptions Methods Start(TaskResult, ILogger, String, Boolean) Stars waiting for the trigger action Declaration void Start(TaskResult lastResult, ILogger logger, string taskName, bool isApplicationStartup) Parameters Type Name Description TaskResult lastResult ILogger logger String taskName Boolean isApplicationStartup Stop() Stops waiting for the trigger action Declaration void Stop() Events Triggered Fires when the trigger condition is satisfied and the task should run Declaration event EventHandler<EventArgs> Triggered Event Type Type Description EventHandler < EventArgs >"
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.ScheduledTaskHelpers.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.ScheduledTaskHelpers.html",
    "title": "Class ScheduledTaskHelpers",
    "keywords": "Class ScheduledTaskHelpers Class ScheduledTaskHelpers Inheritance Object ScheduledTaskHelpers Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public static class ScheduledTaskHelpers Methods GetTaskInfo(IScheduledTaskWorker) Gets the task info. Declaration public static TaskInfo GetTaskInfo(IScheduledTaskWorker task) Parameters Type Name Description IScheduledTaskWorker task The task. Returns Type Description TaskInfo TaskInfo."
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.SystemEvent.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.SystemEvent.html",
    "title": "Enum SystemEvent",
    "keywords": "Enum SystemEvent Enum SystemEvent Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public enum SystemEvent Fields Name Description DisplayConfigurationChange Configuration of graphics or connected displays has changed. NetworkChange Network configuration or network availability has changed. WakeFromSleep The wake from sleep Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<SystemEvent>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.TaskCompletionEventArgs.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.TaskCompletionEventArgs.html",
    "title": "Class TaskCompletionEventArgs",
    "keywords": "Class TaskCompletionEventArgs Inheritance Object EventArgs TaskCompletionEventArgs Inherited Members EventArgs.Empty Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public class TaskCompletionEventArgs : EventArgs Properties Result Declaration public TaskResult Result { get; set; } Property Value Type Description TaskResult Task Declaration public IScheduledTaskWorker Task { get; set; } Property Value Type Description IScheduledTaskWorker"
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.TaskCompletionStatus.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.TaskCompletionStatus.html",
    "title": "Enum TaskCompletionStatus",
    "keywords": "Enum TaskCompletionStatus Enum TaskCompletionStatus Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public enum TaskCompletionStatus Fields Name Description Aborted Aborted due to a system failure or shutdown Cancelled Manually cancelled by the user Completed The completed Failed The failed Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<TaskCompletionStatus>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.TaskInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.TaskInfo.html",
    "title": "Class TaskInfo",
    "keywords": "Class TaskInfo Class TaskInfo Inheritance Object TaskInfo Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public class TaskInfo Constructors TaskInfo() Initializes a new instance of the TaskInfo class. Declaration public TaskInfo() Properties Category Gets or sets the category. Declaration public string Category { get; set; } Property Value Type Description String The category. CurrentProgressPercentage Gets or sets the progress. Declaration public double? CurrentProgressPercentage { get; set; } Property Value Type Description Nullable < Double > The progress. Description Gets or sets the description. Declaration public string Description { get; set; } Property Value Type Description String The description. Id Gets or sets the id. Declaration public string Id { get; set; } Property Value Type Description String The id. IsHidden Gets or sets a value indicating whether this instance is hidden. Declaration public bool IsHidden { get; set; } Property Value Type Description Boolean true if this instance is hidden; otherwise, false . Key Gets or sets the key. Declaration public string Key { get; set; } Property Value Type Description String The key. LastExecutionResult Gets or sets the last execution result. Declaration public TaskResult LastExecutionResult { get; set; } Property Value Type Description TaskResult The last execution result. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. State Gets or sets the state of the task. Declaration public TaskState State { get; set; } Property Value Type Description TaskState The state of the task. Triggers Gets or sets the triggers. Declaration public TaskTriggerInfo[] Triggers { get; set; } Property Value Type Description TaskTriggerInfo [] The triggers."
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.TaskOptions.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.TaskOptions.html",
    "title": "Class TaskOptions",
    "keywords": "Class TaskOptions Inheritance Object TaskOptions Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public class TaskOptions Properties MaxRuntimeTicks Declaration public long? MaxRuntimeTicks { get; set; } Property Value Type Description Nullable < Int64 >"
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.TaskResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.TaskResult.html",
    "title": "Class TaskResult",
    "keywords": "Class TaskResult Class TaskExecutionInfo Inheritance Object TaskResult Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public class TaskResult Properties EndTimeUtc Gets or sets the end time UTC. Declaration public DateTimeOffset EndTimeUtc { get; set; } Property Value Type Description DateTimeOffset The end time UTC. ErrorMessage Gets or sets the error message. Declaration public string ErrorMessage { get; set; } Property Value Type Description String The error message. Id Gets or sets the id. Declaration public string Id { get; set; } Property Value Type Description String The id. Key Gets or sets the key. Declaration public string Key { get; set; } Property Value Type Description String The key. LongErrorMessage Gets or sets the long error message. Declaration public string LongErrorMessage { get; set; } Property Value Type Description String The long error message. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. StartTimeUtc Gets or sets the start time UTC. Declaration public DateTimeOffset StartTimeUtc { get; set; } Property Value Type Description DateTimeOffset The start time UTC. Status Gets or sets the status. Declaration public TaskCompletionStatus Status { get; set; } Property Value Type Description TaskCompletionStatus The status."
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.TaskState.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.TaskState.html",
    "title": "Enum TaskState",
    "keywords": "Enum TaskState Enum TaskState Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public enum TaskState Fields Name Description Cancelling The cancelling Idle The idle Running The running Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<TaskState>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Tasks.TaskTriggerInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Tasks.TaskTriggerInfo.html",
    "title": "Class TaskTriggerInfo",
    "keywords": "Class TaskTriggerInfo Class TaskTriggerInfo Inheritance Object TaskTriggerInfo Namespace : MediaBrowser.Model.Tasks Assembly : MediaBrowser.Model.dll Syntax public class TaskTriggerInfo Fields TriggerDaily Declaration public const string TriggerDaily = \"DailyTrigger\" Field Value Type Description String TriggerInterval Declaration public const string TriggerInterval = \"IntervalTrigger\" Field Value Type Description String TriggerStartup Declaration public const string TriggerStartup = \"StartupTrigger\" Field Value Type Description String TriggerSystemEvent Declaration public const string TriggerSystemEvent = \"SystemEventTrigger\" Field Value Type Description String TriggerWeekly Declaration public const string TriggerWeekly = \"WeeklyTrigger\" Field Value Type Description String Properties DayOfWeek Gets or sets the day of week. Declaration public DayOfWeek? DayOfWeek { get; set; } Property Value Type Description Nullable < DayOfWeek > The day of week. IntervalTicks Gets or sets the interval. Declaration public long? IntervalTicks { get; set; } Property Value Type Description Nullable < Int64 > The interval. MaxRuntimeTicks Gets or sets the maximum runtime ticks. Declaration public long? MaxRuntimeTicks { get; set; } Property Value Type Description Nullable < Int64 > The maximum runtime ticks. SystemEvent Gets or sets the system event. Declaration public SystemEvent? SystemEvent { get; set; } Property Value Type Description Nullable < SystemEvent > The system event. TimeOfDayTicks Gets or sets the time of day. Declaration public long? TimeOfDayTicks { get; set; } Property Value Type Description Nullable < Int64 > The time of day. Type Gets or sets the type. Declaration public string Type { get; set; } Property Value Type Description String The type."
  },
  "reference/pluginapi/MediaBrowser.Model.Text.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Text.html",
    "title": "Namespace MediaBrowser.Model.Text",
    "keywords": "Namespace MediaBrowser.Model.Text Structs ValueStringBuilder Interfaces ITextEncoding"
  },
  "reference/pluginapi/MediaBrowser.Model.Text.ITextEncoding.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Text.ITextEncoding.html",
    "title": "Interface ITextEncoding",
    "keywords": "Interface ITextEncoding Namespace : MediaBrowser.Model.Text Assembly : MediaBrowser.Model.dll Syntax public interface ITextEncoding Methods GetASCIIEncoding() Declaration Encoding GetASCIIEncoding() Returns Type Description Encoding GetDetectedEncodingName(ReadOnlySpan<Byte>, ReadOnlySpan<Char>, Boolean) Declaration string GetDetectedEncodingName(ReadOnlySpan<byte> bytes, ReadOnlySpan<char> language, bool enableLanguageDetection) Parameters Type Name Description ReadOnlySpan < Byte > bytes ReadOnlySpan < Char > language Boolean enableLanguageDetection Returns Type Description String GetEncodingFromCharset(ReadOnlySpan<Char>) Declaration Encoding GetEncodingFromCharset(ReadOnlySpan<char> charset) Parameters Type Name Description ReadOnlySpan < Char > charset Returns Type Description Encoding"
  },
  "reference/pluginapi/MediaBrowser.Model.Text.ValueStringBuilder.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Text.ValueStringBuilder.html",
    "title": "Struct ValueStringBuilder",
    "keywords": "Struct ValueStringBuilder Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Namespace : MediaBrowser.Model.Text Assembly : MediaBrowser.Model.dll Syntax public ref struct ValueStringBuilder Constructors ValueStringBuilder(Int32) Declaration public ValueStringBuilder(int initialCapacity) Parameters Type Name Description Int32 initialCapacity ValueStringBuilder(Span<Char>) Declaration public ValueStringBuilder(Span<char> initialBuffer) Parameters Type Name Description Span < Char > initialBuffer Properties Capacity Declaration public readonly int Capacity { get; } Property Value Type Description Int32 Item[Int32] Declaration public readonly ref char this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description Char Length Declaration public int Length { get; set; } Property Value Type Description Int32 RawChars Returns the underlying storage of the builder. Declaration public readonly Span<char> RawChars { get; } Property Value Type Description Span < Char > Methods Append(Char) Declaration public void Append(char c) Parameters Type Name Description Char c Append(Char, Int32) Declaration public void Append(char c, int count) Parameters Type Name Description Char c Int32 count Append(ReadOnlySpan<Char>) Declaration public void Append(ReadOnlySpan<char> value) Parameters Type Name Description ReadOnlySpan < Char > value Append(String) Declaration public void Append(string s) Parameters Type Name Description String s AppendReversed(ReadOnlySpan<Char>) Declaration public void AppendReversed(ReadOnlySpan<char> value) Parameters Type Name Description ReadOnlySpan < Char > value AppendSpan(Int32) Declaration public Span<char> AppendSpan(int length) Parameters Type Name Description Int32 length Returns Type Description Span < Char > AsSpan() Declaration public ReadOnlySpan<char> AsSpan() Returns Type Description ReadOnlySpan < Char > AsSpan(Boolean) Returns a span around the contents of the builder. Declaration public ReadOnlySpan<char> AsSpan(bool terminate) Parameters Type Name Description Boolean terminate Ensures that the builder has a null char after Length Returns Type Description ReadOnlySpan < Char > AsSpan(Int32) Declaration public ReadOnlySpan<char> AsSpan(int start) Parameters Type Name Description Int32 start Returns Type Description ReadOnlySpan < Char > AsSpan(Int32, Int32) Declaration public ReadOnlySpan<char> AsSpan(int start, int length) Parameters Type Name Description Int32 start Int32 length Returns Type Description ReadOnlySpan < Char > Dispose() Declaration public void Dispose() EnsureCapacity(Int32) Declaration public void EnsureCapacity(int capacity) Parameters Type Name Description Int32 capacity GetPinnableReference() Get a pinnable reference to the builder. Does not ensure there is a null char after Length This overload is pattern matched in the C# 7.3+ compiler so you can omit the explicit method call, and write eg \"fixed (char* c = builder)\" Declaration public ref char GetPinnableReference() Returns Type Description Char GetPinnableReference(Boolean) Get a pinnable reference to the builder. Declaration public ref char GetPinnableReference(bool terminate) Parameters Type Name Description Boolean terminate Ensures that the builder has a null char after Length Returns Type Description Char Insert(Int32, Char, Int32) Declaration public void Insert(int index, char value, int count) Parameters Type Name Description Int32 index Char value Int32 count Insert(Int32, String) Declaration public void Insert(int index, string s) Parameters Type Name Description Int32 index String s Reverse() Declaration public void Reverse() ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() TryCopyTo(Span<Char>, out Int32) Declaration public bool TryCopyTo(Span<char> destination, out int charsWritten) Parameters Type Name Description Span < Char > destination Int32 charsWritten Returns Type Description Boolean"
  },
  "reference/pluginapi/MediaBrowser.Model.Threading.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Threading.html",
    "title": "Namespace MediaBrowser.Model.Threading",
    "keywords": "Namespace MediaBrowser.Model.Threading Classes NamedLockPool"
  },
  "reference/pluginapi/MediaBrowser.Model.Threading.NamedLockPool.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Threading.NamedLockPool.html",
    "title": "Class NamedLockPool",
    "keywords": "Class NamedLockPool Inheritance Object NamedLockPool Namespace : MediaBrowser.Model.Threading Assembly : MediaBrowser.Model.dll Syntax public class NamedLockPool Methods LockAsync(String, CancellationToken) Declaration public async Task<IDisposable> LockAsync(string key, CancellationToken cancellationToken) Parameters Type Name Description String key CancellationToken cancellationToken Returns Type Description Task < IDisposable >"
  },
  "reference/pluginapi/MediaBrowser.Model.Updates.CheckForUpdateResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Updates.CheckForUpdateResult.html",
    "title": "Class CheckForUpdateResult",
    "keywords": "Class CheckForUpdateResult Class CheckForUpdateResult Inheritance Object CheckForUpdateResult Namespace : MediaBrowser.Model.Updates Assembly : MediaBrowser.Model.dll Syntax public class CheckForUpdateResult Properties AvailableVersion Gets or sets the available version. Declaration public string AvailableVersion { get; set; } Property Value Type Description String The available version. IsUpdateAvailable Gets or sets a value indicating whether this instance is update available. Declaration public bool IsUpdateAvailable { get; set; } Property Value Type Description Boolean true if this instance is update available; otherwise, false . Package Get or sets package information for an available update Declaration public PackageVersionInfo Package { get; set; } Property Value Type Description PackageVersionInfo"
  },
  "reference/pluginapi/MediaBrowser.Model.Updates.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Updates.html",
    "title": "Namespace MediaBrowser.Model.Updates",
    "keywords": "Namespace MediaBrowser.Model.Updates Classes CheckForUpdateResult Class CheckForUpdateResult InstallationInfo Class InstallationInfo PackageInfo Class PackageInfo PackageVersionInfo Class PackageVersionInfo Enums PackageTargetSystem Enum PackageType PackageVersionClass Enum PackageVersionClass"
  },
  "reference/pluginapi/MediaBrowser.Model.Updates.InstallationInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Updates.InstallationInfo.html",
    "title": "Class InstallationInfo",
    "keywords": "Class InstallationInfo Class InstallationInfo Inheritance Object InstallationInfo Namespace : MediaBrowser.Model.Updates Assembly : MediaBrowser.Model.dll Syntax public class InstallationInfo Properties AssemblyGuid Gets or sets the assembly guid. Declaration public string AssemblyGuid { get; set; } Property Value Type Description String The guid of the assembly. Id Gets or sets the id. Declaration public Guid Id { get; set; } Property Value Type Description Guid The id. Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description String The name. PercentComplete Gets or sets the percent complete. Declaration public double? PercentComplete { get; set; } Property Value Type Description Nullable < Double > The percent complete. UpdateClass Gets or sets the update class. Declaration public PackageVersionClass UpdateClass { get; set; } Property Value Type Description PackageVersionClass The update class. Version Gets or sets the version. Declaration public string Version { get; set; } Property Value Type Description String The version."
  },
  "reference/pluginapi/MediaBrowser.Model.Updates.PackageInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Updates.PackageInfo.html",
    "title": "Class PackageInfo",
    "keywords": "Class PackageInfo Class PackageInfo Inheritance Object PackageInfo Namespace : MediaBrowser.Model.Updates Assembly : MediaBrowser.Model.dll Syntax public class PackageInfo Constructors PackageInfo() Initializes a new instance of the PackageInfo class. Declaration public PackageInfo() Properties adult Gets or sets a value indicating whether this instance is adult only content. Declaration public bool adult { get; set; } Property Value Type Description Boolean true if this instance is adult; otherwise, false . avgRating Gets or sets the average rating for this package . Declaration public float? avgRating { get; set; } Property Value Type Description Nullable < Single > The rating. category Gets or sets the category. Declaration public string category { get; set; } Property Value Type Description String The category. enableInAppStore Gets or sets a value indicating whether [enable in application store]. Declaration public bool enableInAppStore { get; set; } Property Value Type Description Boolean true if [enable in application store]; otherwise, false . expDate Gets or sets the expiration date for this package. Declaration public DateTimeOffset expDate { get; set; } Property Value Type Description DateTimeOffset Expiration Date. featureId Gets or sets the feature id of this package (if premium). Declaration public string featureId { get; set; } Property Value Type Description String The feature id. guid The guid of the assembly associated with this package (if a plug-in). This is used to identify the proper item for automatic updates. Declaration public string guid { get; set; } Property Value Type Description String The name. id The internal id of this package. Declaration public string id { get; set; } Property Value Type Description String The id. installs Gets or sets the installs. Declaration public int installs { get; set; } Property Value Type Description Int32 The installs. isPremium Gets or sets a value indicating whether this instance is premium. Declaration public bool isPremium { get; set; } Property Value Type Description Boolean true if this instance is premium; otherwise, false . isRegistered Gets or sets whether or not this package is registered. Declaration public bool isRegistered { get; set; } Property Value Type Description Boolean True if registered. name Gets or sets the name. Declaration public string name { get; set; } Property Value Type Description String The name. overview Gets or sets the overview. Declaration public string overview { get; set; } Property Value Type Description String The overview. owner Gets or sets the owner. Declaration public string owner { get; set; } Property Value Type Description String The owner. previewImage Gets or sets the preview image. Declaration public string previewImage { get; set; } Property Value Type Description String The preview image. price Gets or sets the price for this package (if premium). Declaration public float? price { get; set; } Property Value Type Description Nullable < Single > The price. regInfo Gets or sets the registration info for this package (if premium). Declaration public string regInfo { get; set; } Property Value Type Description String The registration info. richDescUrl Gets or sets the rich desc URL. Declaration public string richDescUrl { get; set; } Property Value Type Description String The rich desc URL. shortDescription Gets or sets the short description. Declaration public string shortDescription { get; set; } Property Value Type Description String The short description. targetFilename Gets or sets the target filename. Declaration public string targetFilename { get; set; } Property Value Type Description String The target filename. targetSystem Gets or sets the target system for this plug-in (Server, MBTheater, MBClassic). Declaration public PackageTargetSystem targetSystem { get; set; } Property Value Type Description PackageTargetSystem The target system. thumbImage Gets or sets the thumb image. Declaration public string thumbImage { get; set; } Property Value Type Description String The thumb image. tileColor Gets or sets the catalog tile color. Declaration public string tileColor { get; set; } Property Value Type Description String The owner. totalRatings Gets or sets the total number of ratings for this package. Declaration public int? totalRatings { get; set; } Property Value Type Description Nullable < Int32 > The total ratings. type Gets or sets the type. Declaration public string type { get; set; } Property Value Type Description String The type. versions Gets or sets the versions. Declaration public PackageVersionInfo[] versions { get; set; } Property Value Type Description PackageVersionInfo [] The versions."
  },
  "reference/pluginapi/MediaBrowser.Model.Updates.PackageTargetSystem.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Updates.PackageTargetSystem.html",
    "title": "Enum PackageTargetSystem",
    "keywords": "Enum PackageTargetSystem Enum PackageType Namespace : MediaBrowser.Model.Updates Assembly : MediaBrowser.Model.dll Syntax public enum PackageTargetSystem Fields Name Description MBClassic MB Classic MBTheater MB Theater Other Other target system. Server Server Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<PackageTargetSystem>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Updates.PackageVersionClass.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Updates.PackageVersionClass.html",
    "title": "Enum PackageVersionClass",
    "keywords": "Enum PackageVersionClass Enum PackageVersionClass Namespace : MediaBrowser.Model.Updates Assembly : MediaBrowser.Model.dll Syntax public enum PackageVersionClass Fields Name Description Beta The beta Dev The dev Release The release Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<PackageVersionClass>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Updates.PackageVersionInfo.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Updates.PackageVersionInfo.html",
    "title": "Class PackageVersionInfo",
    "keywords": "Class PackageVersionInfo Class PackageVersionInfo Inheritance Object PackageVersionInfo Namespace : MediaBrowser.Model.Updates Assembly : MediaBrowser.Model.dll Syntax public class PackageVersionInfo Properties checksum Gets or sets the source URL. Declaration public string checksum { get; set; } Property Value Type Description String The source URL. classification Gets or sets the classification. Declaration public PackageVersionClass classification { get; set; } Property Value Type Description PackageVersionClass The classification. description Gets or sets the description. Declaration public string description { get; set; } Property Value Type Description String The description. guid Gets or sets the guid. Declaration public string guid { get; set; } Property Value Type Description String The guid. infoUrl Declaration public string infoUrl { get; set; } Property Value Type Description String name Gets or sets the name. Declaration public string name { get; set; } Property Value Type Description String The name. requiredVersionStr Gets or sets the required version STR. Declaration public string requiredVersionStr { get; set; } Property Value Type Description String The required version STR. runtimes Declaration public string runtimes { get; set; } Property Value Type Description String sourceUrl Gets or sets the source URL. Declaration public string sourceUrl { get; set; } Property Value Type Description String The source URL. targetFilename Gets or sets the target filename. Declaration public string targetFilename { get; set; } Property Value Type Description String The target filename. version Gets or sets the version. Had to make this an interpreted property since Protobuf can't handle Version Declaration [IgnoreDataMember] public Version version { get; } Property Value Type Description Version The version. versionStr Gets or sets the version STR. Declaration public string versionStr { get; set; } Property Value Type Description String The version STR."
  },
  "reference/pluginapi/MediaBrowser.Model.Users.ForgotPasswordAction.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Users.ForgotPasswordAction.html",
    "title": "Enum ForgotPasswordAction",
    "keywords": "Enum ForgotPasswordAction Namespace : MediaBrowser.Model.Users Assembly : MediaBrowser.Model.dll Syntax public enum ForgotPasswordAction Fields Name Description ContactAdmin InNetworkRequired PinCode Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<ForgotPasswordAction>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Users.ForgotPasswordResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Users.ForgotPasswordResult.html",
    "title": "Class ForgotPasswordResult",
    "keywords": "Class ForgotPasswordResult Inheritance Object ForgotPasswordResult Namespace : MediaBrowser.Model.Users Assembly : MediaBrowser.Model.dll Syntax public class ForgotPasswordResult Properties Action Gets or sets the action. Declaration public ForgotPasswordAction Action { get; set; } Property Value Type Description ForgotPasswordAction The action. PinExpirationDate Gets or sets the pin expiration date. Declaration public DateTimeOffset? PinExpirationDate { get; set; } Property Value Type Description Nullable < DateTimeOffset > The pin expiration date. PinFile Gets or sets the pin file. Declaration public string PinFile { get; set; } Property Value Type Description String The pin file."
  },
  "reference/pluginapi/MediaBrowser.Model.Users.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Users.html",
    "title": "Namespace MediaBrowser.Model.Users",
    "keywords": "Namespace MediaBrowser.Model.Users Classes ForgotPasswordResult PinRedeemResult UserAction UserPolicy Enums ForgotPasswordAction UserActionType"
  },
  "reference/pluginapi/MediaBrowser.Model.Users.PinRedeemResult.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Users.PinRedeemResult.html",
    "title": "Class PinRedeemResult",
    "keywords": "Class PinRedeemResult Inheritance Object PinRedeemResult Namespace : MediaBrowser.Model.Users Assembly : MediaBrowser.Model.dll Syntax public class PinRedeemResult Properties Success Gets or sets a value indicating whether this PinRedeemResult is success. Declaration public bool Success { get; set; } Property Value Type Description Boolean true if success; otherwise, false . UsersReset Gets or sets the users reset. Declaration public string[] UsersReset { get; set; } Property Value Type Description String [] The users reset."
  },
  "reference/pluginapi/MediaBrowser.Model.Users.UserAction.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Users.UserAction.html",
    "title": "Class UserAction",
    "keywords": "Class UserAction Inheritance Object UserAction Namespace : MediaBrowser.Model.Users Assembly : MediaBrowser.Model.dll Syntax public class UserAction Properties Date Declaration public DateTimeOffset Date { get; set; } Property Value Type Description DateTimeOffset Id Declaration public string Id { get; set; } Property Value Type Description String ItemId Declaration public string ItemId { get; set; } Property Value Type Description String PositionTicks Declaration public long? PositionTicks { get; set; } Property Value Type Description Nullable < Int64 > ServerId Declaration public string ServerId { get; set; } Property Value Type Description String Type Declaration public UserActionType Type { get; set; } Property Value Type Description UserActionType UserId Declaration public string UserId { get; set; } Property Value Type Description String"
  },
  "reference/pluginapi/MediaBrowser.Model.Users.UserActionType.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Users.UserActionType.html",
    "title": "Enum UserActionType",
    "keywords": "Enum UserActionType Namespace : MediaBrowser.Model.Users Assembly : MediaBrowser.Model.dll Syntax public enum UserActionType Fields Name Description PlayedItem Extension Methods EditorHelpers.GetDescription() EditorHelpers.GetColor() EditorHelpers.RadioOptionFromEnum<UserActionType>() EditorHelpers.GetDisplayName()"
  },
  "reference/pluginapi/MediaBrowser.Model.Users.UserPolicy.html": {
    "href": "reference/pluginapi/MediaBrowser.Model.Users.UserPolicy.html",
    "title": "Class UserPolicy",
    "keywords": "Class UserPolicy Inheritance Object UserPolicy Namespace : MediaBrowser.Model.Users Assembly : MediaBrowser.Model.dll Syntax public class UserPolicy Constructors UserPolicy() Declaration public UserPolicy() Properties AccessSchedules Declaration public AccessSchedule[] AccessSchedules { get; set; } Property Value Type Description AccessSchedule [] AuthenticationProviderId Declaration public string AuthenticationProviderId { get; set; } Property Value Type Description String BlockedMediaFolders Declaration public string[] BlockedMediaFolders { get; set; } Property Value Type Description String [] BlockedTags Declaration public string[] BlockedTags { get; set; } Property Value Type Description String [] BlockUnratedItems Declaration public UnratedItem[] BlockUnratedItems { get; set; } Property Value Type Description UnratedItem [] EnableAllChannels Declaration public bool EnableAllChannels { get; set; } Property Value Type Description Boolean EnableAllDevices Declaration public bool EnableAllDevices { get; set; } Property Value Type Description Boolean EnableAllFolders Declaration public bool EnableAllFolders { get; set; } Property Value Type Description Boolean EnableAudioPlaybackTranscoding Declaration public bool EnableAudioPlaybackTranscoding { get; set; } Property Value Type Description Boolean EnableContentDeletion Declaration public bool EnableContentDeletion { get; set; } Property Value Type Description Boolean EnableContentDeletionFromFolders Declaration public string[] EnableContentDeletionFromFolders { get; set; } Property Value Type Description String [] EnableContentDownloading Declaration public bool EnableContentDownloading { get; set; } Property Value Type Description Boolean EnabledChannels Declaration public string[] EnabledChannels { get; set; } Property Value Type Description String [] EnabledDevices Declaration public string[] EnabledDevices { get; set; } Property Value Type Description String [] EnabledFolders Declaration public string[] EnabledFolders { get; set; } Property Value Type Description String [] EnableLiveTvAccess Declaration public bool EnableLiveTvAccess { get; set; } Property Value Type Description Boolean EnableLiveTvManagement Declaration public bool EnableLiveTvManagement { get; set; } Property Value Type Description Boolean EnableMediaConversion Declaration public bool EnableMediaConversion { get; set; } Property Value Type Description Boolean EnableMediaPlayback Declaration public bool EnableMediaPlayback { get; set; } Property Value Type Description Boolean EnablePlaybackRemuxing Declaration public bool EnablePlaybackRemuxing { get; set; } Property Value Type Description Boolean EnablePublicSharing Declaration public bool EnablePublicSharing { get; set; } Property Value Type Description Boolean EnableRemoteAccess Declaration public bool EnableRemoteAccess { get; set; } Property Value Type Description Boolean EnableRemoteControlOfOtherUsers Declaration public bool EnableRemoteControlOfOtherUsers { get; set; } Property Value Type Description Boolean EnableSharedDeviceControl Declaration public bool EnableSharedDeviceControl { get; set; } Property Value Type Description Boolean EnableSubtitleDownloading Declaration public bool EnableSubtitleDownloading { get; set; } Property Value Type Description Boolean EnableSubtitleManagement Declaration public bool EnableSubtitleManagement { get; set; } Property Value Type Description Boolean EnableSyncTranscoding Gets or sets a value indicating whether [enable synchronize]. Declaration public bool EnableSyncTranscoding { get; set; } Property Value Type Description Boolean true if [enable synchronize]; otherwise, false . EnableUserPreferenceAccess Declaration public bool EnableUserPreferenceAccess { get; set; } Property Value Type Description Boolean EnableVideoPlaybackTranscoding Declaration public bool EnableVideoPlaybackTranscoding { get; set; } Property Value Type Description Boolean ExcludedSubFolders Declaration public string[] ExcludedSubFolders { get; set; } Property Value Type Description String [] IncludeTags Declaration public string[] IncludeTags { get; set; } Property Value Type Description String [] InvalidLoginAttemptCount Declaration public int InvalidLoginAttemptCount { get; set; } Property Value Type Description Int32 IsAdministrator Gets or sets a value indicating whether this instance is administrator. Declaration public bool IsAdministrator { get; set; } Property Value Type Description Boolean true if this instance is administrator; otherwise, false . IsDisabled Gets or sets a value indicating whether this instance is disabled. Declaration public bool IsDisabled { get; set; } Property Value Type Description Boolean true if this instance is disabled; otherwise, false . IsHidden Gets or sets a value indicating whether this instance is hidden. Declaration public bool IsHidden { get; set; } Property Value Type Description Boolean true if this instance is hidden; otherwise, false . IsHiddenFromUnusedDevices Declaration public bool IsHiddenFromUnusedDevices { get; set; } Property Value Type Description Boolean IsHiddenRemotely Declaration public bool IsHiddenRemotely { get; set; } Property Value Type Description Boolean IsTagBlockingModeInclusive Declaration public bool IsTagBlockingModeInclusive { get; set; } Property Value Type Description Boolean MaxParentalRating Gets or sets the max parental rating. Declaration public int? MaxParentalRating { get; set; } Property Value Type Description Nullable < Int32 > The max parental rating. RemoteClientBitrateLimit Declaration public int RemoteClientBitrateLimit { get; set; } Property Value Type Description Int32 SimultaneousStreamLimit Declaration public int SimultaneousStreamLimit { get; set; } Property Value Type Description Int32"
  },
  "reference/RestAPI.html": {
    "href": "reference/RestAPI.html",
    "title": "",
    "keywords": "ActivityLogService API Documentation Wiki ArtistsService API Documentation Wiki AudioService API Documentation: Audio streaming BifService API Documentation Wiki BrandingService API Documentation Wiki ChannelService API Documentation Wiki CodecParameterService API Documentation Wiki CollectionService API Documentation Wiki ConfigurationService API Documentation Wiki ConnectService API Documentation Wiki DashboardService API Documentation Wiki DemoApiService API Documentation Wiki DeviceService API Documentation Wiki DiagnosticsPluginService API Documentation Wiki DisplayPreferencesService API Documentation Wiki DlnaServerService API Documentation Wiki DlnaService API Documentation Wiki DynamicHlsService API Documentation: Http Live Streaming EncodingInfoService API Documentation Wiki EnvironmentService API Documentation Wiki FfmpegOptionsService API Documentation Wiki GameGenresService API Documentation Wiki GamesService API Documentation Wiki GenresService API Documentation Wiki HlsSegmentService API Documentation Wiki ImageByNameService API Documentation Wiki ImageService API Documentation: Images InstantMixService API Documentation Wiki ItemLookupService API Documentation Wiki ItemRefreshService API Documentation Wiki ItemUpdateService API Documentation Wiki ItemsService API Documentation: Item Information LibraryService API Documentation: Browsing the Library LibraryStructureService API Documentation Wiki LiveTvService API Documentation Wiki LocalizationService API Documentation Wiki MediaInfoService API Documentation Wiki MoviesService API Documentation Wiki MusicGenresService API Documentation Wiki NotificationsService API Documentation Wiki OfficialRatingService API Documentation Wiki OpenApiService API Documentation Wiki PackageService API Documentation Wiki PersonsService API Documentation Wiki PlaylistService API Documentation: Playlists PlaystateService API Documentation Wiki PluginService API Documentation Wiki RemoteImageService API Documentation Wiki ScheduledTaskService API Documentation Wiki SessionsService API Documentation: Remote control StudiosService API Documentation Wiki SubtitleOptionsService API Documentation Wiki SubtitleService API Documentation Wiki SuggestionsService API Documentation Wiki SyncService API Documentation: Sync SystemService API Documentation Wiki TagService API Documentation Wiki ToneMapOptionsService API Documentation Wiki TrailersService API Documentation Wiki TvShowsService API Documentation Wiki UniversalAudioService API Documentation: Audio streaming UserLibraryService API Documentation: Browsing the Library UserService API Documentation Wiki UserViewsService API Documentation: Browsing the Library VideoHlsService API Documentation Wiki VideoService API Documentation: Video streaming VideosService API Documentation Wiki"
  },
  "reference/RestAPI/ActivityLogService.html": {
    "href": "reference/RestAPI/ActivityLogService.html",
    "title": "ActivityLogService",
    "keywords": "ActivityLogService API Documentation Wiki getSystemActivitylogEntries get /System/ActivityLog/Entries Gets activity log entries"
  },
  "reference/RestAPI/ActivityLogService/getSystemActivitylogEntries.html": {
    "href": "reference/RestAPI/ActivityLogService/getSystemActivitylogEntries.html",
    "title": "getSystemActivitylogEntries",
    "keywords": "getSystemActivitylogEntries Gets activity log entries Requires authentication as administrator getSystemActivitylogEntries Request get /System/ActivityLog/Entries Parameters Name In Type Default Notes StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return MinDate query Optional. The minimum date. Format = ISO Responses Status Code Type Description Samples 200 QueryResult_ActivityLogEntry Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_ActivityLogEntry QueryResult_ActivityLogEntry Name Type Notes Items ActivityLogEntry[] TotalRecordCount integer (int32) ActivityLogEntry see also MediaBrowser.Model.Activity.ActivityLogEntry Name Type Notes Id integer (int64) Name string Overview string ShortOverview string Type string ItemId string Date string (date-time) UserId string UserPrimaryImageTag string Severity LogSeverity LogSeverity see also MediaBrowser.Model.Logging.LogSeverity Enum Values Info Debug Warn Error Fatal"
  },
  "reference/RestAPI/ArtistsService.html": {
    "href": "reference/RestAPI/ArtistsService.html",
    "title": "ArtistsService",
    "keywords": "ArtistsService API Documentation: Items by name getArtists get /Artists Gets all artists from a given item, folder, or the entire library getArtistsAlbumartists get /Artists/AlbumArtists Gets all album artists from a given item, folder, or the entire library getArtistsByName get /Artists/{Name} Gets an artist, by name"
  },
  "reference/RestAPI/ArtistsService/getArtists.html": {
    "href": "reference/RestAPI/ArtistsService/getArtists.html",
    "title": "getArtists",
    "keywords": "getArtists Gets all artists from a given item, folder, or the entire library Requires authentication as user getArtists Request get /Artists Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/ArtistsService/getArtistsAlbumartists.html": {
    "href": "reference/RestAPI/ArtistsService/getArtistsAlbumartists.html",
    "title": "getArtistsAlbumartists",
    "keywords": "getArtistsAlbumartists Gets all album artists from a given item, folder, or the entire library Requires authentication as user getArtistsAlbumartists Request get /Artists/AlbumArtists Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/ArtistsService/getArtistsByName.html": {
    "href": "reference/RestAPI/ArtistsService/getArtistsByName.html",
    "title": "getArtistsByName",
    "keywords": "getArtistsByName Gets an artist, by name Requires authentication as user getArtistsByName Request get /Artists/{Name} Parameters Name In Type Default Notes *Name path The artist name UserId query Optional. Filter by user id, and attach user data Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/AudioService.html": {
    "href": "reference/RestAPI/AudioService.html",
    "title": "AudioService",
    "keywords": "AudioService API Documentation: Audio streaming getAudioByIdStream get /Audio/{Id}/stream Gets an audio stream getAudioByIdStreamByContainer get /Audio/{Id}/stream.{Container} Gets an audio stream headAudioByIdStream head /Audio/{Id}/stream Gets an audio stream headAudioByIdStreamByContainer head /Audio/{Id}/stream.{Container} Gets an audio stream"
  },
  "reference/RestAPI/AudioService/getAudioByIdStream.html": {
    "href": "reference/RestAPI/AudioService/getAudioByIdStream.html",
    "title": "getAudioByIdStream",
    "keywords": "getAudioByIdStream Gets an audio stream Requires authentication as user getAudioByIdStream Request get /Audio/{Id}/stream Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container query Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/AudioService/getAudioByIdStreamByContainer.html": {
    "href": "reference/RestAPI/AudioService/getAudioByIdStreamByContainer.html",
    "title": "getAudioByIdStreamByContainer",
    "keywords": "getAudioByIdStreamByContainer Gets an audio stream Requires authentication as user getAudioByIdStreamByContainer Request get /Audio/{Id}/stream.{Container} Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container path Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/AudioService/headAudioByIdStream.html": {
    "href": "reference/RestAPI/AudioService/headAudioByIdStream.html",
    "title": "headAudioByIdStream",
    "keywords": "headAudioByIdStream Gets an audio stream Requires authentication as user headAudioByIdStream Request head /Audio/{Id}/stream Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container query Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/AudioService/headAudioByIdStreamByContainer.html": {
    "href": "reference/RestAPI/AudioService/headAudioByIdStreamByContainer.html",
    "title": "headAudioByIdStreamByContainer",
    "keywords": "headAudioByIdStreamByContainer Gets an audio stream Requires authentication as user headAudioByIdStreamByContainer Request head /Audio/{Id}/stream.{Container} Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container path Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/BifService.html": {
    "href": "reference/RestAPI/BifService.html",
    "title": "BifService",
    "keywords": "BifService API Documentation Wiki getItemsByIdThumbnailset get /Items/{Id}/ThumbnailSet getVideosByIdIndexBif get /Videos/{Id}/index.bif"
  },
  "reference/RestAPI/BifService/getItemsByIdThumbnailset.html": {
    "href": "reference/RestAPI/BifService/getItemsByIdThumbnailset.html",
    "title": "getItemsByIdThumbnailset",
    "keywords": "getItemsByIdThumbnailset Requires authentication as user getItemsByIdThumbnailset Request get /Items/{Id}/ThumbnailSet Parameters Name In Type Default Notes *Width query *Id path Item Id Responses Status Code Type Description Samples 200 ThumbnailSetInfo Operation successful. Returning a ThumbnailSetInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ThumbnailSetInfo RokuMetadata.Api.ThumbnailSetInfo Name Type Notes AspectRatio number (double) Thumbnails ThumbnailInfo[] ThumbnailInfo RokuMetadata.Api.ThumbnailInfo Name Type Notes PositionTicks integer (int64) ImageTag string"
  },
  "reference/RestAPI/BifService/getVideosByIdIndexBif.html": {
    "href": "reference/RestAPI/BifService/getVideosByIdIndexBif.html",
    "title": "getVideosByIdIndexBif",
    "keywords": "getVideosByIdIndexBif No authentication required getVideosByIdIndexBif Request get /Videos/{Id}/index.bif Parameters Name In Type Default Notes *Width query *Id path Item Id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/BrandingService.html": {
    "href": "reference/RestAPI/BrandingService.html",
    "title": "BrandingService",
    "keywords": "BrandingService API Documentation Wiki getBrandingConfiguration get /Branding/Configuration Gets branding configuration getBrandingCss get /Branding/Css Gets custom css getBrandingCssCss get /Branding/Css.css Gets custom css"
  },
  "reference/RestAPI/BrandingService/getBrandingConfiguration.html": {
    "href": "reference/RestAPI/BrandingService/getBrandingConfiguration.html",
    "title": "getBrandingConfiguration",
    "keywords": "getBrandingConfiguration Gets branding configuration No authentication required getBrandingConfiguration Request get /Branding/Configuration Responses Status Code Type Description Samples 200 BrandingOptions Operation successful. Returning a BrandingOptions object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions BrandingOptions see also MediaBrowser.Model.Branding.BrandingOptions Name Type Notes LoginDisclaimer string CustomCss string"
  },
  "reference/RestAPI/BrandingService/getBrandingCss.html": {
    "href": "reference/RestAPI/BrandingService/getBrandingCss.html",
    "title": "getBrandingCss",
    "keywords": "getBrandingCss Gets custom css No authentication required getBrandingCss Request get /Branding/Css Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/BrandingService/getBrandingCssCss.html": {
    "href": "reference/RestAPI/BrandingService/getBrandingCssCss.html",
    "title": "getBrandingCssCss",
    "keywords": "getBrandingCssCss Gets custom css No authentication required getBrandingCssCss Request get /Branding/Css.css Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ChannelService.html": {
    "href": "reference/RestAPI/ChannelService.html",
    "title": "ChannelService",
    "keywords": "ChannelService API Documentation: Item Information getChannels get /Channels Gets available channels"
  },
  "reference/RestAPI/ChannelService/getChannels.html": {
    "href": "reference/RestAPI/ChannelService/getChannels.html",
    "title": "getChannels",
    "keywords": "getChannels Gets available channels Requires authentication as user getChannels Request get /Channels Parameters Name In Type Default Notes UserId query User Id StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/CodecParameterService.html": {
    "href": "reference/RestAPI/CodecParameterService.html",
    "title": "CodecParameterService",
    "keywords": "CodecParameterService API Documentation Wiki getEncodingCodecparameters get /Encoding/CodecParameters Gets the parameters for a specified codec. getEncodingdiagnosticsCodecparameters get /EncodingDiagnostics/CodecParameters Gets the parameters for a specified codec. postEncodingCodecparameters post /Encoding/CodecParameters Updates the parameters for a specified codec. postEncodingdiagnosticsCodecparameters post /EncodingDiagnostics/CodecParameters Updates the parameters for a specified codec."
  },
  "reference/RestAPI/CodecParameterService/getEncodingCodecparameters.html": {
    "href": "reference/RestAPI/CodecParameterService/getEncodingCodecparameters.html",
    "title": "getEncodingCodecparameters",
    "keywords": "getEncodingCodecparameters Gets the parameters for a specified codec. Requires authentication as user getEncodingCodecparameters Request get /Encoding/CodecParameters Parameters Name In Type Default Notes *CodecId query Codec Id *ParameterContext query Parameter Context Responses Status Code Type Description Samples 200 EditObjectContainer Operation successful. Returning a EditObjectContainer object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions EditObjectContainer see also Emby.Web.GenericEdit.EditObjectContainer Name Type Notes Object object DefaultObject object TypeName string EditorRoot EditorRoot[] EditorRoot see also Emby.Web.GenericEdit.Editors.EditorRoot Name Type Notes PropertyConditions PropertyCondition[] PostbackActions PostbackAction[] TitleButton EditorButtonItem[] EditorItems EditorBase[] EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string PropertyCondition see also Emby.Web.GenericEdit.Conditions.PropertyCondition Name Type Notes AffectedPropertyId string ConditionType PropertyConditionType TargetPropertyId string SimpleCondition SimpleCondition ValueCondition ValueCondition Value object PropertyConditionType see also Emby.Web.GenericEdit.Conditions.PropertyConditionType Enum Values Visible Enabled SimpleCondition see also MediaBrowser.Model.Attributes.SimpleCondition Enum Values IsTrue IsFalse IsNull IsNotNullOrEmpty ValueCondition see also MediaBrowser.Model.Attributes.ValueCondition Enum Values IsEqual IsNotEqual IsGreater IsGreaterOrEqual IsLess IsLessOrEqual PostbackAction see also Emby.Web.GenericEdit.Actions.PostbackAction Name Type Notes TargetEditorId string PostbackCommandId string CommandParameterPropertyId string EditorButtonItem see also Emby.Web.GenericEdit.Editors.EditorButtonItem Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string EditorTypes see also Emby.Web.GenericEdit.Common.EditorTypes Enum Values Group Text Numeric Boolean SelectSingle SelectMultiple Date FilePath FolderPath StatusItem ProgressItem ButtonItem ButtonGroup CaptionItem LabelItem ItemList RadioGroup DataGrid PivotGrid SpacerItem EditorBase see also Emby.Web.GenericEdit.Editors.EditorBase Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string"
  },
  "reference/RestAPI/CodecParameterService/getEncodingdiagnosticsCodecparameters.html": {
    "href": "reference/RestAPI/CodecParameterService/getEncodingdiagnosticsCodecparameters.html",
    "title": "getEncodingdiagnosticsCodecparameters",
    "keywords": "getEncodingdiagnosticsCodecparameters Gets the parameters for a specified codec. Requires authentication as user getEncodingdiagnosticsCodecparameters Request get /EncodingDiagnostics/CodecParameters Parameters Name In Type Default Notes *CodecId query Codec Id *ParameterContext query Parameter Context Responses Status Code Type Description Samples 200 EditObjectContainer Operation successful. Returning a EditObjectContainer object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions EditObjectContainer see also Emby.Web.GenericEdit.EditObjectContainer Name Type Notes Object object DefaultObject object TypeName string EditorRoot EditorRoot[] EditorRoot see also Emby.Web.GenericEdit.Editors.EditorRoot Name Type Notes PropertyConditions PropertyCondition[] PostbackActions PostbackAction[] TitleButton EditorButtonItem[] EditorItems EditorBase[] EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string PropertyCondition see also Emby.Web.GenericEdit.Conditions.PropertyCondition Name Type Notes AffectedPropertyId string ConditionType PropertyConditionType TargetPropertyId string SimpleCondition SimpleCondition ValueCondition ValueCondition Value object PropertyConditionType see also Emby.Web.GenericEdit.Conditions.PropertyConditionType Enum Values Visible Enabled SimpleCondition see also MediaBrowser.Model.Attributes.SimpleCondition Enum Values IsTrue IsFalse IsNull IsNotNullOrEmpty ValueCondition see also MediaBrowser.Model.Attributes.ValueCondition Enum Values IsEqual IsNotEqual IsGreater IsGreaterOrEqual IsLess IsLessOrEqual PostbackAction see also Emby.Web.GenericEdit.Actions.PostbackAction Name Type Notes TargetEditorId string PostbackCommandId string CommandParameterPropertyId string EditorButtonItem see also Emby.Web.GenericEdit.Editors.EditorButtonItem Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string EditorTypes see also Emby.Web.GenericEdit.Common.EditorTypes Enum Values Group Text Numeric Boolean SelectSingle SelectMultiple Date FilePath FolderPath StatusItem ProgressItem ButtonItem ButtonGroup CaptionItem LabelItem ItemList RadioGroup DataGrid PivotGrid SpacerItem EditorBase see also Emby.Web.GenericEdit.Editors.EditorBase Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string"
  },
  "reference/RestAPI/CodecParameterService/postEncodingCodecparameters.html": {
    "href": "reference/RestAPI/CodecParameterService/postEncodingCodecparameters.html",
    "title": "postEncodingCodecparameters",
    "keywords": "postEncodingCodecparameters Updates the parameters for a specified codec. Requires authentication as administrator postEncodingCodecparameters Request post /Encoding/CodecParameters Parameters Name In Type Default Notes *CodecId query Codec Id *ParameterContext query Parameter Context *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/CodecParameterService/postEncodingdiagnosticsCodecparameters.html": {
    "href": "reference/RestAPI/CodecParameterService/postEncodingdiagnosticsCodecparameters.html",
    "title": "postEncodingdiagnosticsCodecparameters",
    "keywords": "postEncodingdiagnosticsCodecparameters Updates the parameters for a specified codec. Requires authentication as administrator postEncodingdiagnosticsCodecparameters Request post /EncodingDiagnostics/CodecParameters Parameters Name In Type Default Notes *CodecId query Codec Id *ParameterContext query Parameter Context *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/CollectionService.html": {
    "href": "reference/RestAPI/CollectionService.html",
    "title": "CollectionService",
    "keywords": "CollectionService API Documentation Wiki deleteCollectionsByIdItems delete /Collections/{Id}/Items Removes items from a collection postCollections post /Collections Creates a new collection postCollectionsByIdItems post /Collections/{Id}/Items Adds items to a collection postCollectionsByIdItemsDelete post /Collections/{Id}/Items/Delete Removes items from a collection"
  },
  "reference/RestAPI/CollectionService/deleteCollectionsByIdItems.html": {
    "href": "reference/RestAPI/CollectionService/deleteCollectionsByIdItems.html",
    "title": "deleteCollectionsByIdItems",
    "keywords": "deleteCollectionsByIdItems Removes items from a collection Requires authentication as user deleteCollectionsByIdItems Request delete /Collections/{Id}/Items Parameters Name In Type Default Notes *Ids query Item id, comma delimited *Id path Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/CollectionService/postCollections.html": {
    "href": "reference/RestAPI/CollectionService/postCollections.html",
    "title": "postCollections",
    "keywords": "postCollections Creates a new collection Requires authentication as user postCollections Request post /Collections Parameters Name In Type Default Notes IsLocked query Whether or not to lock the new collection. Name query The name of the new collection. ParentId query Optional - create the collection within a specific folder Ids query Item Ids to add to the collection Responses Status Code Type Description Samples 200 CollectionCreationResult Operation successful. Returning a CollectionCreationResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions CollectionCreationResult see also MediaBrowser.Model.Collections.CollectionCreationResult Name Type Notes Id string Name string"
  },
  "reference/RestAPI/CollectionService/postCollectionsByIdItems.html": {
    "href": "reference/RestAPI/CollectionService/postCollectionsByIdItems.html",
    "title": "postCollectionsByIdItems",
    "keywords": "postCollectionsByIdItems Adds items to a collection Requires authentication as user postCollectionsByIdItems Request post /Collections/{Id}/Items Parameters Name In Type Default Notes *Ids query Item id, comma delimited *Id path Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/CollectionService/postCollectionsByIdItemsDelete.html": {
    "href": "reference/RestAPI/CollectionService/postCollectionsByIdItemsDelete.html",
    "title": "postCollectionsByIdItemsDelete",
    "keywords": "postCollectionsByIdItemsDelete Removes items from a collection Requires authentication as user postCollectionsByIdItemsDelete Request post /Collections/{Id}/Items/Delete Parameters Name In Type Default Notes *Ids query Item id, comma delimited *Id path Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ConfigurationService.html": {
    "href": "reference/RestAPI/ConfigurationService.html",
    "title": "ConfigurationService",
    "keywords": "ConfigurationService API Documentation Wiki getSystemConfiguration get /System/Configuration Gets application configuration getSystemConfigurationByKey get /System/Configuration/{Key} Gets a named configuration postSystemConfiguration post /System/Configuration Updates application configuration postSystemConfigurationByKey post /System/Configuration/{Key} Updates named configuration"
  },
  "reference/RestAPI/ConfigurationService/getSystemConfiguration.html": {
    "href": "reference/RestAPI/ConfigurationService/getSystemConfiguration.html",
    "title": "getSystemConfiguration",
    "keywords": "getSystemConfiguration Gets application configuration Requires authentication as user getSystemConfiguration Request get /System/Configuration Responses Status Code Type Description Samples 200 ServerConfiguration Operation successful. Returning a ServerConfiguration object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ServerConfiguration see also MediaBrowser.Model.Configuration.ServerConfiguration Name Type Notes EnableUPnP boolean PublicPort integer (int32) PublicHttpsPort integer (int32) HttpServerPortNumber integer (int32) HttpsPortNumber integer (int32) EnableHttps boolean CertificatePath string CertificatePassword string IsPortAuthorized boolean AutoRunWebApp boolean EnableRemoteAccess boolean LogAllQueryTimes boolean EnableCaseSensitiveItemIds boolean MetadataPath string MetadataNetworkPath string PreferredMetadataLanguage string MetadataCountryCode string SortRemoveWords array LibraryMonitorDelay integer (int32) EnableDashboardResponseCaching boolean DashboardSourcePath string ImageSavingConvention ImageSavingConvention EnableAutomaticRestart boolean ServerName string WanDdns string UICulture string RemoteClientBitrateLimit integer (int32) DisplaySpecialsWithinSeasons boolean LocalNetworkSubnets array LocalNetworkAddresses array EnableExternalContentInSuggestions boolean RequireHttps boolean IsBehindProxy boolean RemoteIPFilter array IsRemoteIPFilterBlacklist boolean ImageExtractionTimeoutMs integer (int32) PathSubstitutions PathSubstitution[] UninstalledPlugins array CollapseVideoFolders boolean EnableOriginalTrackTitles boolean VacuumDatabaseOnStartup boolean SimultaneousStreamLimit integer (int32) DatabaseCacheSizeMB integer (int32) EnableSqLiteMmio boolean ChannelOptionsUpgraded boolean TimerIdsUpgraded boolean ForcedSortNameUpgraded boolean InheritedParentalRatingValueUpgraded boolean EnablePeopleLetterSubFolders boolean OptimizeDatabaseOnShutdown boolean DatabaseAnalysisLimit integer (int32) DisableAsyncIO boolean EnableDebugLevelLogging boolean RevertDebugLogging string EnableAutoUpdate boolean LogFileRetentionDays integer (int32) RunAtStartup boolean IsStartupWizardCompleted boolean CachePath string ImageSavingConvention see also MediaBrowser.Model.Configuration.ImageSavingConvention Enum Values Legacy Compatible PathSubstitution see also MediaBrowser.Model.Configuration.PathSubstitution Name Type Notes From string To string"
  },
  "reference/RestAPI/ConfigurationService/getSystemConfigurationByKey.html": {
    "href": "reference/RestAPI/ConfigurationService/getSystemConfigurationByKey.html",
    "title": "getSystemConfigurationByKey",
    "keywords": "getSystemConfigurationByKey Gets a named configuration Requires authentication as user getSystemConfigurationByKey Request get /System/Configuration/{Key} Parameters Name In Type Default Notes *Key path Key Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ConfigurationService/postSystemConfiguration.html": {
    "href": "reference/RestAPI/ConfigurationService/postSystemConfiguration.html",
    "title": "postSystemConfiguration",
    "keywords": "postSystemConfiguration Updates application configuration Requires authentication as administrator postSystemConfiguration Request post /System/Configuration Parameters Name In Type Default Notes *body body ServerConfiguration ServerConfiguration: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ServerConfiguration see also MediaBrowser.Model.Configuration.ServerConfiguration Name Type Notes EnableUPnP boolean PublicPort integer (int32) PublicHttpsPort integer (int32) HttpServerPortNumber integer (int32) HttpsPortNumber integer (int32) EnableHttps boolean CertificatePath string CertificatePassword string IsPortAuthorized boolean AutoRunWebApp boolean EnableRemoteAccess boolean LogAllQueryTimes boolean EnableCaseSensitiveItemIds boolean MetadataPath string MetadataNetworkPath string PreferredMetadataLanguage string MetadataCountryCode string SortRemoveWords array LibraryMonitorDelay integer (int32) EnableDashboardResponseCaching boolean DashboardSourcePath string ImageSavingConvention ImageSavingConvention EnableAutomaticRestart boolean ServerName string WanDdns string UICulture string RemoteClientBitrateLimit integer (int32) DisplaySpecialsWithinSeasons boolean LocalNetworkSubnets array LocalNetworkAddresses array EnableExternalContentInSuggestions boolean RequireHttps boolean IsBehindProxy boolean RemoteIPFilter array IsRemoteIPFilterBlacklist boolean ImageExtractionTimeoutMs integer (int32) PathSubstitutions PathSubstitution[] UninstalledPlugins array CollapseVideoFolders boolean EnableOriginalTrackTitles boolean VacuumDatabaseOnStartup boolean SimultaneousStreamLimit integer (int32) DatabaseCacheSizeMB integer (int32) EnableSqLiteMmio boolean ChannelOptionsUpgraded boolean TimerIdsUpgraded boolean ForcedSortNameUpgraded boolean InheritedParentalRatingValueUpgraded boolean EnablePeopleLetterSubFolders boolean OptimizeDatabaseOnShutdown boolean DatabaseAnalysisLimit integer (int32) DisableAsyncIO boolean EnableDebugLevelLogging boolean RevertDebugLogging string EnableAutoUpdate boolean LogFileRetentionDays integer (int32) RunAtStartup boolean IsStartupWizardCompleted boolean CachePath string ImageSavingConvention see also MediaBrowser.Model.Configuration.ImageSavingConvention Enum Values Legacy Compatible PathSubstitution see also MediaBrowser.Model.Configuration.PathSubstitution Name Type Notes From string To string"
  },
  "reference/RestAPI/ConfigurationService/postSystemConfigurationByKey.html": {
    "href": "reference/RestAPI/ConfigurationService/postSystemConfigurationByKey.html",
    "title": "postSystemConfigurationByKey",
    "keywords": "postSystemConfigurationByKey Updates named configuration Requires authentication as administrator postSystemConfigurationByKey Request post /System/Configuration/{Key} Parameters Name In Type Default Notes *Key path Key *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ConnectService.html": {
    "href": "reference/RestAPI/ConnectService.html",
    "title": "ConnectService",
    "keywords": "ConnectService API Documentation Wiki deleteUsersByIdConnectLink delete /Users/{Id}/Connect/Link Removes a Connect link for a user getConnectExchange get /Connect/Exchange Gets the corresponding local user from a connect user id getConnectPending get /Connect/Pending Creates a Connect link for a user postUsersByIdConnectLink post /Users/{Id}/Connect/Link Creates a Connect link for a user postUsersByIdConnectLinkDelete post /Users/{Id}/Connect/Link/Delete Removes a Connect link for a user"
  },
  "reference/RestAPI/ConnectService/deleteUsersByIdConnectLink.html": {
    "href": "reference/RestAPI/ConnectService/deleteUsersByIdConnectLink.html",
    "title": "deleteUsersByIdConnectLink",
    "keywords": "deleteUsersByIdConnectLink Removes a Connect link for a user Requires authentication as administrator deleteUsersByIdConnectLink Request delete /Users/{Id}/Connect/Link Parameters Name In Type Default Notes *Id path User Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ConnectService/getConnectExchange.html": {
    "href": "reference/RestAPI/ConnectService/getConnectExchange.html",
    "title": "getConnectExchange",
    "keywords": "getConnectExchange Gets the corresponding local user from a connect user id Requires authentication as user getConnectExchange Request get /Connect/Exchange Parameters Name In Type Default Notes *ConnectUserId query ConnectUserId Responses Status Code Type Description Samples 200 ConnectAuthenticationExchangeResult Operation successful. Returning a ConnectAuthenticationExchangeResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ConnectAuthenticationExchangeResult Emby.Server.Connect.ConnectAuthenticationExchangeResult Name Type Notes LocalUserId string (guid) AccessToken string"
  },
  "reference/RestAPI/ConnectService/getConnectPending.html": {
    "href": "reference/RestAPI/ConnectService/getConnectPending.html",
    "title": "getConnectPending",
    "keywords": "getConnectPending Creates a Connect link for a user Requires authentication as administrator getConnectPending Request get /Connect/Pending Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ConnectService/postUsersByIdConnectLink.html": {
    "href": "reference/RestAPI/ConnectService/postUsersByIdConnectLink.html",
    "title": "postUsersByIdConnectLink",
    "keywords": "postUsersByIdConnectLink Creates a Connect link for a user Requires authentication as administrator postUsersByIdConnectLink Request post /Users/{Id}/Connect/Link Parameters Name In Type Default Notes *Id path User Id *ConnectUsername query Connect username Responses Status Code Type Description Samples 200 UserLinkResult Operation successful. Returning a UserLinkResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserLinkResult see also MediaBrowser.Controller.Connect.UserLinkResult Name Type Notes IsPending boolean IsNewUserInvitation boolean GuestDisplayName string"
  },
  "reference/RestAPI/ConnectService/postUsersByIdConnectLinkDelete.html": {
    "href": "reference/RestAPI/ConnectService/postUsersByIdConnectLinkDelete.html",
    "title": "postUsersByIdConnectLinkDelete",
    "keywords": "postUsersByIdConnectLinkDelete Removes a Connect link for a user Requires authentication as administrator postUsersByIdConnectLinkDelete Request post /Users/{Id}/Connect/Link/Delete Parameters Name In Type Default Notes *Id path User Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DashboardService.html": {
    "href": "reference/RestAPI/DashboardService.html",
    "title": "DashboardService",
    "keywords": "DashboardService API Documentation Wiki getWebConfigurationpage get /web/ConfigurationPage getWebConfigurationpages get /web/ConfigurationPages getWebStrings get /web/strings"
  },
  "reference/RestAPI/DashboardService/getWebConfigurationpage.html": {
    "href": "reference/RestAPI/DashboardService/getWebConfigurationpage.html",
    "title": "getWebConfigurationpage",
    "keywords": "getWebConfigurationpage No authentication required getWebConfigurationpage Request get /web/ConfigurationPage Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DashboardService/getWebConfigurationpages.html": {
    "href": "reference/RestAPI/DashboardService/getWebConfigurationpages.html",
    "title": "getWebConfigurationpages",
    "keywords": "getWebConfigurationpages No authentication required getWebConfigurationpages Request get /web/ConfigurationPages Responses Status Code Type Description Samples 200 ConfigurationPageInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions ConfigurationPageInfo Emby.Web.Api.ConfigurationPageInfo Name Type Notes Name string EnableInMainMenu boolean MenuSection string MenuIcon string DisplayName string ConfigurationPageType ConfigurationPageType PluginId string Plugin IPlugin Translations array ConfigurationPageType see also MediaBrowser.Controller.Plugins.ConfigurationPageType Enum Values PluginConfiguration None IPlugin see also MediaBrowser.Common.Plugins.IPlugin Name Type Notes Name string Description string Id string (guid) Version Version AssemblyFilePath string DataFolderPath string Version see also System.Version Name Type Notes Major integer (int32) Minor integer (int32) Build integer (int32) Revision integer (int32) MajorRevision integer (int32) MinorRevision integer (int32)"
  },
  "reference/RestAPI/DashboardService/getWebStrings.html": {
    "href": "reference/RestAPI/DashboardService/getWebStrings.html",
    "title": "getWebStrings",
    "keywords": "getWebStrings No authentication required getWebStrings Request get /web/strings Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DemoApiService.html": {
    "href": "reference/RestAPI/DemoApiService.html",
    "title": "DemoApiService",
    "keywords": "DemoApiService API Documentation Wiki getGenericeditdemoDemo get /GenericEditDemo/Demo Gets GenericEdit demo data getGenericeditdemoDemotypes get /GenericEditDemo/DemoTypes Gets a list of demos postGenericeditdemoDemo post /GenericEditDemo/Demo Updates GenericEdit demo data"
  },
  "reference/RestAPI/DemoApiService/getGenericeditdemoDemo.html": {
    "href": "reference/RestAPI/DemoApiService/getGenericeditdemoDemo.html",
    "title": "getGenericeditdemoDemo",
    "keywords": "getGenericeditdemoDemo Gets GenericEdit demo data Requires authentication as administrator getGenericeditdemoDemo Request get /GenericEditDemo/Demo Parameters Name In Type Default Notes *DemoSet query Set of demos *DemoType query Type of demo object Responses Status Code Type Description Samples 200 EditObjectContainer Operation successful. Returning a EditObjectContainer object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions EditObjectContainer see also Emby.Web.GenericEdit.EditObjectContainer Name Type Notes Object object DefaultObject object TypeName string EditorRoot EditorRoot[] EditorRoot see also Emby.Web.GenericEdit.Editors.EditorRoot Name Type Notes PropertyConditions PropertyCondition[] PostbackActions PostbackAction[] TitleButton EditorButtonItem[] EditorItems EditorBase[] EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string PropertyCondition see also Emby.Web.GenericEdit.Conditions.PropertyCondition Name Type Notes AffectedPropertyId string ConditionType PropertyConditionType TargetPropertyId string SimpleCondition SimpleCondition ValueCondition ValueCondition Value object PropertyConditionType see also Emby.Web.GenericEdit.Conditions.PropertyConditionType Enum Values Visible Enabled SimpleCondition see also MediaBrowser.Model.Attributes.SimpleCondition Enum Values IsTrue IsFalse IsNull IsNotNullOrEmpty ValueCondition see also MediaBrowser.Model.Attributes.ValueCondition Enum Values IsEqual IsNotEqual IsGreater IsGreaterOrEqual IsLess IsLessOrEqual PostbackAction see also Emby.Web.GenericEdit.Actions.PostbackAction Name Type Notes TargetEditorId string PostbackCommandId string CommandParameterPropertyId string EditorButtonItem see also Emby.Web.GenericEdit.Editors.EditorButtonItem Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string EditorTypes see also Emby.Web.GenericEdit.Common.EditorTypes Enum Values Group Text Numeric Boolean SelectSingle SelectMultiple Date FilePath FolderPath StatusItem ProgressItem ButtonItem ButtonGroup CaptionItem LabelItem ItemList RadioGroup DataGrid PivotGrid SpacerItem EditorBase see also Emby.Web.GenericEdit.Editors.EditorBase Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string"
  },
  "reference/RestAPI/DemoApiService/getGenericeditdemoDemotypes.html": {
    "href": "reference/RestAPI/DemoApiService/getGenericeditdemoDemotypes.html",
    "title": "getGenericeditdemoDemotypes",
    "keywords": "getGenericeditdemoDemotypes Gets a list of demos Requires authentication as administrator getGenericeditdemoDemotypes Request get /GenericEditDemo/DemoTypes Parameters Name In Type Default Notes *DemoSet query Set of demos Responses Status Code Type Description Samples 200 DemoTypeInfo [] Operation successful. Returning a IEnumerable object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DemoTypeInfo Emby.Plugin.GenericEditDemo.Data.DemoTypeInfo Name Type Notes DemoType integer (int32) Name string"
  },
  "reference/RestAPI/DemoApiService/postGenericeditdemoDemo.html": {
    "href": "reference/RestAPI/DemoApiService/postGenericeditdemoDemo.html",
    "title": "postGenericeditdemoDemo",
    "keywords": "postGenericeditdemoDemo Updates GenericEdit demo data Requires authentication as administrator postGenericeditdemoDemo Request post /GenericEditDemo/Demo Parameters Name In Type Default Notes *DemoSet query Set of demos *DemoType query Type of demo object *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DeviceService.html": {
    "href": "reference/RestAPI/DeviceService.html",
    "title": "DeviceService",
    "keywords": "DeviceService API Documentation Wiki deleteDevices delete /Devices Deletes a device getDevices get /Devices Gets all devices getDevicesCamerauploads get /Devices/CameraUploads Gets camera upload history for a device getDevicesInfo get /Devices/Info Gets info for a device getDevicesOptions get /Devices/Options Gets options for a device postDevicesCamerauploads post /Devices/CameraUploads Uploads content postDevicesDelete post /Devices/Delete Deletes a device postDevicesOptions post /Devices/Options Updates device options"
  },
  "reference/RestAPI/DeviceService/deleteDevices.html": {
    "href": "reference/RestAPI/DeviceService/deleteDevices.html",
    "title": "deleteDevices",
    "keywords": "deleteDevices Deletes a device Requires authentication as administrator deleteDevices Request delete /Devices Parameters Name In Type Default Notes *Id query Device Id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DeviceService/getDevices.html": {
    "href": "reference/RestAPI/DeviceService/getDevices.html",
    "title": "getDevices",
    "keywords": "getDevices Gets all devices Requires authentication as administrator getDevices Request get /Devices Responses Status Code Type Description Samples 200 DeviceInfo Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DeviceInfo QueryResult_Devices.DeviceInfo Name Type Notes Items DeviceInfo[] TotalRecordCount integer (int32) DeviceInfo see also MediaBrowser.Model.Devices.DeviceInfo Name Type Notes Name string Id string InternalId integer (int64) ReportedDeviceId string LastUserName string AppName string AppVersion string LastUserId string DateLastActivity string (date-time) IconUrl string"
  },
  "reference/RestAPI/DeviceService/getDevicesCamerauploads.html": {
    "href": "reference/RestAPI/DeviceService/getDevicesCamerauploads.html",
    "title": "getDevicesCamerauploads",
    "keywords": "getDevicesCamerauploads Gets camera upload history for a device Requires authentication as user getDevicesCamerauploads Request get /Devices/CameraUploads Responses Status Code Type Description Samples 200 ContentUploadHistory Operation successful. Returning a ContentUploadHistory object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ContentUploadHistory see also MediaBrowser.Model.Devices.ContentUploadHistory Name Type Notes DeviceId string FilesUploaded LocalFileInfo[] LocalFileInfo see also MediaBrowser.Model.Devices.LocalFileInfo Name Type Notes Name string Id string Album string MimeType string"
  },
  "reference/RestAPI/DeviceService/getDevicesInfo.html": {
    "href": "reference/RestAPI/DeviceService/getDevicesInfo.html",
    "title": "getDevicesInfo",
    "keywords": "getDevicesInfo Gets info for a device Requires authentication as administrator getDevicesInfo Request get /Devices/Info Parameters Name In Type Default Notes *Id query Device Id Responses Status Code Type Description Samples 200 DeviceInfo Operation successful. Returning a DeviceInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DeviceInfo see also MediaBrowser.Model.Devices.DeviceInfo Name Type Notes Name string Id string InternalId integer (int64) ReportedDeviceId string LastUserName string AppName string AppVersion string LastUserId string DateLastActivity string (date-time) IconUrl string"
  },
  "reference/RestAPI/DeviceService/getDevicesOptions.html": {
    "href": "reference/RestAPI/DeviceService/getDevicesOptions.html",
    "title": "getDevicesOptions",
    "keywords": "getDevicesOptions Gets options for a device Requires authentication as administrator getDevicesOptions Request get /Devices/Options Parameters Name In Type Default Notes *Id query Device Id Responses Status Code Type Description Samples 200 DeviceOptions Operation successful. Returning a DeviceOptions object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DeviceOptions see also MediaBrowser.Model.Devices.DeviceOptions Name Type Notes CustomName string"
  },
  "reference/RestAPI/DeviceService/postDevicesCamerauploads.html": {
    "href": "reference/RestAPI/DeviceService/postDevicesCamerauploads.html",
    "title": "postDevicesCamerauploads",
    "keywords": "postDevicesCamerauploads Uploads content Requires authentication as user postDevicesCamerauploads Request post /Devices/CameraUploads Parameters Name In Type Default Notes *Album query Album *Name query Name *Id query Id *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DeviceService/postDevicesDelete.html": {
    "href": "reference/RestAPI/DeviceService/postDevicesDelete.html",
    "title": "postDevicesDelete",
    "keywords": "postDevicesDelete Deletes a device Requires authentication as administrator postDevicesDelete Request post /Devices/Delete Parameters Name In Type Default Notes *Id query Device Id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DeviceService/postDevicesOptions.html": {
    "href": "reference/RestAPI/DeviceService/postDevicesOptions.html",
    "title": "postDevicesOptions",
    "keywords": "postDevicesOptions Updates device options Requires authentication as administrator postDevicesOptions Request post /Devices/Options Parameters Name In Type Default Notes *Id query Device Id *body body DeviceOptions DeviceOptions: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DeviceOptions see also MediaBrowser.Model.Devices.DeviceOptions Name Type Notes CustomName string"
  },
  "reference/RestAPI/DiagnosticsPluginService.html": {
    "href": "reference/RestAPI/DiagnosticsPluginService.html",
    "title": "DiagnosticsPluginService",
    "keywords": "DiagnosticsPluginService API Documentation Wiki getEncodingdiagnosticsDiagnosticoptions get /EncodingDiagnostics/DiagnosticOptions Gets the EncodingDiagnosticOptions for generic editor postEncodingdiagnosticsDiagnosticoptions post /EncodingDiagnostics/DiagnosticOptions Updates EncodingDiagnosticOptions from generic editor"
  },
  "reference/RestAPI/DiagnosticsPluginService/getEncodingdiagnosticsDiagnosticoptions.html": {
    "href": "reference/RestAPI/DiagnosticsPluginService/getEncodingdiagnosticsDiagnosticoptions.html",
    "title": "getEncodingdiagnosticsDiagnosticoptions",
    "keywords": "getEncodingdiagnosticsDiagnosticoptions Gets the EncodingDiagnosticOptions for generic editor Requires authentication as user getEncodingdiagnosticsDiagnosticoptions Request get /EncodingDiagnostics/DiagnosticOptions Responses Status Code Type Description Samples 200 EditObjectContainer Operation successful. Returning a EditObjectContainer object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions EditObjectContainer see also Emby.Web.GenericEdit.EditObjectContainer Name Type Notes Object object DefaultObject object TypeName string EditorRoot EditorRoot[] EditorRoot see also Emby.Web.GenericEdit.Editors.EditorRoot Name Type Notes PropertyConditions PropertyCondition[] PostbackActions PostbackAction[] TitleButton EditorButtonItem[] EditorItems EditorBase[] EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string PropertyCondition see also Emby.Web.GenericEdit.Conditions.PropertyCondition Name Type Notes AffectedPropertyId string ConditionType PropertyConditionType TargetPropertyId string SimpleCondition SimpleCondition ValueCondition ValueCondition Value object PropertyConditionType see also Emby.Web.GenericEdit.Conditions.PropertyConditionType Enum Values Visible Enabled SimpleCondition see also MediaBrowser.Model.Attributes.SimpleCondition Enum Values IsTrue IsFalse IsNull IsNotNullOrEmpty ValueCondition see also MediaBrowser.Model.Attributes.ValueCondition Enum Values IsEqual IsNotEqual IsGreater IsGreaterOrEqual IsLess IsLessOrEqual PostbackAction see also Emby.Web.GenericEdit.Actions.PostbackAction Name Type Notes TargetEditorId string PostbackCommandId string CommandParameterPropertyId string EditorButtonItem see also Emby.Web.GenericEdit.Editors.EditorButtonItem Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string EditorTypes see also Emby.Web.GenericEdit.Common.EditorTypes Enum Values Group Text Numeric Boolean SelectSingle SelectMultiple Date FilePath FolderPath StatusItem ProgressItem ButtonItem ButtonGroup CaptionItem LabelItem ItemList RadioGroup DataGrid PivotGrid SpacerItem EditorBase see also Emby.Web.GenericEdit.Editors.EditorBase Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string"
  },
  "reference/RestAPI/DiagnosticsPluginService/postEncodingdiagnosticsDiagnosticoptions.html": {
    "href": "reference/RestAPI/DiagnosticsPluginService/postEncodingdiagnosticsDiagnosticoptions.html",
    "title": "postEncodingdiagnosticsDiagnosticoptions",
    "keywords": "postEncodingdiagnosticsDiagnosticoptions Updates EncodingDiagnosticOptions from generic editor Requires authentication as administrator postEncodingdiagnosticsDiagnosticoptions Request post /EncodingDiagnostics/DiagnosticOptions Parameters Name In Type Default Notes *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DisplayPreferencesService.html": {
    "href": "reference/RestAPI/DisplayPreferencesService.html",
    "title": "DisplayPreferencesService",
    "keywords": "DisplayPreferencesService API Documentation Wiki getDisplaypreferencesById get /DisplayPreferences/{Id} Gets a user's display preferences for an item postDisplaypreferencesByDisplaypreferencesid post /DisplayPreferences/{DisplayPreferencesId} Updates a user's display preferences for an item"
  },
  "reference/RestAPI/DisplayPreferencesService/getDisplaypreferencesById.html": {
    "href": "reference/RestAPI/DisplayPreferencesService/getDisplaypreferencesById.html",
    "title": "getDisplaypreferencesById",
    "keywords": "getDisplaypreferencesById Gets a user's display preferences for an item Requires authentication as user getDisplaypreferencesById Request get /DisplayPreferences/{Id} Parameters Name In Type Default Notes *Id path Item Id *UserId query User Id *Client query Client Responses Status Code Type Description Samples 200 DisplayPreferences Operation successful. Returning a DisplayPreferences object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DisplayPreferences see also MediaBrowser.Model.Entities.DisplayPreferences Name Type Notes Id string ViewType string SortBy string IndexBy string RememberIndexing boolean PrimaryImageHeight integer (int32) PrimaryImageWidth integer (int32) CustomPrefs object ScrollDirection ScrollDirection ShowBackdrop boolean RememberSorting boolean SortOrder SortOrder Client string ScrollDirection see also MediaBrowser.Model.Entities.ScrollDirection Enum Values Horizontal Vertical SortOrder see also MediaBrowser.Model.Entities.SortOrder Enum Values Ascending Descending"
  },
  "reference/RestAPI/DisplayPreferencesService/postDisplaypreferencesByDisplaypreferencesid.html": {
    "href": "reference/RestAPI/DisplayPreferencesService/postDisplaypreferencesByDisplaypreferencesid.html",
    "title": "postDisplaypreferencesByDisplaypreferencesid",
    "keywords": "postDisplaypreferencesByDisplaypreferencesid Updates a user's display preferences for an item Requires authentication as user postDisplaypreferencesByDisplaypreferencesid Request post /DisplayPreferences/{DisplayPreferencesId} Parameters Name In Type Default Notes *DisplayPreferencesId path DisplayPreferences Id *UserId query User Id *body body DisplayPreferences DisplayPreferences: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DisplayPreferences see also MediaBrowser.Model.Entities.DisplayPreferences Name Type Notes Id string ViewType string SortBy string IndexBy string RememberIndexing boolean PrimaryImageHeight integer (int32) PrimaryImageWidth integer (int32) CustomPrefs object ScrollDirection ScrollDirection ShowBackdrop boolean RememberSorting boolean SortOrder SortOrder Client string ScrollDirection see also MediaBrowser.Model.Entities.ScrollDirection Enum Values Horizontal Vertical SortOrder see also MediaBrowser.Model.Entities.SortOrder Enum Values Ascending Descending"
  },
  "reference/RestAPI/DlnaServerService.html": {
    "href": "reference/RestAPI/DlnaServerService.html",
    "title": "DlnaServerService",
    "keywords": "DlnaServerService API Documentation Wiki getDlnaByUuidConnectionmanagerConnectionmanager get /Dlna/{UuId}/connectionmanager/connectionmanager Gets dlna connection manager xml getDlnaByUuidConnectionmanagerConnectionmanagerXml get /Dlna/{UuId}/connectionmanager/connectionmanager.xml Gets dlna connection manager xml getDlnaByUuidContentdirectoryContentdirectory get /Dlna/{UuId}/contentdirectory/contentdirectory Gets dlna content directory xml getDlnaByUuidContentdirectoryContentdirectoryXml get /Dlna/{UuId}/contentdirectory/contentdirectory.xml Gets dlna content directory xml getDlnaByUuidDescription get /Dlna/{UuId}/description Gets dlna server info getDlnaByUuidDescriptionXml get /Dlna/{UuId}/description.xml Gets dlna server info getDlnaByUuidIconsByFilename get /Dlna/{UuId}/icons/{Filename} Gets a server icon getDlnaIconsByFilename get /Dlna/icons/{Filename} Gets a server icon postDlnaByUuidConnectionmanagerControl post /Dlna/{UuId}/connectionmanager/control Processes a control request postDlnaByUuidContentdirectoryControl post /Dlna/{UuId}/contentdirectory/control Processes a control request"
  },
  "reference/RestAPI/DlnaServerService/getDlnaByUuidConnectionmanagerConnectionmanager.html": {
    "href": "reference/RestAPI/DlnaServerService/getDlnaByUuidConnectionmanagerConnectionmanager.html",
    "title": "getDlnaByUuidConnectionmanagerConnectionmanager",
    "keywords": "getDlnaByUuidConnectionmanagerConnectionmanager Gets dlna connection manager xml No authentication required getDlnaByUuidConnectionmanagerConnectionmanager Request get /Dlna/{UuId}/connectionmanager/connectionmanager Parameters Name In Type Default Notes *UuId path Server UuId Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DlnaServerService/getDlnaByUuidConnectionmanagerConnectionmanagerXml.html": {
    "href": "reference/RestAPI/DlnaServerService/getDlnaByUuidConnectionmanagerConnectionmanagerXml.html",
    "title": "getDlnaByUuidConnectionmanagerConnectionmanagerXml",
    "keywords": "getDlnaByUuidConnectionmanagerConnectionmanagerXml Gets dlna connection manager xml No authentication required getDlnaByUuidConnectionmanagerConnectionmanagerXml Request get /Dlna/{UuId}/connectionmanager/connectionmanager.xml Parameters Name In Type Default Notes *UuId path Server UuId Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DlnaServerService/getDlnaByUuidContentdirectoryContentdirectory.html": {
    "href": "reference/RestAPI/DlnaServerService/getDlnaByUuidContentdirectoryContentdirectory.html",
    "title": "getDlnaByUuidContentdirectoryContentdirectory",
    "keywords": "getDlnaByUuidContentdirectoryContentdirectory Gets dlna content directory xml No authentication required getDlnaByUuidContentdirectoryContentdirectory Request get /Dlna/{UuId}/contentdirectory/contentdirectory Parameters Name In Type Default Notes *UuId path Server UuId Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DlnaServerService/getDlnaByUuidContentdirectoryContentdirectoryXml.html": {
    "href": "reference/RestAPI/DlnaServerService/getDlnaByUuidContentdirectoryContentdirectoryXml.html",
    "title": "getDlnaByUuidContentdirectoryContentdirectoryXml",
    "keywords": "getDlnaByUuidContentdirectoryContentdirectoryXml Gets dlna content directory xml No authentication required getDlnaByUuidContentdirectoryContentdirectoryXml Request get /Dlna/{UuId}/contentdirectory/contentdirectory.xml Parameters Name In Type Default Notes *UuId path Server UuId Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DlnaServerService/getDlnaByUuidDescription.html": {
    "href": "reference/RestAPI/DlnaServerService/getDlnaByUuidDescription.html",
    "title": "getDlnaByUuidDescription",
    "keywords": "getDlnaByUuidDescription Gets dlna server info No authentication required getDlnaByUuidDescription Request get /Dlna/{UuId}/description Parameters Name In Type Default Notes *UuId path Server UuId Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DlnaServerService/getDlnaByUuidDescriptionXml.html": {
    "href": "reference/RestAPI/DlnaServerService/getDlnaByUuidDescriptionXml.html",
    "title": "getDlnaByUuidDescriptionXml",
    "keywords": "getDlnaByUuidDescriptionXml Gets dlna server info No authentication required getDlnaByUuidDescriptionXml Request get /Dlna/{UuId}/description.xml Parameters Name In Type Default Notes *UuId path Server UuId Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DlnaServerService/getDlnaByUuidIconsByFilename.html": {
    "href": "reference/RestAPI/DlnaServerService/getDlnaByUuidIconsByFilename.html",
    "title": "getDlnaByUuidIconsByFilename",
    "keywords": "getDlnaByUuidIconsByFilename Gets a server icon No authentication required getDlnaByUuidIconsByFilename Request get /Dlna/{UuId}/icons/{Filename} Parameters Name In Type Default Notes *UuId path Server UuId *Filename path The icon filename Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DlnaServerService/getDlnaIconsByFilename.html": {
    "href": "reference/RestAPI/DlnaServerService/getDlnaIconsByFilename.html",
    "title": "getDlnaIconsByFilename",
    "keywords": "getDlnaIconsByFilename Gets a server icon No authentication required getDlnaIconsByFilename Request get /Dlna/icons/{Filename} Parameters Name In Type Default Notes UuId query Server UuId *Filename path The icon filename Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DlnaServerService/postDlnaByUuidConnectionmanagerControl.html": {
    "href": "reference/RestAPI/DlnaServerService/postDlnaByUuidConnectionmanagerControl.html",
    "title": "postDlnaByUuidConnectionmanagerControl",
    "keywords": "postDlnaByUuidConnectionmanagerControl Processes a control request No authentication required postDlnaByUuidConnectionmanagerControl Request post /Dlna/{UuId}/connectionmanager/control Parameters Name In Type Default Notes *UuId path Server UuId *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DlnaServerService/postDlnaByUuidContentdirectoryControl.html": {
    "href": "reference/RestAPI/DlnaServerService/postDlnaByUuidContentdirectoryControl.html",
    "title": "postDlnaByUuidContentdirectoryControl",
    "keywords": "postDlnaByUuidContentdirectoryControl Processes a control request No authentication required postDlnaByUuidContentdirectoryControl Request post /Dlna/{UuId}/contentdirectory/control Parameters Name In Type Default Notes *UuId path Server UuId *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DlnaService.html": {
    "href": "reference/RestAPI/DlnaService.html",
    "title": "DlnaService",
    "keywords": "DlnaService API Documentation Wiki deleteDlnaProfilesById delete /Dlna/Profiles/{Id} Deletes a profile getDlnaProfileinfos get /Dlna/ProfileInfos Gets a list of profiles getDlnaProfilesById get /Dlna/Profiles/{Id} Gets a single profile getDlnaProfilesDefault get /Dlna/Profiles/Default Gets the default profile postDlnaProfiles post /Dlna/Profiles Creates a profile postDlnaProfilesById post /Dlna/Profiles/{Id} Updates a profile"
  },
  "reference/RestAPI/DlnaService/deleteDlnaProfilesById.html": {
    "href": "reference/RestAPI/DlnaService/deleteDlnaProfilesById.html",
    "title": "deleteDlnaProfilesById",
    "keywords": "deleteDlnaProfilesById Deletes a profile Requires authentication as administrator deleteDlnaProfilesById Request delete /Dlna/Profiles/{Id} Parameters Name In Type Default Notes *Id path Profile Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DlnaService/getDlnaProfileinfos.html": {
    "href": "reference/RestAPI/DlnaService/getDlnaProfileinfos.html",
    "title": "getDlnaProfileinfos",
    "keywords": "getDlnaProfileinfos Gets a list of profiles Requires authentication as administrator getDlnaProfileinfos Request get /Dlna/ProfileInfos Responses Status Code Type Description Samples 200 DlnaProfile [] Operation successful. Returning a DlnaProfile[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DlnaProfile Emby.Dlna.Profiles.DlnaProfile Name Type Notes Type DeviceProfileType Path string UserId string AlbumArtPn string MaxAlbumArtWidth integer (int32) MaxAlbumArtHeight integer (int32) MaxIconWidth integer (int32) MaxIconHeight integer (int32) FriendlyName string Manufacturer string ManufacturerUrl string ModelName string ModelDescription string ModelNumber string ModelUrl string SerialNumber string EnableAlbumArtInDidl boolean EnableSingleAlbumArtLimit boolean EnableSingleSubtitleLimit boolean ProtocolInfo string TimelineOffsetSeconds integer (int32) RequiresPlainVideoItems boolean RequiresPlainFolders boolean IgnoreTranscodeByteRangeRequests boolean SupportsSamsungBookmark boolean Identification DeviceIdentification ProtocolInfoDetection ProtocolInfoDetection Name string Id string SupportedMediaTypes string MaxStreamingBitrate integer (int64) MusicStreamingTranscodingBitrate integer (int32) MaxStaticMusicBitrate integer (int32) DirectPlayProfiles DirectPlayProfile[] TranscodingProfiles TranscodingProfile[] ContainerProfiles ContainerProfile[] CodecProfiles CodecProfile[] ResponseProfiles ResponseProfile[] SubtitleProfiles SubtitleProfile[] DeviceProfileType Emby.Dlna.Profiles.DeviceProfileType Enum Values System User DeviceIdentification Emby.Dlna.Profiles.DeviceIdentification Name Type Notes FriendlyName string ModelNumber string SerialNumber string ModelName string ModelDescription string DeviceDescription string ModelUrl string Manufacturer string ManufacturerUrl string Headers HttpHeaderInfo[] HttpHeaderInfo Emby.Dlna.Profiles.HttpHeaderInfo Name Type Notes Name string Value string Match HeaderMatchType HeaderMatchType Emby.Dlna.Profiles.HeaderMatchType Enum Values Equals Regex Substring ProtocolInfoDetection Emby.Dlna.Profiles.ProtocolInfoDetection Name Type Notes EnabledForVideo boolean EnabledForAudio boolean EnabledForPhotos boolean DirectPlayProfile see also MediaBrowser.Model.Dlna.DirectPlayProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType DlnaProfileType see also MediaBrowser.Model.Dlna.DlnaProfileType Enum Values Audio Video Photo TranscodingProfile see also MediaBrowser.Model.Dlna.TranscodingProfile Name Type Notes Container string Type DlnaProfileType VideoCodec string AudioCodec string Protocol string EstimateContentLength boolean EnableMpegtsM2TsMode boolean TranscodeSeekInfo TranscodeSeekInfo CopyTimestamps boolean Context EncodingContext MaxAudioChannels string MinSegments integer (int32) SegmentLength integer (int32) BreakOnNonKeyFrames boolean AllowInterlacedVideoStreamCopy boolean ManifestSubtitles string MaxManifestSubtitles integer (int32) TranscodeSeekInfo see also MediaBrowser.Model.Dlna.TranscodeSeekInfo Enum Values Auto Bytes EncodingContext see also MediaBrowser.Model.Dlna.EncodingContext Enum Values Streaming Static ContainerProfile see also MediaBrowser.Model.Dlna.ContainerProfile Name Type Notes Type DlnaProfileType Conditions ProfileCondition[] Container string ProfileCondition see also MediaBrowser.Model.Dlna.ProfileCondition Name Type Notes Condition ProfileConditionType Property ProfileConditionValue Value string IsRequired boolean ProfileConditionType see also MediaBrowser.Model.Dlna.ProfileConditionType Enum Values Equals NotEquals LessThanEqual GreaterThanEqual EqualsAny ProfileConditionValue see also MediaBrowser.Model.Dlna.ProfileConditionValue Enum Values AudioChannels AudioBitrate AudioProfile Width Height Has64BitOffsets PacketLength VideoBitDepth VideoBitrate VideoFramerate VideoLevel VideoProfile VideoTimestamp IsAnamorphic RefFrames NumAudioStreams NumVideoStreams IsSecondaryAudio VideoCodecTag IsAvc IsInterlaced AudioSampleRate AudioBitDepth VideoRange CodecProfile see also MediaBrowser.Model.Dlna.CodecProfile Name Type Notes Type CodecType Conditions ProfileCondition[] ApplyConditions ProfileCondition[] Codec string Container string CodecType see also MediaBrowser.Model.Dlna.CodecType Enum Values Video VideoAudio Audio ResponseProfile see also MediaBrowser.Model.Dlna.ResponseProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType OrgPn string MimeType string Conditions ProfileCondition[] SubtitleProfile see also MediaBrowser.Model.Dlna.SubtitleProfile Name Type Notes Format string Method SubtitleDeliveryMethod DidlMode string Language string Container string Protocol string SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData"
  },
  "reference/RestAPI/DlnaService/getDlnaProfilesById.html": {
    "href": "reference/RestAPI/DlnaService/getDlnaProfilesById.html",
    "title": "getDlnaProfilesById",
    "keywords": "getDlnaProfilesById Gets a single profile Requires authentication as administrator getDlnaProfilesById Request get /Dlna/Profiles/{Id} Parameters Name In Type Default Notes *Id path Profile Id Responses Status Code Type Description Samples 200 DlnaProfile Operation successful. Returning a DlnaProfile object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DlnaProfile Emby.Dlna.Profiles.DlnaProfile Name Type Notes Type DeviceProfileType Path string UserId string AlbumArtPn string MaxAlbumArtWidth integer (int32) MaxAlbumArtHeight integer (int32) MaxIconWidth integer (int32) MaxIconHeight integer (int32) FriendlyName string Manufacturer string ManufacturerUrl string ModelName string ModelDescription string ModelNumber string ModelUrl string SerialNumber string EnableAlbumArtInDidl boolean EnableSingleAlbumArtLimit boolean EnableSingleSubtitleLimit boolean ProtocolInfo string TimelineOffsetSeconds integer (int32) RequiresPlainVideoItems boolean RequiresPlainFolders boolean IgnoreTranscodeByteRangeRequests boolean SupportsSamsungBookmark boolean Identification DeviceIdentification[] ProtocolInfoDetection ProtocolInfoDetection[] Name string Id string SupportedMediaTypes string MaxStreamingBitrate integer (int64) MusicStreamingTranscodingBitrate integer (int32) MaxStaticMusicBitrate integer (int32) DirectPlayProfiles DirectPlayProfile[] TranscodingProfiles TranscodingProfile[] ContainerProfiles ContainerProfile[] CodecProfiles CodecProfile[] ResponseProfiles ResponseProfile[] SubtitleProfiles SubtitleProfile[] DeviceProfileType Emby.Dlna.Profiles.DeviceProfileType Enum Values System User DeviceIdentification Emby.Dlna.Profiles.DeviceIdentification Name Type Notes FriendlyName string ModelNumber string SerialNumber string ModelName string ModelDescription string DeviceDescription string ModelUrl string Manufacturer string ManufacturerUrl string Headers HttpHeaderInfo[] HttpHeaderInfo Emby.Dlna.Profiles.HttpHeaderInfo Name Type Notes Name string Value string Match HeaderMatchType HeaderMatchType Emby.Dlna.Profiles.HeaderMatchType Enum Values Equals Regex Substring ProtocolInfoDetection Emby.Dlna.Profiles.ProtocolInfoDetection Name Type Notes EnabledForVideo boolean EnabledForAudio boolean EnabledForPhotos boolean DirectPlayProfile see also MediaBrowser.Model.Dlna.DirectPlayProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType DlnaProfileType see also MediaBrowser.Model.Dlna.DlnaProfileType Enum Values Audio Video Photo TranscodingProfile see also MediaBrowser.Model.Dlna.TranscodingProfile Name Type Notes Container string Type DlnaProfileType VideoCodec string AudioCodec string Protocol string EstimateContentLength boolean EnableMpegtsM2TsMode boolean TranscodeSeekInfo TranscodeSeekInfo CopyTimestamps boolean Context EncodingContext MaxAudioChannels string MinSegments integer (int32) SegmentLength integer (int32) BreakOnNonKeyFrames boolean AllowInterlacedVideoStreamCopy boolean ManifestSubtitles string MaxManifestSubtitles integer (int32) TranscodeSeekInfo see also MediaBrowser.Model.Dlna.TranscodeSeekInfo Enum Values Auto Bytes EncodingContext see also MediaBrowser.Model.Dlna.EncodingContext Enum Values Streaming Static ContainerProfile see also MediaBrowser.Model.Dlna.ContainerProfile Name Type Notes Type DlnaProfileType Conditions ProfileCondition[] Container string ProfileCondition see also MediaBrowser.Model.Dlna.ProfileCondition Name Type Notes Condition ProfileConditionType Property ProfileConditionValue Value string IsRequired boolean ProfileConditionType see also MediaBrowser.Model.Dlna.ProfileConditionType Enum Values Equals NotEquals LessThanEqual GreaterThanEqual EqualsAny ProfileConditionValue see also MediaBrowser.Model.Dlna.ProfileConditionValue Enum Values AudioChannels AudioBitrate AudioProfile Width Height Has64BitOffsets PacketLength VideoBitDepth VideoBitrate VideoFramerate VideoLevel VideoProfile VideoTimestamp IsAnamorphic RefFrames NumAudioStreams NumVideoStreams IsSecondaryAudio VideoCodecTag IsAvc IsInterlaced AudioSampleRate AudioBitDepth VideoRange CodecProfile see also MediaBrowser.Model.Dlna.CodecProfile Name Type Notes Type CodecType Conditions ProfileCondition[] ApplyConditions ProfileCondition[] Codec string Container string CodecType see also MediaBrowser.Model.Dlna.CodecType Enum Values Video VideoAudio Audio ResponseProfile see also MediaBrowser.Model.Dlna.ResponseProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType OrgPn string MimeType string Conditions ProfileCondition[] SubtitleProfile see also MediaBrowser.Model.Dlna.SubtitleProfile Name Type Notes Format string Method SubtitleDeliveryMethod DidlMode string Language string Container string Protocol string SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData"
  },
  "reference/RestAPI/DlnaService/getDlnaProfilesDefault.html": {
    "href": "reference/RestAPI/DlnaService/getDlnaProfilesDefault.html",
    "title": "getDlnaProfilesDefault",
    "keywords": "getDlnaProfilesDefault Gets the default profile Requires authentication as administrator getDlnaProfilesDefault Request get /Dlna/Profiles/Default Responses Status Code Type Description Samples 200 DlnaProfile Operation successful. Returning a DlnaProfile object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DlnaProfile Emby.Dlna.Profiles.DlnaProfile Name Type Notes Type DeviceProfileType Path string UserId string AlbumArtPn string MaxAlbumArtWidth integer (int32) MaxAlbumArtHeight integer (int32) MaxIconWidth integer (int32) MaxIconHeight integer (int32) FriendlyName string Manufacturer string ManufacturerUrl string ModelName string ModelDescription string ModelNumber string ModelUrl string SerialNumber string EnableAlbumArtInDidl boolean EnableSingleAlbumArtLimit boolean EnableSingleSubtitleLimit boolean ProtocolInfo string TimelineOffsetSeconds integer (int32) RequiresPlainVideoItems boolean RequiresPlainFolders boolean IgnoreTranscodeByteRangeRequests boolean SupportsSamsungBookmark boolean Identification DeviceIdentification[] ProtocolInfoDetection ProtocolInfoDetection[] Name string Id string SupportedMediaTypes string MaxStreamingBitrate integer (int64) MusicStreamingTranscodingBitrate integer (int32) MaxStaticMusicBitrate integer (int32) DirectPlayProfiles DirectPlayProfile[] TranscodingProfiles TranscodingProfile[] ContainerProfiles ContainerProfile[] CodecProfiles CodecProfile[] ResponseProfiles ResponseProfile[] SubtitleProfiles SubtitleProfile[] DeviceProfileType Emby.Dlna.Profiles.DeviceProfileType Enum Values System User DeviceIdentification Emby.Dlna.Profiles.DeviceIdentification Name Type Notes FriendlyName string ModelNumber string SerialNumber string ModelName string ModelDescription string DeviceDescription string ModelUrl string Manufacturer string ManufacturerUrl string Headers HttpHeaderInfo[] HttpHeaderInfo Emby.Dlna.Profiles.HttpHeaderInfo Name Type Notes Name string Value string Match HeaderMatchType HeaderMatchType Emby.Dlna.Profiles.HeaderMatchType Enum Values Equals Regex Substring ProtocolInfoDetection Emby.Dlna.Profiles.ProtocolInfoDetection Name Type Notes EnabledForVideo boolean EnabledForAudio boolean EnabledForPhotos boolean DirectPlayProfile see also MediaBrowser.Model.Dlna.DirectPlayProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType DlnaProfileType see also MediaBrowser.Model.Dlna.DlnaProfileType Enum Values Audio Video Photo TranscodingProfile see also MediaBrowser.Model.Dlna.TranscodingProfile Name Type Notes Container string Type DlnaProfileType VideoCodec string AudioCodec string Protocol string EstimateContentLength boolean EnableMpegtsM2TsMode boolean TranscodeSeekInfo TranscodeSeekInfo CopyTimestamps boolean Context EncodingContext MaxAudioChannels string MinSegments integer (int32) SegmentLength integer (int32) BreakOnNonKeyFrames boolean AllowInterlacedVideoStreamCopy boolean ManifestSubtitles string MaxManifestSubtitles integer (int32) TranscodeSeekInfo see also MediaBrowser.Model.Dlna.TranscodeSeekInfo Enum Values Auto Bytes EncodingContext see also MediaBrowser.Model.Dlna.EncodingContext Enum Values Streaming Static ContainerProfile see also MediaBrowser.Model.Dlna.ContainerProfile Name Type Notes Type DlnaProfileType Conditions ProfileCondition[] Container string ProfileCondition see also MediaBrowser.Model.Dlna.ProfileCondition Name Type Notes Condition ProfileConditionType Property ProfileConditionValue Value string IsRequired boolean ProfileConditionType see also MediaBrowser.Model.Dlna.ProfileConditionType Enum Values Equals NotEquals LessThanEqual GreaterThanEqual EqualsAny ProfileConditionValue see also MediaBrowser.Model.Dlna.ProfileConditionValue Enum Values AudioChannels AudioBitrate AudioProfile Width Height Has64BitOffsets PacketLength VideoBitDepth VideoBitrate VideoFramerate VideoLevel VideoProfile VideoTimestamp IsAnamorphic RefFrames NumAudioStreams NumVideoStreams IsSecondaryAudio VideoCodecTag IsAvc IsInterlaced AudioSampleRate AudioBitDepth VideoRange CodecProfile see also MediaBrowser.Model.Dlna.CodecProfile Name Type Notes Type CodecType Conditions ProfileCondition[] ApplyConditions ProfileCondition[] Codec string Container string CodecType see also MediaBrowser.Model.Dlna.CodecType Enum Values Video VideoAudio Audio ResponseProfile see also MediaBrowser.Model.Dlna.ResponseProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType OrgPn string MimeType string Conditions ProfileCondition[] SubtitleProfile see also MediaBrowser.Model.Dlna.SubtitleProfile Name Type Notes Format string Method SubtitleDeliveryMethod DidlMode string Language string Container string Protocol string SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData"
  },
  "reference/RestAPI/DlnaService/postDlnaProfiles.html": {
    "href": "reference/RestAPI/DlnaService/postDlnaProfiles.html",
    "title": "postDlnaProfiles",
    "keywords": "postDlnaProfiles Creates a profile Requires authentication as administrator postDlnaProfiles Request post /Dlna/Profiles Parameters Name In Type Default Notes *body body DlnaProfile DlnaProfile: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DlnaProfile Emby.Dlna.Profiles.DlnaProfile Name Type Notes Type DeviceProfileType Path string UserId string AlbumArtPn string MaxAlbumArtWidth integer (int32) MaxAlbumArtHeight integer (int32) MaxIconWidth integer (int32) MaxIconHeight integer (int32) FriendlyName string Manufacturer string ManufacturerUrl string ModelName string ModelDescription string ModelNumber string ModelUrl string SerialNumber string EnableAlbumArtInDidl boolean EnableSingleAlbumArtLimit boolean EnableSingleSubtitleLimit boolean ProtocolInfo string TimelineOffsetSeconds integer (int32) RequiresPlainVideoItems boolean RequiresPlainFolders boolean IgnoreTranscodeByteRangeRequests boolean SupportsSamsungBookmark boolean Identification DeviceIdentification[] ProtocolInfoDetection ProtocolInfoDetection[] Name string Id string SupportedMediaTypes string MaxStreamingBitrate integer (int64) MusicStreamingTranscodingBitrate integer (int32) MaxStaticMusicBitrate integer (int32) DirectPlayProfiles DirectPlayProfile[] TranscodingProfiles TranscodingProfile[] ContainerProfiles ContainerProfile[] CodecProfiles CodecProfile[] ResponseProfiles ResponseProfile[] SubtitleProfiles SubtitleProfile[] DeviceProfileType Emby.Dlna.Profiles.DeviceProfileType Enum Values System User DeviceIdentification Emby.Dlna.Profiles.DeviceIdentification Name Type Notes FriendlyName string ModelNumber string SerialNumber string ModelName string ModelDescription string DeviceDescription string ModelUrl string Manufacturer string ManufacturerUrl string Headers HttpHeaderInfo[] HttpHeaderInfo Emby.Dlna.Profiles.HttpHeaderInfo Name Type Notes Name string Value string Match HeaderMatchType HeaderMatchType Emby.Dlna.Profiles.HeaderMatchType Enum Values Equals Regex Substring ProtocolInfoDetection Emby.Dlna.Profiles.ProtocolInfoDetection Name Type Notes EnabledForVideo boolean EnabledForAudio boolean EnabledForPhotos boolean DirectPlayProfile see also MediaBrowser.Model.Dlna.DirectPlayProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType DlnaProfileType see also MediaBrowser.Model.Dlna.DlnaProfileType Enum Values Audio Video Photo TranscodingProfile see also MediaBrowser.Model.Dlna.TranscodingProfile Name Type Notes Container string Type DlnaProfileType VideoCodec string AudioCodec string Protocol string EstimateContentLength boolean EnableMpegtsM2TsMode boolean TranscodeSeekInfo TranscodeSeekInfo CopyTimestamps boolean Context EncodingContext MaxAudioChannels string MinSegments integer (int32) SegmentLength integer (int32) BreakOnNonKeyFrames boolean AllowInterlacedVideoStreamCopy boolean ManifestSubtitles string MaxManifestSubtitles integer (int32) TranscodeSeekInfo see also MediaBrowser.Model.Dlna.TranscodeSeekInfo Enum Values Auto Bytes EncodingContext see also MediaBrowser.Model.Dlna.EncodingContext Enum Values Streaming Static ContainerProfile see also MediaBrowser.Model.Dlna.ContainerProfile Name Type Notes Type DlnaProfileType Conditions ProfileCondition[] Container string ProfileCondition see also MediaBrowser.Model.Dlna.ProfileCondition Name Type Notes Condition ProfileConditionType Property ProfileConditionValue Value string IsRequired boolean ProfileConditionType see also MediaBrowser.Model.Dlna.ProfileConditionType Enum Values Equals NotEquals LessThanEqual GreaterThanEqual EqualsAny ProfileConditionValue see also MediaBrowser.Model.Dlna.ProfileConditionValue Enum Values AudioChannels AudioBitrate AudioProfile Width Height Has64BitOffsets PacketLength VideoBitDepth VideoBitrate VideoFramerate VideoLevel VideoProfile VideoTimestamp IsAnamorphic RefFrames NumAudioStreams NumVideoStreams IsSecondaryAudio VideoCodecTag IsAvc IsInterlaced AudioSampleRate AudioBitDepth VideoRange CodecProfile see also MediaBrowser.Model.Dlna.CodecProfile Name Type Notes Type CodecType Conditions ProfileCondition[] ApplyConditions ProfileCondition[] Codec string Container string CodecType see also MediaBrowser.Model.Dlna.CodecType Enum Values Video VideoAudio Audio ResponseProfile see also MediaBrowser.Model.Dlna.ResponseProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType OrgPn string MimeType string Conditions ProfileCondition[] SubtitleProfile see also MediaBrowser.Model.Dlna.SubtitleProfile Name Type Notes Format string Method SubtitleDeliveryMethod DidlMode string Language string Container string Protocol string SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData"
  },
  "reference/RestAPI/DlnaService/postDlnaProfilesById.html": {
    "href": "reference/RestAPI/DlnaService/postDlnaProfilesById.html",
    "title": "postDlnaProfilesById",
    "keywords": "postDlnaProfilesById Updates a profile Requires authentication as administrator postDlnaProfilesById Request post /Dlna/Profiles/{Id} Parameters Name In Type Default Notes *Id path *body body DlnaProfile DlnaProfile: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DlnaProfile Emby.Dlna.Profiles.DlnaProfile Name Type Notes Type DeviceProfileType Path string UserId string AlbumArtPn string MaxAlbumArtWidth integer (int32) MaxAlbumArtHeight integer (int32) MaxIconWidth integer (int32) MaxIconHeight integer (int32) FriendlyName string Manufacturer string ManufacturerUrl string ModelName string ModelDescription string ModelNumber string ModelUrl string SerialNumber string EnableAlbumArtInDidl boolean EnableSingleAlbumArtLimit boolean EnableSingleSubtitleLimit boolean ProtocolInfo string TimelineOffsetSeconds integer (int32) RequiresPlainVideoItems boolean RequiresPlainFolders boolean IgnoreTranscodeByteRangeRequests boolean SupportsSamsungBookmark boolean Identification DeviceIdentification[] ProtocolInfoDetection ProtocolInfoDetection[] Name string Id string SupportedMediaTypes string MaxStreamingBitrate integer (int64) MusicStreamingTranscodingBitrate integer (int32) MaxStaticMusicBitrate integer (int32) DirectPlayProfiles DirectPlayProfile[] TranscodingProfiles TranscodingProfile[] ContainerProfiles ContainerProfile[] CodecProfiles CodecProfile[] ResponseProfiles ResponseProfile[] SubtitleProfiles SubtitleProfile[] DeviceProfileType Emby.Dlna.Profiles.DeviceProfileType Enum Values System User DeviceIdentification Emby.Dlna.Profiles.DeviceIdentification Name Type Notes FriendlyName string ModelNumber string SerialNumber string ModelName string ModelDescription string DeviceDescription string ModelUrl string Manufacturer string ManufacturerUrl string Headers HttpHeaderInfo[] HttpHeaderInfo Emby.Dlna.Profiles.HttpHeaderInfo Name Type Notes Name string Value string Match HeaderMatchType HeaderMatchType Emby.Dlna.Profiles.HeaderMatchType Enum Values Equals Regex Substring ProtocolInfoDetection Emby.Dlna.Profiles.ProtocolInfoDetection Name Type Notes EnabledForVideo boolean EnabledForAudio boolean EnabledForPhotos boolean DirectPlayProfile see also MediaBrowser.Model.Dlna.DirectPlayProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType DlnaProfileType see also MediaBrowser.Model.Dlna.DlnaProfileType Enum Values Audio Video Photo TranscodingProfile see also MediaBrowser.Model.Dlna.TranscodingProfile Name Type Notes Container string Type DlnaProfileType VideoCodec string AudioCodec string Protocol string EstimateContentLength boolean EnableMpegtsM2TsMode boolean TranscodeSeekInfo TranscodeSeekInfo CopyTimestamps boolean Context EncodingContext MaxAudioChannels string MinSegments integer (int32) SegmentLength integer (int32) BreakOnNonKeyFrames boolean AllowInterlacedVideoStreamCopy boolean ManifestSubtitles string MaxManifestSubtitles integer (int32) TranscodeSeekInfo see also MediaBrowser.Model.Dlna.TranscodeSeekInfo Enum Values Auto Bytes EncodingContext see also MediaBrowser.Model.Dlna.EncodingContext Enum Values Streaming Static ContainerProfile see also MediaBrowser.Model.Dlna.ContainerProfile Name Type Notes Type DlnaProfileType Conditions ProfileCondition[] Container string ProfileCondition see also MediaBrowser.Model.Dlna.ProfileCondition Name Type Notes Condition ProfileConditionType Property ProfileConditionValue Value string IsRequired boolean ProfileConditionType see also MediaBrowser.Model.Dlna.ProfileConditionType Enum Values Equals NotEquals LessThanEqual GreaterThanEqual EqualsAny ProfileConditionValue see also MediaBrowser.Model.Dlna.ProfileConditionValue Enum Values AudioChannels AudioBitrate AudioProfile Width Height Has64BitOffsets PacketLength VideoBitDepth VideoBitrate VideoFramerate VideoLevel VideoProfile VideoTimestamp IsAnamorphic RefFrames NumAudioStreams NumVideoStreams IsSecondaryAudio VideoCodecTag IsAvc IsInterlaced AudioSampleRate AudioBitDepth VideoRange CodecProfile see also MediaBrowser.Model.Dlna.CodecProfile Name Type Notes Type CodecType Conditions ProfileCondition[] ApplyConditions ProfileCondition[] Codec string Container string CodecType see also MediaBrowser.Model.Dlna.CodecType Enum Values Video VideoAudio Audio ResponseProfile see also MediaBrowser.Model.Dlna.ResponseProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType OrgPn string MimeType string Conditions ProfileCondition[] SubtitleProfile see also MediaBrowser.Model.Dlna.SubtitleProfile Name Type Notes Format string Method SubtitleDeliveryMethod DidlMode string Language string Container string Protocol string SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData"
  },
  "reference/RestAPI/DynamicHlsService.html": {
    "href": "reference/RestAPI/DynamicHlsService.html",
    "title": "DynamicHlsService",
    "keywords": "DynamicHlsService API Documentation: Http Live Streaming getAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer get /Audio/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} getAudioByIdMainM3u8 get /Audio/{Id}/main.m3u8 Gets an audio stream using HTTP live streaming. getAudioByIdMasterM3u8 get /Audio/{Id}/master.m3u8 Gets an audio stream using HTTP live streaming. getVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer get /Videos/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} getVideosByIdLiveSubtitlesM3u8 get /Videos/{Id}/live_subtitles.m3u8 Gets an HLS subtitle playlist. getVideosByIdMainM3u8 get /Videos/{Id}/main.m3u8 Gets a video stream using HTTP live streaming. getVideosByIdMasterM3u8 get /Videos/{Id}/master.m3u8 Gets a video stream using HTTP live streaming. getVideosByIdSubtitlesM3u8 get /Videos/{Id}/subtitles.m3u8 Gets an HLS subtitle playlist. headAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer head /Audio/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} headAudioByIdMasterM3u8 head /Audio/{Id}/master.m3u8 Gets an audio stream using HTTP live streaming. headVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer head /Videos/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} headVideosByIdMasterM3u8 head /Videos/{Id}/master.m3u8 Gets a video stream using HTTP live streaming."
  },
  "reference/RestAPI/DynamicHlsService/getAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer.html": {
    "href": "reference/RestAPI/DynamicHlsService/getAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer.html",
    "title": "getAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer",
    "keywords": "getAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer No authentication required getAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer Request get /Audio/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} Parameters Name In Type Default Notes *SegmentContainer path *SegmentId path *Id path *PlaylistId path Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DynamicHlsService/getAudioByIdMainM3u8.html": {
    "href": "reference/RestAPI/DynamicHlsService/getAudioByIdMainM3u8.html",
    "title": "getAudioByIdMainM3u8",
    "keywords": "getAudioByIdMainM3u8 Gets an audio stream using HTTP live streaming. Requires authentication as user getAudioByIdMainM3u8 Request get /Audio/{Id}/main.m3u8 Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container query Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DynamicHlsService/getAudioByIdMasterM3u8.html": {
    "href": "reference/RestAPI/DynamicHlsService/getAudioByIdMasterM3u8.html",
    "title": "getAudioByIdMasterM3u8",
    "keywords": "getAudioByIdMasterM3u8 Gets an audio stream using HTTP live streaming. Requires authentication as user getAudioByIdMasterM3u8 Request get /Audio/{Id}/master.m3u8 Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container query Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DynamicHlsService/getVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer.html": {
    "href": "reference/RestAPI/DynamicHlsService/getVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer.html",
    "title": "getVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer",
    "keywords": "getVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer No authentication required getVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer Request get /Videos/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} Parameters Name In Type Default Notes *SegmentContainer path *SegmentId path *Id path *PlaylistId path Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DynamicHlsService/getVideosByIdLiveSubtitlesM3u8.html": {
    "href": "reference/RestAPI/DynamicHlsService/getVideosByIdLiveSubtitlesM3u8.html",
    "title": "getVideosByIdLiveSubtitlesM3u8",
    "keywords": "getVideosByIdLiveSubtitlesM3u8 Gets an HLS subtitle playlist. Requires authentication as user getVideosByIdLiveSubtitlesM3u8 Request get /Videos/{Id}/live_subtitles.m3u8 Parameters Name In Type Default Notes *Id path Item Id *SubtitleSegmentLength query The subtitle segment length *ManifestSubtitles query The subtitle segment format Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DynamicHlsService/getVideosByIdMainM3u8.html": {
    "href": "reference/RestAPI/DynamicHlsService/getVideosByIdMainM3u8.html",
    "title": "getVideosByIdMainM3u8",
    "keywords": "getVideosByIdMainM3u8 Gets a video stream using HTTP live streaming. Requires authentication as user getVideosByIdMainM3u8 Request get /Videos/{Id}/main.m3u8 Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container query Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DynamicHlsService/getVideosByIdMasterM3u8.html": {
    "href": "reference/RestAPI/DynamicHlsService/getVideosByIdMasterM3u8.html",
    "title": "getVideosByIdMasterM3u8",
    "keywords": "getVideosByIdMasterM3u8 Gets a video stream using HTTP live streaming. Requires authentication as user getVideosByIdMasterM3u8 Request get /Videos/{Id}/master.m3u8 Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container query Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DynamicHlsService/getVideosByIdSubtitlesM3u8.html": {
    "href": "reference/RestAPI/DynamicHlsService/getVideosByIdSubtitlesM3u8.html",
    "title": "getVideosByIdSubtitlesM3u8",
    "keywords": "getVideosByIdSubtitlesM3u8 Gets an HLS subtitle playlist. Requires authentication as user getVideosByIdSubtitlesM3u8 Request get /Videos/{Id}/subtitles.m3u8 Parameters Name In Type Default Notes *Id path Item Id *SubtitleSegmentLength query The subtitle segment length *ManifestSubtitles query The subtitle segment format Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DynamicHlsService/headAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer.html": {
    "href": "reference/RestAPI/DynamicHlsService/headAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer.html",
    "title": "headAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer",
    "keywords": "headAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer No authentication required headAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer Request head /Audio/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} Parameters Name In Type Default Notes *SegmentContainer path *SegmentId path *Id path *PlaylistId path Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DynamicHlsService/headAudioByIdMasterM3u8.html": {
    "href": "reference/RestAPI/DynamicHlsService/headAudioByIdMasterM3u8.html",
    "title": "headAudioByIdMasterM3u8",
    "keywords": "headAudioByIdMasterM3u8 Gets an audio stream using HTTP live streaming. Requires authentication as user headAudioByIdMasterM3u8 Request head /Audio/{Id}/master.m3u8 Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container query Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DynamicHlsService/headVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer.html": {
    "href": "reference/RestAPI/DynamicHlsService/headVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer.html",
    "title": "headVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer",
    "keywords": "headVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer No authentication required headVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer Request head /Videos/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} Parameters Name In Type Default Notes *SegmentContainer path *SegmentId path *Id path *PlaylistId path Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/DynamicHlsService/headVideosByIdMasterM3u8.html": {
    "href": "reference/RestAPI/DynamicHlsService/headVideosByIdMasterM3u8.html",
    "title": "headVideosByIdMasterM3u8",
    "keywords": "headVideosByIdMasterM3u8 Gets a video stream using HTTP live streaming. Requires authentication as user headVideosByIdMasterM3u8 Request head /Videos/{Id}/master.m3u8 Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container query Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/EncodingInfoService.html": {
    "href": "reference/RestAPI/EncodingInfoService.html",
    "title": "EncodingInfoService",
    "keywords": "EncodingInfoService API Documentation Wiki getEncodingCodecconfigurationDefaults get /Encoding/CodecConfiguration/Defaults Gets default codec configurations getEncodingCodecinformationVideo get /Encoding/CodecInformation/Video Gets details about available video encoders and decoders getEncodingTonemapoptions get /Encoding/ToneMapOptions Gets available tone mapping options"
  },
  "reference/RestAPI/EncodingInfoService/getEncodingCodecconfigurationDefaults.html": {
    "href": "reference/RestAPI/EncodingInfoService/getEncodingCodecconfigurationDefaults.html",
    "title": "getEncodingCodecconfigurationDefaults",
    "keywords": "getEncodingCodecconfigurationDefaults Gets default codec configurations Requires authentication as administrator getEncodingCodecconfigurationDefaults Request get /Encoding/CodecConfiguration/Defaults Responses Status Code Type Description Samples 200 CodecConfiguration [] Operation successful. Returning a CodecConfiguration[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions CodecConfiguration see also MediaBrowser.Model.Configuration.CodecConfiguration Name Type Notes IsEnabled boolean Priority integer (int32) CodecId string"
  },
  "reference/RestAPI/EncodingInfoService/getEncodingCodecinformationVideo.html": {
    "href": "reference/RestAPI/EncodingInfoService/getEncodingCodecinformationVideo.html",
    "title": "getEncodingCodecinformationVideo",
    "keywords": "getEncodingCodecinformationVideo Gets details about available video encoders and decoders Requires authentication as administrator getEncodingCodecinformationVideo Request get /Encoding/CodecInformation/Video Responses Status Code Type Description Samples 200 VideoCodecBase [] Operation successful. Returning a VideoCodecBase[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions VideoCodecBase Emby.Server.MediaEncoding.Codecs.VideoCodecs.VideoCodecBase Name Type Notes CodecDeviceInfo ICodecDeviceInfo CodecKind CodecKinds MediaTypeName string VideoMediaType VideoMediaTypes MinWidth integer (int32) MaxWidth integer (int32) MinHeight integer (int32) MaxHeight integer (int32) WidthAlignment integer (int32) HeightAlignment integer (int32) MaxBitRate BitRate SupportedColorFormats ColorFormats[] SupportedColorFormatStrings array ProfileAndLevelInformation ProfileLevelInformation[] Id string Direction CodecDirections Name string Description string FrameworkCodec string IsHardwareCodec boolean SecondaryFramework SecondaryFrameworks SecondaryFrameworkCodec string MaxInstanceCount integer (int32) IsEnabledByDefault boolean DefaultPriority integer (int32) ICodecDeviceInfo Emby.Server.MediaEncoding.Codecs.Common.Interfaces.ICodecDeviceInfo Name Type Notes Capabilities ICodecDeviceCapabilities Adapter integer (int32) Name string Desription string Driver string DriverVersion Version ApiVersion Version VendorId integer (int32) DeviceId integer (int32) DeviceIdentifier string HardwareContextFramework SecondaryFrameworks DevPath string DrmNode string VendorName string DeviceName string ICodecDeviceCapabilities Emby.Server.MediaEncoding.Codecs.Common.Interfaces.ICodecDeviceCapabilities Name Type Notes SupportsHwUpload boolean SupportsHwDownload boolean SupportsStandaloneDeviceInit boolean Supports10BitProcessing boolean SupportsNativeToneMapping boolean Version see also System.Version Name Type Notes Major integer (int32) Minor integer (int32) Build integer (int32) Revision integer (int32) MajorRevision integer (int32) MinorRevision integer (int32) SecondaryFrameworks Emby.Media.Model.Enums.SecondaryFrameworks Enum Values Unknown None AmdAmf MediaCodec NvEncDec OpenMax QuickSync VaApi V4L2 DxVa D3d11va VideoToolbox Mmal CodecKinds Emby.Media.Model.Enums.CodecKinds Enum Values Audio Video SubTitles VideoMediaTypes Emby.Media.Model.Enums.VideoMediaTypes Enum Values Unknown copy flv1 h263 h263p h264 hevc mjpeg mpeg1video mpeg2video mpeg4 msvideo1 theora vc1image vc1 vp8 vp9 wmv1 wmv2 wmv3 _012v _4xm _8bps a64_multi a64_multi5 aasc aic alias_pix amv anm ansi apng asv1 asv2 aura aura2 av1 avrn avrp avs avui ayuv bethsoftvid bfi binkvideo bintext bitpacked bmp bmv_video brender_pix c93 cavs cdgraphics cdxl cfhd cinepak clearvideo cljr cllc cmv cpia cscd cyuv daala dds dfa dirac dnxhd dpx dsicinvideo dvvideo dxa dxtory dxv escape124 escape130 exr ffv1 ffvhuff fic fits flashsv flashsv2 flic fmvc fraps frwu g2m gdv gif h261 h263i hap hnm4video hq_hqa hqx huffyuv idcin idf iff_ilbm indeo2 indeo3 indeo4 indeo5 interplayvideo jpeg2000 jpegls jv kgv1 kmvc lagarith ljpeg loco m101 mad magicyuv mdec mimic mjpegb mmvideo motionpixels msa1 mscc msmpeg4v1 msmpeg4v2 msmpeg4v3 msrle mss1 mss2 mszh mts2 mvc1 mvc2 mxpeg nuv paf_video pam pbm pcx pgm pgmyuv pictor pixlet png ppm prores psd ptx qdraw qpeg qtrle r10k r210 rawvideo rl2 roq rpza rscc rv10 rv20 rv30 rv40 sanm scpr screenpresso sgi sgirle sheervideo smackvideo smc smvjpeg snow sp5x speedhq srgc sunrast svg svq1 svq3 targa targa_y216 tdsc tgq tgv thp tiertexseqvideo tiff tmv tqi truemotion1 truemotion2 truemotion2rt tscc tscc2 txd ulti utvideo v210 v210x v308 v408 v410 vb vble vcr1 vixl vmdvideo vmnc vp3 vp5 vp6 vp6a vp6f vp7 webp wmv3image wnv1 wrapped_avframe ws_vqa xan_wc3 xan_wc4 xbin xbm xface xpm xwd y41p ylc yop yuv4 zerocodec zlib zmbv BitRate Emby.Media.Model.Types.BitRate Name Type Notes bps integer (int64) kbps number (double) Mbps number (double) ColorFormats Emby.Media.Model.Enums.ColorFormats ProfileLevelInformation Emby.Media.Model.Types.ProfileLevelInformation Name Type Notes Profile ProfileInformation Level LevelInformation ProfileInformation Emby.Media.Model.Types.ProfileInformation Name Type Notes ShortName string Description string Details string Id string BitDepths array LevelInformation Emby.Media.Model.Types.LevelInformation Name Type Notes ShortName string Description string Ordinal integer (int32) MaxBitRate BitRate MaxBitRateDisplay string Id string ResolutionRates ResolutionWithRate[] ResolutionRateStrings array ResolutionRatesDisplay string ResolutionWithRate Emby.Media.Model.Types.ResolutionWithRate Name Type Notes Width integer (int32) Height integer (int32) FrameRate number (double) Resolution Resolution Resolution Emby.Media.Model.Types.Resolution Name Type Notes Width integer (int32) Height integer (int32) CodecDirections Emby.Media.Model.Enums.CodecDirections Enum Values Encoder Decoder"
  },
  "reference/RestAPI/EncodingInfoService/getEncodingTonemapoptions.html": {
    "href": "reference/RestAPI/EncodingInfoService/getEncodingTonemapoptions.html",
    "title": "getEncodingTonemapoptions",
    "keywords": "getEncodingTonemapoptions Gets available tone mapping options Requires authentication as administrator getEncodingTonemapoptions Request get /Encoding/ToneMapOptions Responses Status Code Type Description Samples 200 ToneMapOptionsVisibility Operation successful. Returning a ToneMapOptionsVisibility object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ToneMapOptionsVisibility Emby.Server.MediaEncoding.Configuration.ToneMapping.ToneMapOptionsVisibility Name Type Notes ShowAdvanced boolean IsSoftwareToneMappingAvailable boolean IsAnyHardwareToneMappingAvailable boolean ShowNvidiaOptions boolean ShowQuickSyncOptions boolean ShowVaapiOptions boolean IsOpenClAvailable boolean IsOpenClSuperTAvailable boolean IsVaapiNativeAvailable boolean IsQuickSyncNativeAvailable boolean OperatingSystem OperatingSystem OperatingSystem see also MediaBrowser.Model.System.OperatingSystem Enum Values Windows Linux OSX BSD Android"
  },
  "reference/RestAPI/EnvironmentService.html": {
    "href": "reference/RestAPI/EnvironmentService.html",
    "title": "EnvironmentService",
    "keywords": "EnvironmentService API Documentation Wiki getEnvironmentDefaultdirectorybrowser get /Environment/DefaultDirectoryBrowser Gets the parent path of a given path getEnvironmentDirectorycontents get /Environment/DirectoryContents Gets the contents of a given directory in the file system getEnvironmentDrives get /Environment/Drives Gets available drives from the server's file system getEnvironmentNetworkdevices get /Environment/NetworkDevices Gets a list of devices on the network getEnvironmentNetworkshares get /Environment/NetworkShares Gets shares from a network device getEnvironmentParentpath get /Environment/ParentPath Gets the parent path of a given path postEnvironmentValidatepath post /Environment/ValidatePath Gets the contents of a given directory in the file system"
  },
  "reference/RestAPI/EnvironmentService/getEnvironmentDefaultdirectorybrowser.html": {
    "href": "reference/RestAPI/EnvironmentService/getEnvironmentDefaultdirectorybrowser.html",
    "title": "getEnvironmentDefaultdirectorybrowser",
    "keywords": "getEnvironmentDefaultdirectorybrowser Gets the parent path of a given path Requires authentication as administrator getEnvironmentDefaultdirectorybrowser Request get /Environment/DefaultDirectoryBrowser Responses Status Code Type Description Samples 200 DefaultDirectoryBrowserInfo Operation successful. Returning a DefaultDirectoryBrowserInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DefaultDirectoryBrowserInfo Emby.Api.DefaultDirectoryBrowserInfo Name Type Notes Path string"
  },
  "reference/RestAPI/EnvironmentService/getEnvironmentDirectorycontents.html": {
    "href": "reference/RestAPI/EnvironmentService/getEnvironmentDirectorycontents.html",
    "title": "getEnvironmentDirectorycontents",
    "keywords": "getEnvironmentDirectorycontents Gets the contents of a given directory in the file system Requires authentication as administrator getEnvironmentDirectorycontents Request get /Environment/DirectoryContents Parameters Name In Type Default Notes *Path query IncludeFiles query An optional filter to include or exclude files from the results. true/false IncludeDirectories query An optional filter to include or exclude folders from the results. true/false Responses Status Code Type Description Samples 200 FileSystemEntryInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions FileSystemEntryInfo see also MediaBrowser.Model.IO.FileSystemEntryInfo Name Type Notes Name string Path string Type FileSystemEntryType FileSystemEntryType see also MediaBrowser.Model.IO.FileSystemEntryType Enum Values File Directory NetworkComputer NetworkShare"
  },
  "reference/RestAPI/EnvironmentService/getEnvironmentDrives.html": {
    "href": "reference/RestAPI/EnvironmentService/getEnvironmentDrives.html",
    "title": "getEnvironmentDrives",
    "keywords": "getEnvironmentDrives Gets available drives from the server's file system Requires authentication as administrator getEnvironmentDrives Request get /Environment/Drives Responses Status Code Type Description Samples 200 FileSystemEntryInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions FileSystemEntryInfo see also MediaBrowser.Model.IO.FileSystemEntryInfo Name Type Notes Name string Path string Type FileSystemEntryType FileSystemEntryType see also MediaBrowser.Model.IO.FileSystemEntryType Enum Values File Directory NetworkComputer NetworkShare"
  },
  "reference/RestAPI/EnvironmentService/getEnvironmentNetworkdevices.html": {
    "href": "reference/RestAPI/EnvironmentService/getEnvironmentNetworkdevices.html",
    "title": "getEnvironmentNetworkdevices",
    "keywords": "getEnvironmentNetworkdevices Gets a list of devices on the network Requires authentication as administrator getEnvironmentNetworkdevices Request get /Environment/NetworkDevices Responses Status Code Type Description Samples 200 FileSystemEntryInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions FileSystemEntryInfo see also MediaBrowser.Model.IO.FileSystemEntryInfo Name Type Notes Name string Path string Type FileSystemEntryType FileSystemEntryType see also MediaBrowser.Model.IO.FileSystemEntryType Enum Values File Directory NetworkComputer NetworkShare"
  },
  "reference/RestAPI/EnvironmentService/getEnvironmentNetworkshares.html": {
    "href": "reference/RestAPI/EnvironmentService/getEnvironmentNetworkshares.html",
    "title": "getEnvironmentNetworkshares",
    "keywords": "getEnvironmentNetworkshares Gets shares from a network device Requires authentication as administrator getEnvironmentNetworkshares Request get /Environment/NetworkShares Parameters Name In Type Default Notes *Path query Responses Status Code Type Description Samples 200 FileSystemEntryInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions FileSystemEntryInfo see also MediaBrowser.Model.IO.FileSystemEntryInfo Name Type Notes Name string Path string Type FileSystemEntryType FileSystemEntryType see also MediaBrowser.Model.IO.FileSystemEntryType Enum Values File Directory NetworkComputer NetworkShare"
  },
  "reference/RestAPI/EnvironmentService/getEnvironmentParentpath.html": {
    "href": "reference/RestAPI/EnvironmentService/getEnvironmentParentpath.html",
    "title": "getEnvironmentParentpath",
    "keywords": "getEnvironmentParentpath Gets the parent path of a given path Requires authentication as administrator getEnvironmentParentpath Request get /Environment/ParentPath Parameters Name In Type Default Notes *Path query Responses Status Code Type Description Samples 200 string Operation successful. Returning a String object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/EnvironmentService/postEnvironmentValidatepath.html": {
    "href": "reference/RestAPI/EnvironmentService/postEnvironmentValidatepath.html",
    "title": "postEnvironmentValidatepath",
    "keywords": "postEnvironmentValidatepath Gets the contents of a given directory in the file system Requires authentication as administrator postEnvironmentValidatepath Request post /Environment/ValidatePath Parameters Name In Type Default Notes *Path query *body body ValidatePath ValidatePath Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ValidatePath Emby.Api.ValidatePath Name Type Notes ValidateWriteable boolean IsFile boolean"
  },
  "reference/RestAPI/FfmpegOptionsService.html": {
    "href": "reference/RestAPI/FfmpegOptionsService.html",
    "title": "FfmpegOptionsService",
    "keywords": "FfmpegOptionsService API Documentation Wiki getEncodingFfmpegoptions get /Encoding/FfmpegOptions Gets the ffmpeg options postEncodingFfmpegoptions post /Encoding/FfmpegOptions Updates the ffmpeg options"
  },
  "reference/RestAPI/FfmpegOptionsService/getEncodingFfmpegoptions.html": {
    "href": "reference/RestAPI/FfmpegOptionsService/getEncodingFfmpegoptions.html",
    "title": "getEncodingFfmpegoptions",
    "keywords": "getEncodingFfmpegoptions Gets the ffmpeg options Requires authentication as user getEncodingFfmpegoptions Request get /Encoding/FfmpegOptions Responses Status Code Type Description Samples 200 EditObjectContainer Operation successful. Returning a EditObjectContainer object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions EditObjectContainer see also Emby.Web.GenericEdit.EditObjectContainer Name Type Notes Object object DefaultObject object TypeName string EditorRoot EditorRoot[] EditorRoot see also Emby.Web.GenericEdit.Editors.EditorRoot Name Type Notes PropertyConditions PropertyCondition[] PostbackActions PostbackAction[] TitleButton EditorButtonItem[] EditorItems EditorBase[] EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string PropertyCondition see also Emby.Web.GenericEdit.Conditions.PropertyCondition Name Type Notes AffectedPropertyId string ConditionType PropertyConditionType TargetPropertyId string SimpleCondition SimpleCondition ValueCondition ValueCondition Value object PropertyConditionType see also Emby.Web.GenericEdit.Conditions.PropertyConditionType Enum Values Visible Enabled SimpleCondition see also MediaBrowser.Model.Attributes.SimpleCondition Enum Values IsTrue IsFalse IsNull IsNotNullOrEmpty ValueCondition see also MediaBrowser.Model.Attributes.ValueCondition Enum Values IsEqual IsNotEqual IsGreater IsGreaterOrEqual IsLess IsLessOrEqual PostbackAction see also Emby.Web.GenericEdit.Actions.PostbackAction Name Type Notes TargetEditorId string PostbackCommandId string CommandParameterPropertyId string EditorButtonItem see also Emby.Web.GenericEdit.Editors.EditorButtonItem Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string EditorTypes see also Emby.Web.GenericEdit.Common.EditorTypes Enum Values Group Text Numeric Boolean SelectSingle SelectMultiple Date FilePath FolderPath StatusItem ProgressItem ButtonItem ButtonGroup CaptionItem LabelItem ItemList RadioGroup DataGrid PivotGrid SpacerItem EditorBase see also Emby.Web.GenericEdit.Editors.EditorBase Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string"
  },
  "reference/RestAPI/FfmpegOptionsService/postEncodingFfmpegoptions.html": {
    "href": "reference/RestAPI/FfmpegOptionsService/postEncodingFfmpegoptions.html",
    "title": "postEncodingFfmpegoptions",
    "keywords": "postEncodingFfmpegoptions Updates the ffmpeg options Requires authentication as administrator postEncodingFfmpegoptions Request post /Encoding/FfmpegOptions Parameters Name In Type Default Notes *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/GameGenresService.html": {
    "href": "reference/RestAPI/GameGenresService.html",
    "title": "GameGenresService",
    "keywords": "GameGenresService API Documentation: Items by name getGamegenres get /GameGenres Gets all Game genres from a given item, folder, or the entire library getGamegenresByName get /GameGenres/{Name} Gets a Game genre, by name"
  },
  "reference/RestAPI/GameGenresService/getGamegenres.html": {
    "href": "reference/RestAPI/GameGenresService/getGamegenres.html",
    "title": "getGamegenres",
    "keywords": "getGamegenres Gets all Game genres from a given item, folder, or the entire library Requires authentication as user getGamegenres Request get /GameGenres Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/GameGenresService/getGamegenresByName.html": {
    "href": "reference/RestAPI/GameGenresService/getGamegenresByName.html",
    "title": "getGamegenresByName",
    "keywords": "getGamegenresByName Gets a Game genre, by name Requires authentication as user getGamegenresByName Request get /GameGenres/{Name} Parameters Name In Type Default Notes *Name path The genre name UserId query Optional. Filter by user id, and attach user data Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/GamesService.html": {
    "href": "reference/RestAPI/GamesService.html",
    "title": "GamesService",
    "keywords": "GamesService API Documentation Wiki getGamesSystemsummaries get /Games/SystemSummaries Finds games similar to a given game."
  },
  "reference/RestAPI/GamesService/getGamesSystemsummaries.html": {
    "href": "reference/RestAPI/GamesService/getGamesSystemsummaries.html",
    "title": "getGamesSystemsummaries",
    "keywords": "getGamesSystemsummaries Finds games similar to a given game. Requires authentication as user getGamesSystemsummaries Request get /Games/SystemSummaries Parameters Name In Type Default Notes UserId query Optional. Filter by user id Responses Status Code Type Description Samples 200 GameSystemSummary [] Operation successful. Returning a GameSystemSummary[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions GameSystemSummary see also MediaBrowser.Model.Dto.GameSystemSummary Name Type Notes Name string DisplayName string GameCount integer (int32) GameFileExtensions array ClientInstalledGameCount integer (int32)"
  },
  "reference/RestAPI/GenresService.html": {
    "href": "reference/RestAPI/GenresService.html",
    "title": "GenresService",
    "keywords": "GenresService API Documentation: Items by name getGenres get /Genres Gets all genres from a given item, folder, or the entire library getGenresByName get /Genres/{Name} Gets a genre, by name"
  },
  "reference/RestAPI/GenresService/getGenres.html": {
    "href": "reference/RestAPI/GenresService/getGenres.html",
    "title": "getGenres",
    "keywords": "getGenres Gets all genres from a given item, folder, or the entire library Requires authentication as user getGenres Request get /Genres Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/GenresService/getGenresByName.html": {
    "href": "reference/RestAPI/GenresService/getGenresByName.html",
    "title": "getGenresByName",
    "keywords": "getGenresByName Gets a genre, by name Requires authentication as user getGenresByName Request get /Genres/{Name} Parameters Name In Type Default Notes *Name path The genre name UserId query Optional. Filter by user id, and attach user data Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/HlsSegmentService.html": {
    "href": "reference/RestAPI/HlsSegmentService.html",
    "title": "HlsSegmentService",
    "keywords": "HlsSegmentService API Documentation Wiki deleteVideosActiveencodings delete /Videos/ActiveEncodings postVideosActiveencodingsDelete post /Videos/ActiveEncodings/Delete"
  },
  "reference/RestAPI/HlsSegmentService/deleteVideosActiveencodings.html": {
    "href": "reference/RestAPI/HlsSegmentService/deleteVideosActiveencodings.html",
    "title": "deleteVideosActiveencodings",
    "keywords": "deleteVideosActiveencodings Requires authentication as user deleteVideosActiveencodings Request delete /Videos/ActiveEncodings Parameters Name In Type Default Notes *DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *PlaySessionId query The play session id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/HlsSegmentService/postVideosActiveencodingsDelete.html": {
    "href": "reference/RestAPI/HlsSegmentService/postVideosActiveencodingsDelete.html",
    "title": "postVideosActiveencodingsDelete",
    "keywords": "postVideosActiveencodingsDelete Requires authentication as user postVideosActiveencodingsDelete Request post /Videos/ActiveEncodings/Delete Parameters Name In Type Default Notes *DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *PlaySessionId query The play session id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageByNameService.html": {
    "href": "reference/RestAPI/ImageByNameService.html",
    "title": "ImageByNameService",
    "keywords": "ImageByNameService API Documentation Wiki getImagesGeneral get /Images/General Gets all general images by name getImagesGeneralByNameByType get /Images/General/{Name}/{Type} Gets a general image by name getImagesMediainfo get /Images/MediaInfo Gets all media info image by name getImagesMediainfoByThemeByName get /Images/MediaInfo/{Theme}/{Name} Gets a media info image by name getImagesRatings get /Images/Ratings Gets all rating images by name getImagesRatingsByThemeByName get /Images/Ratings/{Theme}/{Name} Gets a rating image by name"
  },
  "reference/RestAPI/ImageByNameService/getImagesGeneral.html": {
    "href": "reference/RestAPI/ImageByNameService/getImagesGeneral.html",
    "title": "getImagesGeneral",
    "keywords": "getImagesGeneral Gets all general images by name Requires authentication as user getImagesGeneral Request get /Images/General Responses Status Code Type Description Samples 200 ImageByNameInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ImageByNameInfo see also MediaBrowser.Model.Dto.ImageByNameInfo Name Type Notes Name string Theme string Context string FileLength integer (int64) Format string"
  },
  "reference/RestAPI/ImageByNameService/getImagesGeneralByNameByType.html": {
    "href": "reference/RestAPI/ImageByNameService/getImagesGeneralByNameByType.html",
    "title": "getImagesGeneralByNameByType",
    "keywords": "getImagesGeneralByNameByType Gets a general image by name No authentication required getImagesGeneralByNameByType Request get /Images/General/{Name}/{Type} Parameters Name In Type Default Notes *Name path The name of the image *Type path Image Type (primary, backdrop, logo, etc). Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageByNameService/getImagesMediainfo.html": {
    "href": "reference/RestAPI/ImageByNameService/getImagesMediainfo.html",
    "title": "getImagesMediainfo",
    "keywords": "getImagesMediainfo Gets all media info image by name Requires authentication as user getImagesMediainfo Request get /Images/MediaInfo Responses Status Code Type Description Samples 200 ImageByNameInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ImageByNameInfo see also MediaBrowser.Model.Dto.ImageByNameInfo Name Type Notes Name string Theme string Context string FileLength integer (int64) Format string"
  },
  "reference/RestAPI/ImageByNameService/getImagesMediainfoByThemeByName.html": {
    "href": "reference/RestAPI/ImageByNameService/getImagesMediainfoByThemeByName.html",
    "title": "getImagesMediainfoByThemeByName",
    "keywords": "getImagesMediainfoByThemeByName Gets a media info image by name No authentication required getImagesMediainfoByThemeByName Request get /Images/MediaInfo/{Theme}/{Name} Parameters Name In Type Default Notes *Name path The name of the image *Theme path The theme to get the image from Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageByNameService/getImagesRatings.html": {
    "href": "reference/RestAPI/ImageByNameService/getImagesRatings.html",
    "title": "getImagesRatings",
    "keywords": "getImagesRatings Gets all rating images by name Requires authentication as user getImagesRatings Request get /Images/Ratings Responses Status Code Type Description Samples 200 ImageByNameInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ImageByNameInfo see also MediaBrowser.Model.Dto.ImageByNameInfo Name Type Notes Name string Theme string Context string FileLength integer (int64) Format string"
  },
  "reference/RestAPI/ImageByNameService/getImagesRatingsByThemeByName.html": {
    "href": "reference/RestAPI/ImageByNameService/getImagesRatingsByThemeByName.html",
    "title": "getImagesRatingsByThemeByName",
    "keywords": "getImagesRatingsByThemeByName Gets a rating image by name No authentication required getImagesRatingsByThemeByName Request get /Images/Ratings/{Theme}/{Name} Parameters Name In Type Default Notes *Name path The name of the image *Theme path The theme to get the image from Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService.html": {
    "href": "reference/RestAPI/ImageService.html",
    "title": "ImageService",
    "keywords": "ImageService API Documentation: Images deleteItemsByIdImagesByType delete /Items/{Id}/Images/{Type} deleteItemsByIdImagesByTypeByIndex delete /Items/{Id}/Images/{Type}/{Index} deleteUsersByIdImagesByType delete /Users/{Id}/Images/{Type} deleteUsersByIdImagesByTypeByIndex delete /Users/{Id}/Images/{Type}/{Index} getArtistsByNameImagesByType get /Artists/{Name}/Images/{Type} getArtistsByNameImagesByTypeByIndex get /Artists/{Name}/Images/{Type}/{Index} getGamegenresByNameImagesByType get /GameGenres/{Name}/Images/{Type} getGamegenresByNameImagesByTypeByIndex get /GameGenres/{Name}/Images/{Type}/{Index} getGenresByNameImagesByType get /Genres/{Name}/Images/{Type} getGenresByNameImagesByTypeByIndex get /Genres/{Name}/Images/{Type}/{Index} getItemsByIdImages get /Items/{Id}/Images Gets information about an item's images getItemsByIdImagesByType get /Items/{Id}/Images/{Type} getItemsByIdImagesByTypeByIndex get /Items/{Id}/Images/{Type}/{Index} getItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount get /Items/{Id}/Images/{Type}/{Index}/{Tag}/{Format}/{MaxWidth}/{MaxHeight}/{PercentPlayed}/{UnplayedCount} getMusicgenresByNameImagesByType get /MusicGenres/{Name}/Images/{Type} getMusicgenresByNameImagesByTypeByIndex get /MusicGenres/{Name}/Images/{Type}/{Index} getPersonsByNameImagesByType get /Persons/{Name}/Images/{Type} getPersonsByNameImagesByTypeByIndex get /Persons/{Name}/Images/{Type}/{Index} getStudiosByNameImagesByType get /Studios/{Name}/Images/{Type} getStudiosByNameImagesByTypeByIndex get /Studios/{Name}/Images/{Type}/{Index} getUsersByIdImagesByType get /Users/{Id}/Images/{Type} getUsersByIdImagesByTypeByIndex get /Users/{Id}/Images/{Type}/{Index} headArtistsByNameImagesByType head /Artists/{Name}/Images/{Type} headArtistsByNameImagesByTypeByIndex head /Artists/{Name}/Images/{Type}/{Index} headGamegenresByNameImagesByType head /GameGenres/{Name}/Images/{Type} headGamegenresByNameImagesByTypeByIndex head /GameGenres/{Name}/Images/{Type}/{Index} headGenresByNameImagesByType head /Genres/{Name}/Images/{Type} headGenresByNameImagesByTypeByIndex head /Genres/{Name}/Images/{Type}/{Index} headItemsByIdImagesByType head /Items/{Id}/Images/{Type} headItemsByIdImagesByTypeByIndex head /Items/{Id}/Images/{Type}/{Index} headItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount head /Items/{Id}/Images/{Type}/{Index}/{Tag}/{Format}/{MaxWidth}/{MaxHeight}/{PercentPlayed}/{UnplayedCount} headMusicgenresByNameImagesByType head /MusicGenres/{Name}/Images/{Type} headMusicgenresByNameImagesByTypeByIndex head /MusicGenres/{Name}/Images/{Type}/{Index} headPersonsByNameImagesByType head /Persons/{Name}/Images/{Type} headPersonsByNameImagesByTypeByIndex head /Persons/{Name}/Images/{Type}/{Index} headStudiosByNameImagesByType head /Studios/{Name}/Images/{Type} headStudiosByNameImagesByTypeByIndex head /Studios/{Name}/Images/{Type}/{Index} headUsersByIdImagesByType head /Users/{Id}/Images/{Type} headUsersByIdImagesByTypeByIndex head /Users/{Id}/Images/{Type}/{Index} postItemsByIdImagesByType post /Items/{Id}/Images/{Type} Uploads an image for an item, must be base64 encoded. postItemsByIdImagesByTypeByIndex post /Items/{Id}/Images/{Type}/{Index} Uploads an image for an item, must be base64 encoded. postItemsByIdImagesByTypeByIndexDelete post /Items/{Id}/Images/{Type}/{Index}/Delete postItemsByIdImagesByTypeByIndexIndex post /Items/{Id}/Images/{Type}/{Index}/Index Updates the index for an item image postItemsByIdImagesByTypeByIndexUrl post /Items/{Id}/Images/{Type}/{Index}/Url Updates the index for an item image postItemsByIdImagesByTypeDelete post /Items/{Id}/Images/{Type}/Delete postUsersByIdImagesByType post /Users/{Id}/Images/{Type} Uploads an image for an item, must be base64 encoded. postUsersByIdImagesByTypeByIndex post /Users/{Id}/Images/{Type}/{Index} Uploads an image for an item, must be base64 encoded. postUsersByIdImagesByTypeByIndexDelete post /Users/{Id}/Images/{Type}/{Index}/Delete postUsersByIdImagesByTypeDelete post /Users/{Id}/Images/{Type}/Delete"
  },
  "reference/RestAPI/ImageService/deleteItemsByIdImagesByType.html": {
    "href": "reference/RestAPI/ImageService/deleteItemsByIdImagesByType.html",
    "title": "deleteItemsByIdImagesByType",
    "keywords": "deleteItemsByIdImagesByType Requires authentication as administrator deleteItemsByIdImagesByType Request delete /Items/{Id}/Images/{Type} Parameters Name In Type Default Notes *Id path Item Id *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/deleteItemsByIdImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/deleteItemsByIdImagesByTypeByIndex.html",
    "title": "deleteItemsByIdImagesByTypeByIndex",
    "keywords": "deleteItemsByIdImagesByTypeByIndex Requires authentication as administrator deleteItemsByIdImagesByTypeByIndex Request delete /Items/{Id}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Id path Item Id *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/deleteUsersByIdImagesByType.html": {
    "href": "reference/RestAPI/ImageService/deleteUsersByIdImagesByType.html",
    "title": "deleteUsersByIdImagesByType",
    "keywords": "deleteUsersByIdImagesByType Requires authentication as user deleteUsersByIdImagesByType Request delete /Users/{Id}/Images/{Type} Parameters Name In Type Default Notes *Id path User Id *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/deleteUsersByIdImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/deleteUsersByIdImagesByTypeByIndex.html",
    "title": "deleteUsersByIdImagesByTypeByIndex",
    "keywords": "deleteUsersByIdImagesByTypeByIndex Requires authentication as user deleteUsersByIdImagesByTypeByIndex Request delete /Users/{Id}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Id path User Id *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getArtistsByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/getArtistsByNameImagesByType.html",
    "title": "getArtistsByNameImagesByType",
    "keywords": "getArtistsByNameImagesByType No authentication required getArtistsByNameImagesByType Request get /Artists/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getArtistsByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/getArtistsByNameImagesByTypeByIndex.html",
    "title": "getArtistsByNameImagesByTypeByIndex",
    "keywords": "getArtistsByNameImagesByTypeByIndex No authentication required getArtistsByNameImagesByTypeByIndex Request get /Artists/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getGamegenresByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/getGamegenresByNameImagesByType.html",
    "title": "getGamegenresByNameImagesByType",
    "keywords": "getGamegenresByNameImagesByType No authentication required getGamegenresByNameImagesByType Request get /GameGenres/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getGamegenresByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/getGamegenresByNameImagesByTypeByIndex.html",
    "title": "getGamegenresByNameImagesByTypeByIndex",
    "keywords": "getGamegenresByNameImagesByTypeByIndex No authentication required getGamegenresByNameImagesByTypeByIndex Request get /GameGenres/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getGenresByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/getGenresByNameImagesByType.html",
    "title": "getGenresByNameImagesByType",
    "keywords": "getGenresByNameImagesByType No authentication required getGenresByNameImagesByType Request get /Genres/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getGenresByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/getGenresByNameImagesByTypeByIndex.html",
    "title": "getGenresByNameImagesByTypeByIndex",
    "keywords": "getGenresByNameImagesByTypeByIndex No authentication required getGenresByNameImagesByTypeByIndex Request get /Genres/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getItemsByIdImages.html": {
    "href": "reference/RestAPI/ImageService/getItemsByIdImages.html",
    "title": "getItemsByIdImages",
    "keywords": "getItemsByIdImages Gets information about an item's images Requires authentication as user getItemsByIdImages Request get /Items/{Id}/Images Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 ImageInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ImageInfo see also MediaBrowser.Model.Dto.ImageInfo Name Type Notes ImageType ImageType ImageIndex integer (int32) Path string Filename string Height integer (int32) Width integer (int32) Size integer (int64) ImageType see also MediaBrowser.Model.Entities.ImageType Enum Values Primary Art Backdrop Banner Logo Thumb Disc Box Screenshot Menu Chapter BoxRear Thumbnail LogoLight LogoLightColor"
  },
  "reference/RestAPI/ImageService/getItemsByIdImagesByType.html": {
    "href": "reference/RestAPI/ImageService/getItemsByIdImagesByType.html",
    "title": "getItemsByIdImagesByType",
    "keywords": "getItemsByIdImagesByType No authentication required getItemsByIdImagesByType Request get /Items/{Id}/Images/{Type} Parameters Name In Type Default Notes *Id path Item Id MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getItemsByIdImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/getItemsByIdImagesByTypeByIndex.html",
    "title": "getItemsByIdImagesByTypeByIndex",
    "keywords": "getItemsByIdImagesByTypeByIndex No authentication required getItemsByIdImagesByTypeByIndex Request get /Items/{Id}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Id path Item Id MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount.html": {
    "href": "reference/RestAPI/ImageService/getItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount.html",
    "title": "getItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount",
    "keywords": "getItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount No authentication required getItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount Request get /Items/{Id}/Images/{Type}/{Index}/{Tag}/{Format}/{MaxWidth}/{MaxHeight}/{PercentPlayed}/{UnplayedCount} Parameters Name In Type Default Notes *Id path Item Id *MaxWidth path The maximum image width to return. *MaxHeight path The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. *Tag path Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. *Format path Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator *PercentPlayed path Optional percent to render for the percent played overlay *UnplayedCount path Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getMusicgenresByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/getMusicgenresByNameImagesByType.html",
    "title": "getMusicgenresByNameImagesByType",
    "keywords": "getMusicgenresByNameImagesByType No authentication required getMusicgenresByNameImagesByType Request get /MusicGenres/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getMusicgenresByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/getMusicgenresByNameImagesByTypeByIndex.html",
    "title": "getMusicgenresByNameImagesByTypeByIndex",
    "keywords": "getMusicgenresByNameImagesByTypeByIndex No authentication required getMusicgenresByNameImagesByTypeByIndex Request get /MusicGenres/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getPersonsByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/getPersonsByNameImagesByType.html",
    "title": "getPersonsByNameImagesByType",
    "keywords": "getPersonsByNameImagesByType No authentication required getPersonsByNameImagesByType Request get /Persons/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getPersonsByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/getPersonsByNameImagesByTypeByIndex.html",
    "title": "getPersonsByNameImagesByTypeByIndex",
    "keywords": "getPersonsByNameImagesByTypeByIndex No authentication required getPersonsByNameImagesByTypeByIndex Request get /Persons/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getStudiosByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/getStudiosByNameImagesByType.html",
    "title": "getStudiosByNameImagesByType",
    "keywords": "getStudiosByNameImagesByType No authentication required getStudiosByNameImagesByType Request get /Studios/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getStudiosByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/getStudiosByNameImagesByTypeByIndex.html",
    "title": "getStudiosByNameImagesByTypeByIndex",
    "keywords": "getStudiosByNameImagesByTypeByIndex No authentication required getStudiosByNameImagesByTypeByIndex Request get /Studios/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getUsersByIdImagesByType.html": {
    "href": "reference/RestAPI/ImageService/getUsersByIdImagesByType.html",
    "title": "getUsersByIdImagesByType",
    "keywords": "getUsersByIdImagesByType No authentication required getUsersByIdImagesByType Request get /Users/{Id}/Images/{Type} Parameters Name In Type Default Notes *Id path User Id MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/getUsersByIdImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/getUsersByIdImagesByTypeByIndex.html",
    "title": "getUsersByIdImagesByTypeByIndex",
    "keywords": "getUsersByIdImagesByTypeByIndex No authentication required getUsersByIdImagesByTypeByIndex Request get /Users/{Id}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Id path User Id MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headArtistsByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/headArtistsByNameImagesByType.html",
    "title": "headArtistsByNameImagesByType",
    "keywords": "headArtistsByNameImagesByType No authentication required headArtistsByNameImagesByType Request head /Artists/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headArtistsByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/headArtistsByNameImagesByTypeByIndex.html",
    "title": "headArtistsByNameImagesByTypeByIndex",
    "keywords": "headArtistsByNameImagesByTypeByIndex No authentication required headArtistsByNameImagesByTypeByIndex Request head /Artists/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headGamegenresByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/headGamegenresByNameImagesByType.html",
    "title": "headGamegenresByNameImagesByType",
    "keywords": "headGamegenresByNameImagesByType No authentication required headGamegenresByNameImagesByType Request head /GameGenres/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headGamegenresByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/headGamegenresByNameImagesByTypeByIndex.html",
    "title": "headGamegenresByNameImagesByTypeByIndex",
    "keywords": "headGamegenresByNameImagesByTypeByIndex No authentication required headGamegenresByNameImagesByTypeByIndex Request head /GameGenres/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headGenresByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/headGenresByNameImagesByType.html",
    "title": "headGenresByNameImagesByType",
    "keywords": "headGenresByNameImagesByType No authentication required headGenresByNameImagesByType Request head /Genres/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headGenresByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/headGenresByNameImagesByTypeByIndex.html",
    "title": "headGenresByNameImagesByTypeByIndex",
    "keywords": "headGenresByNameImagesByTypeByIndex No authentication required headGenresByNameImagesByTypeByIndex Request head /Genres/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headItemsByIdImagesByType.html": {
    "href": "reference/RestAPI/ImageService/headItemsByIdImagesByType.html",
    "title": "headItemsByIdImagesByType",
    "keywords": "headItemsByIdImagesByType No authentication required headItemsByIdImagesByType Request head /Items/{Id}/Images/{Type} Parameters Name In Type Default Notes *Id path Item Id MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headItemsByIdImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/headItemsByIdImagesByTypeByIndex.html",
    "title": "headItemsByIdImagesByTypeByIndex",
    "keywords": "headItemsByIdImagesByTypeByIndex No authentication required headItemsByIdImagesByTypeByIndex Request head /Items/{Id}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Id path Item Id MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount.html": {
    "href": "reference/RestAPI/ImageService/headItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount.html",
    "title": "headItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount",
    "keywords": "headItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount No authentication required headItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount Request head /Items/{Id}/Images/{Type}/{Index}/{Tag}/{Format}/{MaxWidth}/{MaxHeight}/{PercentPlayed}/{UnplayedCount} Parameters Name In Type Default Notes *Id path Item Id *MaxWidth path The maximum image width to return. *MaxHeight path The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. *Tag path Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. *Format path Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator *PercentPlayed path Optional percent to render for the percent played overlay *UnplayedCount path Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headMusicgenresByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/headMusicgenresByNameImagesByType.html",
    "title": "headMusicgenresByNameImagesByType",
    "keywords": "headMusicgenresByNameImagesByType No authentication required headMusicgenresByNameImagesByType Request head /MusicGenres/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headMusicgenresByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/headMusicgenresByNameImagesByTypeByIndex.html",
    "title": "headMusicgenresByNameImagesByTypeByIndex",
    "keywords": "headMusicgenresByNameImagesByTypeByIndex No authentication required headMusicgenresByNameImagesByTypeByIndex Request head /MusicGenres/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headPersonsByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/headPersonsByNameImagesByType.html",
    "title": "headPersonsByNameImagesByType",
    "keywords": "headPersonsByNameImagesByType No authentication required headPersonsByNameImagesByType Request head /Persons/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headPersonsByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/headPersonsByNameImagesByTypeByIndex.html",
    "title": "headPersonsByNameImagesByTypeByIndex",
    "keywords": "headPersonsByNameImagesByTypeByIndex No authentication required headPersonsByNameImagesByTypeByIndex Request head /Persons/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headStudiosByNameImagesByType.html": {
    "href": "reference/RestAPI/ImageService/headStudiosByNameImagesByType.html",
    "title": "headStudiosByNameImagesByType",
    "keywords": "headStudiosByNameImagesByType No authentication required headStudiosByNameImagesByType Request head /Studios/{Name}/Images/{Type} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headStudiosByNameImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/headStudiosByNameImagesByTypeByIndex.html",
    "title": "headStudiosByNameImagesByTypeByIndex",
    "keywords": "headStudiosByNameImagesByTypeByIndex No authentication required headStudiosByNameImagesByTypeByIndex Request head /Studios/{Name}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Name path Item name MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headUsersByIdImagesByType.html": {
    "href": "reference/RestAPI/ImageService/headUsersByIdImagesByType.html",
    "title": "headUsersByIdImagesByType",
    "keywords": "headUsersByIdImagesByType No authentication required headUsersByIdImagesByType Request head /Users/{Id}/Images/{Type} Parameters Name In Type Default Notes *Id path User Id MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/headUsersByIdImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/headUsersByIdImagesByTypeByIndex.html",
    "title": "headUsersByIdImagesByTypeByIndex",
    "keywords": "headUsersByIdImagesByTypeByIndex No authentication required headUsersByIdImagesByTypeByIndex Request head /Users/{Id}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Id path User Id MaxWidth query The maximum image width to return. MaxHeight query The maximum image height to return. Width query The fixed image width to return. Height query The fixed image height to return. Quality query Optional quality setting, from 0-100. Defaults to 90 and should suffice in most cases. Tag query Optional. Supply the cache tag from the item object to receive strong caching headers. CropWhitespace query Specify if whitespace should be cropped out of the image. True/False. If unspecified, whitespace will be cropped from logos and clear art. EnableImageEnhancers query Enable or disable image enhancers such as cover art. Format query Determines the output foramt of the image - original,gif,jpg,png AddPlayedIndicator query Optional. Add a played indicator PercentPlayed query Optional percent to render for the percent played overlay UnplayedCount query Optional unplayed count overlay to render BackgroundColor query Optional. Apply a background color for transparent images. ForegroundLayer query Optional. Apply a foreground layer on top of the image. AutoOrient query Set to true to force normalization of orientation in the event the renderer does not support it. *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/postItemsByIdImagesByType.html": {
    "href": "reference/RestAPI/ImageService/postItemsByIdImagesByType.html",
    "title": "postItemsByIdImagesByType",
    "keywords": "postItemsByIdImagesByType Uploads an image for an item, must be base64 encoded. Requires authentication as administrator postItemsByIdImagesByType Request post /Items/{Id}/Images/{Type} Parameters Name In Type Default Notes *Id path Item Id *Type path Image Type Index query Image Index *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/postItemsByIdImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/postItemsByIdImagesByTypeByIndex.html",
    "title": "postItemsByIdImagesByTypeByIndex",
    "keywords": "postItemsByIdImagesByTypeByIndex Uploads an image for an item, must be base64 encoded. Requires authentication as administrator postItemsByIdImagesByTypeByIndex Request post /Items/{Id}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Id path Item Id *Type path Image Type *Index path Image Index *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/postItemsByIdImagesByTypeByIndexDelete.html": {
    "href": "reference/RestAPI/ImageService/postItemsByIdImagesByTypeByIndexDelete.html",
    "title": "postItemsByIdImagesByTypeByIndexDelete",
    "keywords": "postItemsByIdImagesByTypeByIndexDelete Requires authentication as administrator postItemsByIdImagesByTypeByIndexDelete Request post /Items/{Id}/Images/{Type}/{Index}/Delete Parameters Name In Type Default Notes *Id path Item Id *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/postItemsByIdImagesByTypeByIndexIndex.html": {
    "href": "reference/RestAPI/ImageService/postItemsByIdImagesByTypeByIndexIndex.html",
    "title": "postItemsByIdImagesByTypeByIndexIndex",
    "keywords": "postItemsByIdImagesByTypeByIndexIndex Updates the index for an item image Requires authentication as administrator postItemsByIdImagesByTypeByIndexIndex Request post /Items/{Id}/Images/{Type}/{Index}/Index Parameters Name In Type Default Notes *Id path Item Id *Type path Image Type *Index path Image Index *NewIndex query The new image index Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/postItemsByIdImagesByTypeByIndexUrl.html": {
    "href": "reference/RestAPI/ImageService/postItemsByIdImagesByTypeByIndexUrl.html",
    "title": "postItemsByIdImagesByTypeByIndexUrl",
    "keywords": "postItemsByIdImagesByTypeByIndexUrl Updates the index for an item image Requires authentication as administrator postItemsByIdImagesByTypeByIndexUrl Request post /Items/{Id}/Images/{Type}/{Index}/Url Parameters Name In Type Default Notes *Id path Item Id *Type path Image Type *Index path Image Index *Url query The url for the new image Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/postItemsByIdImagesByTypeDelete.html": {
    "href": "reference/RestAPI/ImageService/postItemsByIdImagesByTypeDelete.html",
    "title": "postItemsByIdImagesByTypeDelete",
    "keywords": "postItemsByIdImagesByTypeDelete Requires authentication as administrator postItemsByIdImagesByTypeDelete Request post /Items/{Id}/Images/{Type}/Delete Parameters Name In Type Default Notes *Id path Item Id *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/postUsersByIdImagesByType.html": {
    "href": "reference/RestAPI/ImageService/postUsersByIdImagesByType.html",
    "title": "postUsersByIdImagesByType",
    "keywords": "postUsersByIdImagesByType Uploads an image for an item, must be base64 encoded. Requires authentication as user postUsersByIdImagesByType Request post /Users/{Id}/Images/{Type} Parameters Name In Type Default Notes *Id path User Id *Type path Image Type Index query Image Index *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/postUsersByIdImagesByTypeByIndex.html": {
    "href": "reference/RestAPI/ImageService/postUsersByIdImagesByTypeByIndex.html",
    "title": "postUsersByIdImagesByTypeByIndex",
    "keywords": "postUsersByIdImagesByTypeByIndex Uploads an image for an item, must be base64 encoded. Requires authentication as user postUsersByIdImagesByTypeByIndex Request post /Users/{Id}/Images/{Type}/{Index} Parameters Name In Type Default Notes *Id path User Id *Type path Image Type *Index path Image Index *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/postUsersByIdImagesByTypeByIndexDelete.html": {
    "href": "reference/RestAPI/ImageService/postUsersByIdImagesByTypeByIndexDelete.html",
    "title": "postUsersByIdImagesByTypeByIndexDelete",
    "keywords": "postUsersByIdImagesByTypeByIndexDelete Requires authentication as user postUsersByIdImagesByTypeByIndexDelete Request post /Users/{Id}/Images/{Type}/{Index}/Delete Parameters Name In Type Default Notes *Id path User Id *Type path Image Type *Index path Image Index Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ImageService/postUsersByIdImagesByTypeDelete.html": {
    "href": "reference/RestAPI/ImageService/postUsersByIdImagesByTypeDelete.html",
    "title": "postUsersByIdImagesByTypeDelete",
    "keywords": "postUsersByIdImagesByTypeDelete Requires authentication as user postUsersByIdImagesByTypeDelete Request post /Users/{Id}/Images/{Type}/Delete Parameters Name In Type Default Notes *Id path User Id *Type path Image Type Index query Image Index Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/InstantMixService.html": {
    "href": "reference/RestAPI/InstantMixService.html",
    "title": "InstantMixService",
    "keywords": "InstantMixService API Documentation: Item Information getAlbumsByIdInstantmix get /Albums/{Id}/InstantMix Creates an instant playlist based on a given album getArtistsInstantmix get /Artists/InstantMix Creates an instant playlist based on a given artist getAudiobooksNextup get /AudioBooks/NextUp Gets a list of next up episodes getItemsByIdInstantmix get /Items/{Id}/InstantMix Creates an instant playlist based on a given item getMusicgenresByNameInstantmix get /MusicGenres/{Name}/InstantMix Creates an instant playlist based on a music genre getMusicgenresInstantmix get /MusicGenres/InstantMix Creates an instant playlist based on a music genre getPlaylistsByIdInstantmix get /Playlists/{Id}/InstantMix Creates an instant playlist based on a given playlist getSongsByIdInstantmix get /Songs/{Id}/InstantMix Creates an instant playlist based on a given song"
  },
  "reference/RestAPI/InstantMixService/getAlbumsByIdInstantmix.html": {
    "href": "reference/RestAPI/InstantMixService/getAlbumsByIdInstantmix.html",
    "title": "getAlbumsByIdInstantmix",
    "keywords": "getAlbumsByIdInstantmix Creates an instant playlist based on a given album Requires authentication as user getAlbumsByIdInstantmix Request get /Albums/{Id}/InstantMix Parameters Name In Type Default Notes *Id path Item Id IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/InstantMixService/getArtistsInstantmix.html": {
    "href": "reference/RestAPI/InstantMixService/getArtistsInstantmix.html",
    "title": "getArtistsInstantmix",
    "keywords": "getArtistsInstantmix Creates an instant playlist based on a given artist Requires authentication as user getArtistsInstantmix Request get /Artists/InstantMix Parameters Name In Type Default Notes IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/InstantMixService/getAudiobooksNextup.html": {
    "href": "reference/RestAPI/InstantMixService/getAudiobooksNextup.html",
    "title": "getAudiobooksNextup",
    "keywords": "getAudiobooksNextup Gets a list of next up episodes Requires authentication as user getAudiobooksNextup Request get /AudioBooks/NextUp Parameters Name In Type Default Notes *UserId query User Id StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls AlbumId query Optional. Filter by series id ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root EnableImages query Optional, include image information in output ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. EnableUserData query Optional, include user data Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/InstantMixService/getItemsByIdInstantmix.html": {
    "href": "reference/RestAPI/InstantMixService/getItemsByIdInstantmix.html",
    "title": "getItemsByIdInstantmix",
    "keywords": "getItemsByIdInstantmix Creates an instant playlist based on a given item Requires authentication as user getItemsByIdInstantmix Request get /Items/{Id}/InstantMix Parameters Name In Type Default Notes *Id path Item Id IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/InstantMixService/getMusicgenresByNameInstantmix.html": {
    "href": "reference/RestAPI/InstantMixService/getMusicgenresByNameInstantmix.html",
    "title": "getMusicgenresByNameInstantmix",
    "keywords": "getMusicgenresByNameInstantmix Creates an instant playlist based on a music genre Requires authentication as user getMusicgenresByNameInstantmix Request get /MusicGenres/{Name}/InstantMix Parameters Name In Type Default Notes *Name path The genre name IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/InstantMixService/getMusicgenresInstantmix.html": {
    "href": "reference/RestAPI/InstantMixService/getMusicgenresInstantmix.html",
    "title": "getMusicgenresInstantmix",
    "keywords": "getMusicgenresInstantmix Creates an instant playlist based on a music genre Requires authentication as user getMusicgenresInstantmix Request get /MusicGenres/InstantMix Parameters Name In Type Default Notes IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/InstantMixService/getPlaylistsByIdInstantmix.html": {
    "href": "reference/RestAPI/InstantMixService/getPlaylistsByIdInstantmix.html",
    "title": "getPlaylistsByIdInstantmix",
    "keywords": "getPlaylistsByIdInstantmix Creates an instant playlist based on a given playlist Requires authentication as user getPlaylistsByIdInstantmix Request get /Playlists/{Id}/InstantMix Parameters Name In Type Default Notes *Id path Item Id IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/InstantMixService/getSongsByIdInstantmix.html": {
    "href": "reference/RestAPI/InstantMixService/getSongsByIdInstantmix.html",
    "title": "getSongsByIdInstantmix",
    "keywords": "getSongsByIdInstantmix Creates an instant playlist based on a given song Requires authentication as user getSongsByIdInstantmix Request get /Songs/{Id}/InstantMix Parameters Name In Type Default Notes *Id path Item Id IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/ItemLookupService.html": {
    "href": "reference/RestAPI/ItemLookupService.html",
    "title": "ItemLookupService",
    "keywords": "ItemLookupService API Documentation Wiki getItemsByIdExternalidinfos get /Items/{Id}/ExternalIdInfos Gets external id infos for an item getItemsRemotesearchImage get /Items/RemoteSearch/Image Gets a remote image postItemsRemotesearchApplyById post /Items/RemoteSearch/Apply/{Id} Applies search criteria to an item and refreshes metadata postItemsRemotesearchBook post /Items/RemoteSearch/Book postItemsRemotesearchBoxset post /Items/RemoteSearch/BoxSet postItemsRemotesearchGame post /Items/RemoteSearch/Game postItemsRemotesearchMovie post /Items/RemoteSearch/Movie postItemsRemotesearchMusicalbum post /Items/RemoteSearch/MusicAlbum postItemsRemotesearchMusicartist post /Items/RemoteSearch/MusicArtist postItemsRemotesearchMusicvideo post /Items/RemoteSearch/MusicVideo postItemsRemotesearchPerson post /Items/RemoteSearch/Person postItemsRemotesearchSeries post /Items/RemoteSearch/Series postItemsRemotesearchTrailer post /Items/RemoteSearch/Trailer"
  },
  "reference/RestAPI/ItemLookupService/getItemsByIdExternalidinfos.html": {
    "href": "reference/RestAPI/ItemLookupService/getItemsByIdExternalidinfos.html",
    "title": "getItemsByIdExternalidinfos",
    "keywords": "getItemsByIdExternalidinfos Gets external id infos for an item Requires authentication as administrator getItemsByIdExternalidinfos Request get /Items/{Id}/ExternalIdInfos Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 ExternalIdInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ExternalIdInfo see also MediaBrowser.Model.Providers.ExternalIdInfo Name Type Notes Name string Key string UrlFormatString string IsSupportedAsIdentifier boolean"
  },
  "reference/RestAPI/ItemLookupService/getItemsRemotesearchImage.html": {
    "href": "reference/RestAPI/ItemLookupService/getItemsRemotesearchImage.html",
    "title": "getItemsRemotesearchImage",
    "keywords": "getItemsRemotesearchImage Gets a remote image Requires authentication as administrator getItemsRemotesearchImage Request get /Items/RemoteSearch/Image Parameters Name In Type Default Notes *ImageUrl query The image url *ProviderName query Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ItemLookupService/postItemsRemotesearchApplyById.html": {
    "href": "reference/RestAPI/ItemLookupService/postItemsRemotesearchApplyById.html",
    "title": "postItemsRemotesearchApplyById",
    "keywords": "postItemsRemotesearchApplyById Applies search criteria to an item and refreshes metadata Requires authentication as administrator postItemsRemotesearchApplyById Request post /Items/RemoteSearch/Apply/{Id} Parameters Name In Type Default Notes *Id path The item id ReplaceAllImages query Whether or not to replace all images *body body RemoteSearchResult RemoteSearchResult: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions RemoteSearchResult see also MediaBrowser.Model.Providers.RemoteSearchResult Name Type Notes Name string ProviderIds ProviderIdDictionary ProductionYear integer (int32) IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) ImageUrl string SearchProviderName string GameSystem string Overview string DisambiguationComment string AlbumArtist Artists array ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary"
  },
  "reference/RestAPI/ItemLookupService/postItemsRemotesearchBook.html": {
    "href": "reference/RestAPI/ItemLookupService/postItemsRemotesearchBook.html",
    "title": "postItemsRemotesearchBook",
    "keywords": "postItemsRemotesearchBook Requires authentication as user postItemsRemotesearchBook Request post /Items/RemoteSearch/Book Parameters Name In Type Default Notes *body body BookInfo RemoteSearchQuery`1: Responses Status Code Type Description Samples 200 RemoteSearchResult [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BookInfo Providers.RemoteSearchQuery_Providers.BookInfo Name Type Notes SearchInfo BookInfo[] ItemId integer (int64) SearchProviderName string IncludeDisabledProviders boolean BookInfo see also MediaBrowser.Controller.Providers.BookInfo Name Type Notes SeriesName string Name string MetadataLanguage string MetadataCountryCode string ProviderIds ProviderIdDictionary Year integer (int32) IndexNumber integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) IsAutomated boolean EnableAdultMetadata boolean ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary RemoteSearchResult see also MediaBrowser.Model.Providers.RemoteSearchResult Name Type Notes Name string ProviderIds ProviderIdDictionary ProductionYear integer (int32) IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) ImageUrl string SearchProviderName string GameSystem string Overview string DisambiguationComment string AlbumArtist Artists array"
  },
  "reference/RestAPI/ItemLookupService/postItemsRemotesearchBoxset.html": {
    "href": "reference/RestAPI/ItemLookupService/postItemsRemotesearchBoxset.html",
    "title": "postItemsRemotesearchBoxset",
    "keywords": "postItemsRemotesearchBoxset Requires authentication as user postItemsRemotesearchBoxset Request post /Items/RemoteSearch/BoxSet Parameters Name In Type Default Notes *body body ItemLookupInfo RemoteSearchQuery`1: Responses Status Code Type Description Samples 200 RemoteSearchResult [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ItemLookupInfo Providers.RemoteSearchQuery_Providers.ItemLookupInfo Name Type Notes SearchInfo ItemLookupInfo[] ItemId integer (int64) SearchProviderName string IncludeDisabledProviders boolean ItemLookupInfo see also MediaBrowser.Controller.Providers.ItemLookupInfo Name Type Notes Name string MetadataLanguage string MetadataCountryCode string ProviderIds ProviderIdDictionary Year integer (int32) IndexNumber integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) IsAutomated boolean EnableAdultMetadata boolean ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary RemoteSearchResult see also MediaBrowser.Model.Providers.RemoteSearchResult Name Type Notes Name string ProviderIds ProviderIdDictionary ProductionYear integer (int32) IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) ImageUrl string SearchProviderName string GameSystem string Overview string DisambiguationComment string AlbumArtist Artists array"
  },
  "reference/RestAPI/ItemLookupService/postItemsRemotesearchGame.html": {
    "href": "reference/RestAPI/ItemLookupService/postItemsRemotesearchGame.html",
    "title": "postItemsRemotesearchGame",
    "keywords": "postItemsRemotesearchGame Requires authentication as user postItemsRemotesearchGame Request post /Items/RemoteSearch/Game Parameters Name In Type Default Notes *body body GameInfo RemoteSearchQuery`1: Responses Status Code Type Description Samples 200 RemoteSearchResult [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions GameInfo Providers.RemoteSearchQuery_Providers.GameInfo Name Type Notes SearchInfo GameInfo[] ItemId integer (int64) SearchProviderName string IncludeDisabledProviders boolean GameInfo see also MediaBrowser.Controller.Providers.GameInfo Name Type Notes Name string MetadataLanguage string MetadataCountryCode string ProviderIds ProviderIdDictionary Year integer (int32) IndexNumber integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) IsAutomated boolean EnableAdultMetadata boolean ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary RemoteSearchResult see also MediaBrowser.Model.Providers.RemoteSearchResult Name Type Notes Name string ProviderIds ProviderIdDictionary ProductionYear integer (int32) IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) ImageUrl string SearchProviderName string GameSystem string Overview string DisambiguationComment string AlbumArtist Artists array"
  },
  "reference/RestAPI/ItemLookupService/postItemsRemotesearchMovie.html": {
    "href": "reference/RestAPI/ItemLookupService/postItemsRemotesearchMovie.html",
    "title": "postItemsRemotesearchMovie",
    "keywords": "postItemsRemotesearchMovie Requires authentication as user postItemsRemotesearchMovie Request post /Items/RemoteSearch/Movie Parameters Name In Type Default Notes *body body MovieInfo RemoteSearchQuery`1: Responses Status Code Type Description Samples 200 RemoteSearchResult [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions MovieInfo Providers.RemoteSearchQuery_Providers.MovieInfo Name Type Notes SearchInfo MovieInfo[] ItemId integer (int64) SearchProviderName string IncludeDisabledProviders boolean MovieInfo see also MediaBrowser.Controller.Providers.MovieInfo Name Type Notes Name string MetadataLanguage string MetadataCountryCode string ProviderIds ProviderIdDictionary Year integer (int32) IndexNumber integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) IsAutomated boolean EnableAdultMetadata boolean ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary RemoteSearchResult see also MediaBrowser.Model.Providers.RemoteSearchResult Name Type Notes Name string ProviderIds ProviderIdDictionary ProductionYear integer (int32) IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) ImageUrl string SearchProviderName string GameSystem string Overview string DisambiguationComment string AlbumArtist Artists array"
  },
  "reference/RestAPI/ItemLookupService/postItemsRemotesearchMusicalbum.html": {
    "href": "reference/RestAPI/ItemLookupService/postItemsRemotesearchMusicalbum.html",
    "title": "postItemsRemotesearchMusicalbum",
    "keywords": "postItemsRemotesearchMusicalbum Requires authentication as user postItemsRemotesearchMusicalbum Request post /Items/RemoteSearch/MusicAlbum Parameters Name In Type Default Notes *body body AlbumInfo RemoteSearchQuery`1: Responses Status Code Type Description Samples 200 RemoteSearchResult [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions AlbumInfo Providers.RemoteSearchQuery_Providers.AlbumInfo Name Type Notes SearchInfo AlbumInfo[] ItemId integer (int64) SearchProviderName string IncludeDisabledProviders boolean AlbumInfo see also MediaBrowser.Controller.Providers.AlbumInfo Name Type Notes AlbumArtists array SongInfos SongInfo[] Name string MetadataLanguage string MetadataCountryCode string ProviderIds ProviderIdDictionary Year integer (int32) IndexNumber integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) IsAutomated boolean EnableAdultMetadata boolean SongInfo see also MediaBrowser.Controller.Providers.SongInfo Name Type Notes AlbumArtists array Album string Artists array Composers array Name string MetadataLanguage string MetadataCountryCode string ProviderIds ProviderIdDictionary Year integer (int32) IndexNumber integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) IsAutomated boolean EnableAdultMetadata boolean ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary RemoteSearchResult see also MediaBrowser.Model.Providers.RemoteSearchResult Name Type Notes Name string ProviderIds ProviderIdDictionary ProductionYear integer (int32) IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) ImageUrl string SearchProviderName string GameSystem string Overview string DisambiguationComment string AlbumArtist Artists array"
  },
  "reference/RestAPI/ItemLookupService/postItemsRemotesearchMusicartist.html": {
    "href": "reference/RestAPI/ItemLookupService/postItemsRemotesearchMusicartist.html",
    "title": "postItemsRemotesearchMusicartist",
    "keywords": "postItemsRemotesearchMusicartist Requires authentication as user postItemsRemotesearchMusicartist Request post /Items/RemoteSearch/MusicArtist Parameters Name In Type Default Notes *body body ArtistInfo RemoteSearchQuery`1: Responses Status Code Type Description Samples 200 RemoteSearchResult [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ArtistInfo Providers.RemoteSearchQuery_Providers.ArtistInfo Name Type Notes SearchInfo ArtistInfo[] ItemId integer (int64) SearchProviderName string IncludeDisabledProviders boolean ArtistInfo see also MediaBrowser.Controller.Providers.ArtistInfo Name Type Notes Name string MetadataLanguage string MetadataCountryCode string ProviderIds ProviderIdDictionary Year integer (int32) IndexNumber integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) IsAutomated boolean EnableAdultMetadata boolean ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary RemoteSearchResult see also MediaBrowser.Model.Providers.RemoteSearchResult Name Type Notes Name string ProviderIds ProviderIdDictionary ProductionYear integer (int32) IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) ImageUrl string SearchProviderName string GameSystem string Overview string DisambiguationComment string AlbumArtist Artists array"
  },
  "reference/RestAPI/ItemLookupService/postItemsRemotesearchMusicvideo.html": {
    "href": "reference/RestAPI/ItemLookupService/postItemsRemotesearchMusicvideo.html",
    "title": "postItemsRemotesearchMusicvideo",
    "keywords": "postItemsRemotesearchMusicvideo Requires authentication as user postItemsRemotesearchMusicvideo Request post /Items/RemoteSearch/MusicVideo Parameters Name In Type Default Notes *body body MusicVideoInfo RemoteSearchQuery`1: Responses Status Code Type Description Samples 200 RemoteSearchResult [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions MusicVideoInfo Providers.RemoteSearchQuery_Providers.MusicVideoInfo Name Type Notes SearchInfo MusicVideoInfo[] ItemId integer (int64) SearchProviderName string IncludeDisabledProviders boolean MusicVideoInfo see also MediaBrowser.Controller.Providers.MusicVideoInfo Name Type Notes Artists array Name string MetadataLanguage string MetadataCountryCode string ProviderIds ProviderIdDictionary Year integer (int32) IndexNumber integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) IsAutomated boolean EnableAdultMetadata boolean ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary RemoteSearchResult see also MediaBrowser.Model.Providers.RemoteSearchResult Name Type Notes Name string ProviderIds ProviderIdDictionary ProductionYear integer (int32) IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) ImageUrl string SearchProviderName string GameSystem string Overview string DisambiguationComment string AlbumArtist Artists array"
  },
  "reference/RestAPI/ItemLookupService/postItemsRemotesearchPerson.html": {
    "href": "reference/RestAPI/ItemLookupService/postItemsRemotesearchPerson.html",
    "title": "postItemsRemotesearchPerson",
    "keywords": "postItemsRemotesearchPerson Requires authentication as administrator postItemsRemotesearchPerson Request post /Items/RemoteSearch/Person Parameters Name In Type Default Notes *body body PersonLookupInfo RemoteSearchQuery`1: Responses Status Code Type Description Samples 200 RemoteSearchResult [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PersonLookupInfo Providers.RemoteSearchQuery_Providers.PersonLookupInfo Name Type Notes SearchInfo PersonLookupInfo[] ItemId integer (int64) SearchProviderName string IncludeDisabledProviders boolean PersonLookupInfo see also MediaBrowser.Controller.Providers.PersonLookupInfo Name Type Notes Name string MetadataLanguage string MetadataCountryCode string ProviderIds ProviderIdDictionary Year integer (int32) IndexNumber integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) IsAutomated boolean EnableAdultMetadata boolean ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary RemoteSearchResult see also MediaBrowser.Model.Providers.RemoteSearchResult Name Type Notes Name string ProviderIds ProviderIdDictionary ProductionYear integer (int32) IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) ImageUrl string SearchProviderName string GameSystem string Overview string DisambiguationComment string AlbumArtist Artists array"
  },
  "reference/RestAPI/ItemLookupService/postItemsRemotesearchSeries.html": {
    "href": "reference/RestAPI/ItemLookupService/postItemsRemotesearchSeries.html",
    "title": "postItemsRemotesearchSeries",
    "keywords": "postItemsRemotesearchSeries Requires authentication as user postItemsRemotesearchSeries Request post /Items/RemoteSearch/Series Parameters Name In Type Default Notes *body body SeriesInfo RemoteSearchQuery`1: Responses Status Code Type Description Samples 200 RemoteSearchResult [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SeriesInfo Providers.RemoteSearchQuery_Providers.SeriesInfo Name Type Notes SearchInfo SeriesInfo[] ItemId integer (int64) SearchProviderName string IncludeDisabledProviders boolean SeriesInfo see also MediaBrowser.Controller.Providers.SeriesInfo Name Type Notes EpisodeAirDate string (date-time) DisplayOrder SeriesDisplayOrder Name string MetadataLanguage string MetadataCountryCode string ProviderIds ProviderIdDictionary Year integer (int32) IndexNumber integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) IsAutomated boolean EnableAdultMetadata boolean SeriesDisplayOrder see also MediaBrowser.Model.Entities.SeriesDisplayOrder Enum Values Aired Dvd Absolute ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary RemoteSearchResult see also MediaBrowser.Model.Providers.RemoteSearchResult Name Type Notes Name string ProviderIds ProviderIdDictionary ProductionYear integer (int32) IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) ImageUrl string SearchProviderName string GameSystem string Overview string DisambiguationComment string AlbumArtist Artists array"
  },
  "reference/RestAPI/ItemLookupService/postItemsRemotesearchTrailer.html": {
    "href": "reference/RestAPI/ItemLookupService/postItemsRemotesearchTrailer.html",
    "title": "postItemsRemotesearchTrailer",
    "keywords": "postItemsRemotesearchTrailer Requires authentication as user postItemsRemotesearchTrailer Request post /Items/RemoteSearch/Trailer Parameters Name In Type Default Notes *body body TrailerInfo RemoteSearchQuery`1: Responses Status Code Type Description Samples 200 RemoteSearchResult [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TrailerInfo Providers.RemoteSearchQuery_Providers.TrailerInfo Name Type Notes SearchInfo TrailerInfo[] ItemId integer (int64) SearchProviderName string IncludeDisabledProviders boolean TrailerInfo see also MediaBrowser.Controller.Providers.TrailerInfo Name Type Notes Name string MetadataLanguage string MetadataCountryCode string ProviderIds ProviderIdDictionary Year integer (int32) IndexNumber integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) IsAutomated boolean EnableAdultMetadata boolean ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary RemoteSearchResult see also MediaBrowser.Model.Providers.RemoteSearchResult Name Type Notes Name string ProviderIds ProviderIdDictionary ProductionYear integer (int32) IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) PremiereDate string (date-time) ImageUrl string SearchProviderName string GameSystem string Overview string DisambiguationComment string AlbumArtist Artists array"
  },
  "reference/RestAPI/ItemRefreshService.html": {
    "href": "reference/RestAPI/ItemRefreshService.html",
    "title": "ItemRefreshService",
    "keywords": "ItemRefreshService API Documentation Wiki postItemsByIdRefresh post /Items/{Id}/Refresh Refreshes metadata for an item"
  },
  "reference/RestAPI/ItemRefreshService/postItemsByIdRefresh.html": {
    "href": "reference/RestAPI/ItemRefreshService/postItemsByIdRefresh.html",
    "title": "postItemsByIdRefresh",
    "keywords": "postItemsByIdRefresh Refreshes metadata for an item Requires authentication as user postItemsByIdRefresh Request post /Items/{Id}/Refresh Parameters Name In Type Default Notes Recursive query Indicates if the refresh should occur recursively. *Id path Item Id MetadataRefreshMode query Specifies the metadata refresh mode ImageRefreshMode query Specifies the image refresh mode ReplaceAllMetadata query Determines if metadata should be replaced. Only applicable if mode is FullRefresh ReplaceAllImages query Determines if images should be replaced. Only applicable if mode is FullRefresh Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ItemsService.html": {
    "href": "reference/RestAPI/ItemsService.html",
    "title": "ItemsService",
    "keywords": "ItemsService API Documentation: Item Information getItems get /Items Gets items based on a query. getUsersByUseridItems get /Users/{UserId}/Items Gets items based on a query. getUsersByUseridItemsResume get /Users/{UserId}/Items/Resume Gets items based on a query."
  },
  "reference/RestAPI/ItemsService/getItems.html": {
    "href": "reference/RestAPI/ItemsService/getItems.html",
    "title": "getItems",
    "keywords": "getItems Gets items based on a query. Requires authentication as user getItems Request get /Items Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/ItemsService/getUsersByUseridItems.html": {
    "href": "reference/RestAPI/ItemsService/getUsersByUseridItems.html",
    "title": "getUsersByUseridItems",
    "keywords": "getUsersByUseridItems Gets items based on a query. Requires authentication as user getUsersByUseridItems Request get /Users/{UserId}/Items Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. *UserId path User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/ItemsService/getUsersByUseridItemsResume.html": {
    "href": "reference/RestAPI/ItemsService/getUsersByUseridItemsResume.html",
    "title": "getUsersByUseridItemsResume",
    "keywords": "getUsersByUseridItemsResume Gets items based on a query. Requires authentication as user getUsersByUseridItemsResume Request get /Users/{UserId}/Items/Resume Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. *UserId path User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/ItemUpdateService.html": {
    "href": "reference/RestAPI/ItemUpdateService.html",
    "title": "ItemUpdateService",
    "keywords": "ItemUpdateService API Documentation Wiki getItemsByItemidMetadataeditor get /Items/{ItemId}/MetadataEditor Gets metadata editor info for an item postItemsByItemid post /Items/{ItemId} Updates an item"
  },
  "reference/RestAPI/ItemUpdateService/getItemsByItemidMetadataeditor.html": {
    "href": "reference/RestAPI/ItemUpdateService/getItemsByItemidMetadataeditor.html",
    "title": "getItemsByItemidMetadataeditor",
    "keywords": "getItemsByItemidMetadataeditor Gets metadata editor info for an item Requires authentication as administrator getItemsByItemidMetadataeditor Request get /Items/{ItemId}/MetadataEditor Parameters Name In Type Default Notes *ItemId path The id of the item Responses Status Code Type Description Samples 200 MetadataEditorInfo Operation successful. Returning a MetadataEditorInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions MetadataEditorInfo see also MediaBrowser.Model.Dto.MetadataEditorInfo Name Type Notes ParentalRatingOptions ParentalRating[] Countries CountryInfo[] Cultures CultureDto[] ExternalIdInfos ExternalIdInfo[] ParentalRating see also MediaBrowser.Model.Entities.ParentalRating Name Type Notes Name string Value integer (int32) CountryInfo see also MediaBrowser.Model.Globalization.CountryInfo Name Type Notes Name string DisplayName string EnglishName string TwoLetterISORegionName string ThreeLetterISORegionName string CultureDto see also MediaBrowser.Model.Globalization.CultureDto Name Type Notes Name string DisplayName string TwoLetterISOLanguageName string ThreeLetterISOLanguageName string ThreeLetterISOLanguageNames array TwoLetterISOLanguageNames array ExternalIdInfo see also MediaBrowser.Model.Providers.ExternalIdInfo Name Type Notes Name string Key string UrlFormatString string IsSupportedAsIdentifier boolean"
  },
  "reference/RestAPI/ItemUpdateService/postItemsByItemid.html": {
    "href": "reference/RestAPI/ItemUpdateService/postItemsByItemid.html",
    "title": "postItemsByItemid",
    "keywords": "postItemsByItemid Updates an item Requires authentication as administrator postItemsByItemid Request post /Items/{ItemId} Parameters Name In Type Default Notes *ItemId path The id of the item *body body BaseItemDto BaseItemDto: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService.html": {
    "href": "reference/RestAPI/LibraryService.html",
    "title": "LibraryService",
    "keywords": "LibraryService API Documentation: Browsing the Library deleteItems delete /Items Deletes an item from the library and file system deleteItemsById delete /Items/{Id} Deletes an item from the library and file system getAlbumsByIdSimilar get /Albums/{Id}/Similar Finds albums similar to a given album. getArtistsByIdSimilar get /Artists/{Id}/Similar Finds albums similar to a given album. getGamesByIdSimilar get /Games/{Id}/Similar Finds games similar to a given game. getItemsByIdAncestors get /Items/{Id}/Ancestors Gets all parents of an item getItemsByIdCriticreviews get /Items/{Id}/CriticReviews Gets critic reviews for an item getItemsByIdDeleteinfo get /Items/{Id}/DeleteInfo Gets delete info for an item getItemsByIdDownload get /Items/{Id}/Download Downloads item media getItemsByIdFile get /Items/{Id}/File Gets the original file of an item getItemsByIdSimilar get /Items/{Id}/Similar Gets similar items getItemsByIdThememedia get /Items/{Id}/ThemeMedia Gets theme videos and songs for an item getItemsByIdThemesongs get /Items/{Id}/ThemeSongs Gets theme songs for an item getItemsByIdThemevideos get /Items/{Id}/ThemeVideos Gets theme videos for an item getItemsCounts get /Items/Counts getItemsIntros get /Items/Intros Gets info to debug intros getLibrariesAvailableoptions get /Libraries/AvailableOptions getLibraryMediafolders get /Library/MediaFolders Gets all user media folders. getLibraryPhysicalpaths get /Library/PhysicalPaths Gets a list of physical paths from virtual folders getLibrarySelectablemediafolders get /Library/SelectableMediaFolders Gets all user media folders. getMoviesByIdSimilar get /Movies/{Id}/Similar Finds movies and trailers similar to a given movie. getShowsByIdSimilar get /Shows/{Id}/Similar Finds tv shows similar to a given one. getTrailersByIdSimilar get /Trailers/{Id}/Similar Finds movies and trailers similar to a given trailer. postItemsByIdDelete post /Items/{Id}/Delete Deletes an item from the library and file system postItemsDelete post /Items/Delete Deletes an item from the library and file system postLibraryMediaUpdated post /Library/Media/Updated Reports that new movies have been added by an external source postLibraryMoviesAdded post /Library/Movies/Added Deprecated. Use /Library/Media/Updated postLibraryMoviesUpdated post /Library/Movies/Updated Deprecated. Use /Library/Media/Updated postLibraryRefresh post /Library/Refresh Starts a library scan postLibrarySeriesAdded post /Library/Series/Added Deprecated. Use /Library/Media/Updated postLibrarySeriesUpdated post /Library/Series/Updated Deprecated. Use /Library/Media/Updated"
  },
  "reference/RestAPI/LibraryService/deleteItems.html": {
    "href": "reference/RestAPI/LibraryService/deleteItems.html",
    "title": "deleteItems",
    "keywords": "deleteItems Deletes an item from the library and file system Requires authentication as user deleteItems Request delete /Items Parameters Name In Type Default Notes *Ids query Ids Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryService/deleteItemsById.html": {
    "href": "reference/RestAPI/LibraryService/deleteItemsById.html",
    "title": "deleteItemsById",
    "keywords": "deleteItemsById Deletes an item from the library and file system Requires authentication as user deleteItemsById Request delete /Items/{Id} Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryService/getAlbumsByIdSimilar.html": {
    "href": "reference/RestAPI/LibraryService/getAlbumsByIdSimilar.html",
    "title": "getAlbumsByIdSimilar",
    "keywords": "getAlbumsByIdSimilar Finds albums similar to a given album. Requires authentication as user getAlbumsByIdSimilar Request get /Albums/{Id}/Similar Parameters Name In Type Default Notes *Id path Item Id IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getArtistsByIdSimilar.html": {
    "href": "reference/RestAPI/LibraryService/getArtistsByIdSimilar.html",
    "title": "getArtistsByIdSimilar",
    "keywords": "getArtistsByIdSimilar Finds albums similar to a given album. Requires authentication as user getArtistsByIdSimilar Request get /Artists/{Id}/Similar Parameters Name In Type Default Notes *Id path Item Id IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getGamesByIdSimilar.html": {
    "href": "reference/RestAPI/LibraryService/getGamesByIdSimilar.html",
    "title": "getGamesByIdSimilar",
    "keywords": "getGamesByIdSimilar Finds games similar to a given game. Requires authentication as user getGamesByIdSimilar Request get /Games/{Id}/Similar Parameters Name In Type Default Notes *Id path Item Id IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getItemsByIdAncestors.html": {
    "href": "reference/RestAPI/LibraryService/getItemsByIdAncestors.html",
    "title": "getItemsByIdAncestors",
    "keywords": "getItemsByIdAncestors Gets all parents of an item Requires authentication as user getItemsByIdAncestors Request get /Items/{Id}/Ancestors Parameters Name In Type Default Notes UserId query Optional. Filter by user id, and attach user data *Id path Item Id Responses Status Code Type Description Samples 200 BaseItemDto [] Operation successful. Returning a BaseItemDto[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getItemsByIdCriticreviews.html": {
    "href": "reference/RestAPI/LibraryService/getItemsByIdCriticreviews.html",
    "title": "getItemsByIdCriticreviews",
    "keywords": "getItemsByIdCriticreviews Gets critic reviews for an item Requires authentication as user getItemsByIdCriticreviews Request get /Items/{Id}/CriticReviews Parameters Name In Type Default Notes *Id path Item Id StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getItemsByIdDeleteinfo.html": {
    "href": "reference/RestAPI/LibraryService/getItemsByIdDeleteinfo.html",
    "title": "getItemsByIdDeleteinfo",
    "keywords": "getItemsByIdDeleteinfo Gets delete info for an item Requires authentication as user getItemsByIdDeleteinfo Request get /Items/{Id}/DeleteInfo Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 DeleteInfo Operation successful. Returning a DeleteInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions DeleteInfo Emby.Api.Library.DeleteInfo Name Type Notes Paths array"
  },
  "reference/RestAPI/LibraryService/getItemsByIdDownload.html": {
    "href": "reference/RestAPI/LibraryService/getItemsByIdDownload.html",
    "title": "getItemsByIdDownload",
    "keywords": "getItemsByIdDownload Downloads item media Requires authentication as user getItemsByIdDownload Request get /Items/{Id}/Download Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryService/getItemsByIdFile.html": {
    "href": "reference/RestAPI/LibraryService/getItemsByIdFile.html",
    "title": "getItemsByIdFile",
    "keywords": "getItemsByIdFile Gets the original file of an item Requires authentication as user getItemsByIdFile Request get /Items/{Id}/File Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryService/getItemsByIdSimilar.html": {
    "href": "reference/RestAPI/LibraryService/getItemsByIdSimilar.html",
    "title": "getItemsByIdSimilar",
    "keywords": "getItemsByIdSimilar Gets similar items Requires authentication as user getItemsByIdSimilar Request get /Items/{Id}/Similar Parameters Name In Type Default Notes *Id path Item Id IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getItemsByIdThememedia.html": {
    "href": "reference/RestAPI/LibraryService/getItemsByIdThememedia.html",
    "title": "getItemsByIdThememedia",
    "keywords": "getItemsByIdThememedia Gets theme videos and songs for an item Requires authentication as user getItemsByIdThememedia Request get /Items/{Id}/ThemeMedia Parameters Name In Type Default Notes UserId query Optional. Filter by user id, and attach user data *Id path Item Id InheritFromParent query Determines whether or not parent items should be searched for theme media. Responses Status Code Type Description Samples 200 AllThemeMediaResult Operation successful. Returning a AllThemeMediaResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions AllThemeMediaResult see also MediaBrowser.Model.Querying.AllThemeMediaResult Name Type Notes ThemeVideosResult ThemeMediaResult[] ThemeSongsResult ThemeMediaResult[] SoundtrackSongsResult ThemeMediaResult[] ThemeMediaResult see also MediaBrowser.Model.Querying.ThemeMediaResult Name Type Notes OwnerId integer (int64) Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getItemsByIdThemesongs.html": {
    "href": "reference/RestAPI/LibraryService/getItemsByIdThemesongs.html",
    "title": "getItemsByIdThemesongs",
    "keywords": "getItemsByIdThemesongs Gets theme songs for an item Requires authentication as user getItemsByIdThemesongs Request get /Items/{Id}/ThemeSongs Parameters Name In Type Default Notes UserId query Optional. Filter by user id, and attach user data *Id path Item Id InheritFromParent query Determines whether or not parent items should be searched for theme media. Responses Status Code Type Description Samples 200 ThemeMediaResult Operation successful. Returning a ThemeMediaResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ThemeMediaResult see also MediaBrowser.Model.Querying.ThemeMediaResult Name Type Notes OwnerId integer (int64) Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getItemsByIdThemevideos.html": {
    "href": "reference/RestAPI/LibraryService/getItemsByIdThemevideos.html",
    "title": "getItemsByIdThemevideos",
    "keywords": "getItemsByIdThemevideos Gets theme videos for an item Requires authentication as user getItemsByIdThemevideos Request get /Items/{Id}/ThemeVideos Parameters Name In Type Default Notes UserId query Optional. Filter by user id, and attach user data *Id path Item Id InheritFromParent query Determines whether or not parent items should be searched for theme media. Responses Status Code Type Description Samples 200 ThemeMediaResult Operation successful. Returning a ThemeMediaResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ThemeMediaResult see also MediaBrowser.Model.Querying.ThemeMediaResult Name Type Notes OwnerId integer (int64) Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getItemsCounts.html": {
    "href": "reference/RestAPI/LibraryService/getItemsCounts.html",
    "title": "getItemsCounts",
    "keywords": "getItemsCounts Requires authentication as user getItemsCounts Request get /Items/Counts Parameters Name In Type Default Notes UserId query Optional. Get counts from a specific user's library. IsFavorite query Optional. Get counts of favorite items Responses Status Code Type Description Samples 200 ItemCounts Operation successful. Returning a ItemCounts object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ItemCounts see also MediaBrowser.Model.Dto.ItemCounts Name Type Notes MovieCount integer (int32) SeriesCount integer (int32) EpisodeCount integer (int32) GameCount integer (int32) ArtistCount integer (int32) ProgramCount integer (int32) GameSystemCount integer (int32) TrailerCount integer (int32) SongCount integer (int32) AlbumCount integer (int32) MusicVideoCount integer (int32) BoxSetCount integer (int32) BookCount integer (int32) ItemCount integer (int32)"
  },
  "reference/RestAPI/LibraryService/getItemsIntros.html": {
    "href": "reference/RestAPI/LibraryService/getItemsIntros.html",
    "title": "getItemsIntros",
    "keywords": "getItemsIntros Gets info to debug intros Requires authentication as administrator getItemsIntros Request get /Items/Intros Responses Status Code Type Description Samples 200 IntroDebugInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions IntroDebugInfo see also MediaBrowser.Controller.Persistence.IntroDebugInfo Name Type Notes Id integer (int64) Path string Start integer (int64) End integer (int64)"
  },
  "reference/RestAPI/LibraryService/getLibrariesAvailableoptions.html": {
    "href": "reference/RestAPI/LibraryService/getLibrariesAvailableoptions.html",
    "title": "getLibrariesAvailableoptions",
    "keywords": "getLibrariesAvailableoptions Requires authentication as user getLibrariesAvailableoptions Request get /Libraries/AvailableOptions Responses Status Code Type Description Samples 200 LibraryOptionsResult Operation successful. Returning a LibraryOptionsResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions LibraryOptionsResult Emby.Api.Library.LibraryOptionsResult Name Type Notes MetadataSavers LibraryOptionInfo[] MetadataReaders LibraryOptionInfo[] SubtitleFetchers LibraryOptionInfo[] LyricsFetchers LibraryOptionInfo[] TypeOptions LibraryTypeOptions[] LibraryOptionInfo Emby.Api.Library.LibraryOptionInfo Name Type Notes Name string DefaultEnabled boolean Features MetadataFeatures[] MetadataFeatures see also MediaBrowser.Model.Configuration.MetadataFeatures LibraryTypeOptions Emby.Api.Library.LibraryTypeOptions Name Type Notes Type string MetadataFetchers LibraryOptionInfo[] ImageFetchers LibraryOptionInfo[] SupportedImageTypes ImageType[] DefaultImageOptions ImageOption[] ImageType see also MediaBrowser.Model.Entities.ImageType ImageOption see also MediaBrowser.Model.Configuration.ImageOption Name Type Notes Type ImageType Limit integer (int32) MinWidth integer (int32)"
  },
  "reference/RestAPI/LibraryService/getLibraryMediafolders.html": {
    "href": "reference/RestAPI/LibraryService/getLibraryMediafolders.html",
    "title": "getLibraryMediafolders",
    "keywords": "getLibraryMediafolders Gets all user media folders. Requires authentication as user getLibraryMediafolders Request get /Library/MediaFolders Parameters Name In Type Default Notes IsHidden query Optional. Filter by folders that are marked hidden, or not. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getLibraryPhysicalpaths.html": {
    "href": "reference/RestAPI/LibraryService/getLibraryPhysicalpaths.html",
    "title": "getLibraryPhysicalpaths",
    "keywords": "getLibraryPhysicalpaths Gets a list of physical paths from virtual folders Requires authentication as administrator getLibraryPhysicalpaths Request get /Library/PhysicalPaths Responses Status Code Type Description Samples 200 array Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryService/getLibrarySelectablemediafolders.html": {
    "href": "reference/RestAPI/LibraryService/getLibrarySelectablemediafolders.html",
    "title": "getLibrarySelectablemediafolders",
    "keywords": "getLibrarySelectablemediafolders Gets all user media folders. Requires authentication as user getLibrarySelectablemediafolders Request get /Library/SelectableMediaFolders Responses Status Code Type Description Samples 200 MediaFolder [] Operation successful. Returning a MediaFolder[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions MediaFolder Emby.Api.Library.MediaFolder Name Type Notes Name string Id string Guid string SubFolders SubFolder[] SubFolder Emby.Api.Library.SubFolder Name Type Notes Name string Id string Path string"
  },
  "reference/RestAPI/LibraryService/getMoviesByIdSimilar.html": {
    "href": "reference/RestAPI/LibraryService/getMoviesByIdSimilar.html",
    "title": "getMoviesByIdSimilar",
    "keywords": "getMoviesByIdSimilar Finds movies and trailers similar to a given movie. Requires authentication as user getMoviesByIdSimilar Request get /Movies/{Id}/Similar Parameters Name In Type Default Notes *Id path Item Id IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getShowsByIdSimilar.html": {
    "href": "reference/RestAPI/LibraryService/getShowsByIdSimilar.html",
    "title": "getShowsByIdSimilar",
    "keywords": "getShowsByIdSimilar Finds tv shows similar to a given one. Requires authentication as user getShowsByIdSimilar Request get /Shows/{Id}/Similar Parameters Name In Type Default Notes *Id path Item Id IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/getTrailersByIdSimilar.html": {
    "href": "reference/RestAPI/LibraryService/getTrailersByIdSimilar.html",
    "title": "getTrailersByIdSimilar",
    "keywords": "getTrailersByIdSimilar Finds movies and trailers similar to a given trailer. Requires authentication as user getTrailersByIdSimilar Request get /Trailers/{Id}/Similar Parameters Name In Type Default Notes *Id path Item Id IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. UserId query Optional. Filter by user id, and attach user data Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LibraryService/postItemsByIdDelete.html": {
    "href": "reference/RestAPI/LibraryService/postItemsByIdDelete.html",
    "title": "postItemsByIdDelete",
    "keywords": "postItemsByIdDelete Deletes an item from the library and file system Requires authentication as user postItemsByIdDelete Request post /Items/{Id}/Delete Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryService/postItemsDelete.html": {
    "href": "reference/RestAPI/LibraryService/postItemsDelete.html",
    "title": "postItemsDelete",
    "keywords": "postItemsDelete Deletes an item from the library and file system Requires authentication as user postItemsDelete Request post /Items/Delete Parameters Name In Type Default Notes *Ids query Ids Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryService/postLibraryMediaUpdated.html": {
    "href": "reference/RestAPI/LibraryService/postLibraryMediaUpdated.html",
    "title": "postLibraryMediaUpdated",
    "keywords": "postLibraryMediaUpdated Reports that new movies have been added by an external source Requires authentication as user postLibraryMediaUpdated Request post /Library/Media/Updated Parameters Name In Type Default Notes *body body PostUpdatedMedia PostUpdatedMedia Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PostUpdatedMedia Emby.Api.Library.PostUpdatedMedia Name Type Notes Updates MediaUpdateInfo[] MediaUpdateInfo Emby.Api.Library.MediaUpdateInfo Name Type Notes Path string UpdateType string"
  },
  "reference/RestAPI/LibraryService/postLibraryMoviesAdded.html": {
    "href": "reference/RestAPI/LibraryService/postLibraryMoviesAdded.html",
    "title": "postLibraryMoviesAdded",
    "keywords": "postLibraryMoviesAdded Deprecated. Use /Library/Media/Updated Requires authentication as user postLibraryMoviesAdded Request post /Library/Movies/Added Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryService/postLibraryMoviesUpdated.html": {
    "href": "reference/RestAPI/LibraryService/postLibraryMoviesUpdated.html",
    "title": "postLibraryMoviesUpdated",
    "keywords": "postLibraryMoviesUpdated Deprecated. Use /Library/Media/Updated Requires authentication as user postLibraryMoviesUpdated Request post /Library/Movies/Updated Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryService/postLibraryRefresh.html": {
    "href": "reference/RestAPI/LibraryService/postLibraryRefresh.html",
    "title": "postLibraryRefresh",
    "keywords": "postLibraryRefresh Starts a library scan Requires authentication as administrator postLibraryRefresh Request post /Library/Refresh Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryService/postLibrarySeriesAdded.html": {
    "href": "reference/RestAPI/LibraryService/postLibrarySeriesAdded.html",
    "title": "postLibrarySeriesAdded",
    "keywords": "postLibrarySeriesAdded Deprecated. Use /Library/Media/Updated Requires authentication as user postLibrarySeriesAdded Request post /Library/Series/Added Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryService/postLibrarySeriesUpdated.html": {
    "href": "reference/RestAPI/LibraryService/postLibrarySeriesUpdated.html",
    "title": "postLibrarySeriesUpdated",
    "keywords": "postLibrarySeriesUpdated Deprecated. Use /Library/Media/Updated Requires authentication as user postLibrarySeriesUpdated Request post /Library/Series/Updated Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryStructureService.html": {
    "href": "reference/RestAPI/LibraryStructureService.html",
    "title": "LibraryStructureService",
    "keywords": "LibraryStructureService API Documentation Wiki deleteLibraryVirtualfolders delete /Library/VirtualFolders deleteLibraryVirtualfoldersPaths delete /Library/VirtualFolders/Paths getLibraryVirtualfoldersQuery get /Library/VirtualFolders/Query postLibraryVirtualfolders post /Library/VirtualFolders postLibraryVirtualfoldersDelete post /Library/VirtualFolders/Delete postLibraryVirtualfoldersLibraryoptions post /Library/VirtualFolders/LibraryOptions postLibraryVirtualfoldersName post /Library/VirtualFolders/Name postLibraryVirtualfoldersPaths post /Library/VirtualFolders/Paths postLibraryVirtualfoldersPathsDelete post /Library/VirtualFolders/Paths/Delete postLibraryVirtualfoldersPathsUpdate post /Library/VirtualFolders/Paths/Update"
  },
  "reference/RestAPI/LibraryStructureService/deleteLibraryVirtualfolders.html": {
    "href": "reference/RestAPI/LibraryStructureService/deleteLibraryVirtualfolders.html",
    "title": "deleteLibraryVirtualfolders",
    "keywords": "deleteLibraryVirtualfolders Requires authentication as administrator deleteLibraryVirtualfolders Request delete /Library/VirtualFolders Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryStructureService/deleteLibraryVirtualfoldersPaths.html": {
    "href": "reference/RestAPI/LibraryStructureService/deleteLibraryVirtualfoldersPaths.html",
    "title": "deleteLibraryVirtualfoldersPaths",
    "keywords": "deleteLibraryVirtualfoldersPaths Requires authentication as administrator deleteLibraryVirtualfoldersPaths Request delete /Library/VirtualFolders/Paths Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LibraryStructureService/getLibraryVirtualfoldersQuery.html": {
    "href": "reference/RestAPI/LibraryStructureService/getLibraryVirtualfoldersQuery.html",
    "title": "getLibraryVirtualfoldersQuery",
    "keywords": "getLibraryVirtualfoldersQuery Requires authentication as administrator getLibraryVirtualfoldersQuery Request get /Library/VirtualFolders/Query Parameters Name In Type Default Notes StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Responses Status Code Type Description Samples 200 QueryResult_VirtualFolderInfo Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_VirtualFolderInfo QueryResult_VirtualFolderInfo Name Type Notes Items VirtualFolderInfo[] TotalRecordCount integer (int32) VirtualFolderInfo see also MediaBrowser.Model.Entities.VirtualFolderInfo Name Type Notes Name string Locations array CollectionType string LibraryOptions LibraryOptions[] ItemId string PrimaryImageItemId string RefreshProgress number (double) RefreshStatus string LibraryOptions see also MediaBrowser.Model.Configuration.LibraryOptions Name Type Notes EnableArchiveMediaFiles boolean EnablePhotos boolean EnableRealtimeMonitor boolean EnableMarkerDetection boolean EnableMarkerDetectionDuringLibraryScan boolean IntroDetectionFingerprintLength integer (int32) EnableChapterImageExtraction boolean ExtractChapterImagesDuringLibraryScan boolean DownloadImagesInAdvance boolean PathInfos MediaPathInfo[] IgnoreHiddenFiles boolean IgnoreFileExtensions array SaveLocalMetadata boolean SaveMetadataHidden boolean SaveLocalThumbnailSets boolean ImportMissingEpisodes boolean ImportPlaylists boolean EnableAutomaticSeriesGrouping boolean EnableEmbeddedTitles boolean EnableAudioResume boolean AutomaticRefreshIntervalDays integer (int32) PreferredMetadataLanguage string PreferredImageLanguage string ContentType string MetadataCountryCode string SeasonZeroDisplayName string Name string MetadataSavers array DisabledLocalMetadataReaders array LocalMetadataReaderOrder array DisabledLyricsFetchers array SaveLyricsWithMedia boolean LyricsDownloadMaxAgeDays integer (int32) LyricsFetcherOrder array LyricsDownloadLanguages array DisabledSubtitleFetchers array SubtitleFetcherOrder array SkipSubtitlesIfEmbeddedSubtitlesPresent boolean SkipSubtitlesIfAudioTrackMatches boolean SubtitleDownloadLanguages array SubtitleDownloadMaxAgeDays integer (int32) RequirePerfectSubtitleMatch boolean SaveSubtitlesWithMedia boolean ForcedSubtitlesOnly boolean TypeOptions TypeOptions[] CollapseSingleItemFolders boolean EnableAdultMetadata boolean ImportCollections boolean MinCollectionItems integer (int32) MusicFolderStructure string MinResumePct integer (int32) MaxResumePct integer (int32) MinResumeDurationSeconds integer (int32) ThumbnailImagesIntervalSeconds integer (int32) SampleIgnoreSize integer (int32) MediaPathInfo see also MediaBrowser.Model.Configuration.MediaPathInfo Name Type Notes Path string NetworkPath string TypeOptions see also MediaBrowser.Model.Configuration.TypeOptions Name Type Notes Type string MetadataFetchers array MetadataFetcherOrder array ImageFetchers array ImageFetcherOrder array ImageOptions ImageOption[] ImageOption see also MediaBrowser.Model.Configuration.ImageOption Name Type Notes Type ImageType Limit integer (int32) MinWidth integer (int32) ImageType see also MediaBrowser.Model.Entities.ImageType Enum Values Primary Art Backdrop Banner Logo Thumb Disc Box Screenshot Menu Chapter BoxRear Thumbnail LogoLight LogoLightColor"
  },
  "reference/RestAPI/LibraryStructureService/postLibraryVirtualfolders.html": {
    "href": "reference/RestAPI/LibraryStructureService/postLibraryVirtualfolders.html",
    "title": "postLibraryVirtualfolders",
    "keywords": "postLibraryVirtualfolders Requires authentication as administrator postLibraryVirtualfolders Request post /Library/VirtualFolders Parameters Name In Type Default Notes *body body AddVirtualFolder AddVirtualFolder Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions AddVirtualFolder Emby.Api.Library.AddVirtualFolder Name Type Notes Name string CollectionType string RefreshLibrary boolean Paths array LibraryOptions LibraryOptions[] LibraryOptions see also MediaBrowser.Model.Configuration.LibraryOptions Name Type Notes EnableArchiveMediaFiles boolean EnablePhotos boolean EnableRealtimeMonitor boolean EnableMarkerDetection boolean EnableMarkerDetectionDuringLibraryScan boolean IntroDetectionFingerprintLength integer (int32) EnableChapterImageExtraction boolean ExtractChapterImagesDuringLibraryScan boolean DownloadImagesInAdvance boolean PathInfos MediaPathInfo[] IgnoreHiddenFiles boolean IgnoreFileExtensions array SaveLocalMetadata boolean SaveMetadataHidden boolean SaveLocalThumbnailSets boolean ImportMissingEpisodes boolean ImportPlaylists boolean EnableAutomaticSeriesGrouping boolean EnableEmbeddedTitles boolean EnableAudioResume boolean AutomaticRefreshIntervalDays integer (int32) PreferredMetadataLanguage string PreferredImageLanguage string ContentType string MetadataCountryCode string SeasonZeroDisplayName string Name string MetadataSavers array DisabledLocalMetadataReaders array LocalMetadataReaderOrder array DisabledLyricsFetchers array SaveLyricsWithMedia boolean LyricsDownloadMaxAgeDays integer (int32) LyricsFetcherOrder array LyricsDownloadLanguages array DisabledSubtitleFetchers array SubtitleFetcherOrder array SkipSubtitlesIfEmbeddedSubtitlesPresent boolean SkipSubtitlesIfAudioTrackMatches boolean SubtitleDownloadLanguages array SubtitleDownloadMaxAgeDays integer (int32) RequirePerfectSubtitleMatch boolean SaveSubtitlesWithMedia boolean ForcedSubtitlesOnly boolean TypeOptions TypeOptions[] CollapseSingleItemFolders boolean EnableAdultMetadata boolean ImportCollections boolean MinCollectionItems integer (int32) MusicFolderStructure string MinResumePct integer (int32) MaxResumePct integer (int32) MinResumeDurationSeconds integer (int32) ThumbnailImagesIntervalSeconds integer (int32) SampleIgnoreSize integer (int32) MediaPathInfo see also MediaBrowser.Model.Configuration.MediaPathInfo Name Type Notes Path string NetworkPath string TypeOptions see also MediaBrowser.Model.Configuration.TypeOptions Name Type Notes Type string MetadataFetchers array MetadataFetcherOrder array ImageFetchers array ImageFetcherOrder array ImageOptions ImageOption[] ImageOption see also MediaBrowser.Model.Configuration.ImageOption Name Type Notes Type ImageType Limit integer (int32) MinWidth integer (int32) ImageType see also MediaBrowser.Model.Entities.ImageType Enum Values Primary Art Backdrop Banner Logo Thumb Disc Box Screenshot Menu Chapter BoxRear Thumbnail LogoLight LogoLightColor"
  },
  "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersDelete.html": {
    "href": "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersDelete.html",
    "title": "postLibraryVirtualfoldersDelete",
    "keywords": "postLibraryVirtualfoldersDelete Requires authentication as administrator postLibraryVirtualfoldersDelete Request post /Library/VirtualFolders/Delete Parameters Name In Type Default Notes *body body RemoveVirtualFolder RemoveVirtualFolder Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions RemoveVirtualFolder Emby.Api.Library.RemoveVirtualFolder Name Type Notes Id string RefreshLibrary boolean"
  },
  "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersLibraryoptions.html": {
    "href": "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersLibraryoptions.html",
    "title": "postLibraryVirtualfoldersLibraryoptions",
    "keywords": "postLibraryVirtualfoldersLibraryoptions Requires authentication as administrator postLibraryVirtualfoldersLibraryoptions Request post /Library/VirtualFolders/LibraryOptions Parameters Name In Type Default Notes *body body UpdateLibraryOptions UpdateLibraryOptions Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UpdateLibraryOptions Emby.Api.Library.UpdateLibraryOptions Name Type Notes Id string LibraryOptions LibraryOptions[] LibraryOptions see also MediaBrowser.Model.Configuration.LibraryOptions Name Type Notes EnableArchiveMediaFiles boolean EnablePhotos boolean EnableRealtimeMonitor boolean EnableMarkerDetection boolean EnableMarkerDetectionDuringLibraryScan boolean IntroDetectionFingerprintLength integer (int32) EnableChapterImageExtraction boolean ExtractChapterImagesDuringLibraryScan boolean DownloadImagesInAdvance boolean PathInfos MediaPathInfo[] IgnoreHiddenFiles boolean IgnoreFileExtensions array SaveLocalMetadata boolean SaveMetadataHidden boolean SaveLocalThumbnailSets boolean ImportMissingEpisodes boolean ImportPlaylists boolean EnableAutomaticSeriesGrouping boolean EnableEmbeddedTitles boolean EnableAudioResume boolean AutomaticRefreshIntervalDays integer (int32) PreferredMetadataLanguage string PreferredImageLanguage string ContentType string MetadataCountryCode string SeasonZeroDisplayName string Name string MetadataSavers array DisabledLocalMetadataReaders array LocalMetadataReaderOrder array DisabledLyricsFetchers array SaveLyricsWithMedia boolean LyricsDownloadMaxAgeDays integer (int32) LyricsFetcherOrder array LyricsDownloadLanguages array DisabledSubtitleFetchers array SubtitleFetcherOrder array SkipSubtitlesIfEmbeddedSubtitlesPresent boolean SkipSubtitlesIfAudioTrackMatches boolean SubtitleDownloadLanguages array SubtitleDownloadMaxAgeDays integer (int32) RequirePerfectSubtitleMatch boolean SaveSubtitlesWithMedia boolean ForcedSubtitlesOnly boolean TypeOptions TypeOptions[] CollapseSingleItemFolders boolean EnableAdultMetadata boolean ImportCollections boolean MinCollectionItems integer (int32) MusicFolderStructure string MinResumePct integer (int32) MaxResumePct integer (int32) MinResumeDurationSeconds integer (int32) ThumbnailImagesIntervalSeconds integer (int32) SampleIgnoreSize integer (int32) MediaPathInfo see also MediaBrowser.Model.Configuration.MediaPathInfo Name Type Notes Path string NetworkPath string TypeOptions see also MediaBrowser.Model.Configuration.TypeOptions Name Type Notes Type string MetadataFetchers array MetadataFetcherOrder array ImageFetchers array ImageFetcherOrder array ImageOptions ImageOption[] ImageOption see also MediaBrowser.Model.Configuration.ImageOption Name Type Notes Type ImageType Limit integer (int32) MinWidth integer (int32) ImageType see also MediaBrowser.Model.Entities.ImageType Enum Values Primary Art Backdrop Banner Logo Thumb Disc Box Screenshot Menu Chapter BoxRear Thumbnail LogoLight LogoLightColor"
  },
  "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersName.html": {
    "href": "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersName.html",
    "title": "postLibraryVirtualfoldersName",
    "keywords": "postLibraryVirtualfoldersName Requires authentication as administrator postLibraryVirtualfoldersName Request post /Library/VirtualFolders/Name Parameters Name In Type Default Notes *body body RenameVirtualFolder RenameVirtualFolder Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions RenameVirtualFolder Emby.Api.Library.RenameVirtualFolder Name Type Notes Id string NewName string"
  },
  "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersPaths.html": {
    "href": "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersPaths.html",
    "title": "postLibraryVirtualfoldersPaths",
    "keywords": "postLibraryVirtualfoldersPaths Requires authentication as administrator postLibraryVirtualfoldersPaths Request post /Library/VirtualFolders/Paths Parameters Name In Type Default Notes *body body AddMediaPath AddMediaPath Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions AddMediaPath Emby.Api.Library.AddMediaPath Name Type Notes Id string Path string PathInfo MediaPathInfo[] RefreshLibrary boolean MediaPathInfo see also MediaBrowser.Model.Configuration.MediaPathInfo Name Type Notes Path string NetworkPath string"
  },
  "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersPathsDelete.html": {
    "href": "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersPathsDelete.html",
    "title": "postLibraryVirtualfoldersPathsDelete",
    "keywords": "postLibraryVirtualfoldersPathsDelete Requires authentication as administrator postLibraryVirtualfoldersPathsDelete Request post /Library/VirtualFolders/Paths/Delete Parameters Name In Type Default Notes *body body RemoveMediaPath RemoveMediaPath Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions RemoveMediaPath Emby.Api.Library.RemoveMediaPath Name Type Notes Id string Path string RefreshLibrary boolean"
  },
  "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersPathsUpdate.html": {
    "href": "reference/RestAPI/LibraryStructureService/postLibraryVirtualfoldersPathsUpdate.html",
    "title": "postLibraryVirtualfoldersPathsUpdate",
    "keywords": "postLibraryVirtualfoldersPathsUpdate Requires authentication as administrator postLibraryVirtualfoldersPathsUpdate Request post /Library/VirtualFolders/Paths/Update Parameters Name In Type Default Notes *body body UpdateMediaPath UpdateMediaPath Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UpdateMediaPath Emby.Api.Library.UpdateMediaPath Name Type Notes Id string PathInfo MediaPathInfo[] MediaPathInfo see also MediaBrowser.Model.Configuration.MediaPathInfo Name Type Notes Path string NetworkPath string"
  },
  "reference/RestAPI/LiveTvService.html": {
    "href": "reference/RestAPI/LiveTvService.html",
    "title": "LiveTvService",
    "keywords": "LiveTvService API Documentation Wiki deleteLivetvChannelmappingoptions delete /LiveTv/ChannelMappingOptions deleteLivetvChannelmappings delete /LiveTv/ChannelMappings deleteLivetvListingproviders delete /LiveTv/ListingProviders Deletes a listing provider deleteLivetvRecordingsById delete /LiveTv/Recordings/{Id} Deletes a live tv recording deleteLivetvSeriestimersById delete /LiveTv/SeriesTimers/{Id} Cancels a live tv series timer deleteLivetvTimersById delete /LiveTv/Timers/{Id} Cancels a live tv timer deleteLivetvTunerhosts delete /LiveTv/TunerHosts Deletes a tuner host getLivetvChannelmappingoptions get /LiveTv/ChannelMappingOptions getLivetvChannelmappings get /LiveTv/ChannelMappings getLivetvChannels get /LiveTv/Channels Gets available live tv channels. getLivetvChannelsById get /LiveTv/Channels/{Id} Gets a live tv channel getLivetvChanneltags get /LiveTv/ChannelTags Gets live tv channel tags getLivetvChanneltagsPrefixes get /LiveTv/ChannelTags/Prefixes Gets live tv channel tag prefixes getLivetvEPG get /LiveTv/EPG Gets the epg. getLivetvFolder get /LiveTv/Folder Gets the top level live tv folder getLivetvGuideinfo get /LiveTv/GuideInfo Gets guide info getLivetvInfo get /LiveTv/Info Gets available live tv services. getLivetvListingproviders get /LiveTv/ListingProviders Gets current listing providers getLivetvListingprovidersAvailable get /LiveTv/ListingProviders/Available Gets listing provider getLivetvListingprovidersDefault get /LiveTv/ListingProviders/Default getLivetvListingprovidersLineups get /LiveTv/ListingProviders/Lineups Gets available lineups getLivetvListingprovidersSchedulesdirectCountries get /LiveTv/ListingProviders/SchedulesDirect/Countries Gets available lineups getLivetvLiverecordingsByIdStream get /LiveTv/LiveRecordings/{Id}/stream Gets a live tv channel getLivetvLivestreamfilesByIdStreamByContainer get /LiveTv/LiveStreamFiles/{Id}/stream.{Container} Gets a live tv channel getLivetvManageChannels get /LiveTv/Manage/Channels Gets the channel management list getLivetvPrograms get /LiveTv/Programs Gets available live tv epgs.. getLivetvProgramsRecommended get /LiveTv/Programs/Recommended Gets available live tv epgs.. getLivetvRecordings get /LiveTv/Recordings Gets live tv recordings getLivetvRecordingsById get /LiveTv/Recordings/{Id} Gets a live tv recording getLivetvRecordingsFolders get /LiveTv/Recordings/Folders Gets recording folders getLivetvRecordingsGroups get /LiveTv/Recordings/Groups Gets live tv recording groups getLivetvRecordingsSeries get /LiveTv/Recordings/Series Gets live tv recordings getLivetvSeriestimers get /LiveTv/SeriesTimers Gets live tv series timers getLivetvSeriestimersById get /LiveTv/SeriesTimers/{Id} Gets a live tv series timer getLivetvTimers get /LiveTv/Timers Gets live tv timers getLivetvTimersById get /LiveTv/Timers/{Id} Gets a live tv timer getLivetvTimersDefaults get /LiveTv/Timers/Defaults Gets default values for a new timer getLivetvTunerhosts get /LiveTv/TunerHosts Gets tuner hosts getLivetvTunerhostsDefaultByType get /LiveTv/TunerHosts/Default/{Type} Gets tuner hosts getLivetvTunerhostsTypes get /LiveTv/TunerHosts/Types getLivetvTunersDiscvover get /LiveTv/Tuners/Discvover headLivetvChannelmappingoptions head /LiveTv/ChannelMappingOptions headLivetvChannelmappings head /LiveTv/ChannelMappings postLivetvChannelmappingoptions post /LiveTv/ChannelMappingOptions postLivetvChannelmappings post /LiveTv/ChannelMappings postLivetvListingproviders post /LiveTv/ListingProviders Adds a listing provider postLivetvListingprovidersDelete post /LiveTv/ListingProviders/Delete Deletes a listing provider postLivetvManageChannelsByIdDisabled post /LiveTv/Manage/Channels/{Id}/Disabled Sets a channel disabled or not postLivetvManageChannelsByIdSortindex post /LiveTv/Manage/Channels/{Id}/SortIndex Sets a channel sort index postLivetvPrograms post /LiveTv/Programs Gets available live tv epgs.. postLivetvRecordingsByIdDelete post /LiveTv/Recordings/{Id}/Delete Deletes a live tv recording postLivetvSeriestimers post /LiveTv/SeriesTimers Creates a live tv series timer postLivetvSeriestimersById post /LiveTv/SeriesTimers/{Id} Updates a live tv series timer postLivetvSeriestimersByIdDelete post /LiveTv/SeriesTimers/{Id}/Delete Cancels a live tv series timer postLivetvTimers post /LiveTv/Timers Creates a live tv timer postLivetvTimersById post /LiveTv/Timers/{Id} Updates a live tv timer postLivetvTimersByIdDelete post /LiveTv/Timers/{Id}/Delete Cancels a live tv timer postLivetvTunerhosts post /LiveTv/TunerHosts Adds a tuner host postLivetvTunerhostsDelete post /LiveTv/TunerHosts/Delete Deletes a tuner host postLivetvTunersByIdReset post /LiveTv/Tuners/{Id}/Reset Resets a tv tuner putLivetvChannelmappingoptions put /LiveTv/ChannelMappingOptions putLivetvChannelmappings put /LiveTv/ChannelMappings"
  },
  "reference/RestAPI/LiveTvService/deleteLivetvChannelmappingoptions.html": {
    "href": "reference/RestAPI/LiveTvService/deleteLivetvChannelmappingoptions.html",
    "title": "deleteLivetvChannelmappingoptions",
    "keywords": "deleteLivetvChannelmappingoptions Requires authentication as administrator deleteLivetvChannelmappingoptions Request delete /LiveTv/ChannelMappingOptions Parameters Name In Type Default Notes *ProviderId query Provider id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/deleteLivetvChannelmappings.html": {
    "href": "reference/RestAPI/LiveTvService/deleteLivetvChannelmappings.html",
    "title": "deleteLivetvChannelmappings",
    "keywords": "deleteLivetvChannelmappings Requires authentication as administrator deleteLivetvChannelmappings Request delete /LiveTv/ChannelMappings Parameters Name In Type Default Notes *ProviderId query Provider id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/deleteLivetvListingproviders.html": {
    "href": "reference/RestAPI/LiveTvService/deleteLivetvListingproviders.html",
    "title": "deleteLivetvListingproviders",
    "keywords": "deleteLivetvListingproviders Deletes a listing provider Requires authentication as administrator deleteLivetvListingproviders Request delete /LiveTv/ListingProviders Parameters Name In Type Default Notes Id query Provider id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/deleteLivetvRecordingsById.html": {
    "href": "reference/RestAPI/LiveTvService/deleteLivetvRecordingsById.html",
    "title": "deleteLivetvRecordingsById",
    "keywords": "deleteLivetvRecordingsById Deletes a live tv recording Requires authentication as user deleteLivetvRecordingsById Request delete /LiveTv/Recordings/{Id} Parameters Name In Type Default Notes *Id path Recording Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/deleteLivetvSeriestimersById.html": {
    "href": "reference/RestAPI/LiveTvService/deleteLivetvSeriestimersById.html",
    "title": "deleteLivetvSeriestimersById",
    "keywords": "deleteLivetvSeriestimersById Cancels a live tv series timer Requires authentication as user deleteLivetvSeriestimersById Request delete /LiveTv/SeriesTimers/{Id} Parameters Name In Type Default Notes *Id path Timer Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/deleteLivetvTimersById.html": {
    "href": "reference/RestAPI/LiveTvService/deleteLivetvTimersById.html",
    "title": "deleteLivetvTimersById",
    "keywords": "deleteLivetvTimersById Cancels a live tv timer Requires authentication as user deleteLivetvTimersById Request delete /LiveTv/Timers/{Id} Parameters Name In Type Default Notes *Id path Timer Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/deleteLivetvTunerhosts.html": {
    "href": "reference/RestAPI/LiveTvService/deleteLivetvTunerhosts.html",
    "title": "deleteLivetvTunerhosts",
    "keywords": "deleteLivetvTunerhosts Deletes a tuner host Requires authentication as administrator deleteLivetvTunerhosts Request delete /LiveTv/TunerHosts Parameters Name In Type Default Notes Id query Tuner host id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/getLivetvChannelmappingoptions.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvChannelmappingoptions.html",
    "title": "getLivetvChannelmappingoptions",
    "keywords": "getLivetvChannelmappingoptions Requires authentication as administrator getLivetvChannelmappingoptions Request get /LiveTv/ChannelMappingOptions Parameters Name In Type Default Notes *ProviderId query Provider id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/getLivetvChannelmappings.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvChannelmappings.html",
    "title": "getLivetvChannelmappings",
    "keywords": "getLivetvChannelmappings Requires authentication as administrator getLivetvChannelmappings Request get /LiveTv/ChannelMappings Parameters Name In Type Default Notes *ProviderId query Provider id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/getLivetvChannels.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvChannels.html",
    "title": "getLivetvChannels",
    "keywords": "getLivetvChannels Gets available live tv channels. Requires authentication as user getLivetvChannels Request get /LiveTv/Channels Parameters Name In Type Default Notes Type query Optional filter by channel type. IsLiked query Filter by channels that are liked, or not. IsDisliked query Filter by channels that are disliked, or not. EnableFavoriteSorting query Incorporate favorite and like status into channel sorting. AddCurrentProgram query Optional. Adds current program info to each channel ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/getLivetvChannelsById.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvChannelsById.html",
    "title": "getLivetvChannelsById",
    "keywords": "getLivetvChannelsById Gets a live tv channel Requires authentication as user getLivetvChannelsById Request get /LiveTv/Channels/{Id} Parameters Name In Type Default Notes *Id path Channel Id UserId query Optional attach user data. Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/getLivetvChanneltags.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvChanneltags.html",
    "title": "getLivetvChanneltags",
    "keywords": "getLivetvChanneltags Gets live tv channel tags No authentication required getLivetvChanneltags Request get /LiveTv/ChannelTags Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/getLivetvChanneltagsPrefixes.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvChanneltagsPrefixes.html",
    "title": "getLivetvChanneltagsPrefixes",
    "keywords": "getLivetvChanneltagsPrefixes Gets live tv channel tag prefixes No authentication required getLivetvChanneltagsPrefixes Request get /LiveTv/ChannelTags/Prefixes Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 TagItem [] Operation successful. Returning a TagItem[] object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions TagItem MediaBrowser.LiveTV.Api.TagItem Name Type Notes Name string Id string"
  },
  "reference/RestAPI/LiveTvService/getLivetvEPG.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvEPG.html",
    "title": "getLivetvEPG",
    "keywords": "getLivetvEPG Gets the epg. Requires authentication as user getLivetvEPG Request get /LiveTv/EPG Parameters Name In Type Default Notes Type query Optional filter by channel type. UserId query Optional filter by user and attach user data. GenreIds query The genres to return guide information for. MinStartDate query Optional. The minimum premiere date. Format = ISO MaxStartDate query Optional. The maximum premiere date. Format = ISO MinEndDate query Optional. The minimum premiere date. Format = ISO MaxEndDate query Optional. The maximum premiere date. Format = ISO StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. Limit query Optional. The maximum number of records to return IsFavorite query Filter by channels that are favorites, or not. IsLiked query Filter by channels that are liked, or not. IsDisliked query Filter by channels that are disliked, or not. EnableFavoriteSorting query Incorporate favorite and like status into channel sorting. EnableImages query Optional, include image information in output ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines AddCurrentProgram query Optional. Adds current program info to each channel EnableUserData query Optional, include user data ChannelIds query The channels to return guide information for. Responses Status Code Type Description Samples 200 EpgRow Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions EpgRow QueryResult_LiveTV.Api.EpgRow Name Type Notes Items EpgRow[] TotalRecordCount integer (int32) EpgRow MediaBrowser.LiveTV.Api.EpgRow Name Type Notes Channel BaseItemDto[] Programs BaseItemDto[] BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/getLivetvFolder.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvFolder.html",
    "title": "getLivetvFolder",
    "keywords": "getLivetvFolder Gets the top level live tv folder Requires authentication as user getLivetvFolder Request get /LiveTv/Folder Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/getLivetvGuideinfo.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvGuideinfo.html",
    "title": "getLivetvGuideinfo",
    "keywords": "getLivetvGuideinfo Gets guide info Requires authentication as user getLivetvGuideinfo Request get /LiveTv/GuideInfo Responses Status Code Type Description Samples 200 GuideInfo Operation successful. Returning a GuideInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions GuideInfo see also MediaBrowser.Model.LiveTv.GuideInfo Name Type Notes StartDate string (date-time) EndDate string (date-time)"
  },
  "reference/RestAPI/LiveTvService/getLivetvInfo.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvInfo.html",
    "title": "getLivetvInfo",
    "keywords": "getLivetvInfo Gets available live tv services. Requires authentication as user getLivetvInfo Request get /LiveTv/Info Responses Status Code Type Description Samples 200 LiveTvInfo Operation successful. Returning a LiveTvInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions LiveTvInfo see also MediaBrowser.Model.LiveTv.LiveTvInfo Name Type Notes IsEnabled boolean EnabledUsers array"
  },
  "reference/RestAPI/LiveTvService/getLivetvListingproviders.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvListingproviders.html",
    "title": "getLivetvListingproviders",
    "keywords": "getLivetvListingproviders Gets current listing providers Requires authentication as administrator getLivetvListingproviders Request get /LiveTv/ListingProviders Parameters Name In Type Default Notes *ChannelId query Channel id Responses Status Code Type Description Samples 200 ListingsProviderInfo [] Operation successful. Returning a ListingsProviderInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ListingsProviderInfo see also MediaBrowser.Model.LiveTv.ListingsProviderInfo Name Type Notes Name string SetupUrl string Id string Type string Username string Password string ListingsId string ZipCode string Country string Path string EnabledTuners array EnableAllTuners boolean NewsCategories array SportsCategories array KidsCategories array MovieCategories array ChannelMappings NameValuePair[] MoviePrefix string PreferredLanguage string UserAgent string DataVersion string NameValuePair see also MediaBrowser.Model.Dto.NameValuePair Name Type Notes Name string Value string"
  },
  "reference/RestAPI/LiveTvService/getLivetvListingprovidersAvailable.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvListingprovidersAvailable.html",
    "title": "getLivetvListingprovidersAvailable",
    "keywords": "getLivetvListingprovidersAvailable Gets listing provider Requires authentication as administrator getLivetvListingprovidersAvailable Request get /LiveTv/ListingProviders/Available Responses Status Code Type Description Samples 200 ListingProviderTypeInfo [] Operation successful. Returning a ListingProviderTypeInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ListingProviderTypeInfo MediaBrowser.LiveTV.Api.ListingProviderTypeInfo Name Type Notes Name string Id string SetupUrl string"
  },
  "reference/RestAPI/LiveTvService/getLivetvListingprovidersDefault.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvListingprovidersDefault.html",
    "title": "getLivetvListingprovidersDefault",
    "keywords": "getLivetvListingprovidersDefault Requires authentication as user getLivetvListingprovidersDefault Request get /LiveTv/ListingProviders/Default Responses Status Code Type Description Samples 200 ListingsProviderInfo Operation successful. Returning a ListingsProviderInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ListingsProviderInfo see also MediaBrowser.Model.LiveTv.ListingsProviderInfo Name Type Notes Name string SetupUrl string Id string Type string Username string Password string ListingsId string ZipCode string Country string Path string EnabledTuners array EnableAllTuners boolean NewsCategories array SportsCategories array KidsCategories array MovieCategories array ChannelMappings NameValuePair[] MoviePrefix string PreferredLanguage string UserAgent string DataVersion string NameValuePair see also MediaBrowser.Model.Dto.NameValuePair Name Type Notes Name string Value string"
  },
  "reference/RestAPI/LiveTvService/getLivetvListingprovidersLineups.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvListingprovidersLineups.html",
    "title": "getLivetvListingprovidersLineups",
    "keywords": "getLivetvListingprovidersLineups Gets available lineups Requires authentication as administrator getLivetvListingprovidersLineups Request get /LiveTv/ListingProviders/Lineups Parameters Name In Type Default Notes Id query Provider id Type query Provider Type Location query Location Country query Country Responses Status Code Type Description Samples 200 NameIdPair [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string"
  },
  "reference/RestAPI/LiveTvService/getLivetvListingprovidersSchedulesdirectCountries.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvListingprovidersSchedulesdirectCountries.html",
    "title": "getLivetvListingprovidersSchedulesdirectCountries",
    "keywords": "getLivetvListingprovidersSchedulesdirectCountries Gets available lineups Requires authentication as administrator getLivetvListingprovidersSchedulesdirectCountries Request get /LiveTv/ListingProviders/SchedulesDirect/Countries Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/getLivetvLiverecordingsByIdStream.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvLiverecordingsByIdStream.html",
    "title": "getLivetvLiverecordingsByIdStream",
    "keywords": "getLivetvLiverecordingsByIdStream Gets a live tv channel No authentication required getLivetvLiverecordingsByIdStream Request get /LiveTv/LiveRecordings/{Id}/stream Parameters Name In Type Default Notes *Id path Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/getLivetvLivestreamfilesByIdStreamByContainer.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvLivestreamfilesByIdStreamByContainer.html",
    "title": "getLivetvLivestreamfilesByIdStreamByContainer",
    "keywords": "getLivetvLivestreamfilesByIdStreamByContainer Gets a live tv channel No authentication required getLivetvLivestreamfilesByIdStreamByContainer Request get /LiveTv/LiveStreamFiles/{Id}/stream.{Container} Parameters Name In Type Default Notes *Id path *Container path Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/getLivetvManageChannels.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvManageChannels.html",
    "title": "getLivetvManageChannels",
    "keywords": "getLivetvManageChannels Gets the channel management list Requires authentication as administrator getLivetvManageChannels Request get /LiveTv/Manage/Channels Parameters Name In Type Default Notes StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Name, StartDate SortOrder query Sort Order - Ascending,Descending Responses Status Code Type Description Samples 200 ChannelManagementInfo Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ChannelManagementInfo QueryResult_Emby.LiveTV.ChannelManagementInfo Name Type Notes Items ChannelManagementInfo[] TotalRecordCount integer (int32) ChannelManagementInfo Emby.LiveTV.ChannelManagementInfo Name Type Notes Id string Name string"
  },
  "reference/RestAPI/LiveTvService/getLivetvPrograms.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvPrograms.html",
    "title": "getLivetvPrograms",
    "keywords": "getLivetvPrograms Gets available live tv epgs.. Requires authentication as user getLivetvPrograms Request get /LiveTv/Programs Parameters Name In Type Default Notes ChannelIds query The channels to return guide information for. UserId query Optional filter by user id. HasAired query Optional. Filter by programs that have completed airing, or not. MinStartDate query Optional. The minimum premiere date. Format = ISO MaxStartDate query Optional. The maximum premiere date. Format = ISO MinEndDate query Optional. The minimum premiere date. Format = ISO MaxEndDate query Optional. The maximum premiere date. Format = ISO IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Name, StartDate SortOrder query Sort Order - Ascending,Descending GenreIds query The genres to return guide information for. EnableImages query Optional, include image information in output ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. EnableUserData query Optional, include user data Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/getLivetvProgramsRecommended.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvProgramsRecommended.html",
    "title": "getLivetvProgramsRecommended",
    "keywords": "getLivetvProgramsRecommended Gets available live tv epgs.. Requires authentication as user getLivetvProgramsRecommended Request get /LiveTv/Programs/Recommended Parameters Name In Type Default Notes UserId query Optional filter by user id. Limit query Optional. The maximum number of records to return IsAiring query Optional. Filter by programs that are currently airing, or not. HasAired query Optional. Filter by programs that have completed airing, or not. IsSeries query Optional filter for series. IsMovie query Optional filter for movies. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. EnableImages query Optional, include image information in output ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. GenreIds query The genres to return guide information for. Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines EnableUserData query Optional, include user data Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/getLivetvRecordings.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvRecordings.html",
    "title": "getLivetvRecordings",
    "keywords": "getLivetvRecordings Gets live tv recordings Requires authentication as user getLivetvRecordings Request get /LiveTv/Recordings Parameters Name In Type Default Notes ChannelId query Optional filter by channel id. Status query Optional filter by recording status. IsInProgress query Optional filter by recordings that are in progress, or not. SeriesTimerId query Optional filter by recordings belonging to a series timer ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/getLivetvRecordingsById.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvRecordingsById.html",
    "title": "getLivetvRecordingsById",
    "keywords": "getLivetvRecordingsById Gets a live tv recording Requires authentication as user getLivetvRecordingsById Request get /LiveTv/Recordings/{Id} Parameters Name In Type Default Notes *Id path Recording Id UserId query Optional attach user data. Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/getLivetvRecordingsFolders.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvRecordingsFolders.html",
    "title": "getLivetvRecordingsFolders",
    "keywords": "getLivetvRecordingsFolders Gets recording folders Requires authentication as user getLivetvRecordingsFolders Request get /LiveTv/Recordings/Folders Parameters Name In Type Default Notes UserId query Optional filter by user and attach user data. Responses Status Code Type Description Samples 200 BaseItemDto [] Operation successful. Returning a BaseItemDto[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/getLivetvRecordingsGroups.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvRecordingsGroups.html",
    "title": "getLivetvRecordingsGroups",
    "keywords": "getLivetvRecordingsGroups Gets live tv recording groups Requires authentication as user getLivetvRecordingsGroups Request get /LiveTv/Recordings/Groups Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/getLivetvRecordingsSeries.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvRecordingsSeries.html",
    "title": "getLivetvRecordingsSeries",
    "keywords": "getLivetvRecordingsSeries Gets live tv recordings Requires authentication as user getLivetvRecordingsSeries Request get /LiveTv/Recordings/Series Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/getLivetvSeriestimers.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvSeriestimers.html",
    "title": "getLivetvSeriestimers",
    "keywords": "getLivetvSeriestimers Gets live tv series timers Requires authentication as user getLivetvSeriestimers Request get /LiveTv/SeriesTimers Parameters Name In Type Default Notes SortBy query Optional. Sort by SortName or Priority SortOrder query Optional. Sort in Ascending or Descending order StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Responses Status Code Type Description Samples 200 SeriesTimerInfoDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SeriesTimerInfoDto QueryResult_LiveTv.SeriesTimerInfoDto Name Type Notes Items SeriesTimerInfoDto[] TotalRecordCount integer (int32) SeriesTimerInfoDto see also MediaBrowser.Model.LiveTv.SeriesTimerInfoDto Name Type Notes RecordAnyTime boolean SkipEpisodesInLibrary boolean RecordAnyChannel boolean KeepUpTo integer (int32) MaxRecordingSeconds integer (int32) RecordNewOnly boolean ChannelIds array Days DayOfWeek[] ImageTags object ParentThumbItemId string ParentThumbImageTag string ParentPrimaryImageItemId string ParentPrimaryImageTag string SeriesId string Keywords KeywordInfo[] TimerType TimerType Id string Type string ServerId string ChannelId string ChannelName string ChannelPrimaryImageTag string ProgramId string Name string Overview string StartDate string (date-time) EndDate string (date-time) Priority integer (int32) PrePaddingSeconds integer (int32) PostPaddingSeconds integer (int32) IsPrePaddingRequired boolean ParentBackdropItemId string ParentBackdropImageTags array IsPostPaddingRequired boolean KeepUntil KeepUntil DayOfWeek see also System.DayOfWeek KeywordInfo see also MediaBrowser.Model.LiveTv.KeywordInfo Name Type Notes KeywordType KeywordType Keyword string KeywordType see also MediaBrowser.Model.LiveTv.KeywordType Enum Values Name EpisodeTitle Overview Actor Director TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword KeepUntil see also MediaBrowser.Model.LiveTv.KeepUntil Enum Values UntilDeleted UntilSpaceNeeded UntilWatched UntilDate"
  },
  "reference/RestAPI/LiveTvService/getLivetvSeriestimersById.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvSeriestimersById.html",
    "title": "getLivetvSeriestimersById",
    "keywords": "getLivetvSeriestimersById Gets a live tv series timer Requires authentication as user getLivetvSeriestimersById Request get /LiveTv/SeriesTimers/{Id} Parameters Name In Type Default Notes *Id path Timer Id Responses Status Code Type Description Samples 200 TimerInfoDto Operation successful. Returning a TimerInfoDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TimerInfoDto see also MediaBrowser.Model.LiveTv.TimerInfoDto Name Type Notes Status RecordingStatus SeriesTimerId string RunTimeTicks integer (int64) ProgramInfo BaseItemDto[] TimerType TimerType Id string Type string ServerId string ChannelId string ChannelName string ChannelPrimaryImageTag string ProgramId string Name string Overview string StartDate string (date-time) EndDate string (date-time) Priority integer (int32) PrePaddingSeconds integer (int32) PostPaddingSeconds integer (int32) IsPrePaddingRequired boolean ParentBackdropItemId string ParentBackdropImageTags array IsPostPaddingRequired boolean KeepUntil KeepUntil RecordingStatus see also MediaBrowser.Model.LiveTv.RecordingStatus Enum Values New InProgress Completed Cancelled ConflictedOk ConflictedNotOk Error BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword KeepUntil see also MediaBrowser.Model.LiveTv.KeepUntil Enum Values UntilDeleted UntilSpaceNeeded UntilWatched UntilDate"
  },
  "reference/RestAPI/LiveTvService/getLivetvTimers.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvTimers.html",
    "title": "getLivetvTimers",
    "keywords": "getLivetvTimers Gets live tv timers Requires authentication as user getLivetvTimers Request get /LiveTv/Timers Parameters Name In Type Default Notes ChannelId query Optional filter by channel id. SeriesTimerId query Optional filter by timers belonging to a series timer Responses Status Code Type Description Samples 200 TimerInfoDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TimerInfoDto QueryResult_LiveTv.TimerInfoDto Name Type Notes Items TimerInfoDto[] TotalRecordCount integer (int32) TimerInfoDto see also MediaBrowser.Model.LiveTv.TimerInfoDto Name Type Notes Status RecordingStatus SeriesTimerId string RunTimeTicks integer (int64) ProgramInfo BaseItemDto[] TimerType TimerType Id string Type string ServerId string ChannelId string ChannelName string ChannelPrimaryImageTag string ProgramId string Name string Overview string StartDate string (date-time) EndDate string (date-time) Priority integer (int32) PrePaddingSeconds integer (int32) PostPaddingSeconds integer (int32) IsPrePaddingRequired boolean ParentBackdropItemId string ParentBackdropImageTags array IsPostPaddingRequired boolean KeepUntil KeepUntil RecordingStatus see also MediaBrowser.Model.LiveTv.RecordingStatus Enum Values New InProgress Completed Cancelled ConflictedOk ConflictedNotOk Error BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword KeepUntil see also MediaBrowser.Model.LiveTv.KeepUntil Enum Values UntilDeleted UntilSpaceNeeded UntilWatched UntilDate"
  },
  "reference/RestAPI/LiveTvService/getLivetvTimersById.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvTimersById.html",
    "title": "getLivetvTimersById",
    "keywords": "getLivetvTimersById Gets a live tv timer Requires authentication as user getLivetvTimersById Request get /LiveTv/Timers/{Id} Parameters Name In Type Default Notes *Id path Timer Id Responses Status Code Type Description Samples 200 TimerInfoDto Operation successful. Returning a TimerInfoDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TimerInfoDto see also MediaBrowser.Model.LiveTv.TimerInfoDto Name Type Notes Status RecordingStatus SeriesTimerId string RunTimeTicks integer (int64) ProgramInfo BaseItemDto[] TimerType TimerType Id string Type string ServerId string ChannelId string ChannelName string ChannelPrimaryImageTag string ProgramId string Name string Overview string StartDate string (date-time) EndDate string (date-time) Priority integer (int32) PrePaddingSeconds integer (int32) PostPaddingSeconds integer (int32) IsPrePaddingRequired boolean ParentBackdropItemId string ParentBackdropImageTags array IsPostPaddingRequired boolean KeepUntil KeepUntil RecordingStatus see also MediaBrowser.Model.LiveTv.RecordingStatus Enum Values New InProgress Completed Cancelled ConflictedOk ConflictedNotOk Error BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword KeepUntil see also MediaBrowser.Model.LiveTv.KeepUntil Enum Values UntilDeleted UntilSpaceNeeded UntilWatched UntilDate"
  },
  "reference/RestAPI/LiveTvService/getLivetvTimersDefaults.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvTimersDefaults.html",
    "title": "getLivetvTimersDefaults",
    "keywords": "getLivetvTimersDefaults Gets default values for a new timer Requires authentication as user getLivetvTimersDefaults Request get /LiveTv/Timers/Defaults Parameters Name In Type Default Notes ProgramId query Optional, to attach default values based on a program. Responses Status Code Type Description Samples 200 SeriesTimerInfoDto Operation successful. Returning a SeriesTimerInfoDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SeriesTimerInfoDto see also MediaBrowser.Model.LiveTv.SeriesTimerInfoDto Name Type Notes RecordAnyTime boolean SkipEpisodesInLibrary boolean RecordAnyChannel boolean KeepUpTo integer (int32) MaxRecordingSeconds integer (int32) RecordNewOnly boolean ChannelIds array Days DayOfWeek[] ImageTags object ParentThumbItemId string ParentThumbImageTag string ParentPrimaryImageItemId string ParentPrimaryImageTag string SeriesId string Keywords KeywordInfo[] TimerType TimerType Id string Type string ServerId string ChannelId string ChannelName string ChannelPrimaryImageTag string ProgramId string Name string Overview string StartDate string (date-time) EndDate string (date-time) Priority integer (int32) PrePaddingSeconds integer (int32) PostPaddingSeconds integer (int32) IsPrePaddingRequired boolean ParentBackdropItemId string ParentBackdropImageTags array IsPostPaddingRequired boolean KeepUntil KeepUntil DayOfWeek see also System.DayOfWeek KeywordInfo see also MediaBrowser.Model.LiveTv.KeywordInfo Name Type Notes KeywordType KeywordType Keyword string KeywordType see also MediaBrowser.Model.LiveTv.KeywordType Enum Values Name EpisodeTitle Overview Actor Director TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword KeepUntil see also MediaBrowser.Model.LiveTv.KeepUntil Enum Values UntilDeleted UntilSpaceNeeded UntilWatched UntilDate"
  },
  "reference/RestAPI/LiveTvService/getLivetvTunerhosts.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvTunerhosts.html",
    "title": "getLivetvTunerhosts",
    "keywords": "getLivetvTunerhosts Gets tuner hosts Requires authentication as administrator getLivetvTunerhosts Request get /LiveTv/TunerHosts Responses Status Code Type Description Samples 200 TunerHostInfo [] Operation successful. Returning a TunerHostInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TunerHostInfo see also MediaBrowser.Model.LiveTv.TunerHostInfo Name Type Notes Id string Url string Type string DeviceId string FriendlyName string SetupUrl string ImportFavoritesOnly boolean AllowHWTranscoding boolean Source string TunerCount integer (int32) UserAgent string Referrer string ProviderOptions string DataVersion integer (int32)"
  },
  "reference/RestAPI/LiveTvService/getLivetvTunerhostsDefaultByType.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvTunerhostsDefaultByType.html",
    "title": "getLivetvTunerhostsDefaultByType",
    "keywords": "getLivetvTunerhostsDefaultByType Gets tuner hosts Requires authentication as administrator getLivetvTunerhostsDefaultByType Request get /LiveTv/TunerHosts/Default/{Type} Parameters Name In Type Default Notes *Type path Type Responses Status Code Type Description Samples 200 TunerHostInfo Operation successful. Returning a TunerHostInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TunerHostInfo see also MediaBrowser.Model.LiveTv.TunerHostInfo Name Type Notes Id string Url string Type string DeviceId string FriendlyName string SetupUrl string ImportFavoritesOnly boolean AllowHWTranscoding boolean Source string TunerCount integer (int32) UserAgent string Referrer string ProviderOptions string DataVersion integer (int32)"
  },
  "reference/RestAPI/LiveTvService/getLivetvTunerhostsTypes.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvTunerhostsTypes.html",
    "title": "getLivetvTunerhostsTypes",
    "keywords": "getLivetvTunerhostsTypes Requires authentication as user getLivetvTunerhostsTypes Request get /LiveTv/TunerHosts/Types Responses Status Code Type Description Samples 200 NameIdPair [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string"
  },
  "reference/RestAPI/LiveTvService/getLivetvTunersDiscvover.html": {
    "href": "reference/RestAPI/LiveTvService/getLivetvTunersDiscvover.html",
    "title": "getLivetvTunersDiscvover",
    "keywords": "getLivetvTunersDiscvover Requires authentication as user getLivetvTunersDiscvover Request get /LiveTv/Tuners/Discvover Responses Status Code Type Description Samples 200 TunerHostInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TunerHostInfo see also MediaBrowser.Model.LiveTv.TunerHostInfo Name Type Notes Id string Url string Type string DeviceId string FriendlyName string SetupUrl string ImportFavoritesOnly boolean AllowHWTranscoding boolean Source string TunerCount integer (int32) UserAgent string Referrer string ProviderOptions string DataVersion integer (int32)"
  },
  "reference/RestAPI/LiveTvService/headLivetvChannelmappingoptions.html": {
    "href": "reference/RestAPI/LiveTvService/headLivetvChannelmappingoptions.html",
    "title": "headLivetvChannelmappingoptions",
    "keywords": "headLivetvChannelmappingoptions Requires authentication as administrator headLivetvChannelmappingoptions Request head /LiveTv/ChannelMappingOptions Parameters Name In Type Default Notes *ProviderId query Provider id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/headLivetvChannelmappings.html": {
    "href": "reference/RestAPI/LiveTvService/headLivetvChannelmappings.html",
    "title": "headLivetvChannelmappings",
    "keywords": "headLivetvChannelmappings Requires authentication as administrator headLivetvChannelmappings Request head /LiveTv/ChannelMappings Parameters Name In Type Default Notes *ProviderId query Provider id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/postLivetvChannelmappingoptions.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvChannelmappingoptions.html",
    "title": "postLivetvChannelmappingoptions",
    "keywords": "postLivetvChannelmappingoptions Requires authentication as administrator postLivetvChannelmappingoptions Request post /LiveTv/ChannelMappingOptions Parameters Name In Type Default Notes *ProviderId query Provider id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/postLivetvChannelmappings.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvChannelmappings.html",
    "title": "postLivetvChannelmappings",
    "keywords": "postLivetvChannelmappings Requires authentication as administrator postLivetvChannelmappings Request post /LiveTv/ChannelMappings Parameters Name In Type Default Notes *ProviderId query Provider id *body body SetChannelMapping SetChannelMapping Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SetChannelMapping MediaBrowser.LiveTV.Api.SetChannelMapping Name Type Notes TunerChannelId string ProviderChannelId string"
  },
  "reference/RestAPI/LiveTvService/postLivetvListingproviders.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvListingproviders.html",
    "title": "postLivetvListingproviders",
    "keywords": "postLivetvListingproviders Adds a listing provider Requires authentication as administrator postLivetvListingproviders Request post /LiveTv/ListingProviders Parameters Name In Type Default Notes *body body ListingsProviderInfo ListingsProviderInfo: Responses Status Code Type Description Samples 200 ListingsProviderInfo Operation successful. Returning a ListingsProviderInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ListingsProviderInfo see also MediaBrowser.Model.LiveTv.ListingsProviderInfo Name Type Notes Name string SetupUrl string Id string Type string Username string Password string ListingsId string ZipCode string Country string Path string EnabledTuners array EnableAllTuners boolean NewsCategories array SportsCategories array KidsCategories array MovieCategories array ChannelMappings NameValuePair[] MoviePrefix string PreferredLanguage string UserAgent string DataVersion string NameValuePair see also MediaBrowser.Model.Dto.NameValuePair Name Type Notes Name string Value string"
  },
  "reference/RestAPI/LiveTvService/postLivetvListingprovidersDelete.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvListingprovidersDelete.html",
    "title": "postLivetvListingprovidersDelete",
    "keywords": "postLivetvListingprovidersDelete Deletes a listing provider Requires authentication as administrator postLivetvListingprovidersDelete Request post /LiveTv/ListingProviders/Delete Parameters Name In Type Default Notes Id query Provider id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/postLivetvManageChannelsByIdDisabled.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvManageChannelsByIdDisabled.html",
    "title": "postLivetvManageChannelsByIdDisabled",
    "keywords": "postLivetvManageChannelsByIdDisabled Sets a channel disabled or not Requires authentication as administrator postLivetvManageChannelsByIdDisabled Request post /LiveTv/Manage/Channels/{Id}/Disabled Parameters Name In Type Default Notes *Id path *body body SetChannelDisabled SetChannelDisabled Responses Status Code Type Description Samples 200 ChannelManagementInfo Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SetChannelDisabled MediaBrowser.LiveTV.Api.SetChannelDisabled Name Type Notes Id string ManagementId string Disabled boolean ChannelManagementInfo QueryResult_Emby.LiveTV.ChannelManagementInfo Name Type Notes Items ChannelManagementInfo[] TotalRecordCount integer (int32) ChannelManagementInfo Emby.LiveTV.ChannelManagementInfo Name Type Notes Id string Name string"
  },
  "reference/RestAPI/LiveTvService/postLivetvManageChannelsByIdSortindex.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvManageChannelsByIdSortindex.html",
    "title": "postLivetvManageChannelsByIdSortindex",
    "keywords": "postLivetvManageChannelsByIdSortindex Sets a channel sort index Requires authentication as administrator postLivetvManageChannelsByIdSortindex Request post /LiveTv/Manage/Channels/{Id}/SortIndex Parameters Name In Type Default Notes *Id path *body body SetChannelSortIndex SetChannelSortIndex Responses Status Code Type Description Samples 200 ChannelManagementInfo Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SetChannelSortIndex MediaBrowser.LiveTV.Api.SetChannelSortIndex Name Type Notes Id string ManagementId string NewIndex integer (int32) ChannelManagementInfo QueryResult_Emby.LiveTV.ChannelManagementInfo Name Type Notes Items ChannelManagementInfo[] TotalRecordCount integer (int32) ChannelManagementInfo Emby.LiveTV.ChannelManagementInfo Name Type Notes Id string Name string"
  },
  "reference/RestAPI/LiveTvService/postLivetvPrograms.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvPrograms.html",
    "title": "postLivetvPrograms",
    "keywords": "postLivetvPrograms Gets available live tv epgs.. Requires authentication as user postLivetvPrograms Request post /LiveTv/Programs Parameters Name In Type Default Notes ChannelIds query The channels to return guide information for. UserId query Optional filter by user id. HasAired query Optional. Filter by programs that have completed airing, or not. MinStartDate query Optional. The minimum premiere date. Format = ISO MaxStartDate query Optional. The maximum premiere date. Format = ISO MinEndDate query Optional. The minimum premiere date. Format = ISO MaxEndDate query Optional. The maximum premiere date. Format = ISO IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Name, StartDate SortOrder query Sort Order - Ascending,Descending GenreIds query The genres to return guide information for. EnableImages query Optional, include image information in output ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. EnableUserData query Optional, include user data Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines *body body GetPrograms GetPrograms Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions GetPrograms MediaBrowser.LiveTV.Api.GetPrograms Name Type Notes IsAiring boolean TagIds string ExcludeItemIds string EnableTotalRecordCount boolean SeriesTimerId string LibrarySeriesId string SeriesFromProgramId string ShowingsFromProgramId string GroupProgramsBySeries boolean QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/postLivetvRecordingsByIdDelete.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvRecordingsByIdDelete.html",
    "title": "postLivetvRecordingsByIdDelete",
    "keywords": "postLivetvRecordingsByIdDelete Deletes a live tv recording Requires authentication as user postLivetvRecordingsByIdDelete Request post /LiveTv/Recordings/{Id}/Delete Parameters Name In Type Default Notes *Id path Recording Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/postLivetvSeriestimers.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvSeriestimers.html",
    "title": "postLivetvSeriestimers",
    "keywords": "postLivetvSeriestimers Creates a live tv series timer Requires authentication as user postLivetvSeriestimers Request post /LiveTv/SeriesTimers Parameters Name In Type Default Notes *body body SeriesTimerInfo SeriesTimerInfo: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SeriesTimerInfo see also MediaBrowser.Controller.LiveTv.SeriesTimerInfo Name Type Notes Id string ChannelId string ChannelIds array ProgramId string Name string ServiceName string Overview string StartDate string (date-time) EndDate string (date-time) RecordAnyTime boolean KeepUpTo integer (int32) KeepUntil KeepUntil SkipEpisodesInLibrary boolean RecordNewOnly boolean Days DayOfWeek[] Priority integer (int32) PrePaddingSeconds integer (int32) PostPaddingSeconds integer (int32) IsPrePaddingRequired boolean IsPostPaddingRequired boolean SeriesId string ProviderIds ProviderIdDictionary MaxRecordingSeconds integer (int32) Keywords KeywordInfo[] TimerType TimerType KeepUntil see also MediaBrowser.Model.LiveTv.KeepUntil Enum Values UntilDeleted UntilSpaceNeeded UntilWatched UntilDate DayOfWeek see also System.DayOfWeek ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary KeywordInfo see also MediaBrowser.Model.LiveTv.KeywordInfo Name Type Notes KeywordType KeywordType Keyword string KeywordType see also MediaBrowser.Model.LiveTv.KeywordType Enum Values Name EpisodeTitle Overview Actor Director TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/postLivetvSeriestimersById.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvSeriestimersById.html",
    "title": "postLivetvSeriestimersById",
    "keywords": "postLivetvSeriestimersById Updates a live tv series timer Requires authentication as user postLivetvSeriestimersById Request post /LiveTv/SeriesTimers/{Id} Parameters Name In Type Default Notes *Id path *body body SeriesTimerInfo SeriesTimerInfo: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SeriesTimerInfo see also MediaBrowser.Controller.LiveTv.SeriesTimerInfo Name Type Notes Id string ChannelId string ChannelIds array ProgramId string Name string ServiceName string Overview string StartDate string (date-time) EndDate string (date-time) RecordAnyTime boolean KeepUpTo integer (int32) KeepUntil KeepUntil SkipEpisodesInLibrary boolean RecordNewOnly boolean Days DayOfWeek[] Priority integer (int32) PrePaddingSeconds integer (int32) PostPaddingSeconds integer (int32) IsPrePaddingRequired boolean IsPostPaddingRequired boolean SeriesId string ProviderIds ProviderIdDictionary MaxRecordingSeconds integer (int32) Keywords KeywordInfo[] TimerType TimerType KeepUntil see also MediaBrowser.Model.LiveTv.KeepUntil Enum Values UntilDeleted UntilSpaceNeeded UntilWatched UntilDate DayOfWeek see also System.DayOfWeek ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary KeywordInfo see also MediaBrowser.Model.LiveTv.KeywordInfo Name Type Notes KeywordType KeywordType Keyword string KeywordType see also MediaBrowser.Model.LiveTv.KeywordType Enum Values Name EpisodeTitle Overview Actor Director TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/LiveTvService/postLivetvSeriestimersByIdDelete.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvSeriestimersByIdDelete.html",
    "title": "postLivetvSeriestimersByIdDelete",
    "keywords": "postLivetvSeriestimersByIdDelete Cancels a live tv series timer Requires authentication as user postLivetvSeriestimersByIdDelete Request post /LiveTv/SeriesTimers/{Id}/Delete Parameters Name In Type Default Notes *Id path Timer Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/postLivetvTimers.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvTimers.html",
    "title": "postLivetvTimers",
    "keywords": "postLivetvTimers Creates a live tv timer Requires authentication as user postLivetvTimers Request post /LiveTv/Timers Parameters Name In Type Default Notes *body body TimerInfoDto TimerInfoDto: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TimerInfoDto see also MediaBrowser.Model.LiveTv.TimerInfoDto Name Type Notes Status RecordingStatus SeriesTimerId string RunTimeTicks integer (int64) ProgramInfo BaseItemDto[] TimerType TimerType Id string Type string ServerId string ChannelId string ChannelName string ChannelPrimaryImageTag string ProgramId string Name string Overview string StartDate string (date-time) EndDate string (date-time) Priority integer (int32) PrePaddingSeconds integer (int32) PostPaddingSeconds integer (int32) IsPrePaddingRequired boolean ParentBackdropItemId string ParentBackdropImageTags array IsPostPaddingRequired boolean KeepUntil KeepUntil RecordingStatus see also MediaBrowser.Model.LiveTv.RecordingStatus Enum Values New InProgress Completed Cancelled ConflictedOk ConflictedNotOk Error BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword KeepUntil see also MediaBrowser.Model.LiveTv.KeepUntil Enum Values UntilDeleted UntilSpaceNeeded UntilWatched UntilDate"
  },
  "reference/RestAPI/LiveTvService/postLivetvTimersById.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvTimersById.html",
    "title": "postLivetvTimersById",
    "keywords": "postLivetvTimersById Updates a live tv timer Requires authentication as user postLivetvTimersById Request post /LiveTv/Timers/{Id} Parameters Name In Type Default Notes *Id path *body body TimerInfoDto TimerInfoDto: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TimerInfoDto see also MediaBrowser.Model.LiveTv.TimerInfoDto Name Type Notes Status RecordingStatus SeriesTimerId string RunTimeTicks integer (int64) ProgramInfo BaseItemDto[] TimerType TimerType Id string Type string ServerId string ChannelId string ChannelName string ChannelPrimaryImageTag string ProgramId string Name string Overview string StartDate string (date-time) EndDate string (date-time) Priority integer (int32) PrePaddingSeconds integer (int32) PostPaddingSeconds integer (int32) IsPrePaddingRequired boolean ParentBackdropItemId string ParentBackdropImageTags array IsPostPaddingRequired boolean KeepUntil KeepUntil RecordingStatus see also MediaBrowser.Model.LiveTv.RecordingStatus Enum Values New InProgress Completed Cancelled ConflictedOk ConflictedNotOk Error BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword KeepUntil see also MediaBrowser.Model.LiveTv.KeepUntil Enum Values UntilDeleted UntilSpaceNeeded UntilWatched UntilDate"
  },
  "reference/RestAPI/LiveTvService/postLivetvTimersByIdDelete.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvTimersByIdDelete.html",
    "title": "postLivetvTimersByIdDelete",
    "keywords": "postLivetvTimersByIdDelete Cancels a live tv timer Requires authentication as user postLivetvTimersByIdDelete Request post /LiveTv/Timers/{Id}/Delete Parameters Name In Type Default Notes *Id path Timer Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/postLivetvTunerhosts.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvTunerhosts.html",
    "title": "postLivetvTunerhosts",
    "keywords": "postLivetvTunerhosts Adds a tuner host Requires authentication as administrator postLivetvTunerhosts Request post /LiveTv/TunerHosts Parameters Name In Type Default Notes *body body TunerHostInfo TunerHostInfo: Responses Status Code Type Description Samples 200 TunerHostInfo Operation successful. Returning a TunerHostInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TunerHostInfo see also MediaBrowser.Model.LiveTv.TunerHostInfo Name Type Notes Id string Url string Type string DeviceId string FriendlyName string SetupUrl string ImportFavoritesOnly boolean AllowHWTranscoding boolean Source string TunerCount integer (int32) UserAgent string Referrer string ProviderOptions string DataVersion integer (int32)"
  },
  "reference/RestAPI/LiveTvService/postLivetvTunerhostsDelete.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvTunerhostsDelete.html",
    "title": "postLivetvTunerhostsDelete",
    "keywords": "postLivetvTunerhostsDelete Deletes a tuner host Requires authentication as administrator postLivetvTunerhostsDelete Request post /LiveTv/TunerHosts/Delete Parameters Name In Type Default Notes Id query Tuner host id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/postLivetvTunersByIdReset.html": {
    "href": "reference/RestAPI/LiveTvService/postLivetvTunersByIdReset.html",
    "title": "postLivetvTunersByIdReset",
    "keywords": "postLivetvTunersByIdReset Resets a tv tuner Requires authentication as administrator postLivetvTunersByIdReset Request post /LiveTv/Tuners/{Id}/Reset Parameters Name In Type Default Notes *Id path Tuner Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/putLivetvChannelmappingoptions.html": {
    "href": "reference/RestAPI/LiveTvService/putLivetvChannelmappingoptions.html",
    "title": "putLivetvChannelmappingoptions",
    "keywords": "putLivetvChannelmappingoptions Requires authentication as administrator putLivetvChannelmappingoptions Request put /LiveTv/ChannelMappingOptions Parameters Name In Type Default Notes *ProviderId query Provider id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/LiveTvService/putLivetvChannelmappings.html": {
    "href": "reference/RestAPI/LiveTvService/putLivetvChannelmappings.html",
    "title": "putLivetvChannelmappings",
    "keywords": "putLivetvChannelmappings Requires authentication as administrator putLivetvChannelmappings Request put /LiveTv/ChannelMappings Parameters Name In Type Default Notes *ProviderId query Provider id *body body SetChannelMapping SetChannelMapping Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SetChannelMapping MediaBrowser.LiveTV.Api.SetChannelMapping Name Type Notes TunerChannelId string ProviderChannelId string"
  },
  "reference/RestAPI/LocalizationService.html": {
    "href": "reference/RestAPI/LocalizationService.html",
    "title": "LocalizationService",
    "keywords": "LocalizationService API Documentation Wiki getLocalizationCountries get /Localization/Countries Gets known countries getLocalizationCultures get /Localization/Cultures Gets known cultures getLocalizationOptions get /Localization/Options Gets localization options getLocalizationParentalratings get /Localization/ParentalRatings Gets known parental ratings"
  },
  "reference/RestAPI/LocalizationService/getLocalizationCountries.html": {
    "href": "reference/RestAPI/LocalizationService/getLocalizationCountries.html",
    "title": "getLocalizationCountries",
    "keywords": "getLocalizationCountries Gets known countries Requires authentication as user getLocalizationCountries Request get /Localization/Countries Responses Status Code Type Description Samples 200 CountryInfo [] Operation successful. Returning a CountryInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions CountryInfo see also MediaBrowser.Model.Globalization.CountryInfo Name Type Notes Name string DisplayName string EnglishName string TwoLetterISORegionName string ThreeLetterISORegionName string"
  },
  "reference/RestAPI/LocalizationService/getLocalizationCultures.html": {
    "href": "reference/RestAPI/LocalizationService/getLocalizationCultures.html",
    "title": "getLocalizationCultures",
    "keywords": "getLocalizationCultures Gets known cultures Requires authentication as user getLocalizationCultures Request get /Localization/Cultures Responses Status Code Type Description Samples 200 CultureDto [] Operation successful. Returning a CultureDto[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions CultureDto see also MediaBrowser.Model.Globalization.CultureDto Name Type Notes Name string DisplayName string TwoLetterISOLanguageName string ThreeLetterISOLanguageName string ThreeLetterISOLanguageNames array TwoLetterISOLanguageNames array"
  },
  "reference/RestAPI/LocalizationService/getLocalizationOptions.html": {
    "href": "reference/RestAPI/LocalizationService/getLocalizationOptions.html",
    "title": "getLocalizationOptions",
    "keywords": "getLocalizationOptions Gets localization options Requires authentication as user getLocalizationOptions Request get /Localization/Options Responses Status Code Type Description Samples 200 LocalizatonOption [] Operation successful. Returning a LocalizatonOption[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions LocalizatonOption see also MediaBrowser.Model.Globalization.LocalizatonOption Name Type Notes Name string Value string"
  },
  "reference/RestAPI/LocalizationService/getLocalizationParentalratings.html": {
    "href": "reference/RestAPI/LocalizationService/getLocalizationParentalratings.html",
    "title": "getLocalizationParentalratings",
    "keywords": "getLocalizationParentalratings Gets known parental ratings Requires authentication as user getLocalizationParentalratings Request get /Localization/ParentalRatings Responses Status Code Type Description Samples 200 ParentalRating [] Operation successful. Returning a ParentalRating[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ParentalRating see also MediaBrowser.Model.Entities.ParentalRating Name Type Notes Name string Value integer (int32)"
  },
  "reference/RestAPI/MediaInfoService.html": {
    "href": "reference/RestAPI/MediaInfoService.html",
    "title": "MediaInfoService",
    "keywords": "MediaInfoService API Documentation Wiki getItemsByIdPlaybackinfo get /Items/{Id}/PlaybackInfo Gets live playback media info for an item getPlaybackBitratetest get /Playback/BitrateTest postItemsByIdPlaybackinfo post /Items/{Id}/PlaybackInfo Gets live playback media info for an item postLivestreamsClose post /LiveStreams/Close Closes a media source postLivestreamsMediainfo post /LiveStreams/MediaInfo Closes a media source postLivestreamsOpen post /LiveStreams/Open Opens a media source"
  },
  "reference/RestAPI/MediaInfoService/getItemsByIdPlaybackinfo.html": {
    "href": "reference/RestAPI/MediaInfoService/getItemsByIdPlaybackinfo.html",
    "title": "getItemsByIdPlaybackinfo",
    "keywords": "getItemsByIdPlaybackinfo Gets live playback media info for an item Requires authentication as user getItemsByIdPlaybackinfo Request get /Items/{Id}/PlaybackInfo Parameters Name In Type Default Notes *Id path Item Id *UserId query User Id Responses Status Code Type Description Samples 200 PlaybackInfoResponse Operation successful. Returning a PlaybackInfoResponse object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PlaybackInfoResponse see also MediaBrowser.Model.MediaInfo.PlaybackInfoResponse Name Type Notes MediaSources MediaSourceInfo[] PlaySessionId string ErrorCode PlaybackErrorCode MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlaybackErrorCode see also MediaBrowser.Model.Dlna.PlaybackErrorCode Enum Values NotAllowed NoCompatibleStream RateLimitExceeded"
  },
  "reference/RestAPI/MediaInfoService/getPlaybackBitratetest.html": {
    "href": "reference/RestAPI/MediaInfoService/getPlaybackBitratetest.html",
    "title": "getPlaybackBitratetest",
    "keywords": "getPlaybackBitratetest Requires authentication as user getPlaybackBitratetest Request get /Playback/BitrateTest Parameters Name In Type Default Notes *Size query Size Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/MediaInfoService/postItemsByIdPlaybackinfo.html": {
    "href": "reference/RestAPI/MediaInfoService/postItemsByIdPlaybackinfo.html",
    "title": "postItemsByIdPlaybackinfo",
    "keywords": "postItemsByIdPlaybackinfo Gets live playback media info for an item Requires authentication as user postItemsByIdPlaybackinfo Request post /Items/{Id}/PlaybackInfo Parameters Name In Type Default Notes *Id path *body body PlaybackInfoRequest PlaybackInfoRequest: Responses Status Code Type Description Samples 200 PlaybackInfoResponse Operation successful. Returning a PlaybackInfoResponse object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PlaybackInfoRequest see also MediaBrowser.Model.MediaInfo.PlaybackInfoRequest Name Type Notes Id string UserId string MaxStreamingBitrate integer (int64) StartTimeTicks integer (int64) AudioStreamIndex integer (int32) SubtitleStreamIndex integer (int32) MaxAudioChannels integer (int32) MediaSourceId string LiveStreamId string DeviceProfile DeviceProfile[] EnableDirectPlay boolean EnableDirectStream boolean EnableTranscoding boolean AllowInterlacedVideoStreamCopy boolean AllowVideoStreamCopy boolean AllowAudioStreamCopy boolean IsPlayback boolean AutoOpenLiveStream boolean DirectPlayProtocols MediaProtocol[] CurrentPlaySessionId string DeviceProfile see also MediaBrowser.Model.Dlna.DeviceProfile Name Type Notes Name string Id string SupportedMediaTypes string MaxStreamingBitrate integer (int64) MusicStreamingTranscodingBitrate integer (int32) MaxStaticMusicBitrate integer (int32) DirectPlayProfiles DirectPlayProfile[] TranscodingProfiles TranscodingProfile[] ContainerProfiles ContainerProfile[] CodecProfiles CodecProfile[] ResponseProfiles ResponseProfile[] SubtitleProfiles SubtitleProfile[] DirectPlayProfile see also MediaBrowser.Model.Dlna.DirectPlayProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType DlnaProfileType see also MediaBrowser.Model.Dlna.DlnaProfileType Enum Values Audio Video Photo TranscodingProfile see also MediaBrowser.Model.Dlna.TranscodingProfile Name Type Notes Container string Type DlnaProfileType VideoCodec string AudioCodec string Protocol string EstimateContentLength boolean EnableMpegtsM2TsMode boolean TranscodeSeekInfo TranscodeSeekInfo CopyTimestamps boolean Context EncodingContext MaxAudioChannels string MinSegments integer (int32) SegmentLength integer (int32) BreakOnNonKeyFrames boolean AllowInterlacedVideoStreamCopy boolean ManifestSubtitles string MaxManifestSubtitles integer (int32) TranscodeSeekInfo see also MediaBrowser.Model.Dlna.TranscodeSeekInfo Enum Values Auto Bytes EncodingContext see also MediaBrowser.Model.Dlna.EncodingContext Enum Values Streaming Static ContainerProfile see also MediaBrowser.Model.Dlna.ContainerProfile Name Type Notes Type DlnaProfileType Conditions ProfileCondition[] Container string ProfileCondition see also MediaBrowser.Model.Dlna.ProfileCondition Name Type Notes Condition ProfileConditionType Property ProfileConditionValue Value string IsRequired boolean ProfileConditionType see also MediaBrowser.Model.Dlna.ProfileConditionType Enum Values Equals NotEquals LessThanEqual GreaterThanEqual EqualsAny ProfileConditionValue see also MediaBrowser.Model.Dlna.ProfileConditionValue Enum Values AudioChannels AudioBitrate AudioProfile Width Height Has64BitOffsets PacketLength VideoBitDepth VideoBitrate VideoFramerate VideoLevel VideoProfile VideoTimestamp IsAnamorphic RefFrames NumAudioStreams NumVideoStreams IsSecondaryAudio VideoCodecTag IsAvc IsInterlaced AudioSampleRate AudioBitDepth VideoRange CodecProfile see also MediaBrowser.Model.Dlna.CodecProfile Name Type Notes Type CodecType Conditions ProfileCondition[] ApplyConditions ProfileCondition[] Codec string Container string CodecType see also MediaBrowser.Model.Dlna.CodecType Enum Values Video VideoAudio Audio ResponseProfile see also MediaBrowser.Model.Dlna.ResponseProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType OrgPn string MimeType string Conditions ProfileCondition[] SubtitleProfile see also MediaBrowser.Model.Dlna.SubtitleProfile Name Type Notes Format string Method SubtitleDeliveryMethod DidlMode string Language string Container string Protocol string SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol PlaybackInfoResponse see also MediaBrowser.Model.MediaInfo.PlaybackInfoResponse Name Type Notes MediaSources MediaSourceInfo[] PlaySessionId string ErrorCode PlaybackErrorCode MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlaybackErrorCode see also MediaBrowser.Model.Dlna.PlaybackErrorCode Enum Values NotAllowed NoCompatibleStream RateLimitExceeded"
  },
  "reference/RestAPI/MediaInfoService/postLivestreamsClose.html": {
    "href": "reference/RestAPI/MediaInfoService/postLivestreamsClose.html",
    "title": "postLivestreamsClose",
    "keywords": "postLivestreamsClose Closes a media source Requires authentication as user postLivestreamsClose Request post /LiveStreams/Close Parameters Name In Type Default Notes *LiveStreamId query LiveStreamId Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/MediaInfoService/postLivestreamsMediainfo.html": {
    "href": "reference/RestAPI/MediaInfoService/postLivestreamsMediainfo.html",
    "title": "postLivestreamsMediainfo",
    "keywords": "postLivestreamsMediainfo Closes a media source Requires authentication as user postLivestreamsMediainfo Request post /LiveStreams/MediaInfo Parameters Name In Type Default Notes *LiveStreamId query LiveStreamId Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/MediaInfoService/postLivestreamsOpen.html": {
    "href": "reference/RestAPI/MediaInfoService/postLivestreamsOpen.html",
    "title": "postLivestreamsOpen",
    "keywords": "postLivestreamsOpen Opens a media source Requires authentication as user postLivestreamsOpen Request post /LiveStreams/Open Parameters Name In Type Default Notes *body body LiveStreamRequest LiveStreamRequest: Responses Status Code Type Description Samples 200 LiveStreamResponse Operation successful. Returning a LiveStreamResponse object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions LiveStreamRequest see also MediaBrowser.Model.MediaInfo.LiveStreamRequest Name Type Notes OpenToken string UserId string PlaySessionId string MaxStreamingBitrate integer (int64) StartTimeTicks integer (int64) AudioStreamIndex integer (int32) SubtitleStreamIndex integer (int32) MaxAudioChannels integer (int32) ItemId integer (int64) DeviceProfile DeviceProfile[] EnableDirectPlay boolean EnableDirectStream boolean EnableTranscoding boolean AllowVideoStreamCopy boolean AllowInterlacedVideoStreamCopy boolean AllowAudioStreamCopy boolean DirectPlayProtocols MediaProtocol[] DeviceProfile see also MediaBrowser.Model.Dlna.DeviceProfile Name Type Notes Name string Id string SupportedMediaTypes string MaxStreamingBitrate integer (int64) MusicStreamingTranscodingBitrate integer (int32) MaxStaticMusicBitrate integer (int32) DirectPlayProfiles DirectPlayProfile[] TranscodingProfiles TranscodingProfile[] ContainerProfiles ContainerProfile[] CodecProfiles CodecProfile[] ResponseProfiles ResponseProfile[] SubtitleProfiles SubtitleProfile[] DirectPlayProfile see also MediaBrowser.Model.Dlna.DirectPlayProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType DlnaProfileType see also MediaBrowser.Model.Dlna.DlnaProfileType Enum Values Audio Video Photo TranscodingProfile see also MediaBrowser.Model.Dlna.TranscodingProfile Name Type Notes Container string Type DlnaProfileType VideoCodec string AudioCodec string Protocol string EstimateContentLength boolean EnableMpegtsM2TsMode boolean TranscodeSeekInfo TranscodeSeekInfo CopyTimestamps boolean Context EncodingContext MaxAudioChannels string MinSegments integer (int32) SegmentLength integer (int32) BreakOnNonKeyFrames boolean AllowInterlacedVideoStreamCopy boolean ManifestSubtitles string MaxManifestSubtitles integer (int32) TranscodeSeekInfo see also MediaBrowser.Model.Dlna.TranscodeSeekInfo Enum Values Auto Bytes EncodingContext see also MediaBrowser.Model.Dlna.EncodingContext Enum Values Streaming Static ContainerProfile see also MediaBrowser.Model.Dlna.ContainerProfile Name Type Notes Type DlnaProfileType Conditions ProfileCondition[] Container string ProfileCondition see also MediaBrowser.Model.Dlna.ProfileCondition Name Type Notes Condition ProfileConditionType Property ProfileConditionValue Value string IsRequired boolean ProfileConditionType see also MediaBrowser.Model.Dlna.ProfileConditionType Enum Values Equals NotEquals LessThanEqual GreaterThanEqual EqualsAny ProfileConditionValue see also MediaBrowser.Model.Dlna.ProfileConditionValue Enum Values AudioChannels AudioBitrate AudioProfile Width Height Has64BitOffsets PacketLength VideoBitDepth VideoBitrate VideoFramerate VideoLevel VideoProfile VideoTimestamp IsAnamorphic RefFrames NumAudioStreams NumVideoStreams IsSecondaryAudio VideoCodecTag IsAvc IsInterlaced AudioSampleRate AudioBitDepth VideoRange CodecProfile see also MediaBrowser.Model.Dlna.CodecProfile Name Type Notes Type CodecType Conditions ProfileCondition[] ApplyConditions ProfileCondition[] Codec string Container string CodecType see also MediaBrowser.Model.Dlna.CodecType Enum Values Video VideoAudio Audio ResponseProfile see also MediaBrowser.Model.Dlna.ResponseProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType OrgPn string MimeType string Conditions ProfileCondition[] SubtitleProfile see also MediaBrowser.Model.Dlna.SubtitleProfile Name Type Notes Format string Method SubtitleDeliveryMethod DidlMode string Language string Container string Protocol string SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol LiveStreamResponse see also MediaBrowser.Model.MediaInfo.LiveStreamResponse Name Type Notes MediaSource MediaSourceInfo[] MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid"
  },
  "reference/RestAPI/MoviesService.html": {
    "href": "reference/RestAPI/MoviesService.html",
    "title": "MoviesService",
    "keywords": "MoviesService API Documentation Wiki getMoviesRecommendations get /Movies/Recommendations Gets movie recommendations"
  },
  "reference/RestAPI/MoviesService/getMoviesRecommendations.html": {
    "href": "reference/RestAPI/MoviesService/getMoviesRecommendations.html",
    "title": "getMoviesRecommendations",
    "keywords": "getMoviesRecommendations Gets movie recommendations Requires authentication as user getMoviesRecommendations Request get /Movies/Recommendations Parameters Name In Type Default Notes CategoryLimit query The max number of categories to return ItemLimit query The max number of items to return per category UserId query Optional. Filter by user id, and attach user data ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Responses Status Code Type Description Samples 200 RecommendationDto [] Operation successful. Returning a RecommendationDto[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions RecommendationDto see also MediaBrowser.Model.Dto.RecommendationDto Name Type Notes Items BaseItemDto[] RecommendationType RecommendationType BaselineItemName string CategoryId integer (int64) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword RecommendationType see also MediaBrowser.Model.Dto.RecommendationType Enum Values SimilarToRecentlyPlayed SimilarToLikedItem HasDirectorFromRecentlyPlayed HasActorFromRecentlyPlayed HasLikedDirector HasLikedActor"
  },
  "reference/RestAPI/MusicGenresService.html": {
    "href": "reference/RestAPI/MusicGenresService.html",
    "title": "MusicGenresService",
    "keywords": "MusicGenresService API Documentation: Items by name getMusicgenres get /MusicGenres Gets all music genres from a given item, folder, or the entire library getMusicgenresByName get /MusicGenres/{Name} Gets a music genre, by name"
  },
  "reference/RestAPI/MusicGenresService/getMusicgenres.html": {
    "href": "reference/RestAPI/MusicGenresService/getMusicgenres.html",
    "title": "getMusicgenres",
    "keywords": "getMusicgenres Gets all music genres from a given item, folder, or the entire library Requires authentication as user getMusicgenres Request get /MusicGenres Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/MusicGenresService/getMusicgenresByName.html": {
    "href": "reference/RestAPI/MusicGenresService/getMusicgenresByName.html",
    "title": "getMusicgenresByName",
    "keywords": "getMusicgenresByName Gets a music genre, by name Requires authentication as user getMusicgenresByName Request get /MusicGenres/{Name} Parameters Name In Type Default Notes *Name path The genre name UserId query Optional. Filter by user id, and attach user data Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/NotificationsService.html": {
    "href": "reference/RestAPI/NotificationsService.html",
    "title": "NotificationsService",
    "keywords": "NotificationsService API Documentation Wiki getNotificationsByUserid get /Notifications/{UserId} Gets notifications getNotificationsByUseridSummary get /Notifications/{UserId}/Summary Gets a notification summary for a user getNotificationsServices get /Notifications/Services Gets notification types getNotificationsTypes get /Notifications/Types Gets notification types postNotificationsAdmin post /Notifications/Admin Sends a notification to all admin users postNotificationsByUseridRead post /Notifications/{UserId}/Read Marks notifications as read postNotificationsByUseridUnread post /Notifications/{UserId}/Unread Marks notifications as unread"
  },
  "reference/RestAPI/NotificationsService/getNotificationsByUserid.html": {
    "href": "reference/RestAPI/NotificationsService/getNotificationsByUserid.html",
    "title": "getNotificationsByUserid",
    "keywords": "getNotificationsByUserid Gets notifications Requires authentication as user getNotificationsByUserid Request get /Notifications/{UserId} Parameters Name In Type Default Notes *UserId path User Id IsRead query An optional filter by IsRead StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Responses Status Code Type Description Samples 200 NotificationResult Operation successful. Returning a NotificationResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions NotificationResult Emby.Notifications.Api.NotificationResult Name Type Notes Notifications Notification[] TotalRecordCount integer (int32) Notification Emby.Notifications.Api.Notification Name Type Notes Id string UserId string Date string (date-time) IsRead boolean Name string Description string Url string Level NotificationLevel NotificationLevel see also MediaBrowser.Model.Notifications.NotificationLevel Enum Values Normal Warning Error"
  },
  "reference/RestAPI/NotificationsService/getNotificationsByUseridSummary.html": {
    "href": "reference/RestAPI/NotificationsService/getNotificationsByUseridSummary.html",
    "title": "getNotificationsByUseridSummary",
    "keywords": "getNotificationsByUseridSummary Gets a notification summary for a user Requires authentication as user getNotificationsByUseridSummary Request get /Notifications/{UserId}/Summary Parameters Name In Type Default Notes *UserId path User Id Responses Status Code Type Description Samples 200 NotificationsSummary Operation successful. Returning a NotificationsSummary object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions NotificationsSummary Emby.Notifications.Api.NotificationsSummary Name Type Notes UnreadCount integer (int32) MaxUnreadNotificationLevel NotificationLevel NotificationLevel see also MediaBrowser.Model.Notifications.NotificationLevel Enum Values Normal Warning Error"
  },
  "reference/RestAPI/NotificationsService/getNotificationsServices.html": {
    "href": "reference/RestAPI/NotificationsService/getNotificationsServices.html",
    "title": "getNotificationsServices",
    "keywords": "getNotificationsServices Gets notification types Requires authentication as user getNotificationsServices Request get /Notifications/Services Responses Status Code Type Description Samples 200 NameIdPair [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string"
  },
  "reference/RestAPI/NotificationsService/getNotificationsTypes.html": {
    "href": "reference/RestAPI/NotificationsService/getNotificationsTypes.html",
    "title": "getNotificationsTypes",
    "keywords": "getNotificationsTypes Gets notification types Requires authentication as user getNotificationsTypes Request get /Notifications/Types Responses Status Code Type Description Samples 200 NotificationTypeInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions NotificationTypeInfo see also MediaBrowser.Model.Notifications.NotificationTypeInfo Name Type Notes Type string Name string Enabled boolean Category string IsBasedOnUserEvent boolean"
  },
  "reference/RestAPI/NotificationsService/postNotificationsAdmin.html": {
    "href": "reference/RestAPI/NotificationsService/postNotificationsAdmin.html",
    "title": "postNotificationsAdmin",
    "keywords": "postNotificationsAdmin Sends a notification to all admin users Requires authentication as user postNotificationsAdmin Request post /Notifications/Admin Parameters Name In Type Default Notes *Name query The notification's name *Description query The notification's description ImageUrl query The notification's image url Url query The notification's info url Level query The notification level Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/NotificationsService/postNotificationsByUseridRead.html": {
    "href": "reference/RestAPI/NotificationsService/postNotificationsByUseridRead.html",
    "title": "postNotificationsByUseridRead",
    "keywords": "postNotificationsByUseridRead Marks notifications as read Requires authentication as user postNotificationsByUseridRead Request post /Notifications/{UserId}/Read Parameters Name In Type Default Notes *UserId path User Id *Ids query A list of notification ids, comma delimited Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/NotificationsService/postNotificationsByUseridUnread.html": {
    "href": "reference/RestAPI/NotificationsService/postNotificationsByUseridUnread.html",
    "title": "postNotificationsByUseridUnread",
    "keywords": "postNotificationsByUseridUnread Marks notifications as unread Requires authentication as user postNotificationsByUseridUnread Request post /Notifications/{UserId}/Unread Parameters Name In Type Default Notes *UserId path User Id *Ids query A list of notification ids, comma delimited Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/OfficialRatingService.html": {
    "href": "reference/RestAPI/OfficialRatingService.html",
    "title": "OfficialRatingService",
    "keywords": "OfficialRatingService API Documentation Wiki getOfficialratings get /OfficialRatings Gets items based on a query."
  },
  "reference/RestAPI/OfficialRatingService/getOfficialratings.html": {
    "href": "reference/RestAPI/OfficialRatingService/getOfficialratings.html",
    "title": "getOfficialratings",
    "keywords": "getOfficialratings Gets items based on a query. No authentication required getOfficialratings Request get /OfficialRatings Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 OfficialRatingItem Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions OfficialRatingItem QueryResult_UserLibrary.OfficialRatingItem Name Type Notes Items OfficialRatingItem[] TotalRecordCount integer (int32) OfficialRatingItem Emby.Api.UserLibrary.OfficialRatingItem Name Type Notes Name string"
  },
  "reference/RestAPI/OpenApiService.html": {
    "href": "reference/RestAPI/OpenApiService.html",
    "title": "OpenApiService",
    "keywords": "OpenApiService API Documentation Wiki getOpenapi get /openapi Gets the OpenAPI 3 specifications getOpenapiJson get /openapi.json Gets OpenAPI 3 specifications getSwagger get /swagger Gets the swagger specifications getSwaggerJson get /swagger.json Gets the swagger specifications"
  },
  "reference/RestAPI/OpenApiService/getOpenapi.html": {
    "href": "reference/RestAPI/OpenApiService/getOpenapi.html",
    "title": "getOpenapi",
    "keywords": "getOpenapi Gets the OpenAPI 3 specifications No authentication required getOpenapi Request get /openapi Responses Status Code Type Description Samples 200 string Operation successful. Returning a String object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/OpenApiService/getOpenapiJson.html": {
    "href": "reference/RestAPI/OpenApiService/getOpenapiJson.html",
    "title": "getOpenapiJson",
    "keywords": "getOpenapiJson Gets OpenAPI 3 specifications No authentication required getOpenapiJson Request get /openapi.json Responses Status Code Type Description Samples 200 string Operation successful. Returning a String object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/OpenApiService/getSwagger.html": {
    "href": "reference/RestAPI/OpenApiService/getSwagger.html",
    "title": "getSwagger",
    "keywords": "getSwagger Gets the swagger specifications No authentication required getSwagger Request get /swagger Responses Status Code Type Description Samples 200 string Operation successful. Returning a String object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/OpenApiService/getSwaggerJson.html": {
    "href": "reference/RestAPI/OpenApiService/getSwaggerJson.html",
    "title": "getSwaggerJson",
    "keywords": "getSwaggerJson Gets the swagger specifications No authentication required getSwaggerJson Request get /swagger.json Responses Status Code Type Description Samples 200 string Operation successful. Returning a String object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PackageService.html": {
    "href": "reference/RestAPI/PackageService.html",
    "title": "PackageService",
    "keywords": "PackageService API Documentation Wiki deletePackagesInstallingById delete /Packages/Installing/{Id} Cancels a package installation getPackages get /Packages Gets available packages getPackagesByName get /Packages/{Name} Gets a package, by name or assembly guid getPackagesUpdates get /Packages/Updates Gets available package updates for currently installed packages postPackagesInstalledByName post /Packages/Installed/{Name} Installs a package postPackagesInstallingByIdDelete post /Packages/Installing/{Id}/Delete Cancels a package installation"
  },
  "reference/RestAPI/PackageService/deletePackagesInstallingById.html": {
    "href": "reference/RestAPI/PackageService/deletePackagesInstallingById.html",
    "title": "deletePackagesInstallingById",
    "keywords": "deletePackagesInstallingById Cancels a package installation Requires authentication as administrator deletePackagesInstallingById Request delete /Packages/Installing/{Id} Parameters Name In Type Default Notes *Id path Installation Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PackageService/getPackages.html": {
    "href": "reference/RestAPI/PackageService/getPackages.html",
    "title": "getPackages",
    "keywords": "getPackages Gets available packages Requires authentication as user getPackages Request get /Packages Parameters Name In Type Default Notes PackageType query Optional package type filter (System/UserInstalled) TargetSystems query Optional. Filter by target system type. Allows multiple, comma delimited. IsPremium query Optional. Filter by premium status IsAdult query Optional. Filter by package that contain adult content. Responses Status Code Type Description Samples 200 PackageInfo [] Operation successful. Returning a PackageInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PackageInfo see also MediaBrowser.Model.Updates.PackageInfo Name Type Notes id string name string shortDescription string overview string isPremium boolean adult boolean richDescUrl string thumbImage string previewImage string type string targetFilename string owner string category string tileColor string featureId string regInfo string price number (float) targetSystem PackageTargetSystem guid string totalRatings integer (int32) avgRating number (float) isRegistered boolean expDate string (date-time) versions PackageVersionInfo[] enableInAppStore boolean installs integer (int32) PackageTargetSystem see also MediaBrowser.Model.Updates.PackageTargetSystem Enum Values Server MBTheater MBClassic Other PackageVersionInfo see also MediaBrowser.Model.Updates.PackageVersionInfo Name Type Notes name string guid string versionStr string classification PackageVersionClass description string requiredVersionStr string sourceUrl string checksum string targetFilename string infoUrl string runtimes string PackageVersionClass see also MediaBrowser.Model.Updates.PackageVersionClass Enum Values Release Beta Dev"
  },
  "reference/RestAPI/PackageService/getPackagesByName.html": {
    "href": "reference/RestAPI/PackageService/getPackagesByName.html",
    "title": "getPackagesByName",
    "keywords": "getPackagesByName Gets a package, by name or assembly guid Requires authentication as user getPackagesByName Request get /Packages/{Name} Parameters Name In Type Default Notes *Name path The name of the package AssemblyGuid query The guid of the associated assembly Responses Status Code Type Description Samples 200 PackageInfo Operation successful. Returning a PackageInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PackageInfo see also MediaBrowser.Model.Updates.PackageInfo Name Type Notes id string name string shortDescription string overview string isPremium boolean adult boolean richDescUrl string thumbImage string previewImage string type string targetFilename string owner string category string tileColor string featureId string regInfo string price number (float) targetSystem PackageTargetSystem guid string totalRatings integer (int32) avgRating number (float) isRegistered boolean expDate string (date-time) versions PackageVersionInfo[] enableInAppStore boolean installs integer (int32) PackageTargetSystem see also MediaBrowser.Model.Updates.PackageTargetSystem Enum Values Server MBTheater MBClassic Other PackageVersionInfo see also MediaBrowser.Model.Updates.PackageVersionInfo Name Type Notes name string guid string versionStr string classification PackageVersionClass description string requiredVersionStr string sourceUrl string checksum string targetFilename string infoUrl string runtimes string PackageVersionClass see also MediaBrowser.Model.Updates.PackageVersionClass Enum Values Release Beta Dev"
  },
  "reference/RestAPI/PackageService/getPackagesUpdates.html": {
    "href": "reference/RestAPI/PackageService/getPackagesUpdates.html",
    "title": "getPackagesUpdates",
    "keywords": "getPackagesUpdates Gets available package updates for currently installed packages Requires authentication as administrator getPackagesUpdates Request get /Packages/Updates Parameters Name In Type Default Notes *PackageType query Package type filter (System/UserInstalled) Responses Status Code Type Description Samples 200 PackageVersionInfo [] Operation successful. Returning a PackageVersionInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PackageVersionInfo see also MediaBrowser.Model.Updates.PackageVersionInfo Name Type Notes name string guid string versionStr string classification PackageVersionClass description string requiredVersionStr string sourceUrl string checksum string targetFilename string infoUrl string runtimes string PackageVersionClass see also MediaBrowser.Model.Updates.PackageVersionClass Enum Values Release Beta Dev"
  },
  "reference/RestAPI/PackageService/postPackagesInstalledByName.html": {
    "href": "reference/RestAPI/PackageService/postPackagesInstalledByName.html",
    "title": "postPackagesInstalledByName",
    "keywords": "postPackagesInstalledByName Installs a package Requires authentication as administrator postPackagesInstalledByName Request post /Packages/Installed/{Name} Parameters Name In Type Default Notes *Name path Package name AssemblyGuid query Guid of the associated assembly Version query Optional version. Defaults to latest version. UpdateClass query Optional update class (Dev, Beta, Release). Defaults to Release. Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PackageService/postPackagesInstallingByIdDelete.html": {
    "href": "reference/RestAPI/PackageService/postPackagesInstallingByIdDelete.html",
    "title": "postPackagesInstallingByIdDelete",
    "keywords": "postPackagesInstallingByIdDelete Cancels a package installation Requires authentication as administrator postPackagesInstallingByIdDelete Request post /Packages/Installing/{Id}/Delete Parameters Name In Type Default Notes *Id path Installation Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PersonsService.html": {
    "href": "reference/RestAPI/PersonsService.html",
    "title": "PersonsService",
    "keywords": "PersonsService API Documentation: Items by name getPersons get /Persons Gets all persons from a given item, folder, or the entire library getPersonsByName get /Persons/{Name} Gets a person, by name"
  },
  "reference/RestAPI/PersonsService/getPersons.html": {
    "href": "reference/RestAPI/PersonsService/getPersons.html",
    "title": "getPersons",
    "keywords": "getPersons Gets all persons from a given item, folder, or the entire library Requires authentication as user getPersons Request get /Persons Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/PersonsService/getPersonsByName.html": {
    "href": "reference/RestAPI/PersonsService/getPersonsByName.html",
    "title": "getPersonsByName",
    "keywords": "getPersonsByName Gets a person, by name Requires authentication as user getPersonsByName Request get /Persons/{Name} Parameters Name In Type Default Notes *Name path The person name UserId query Optional. Filter by user id, and attach user data Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/PlaylistService.html": {
    "href": "reference/RestAPI/PlaylistService.html",
    "title": "PlaylistService",
    "keywords": "PlaylistService API Documentation: Playlists deletePlaylistsByIdItems delete /Playlists/{Id}/Items Removes items from a playlist getPlaylistsByIdItems get /Playlists/{Id}/Items Gets the original items of a playlist postPlaylists post /Playlists Creates a new playlist postPlaylistsByIdItems post /Playlists/{Id}/Items Adds items to a playlist postPlaylistsByIdItemsByItemidMoveByNewindex post /Playlists/{Id}/Items/{ItemId}/Move/{NewIndex} Moves a playlist item postPlaylistsByIdItemsDelete post /Playlists/{Id}/Items/Delete Removes items from a playlist"
  },
  "reference/RestAPI/PlaylistService/deletePlaylistsByIdItems.html": {
    "href": "reference/RestAPI/PlaylistService/deletePlaylistsByIdItems.html",
    "title": "deletePlaylistsByIdItems",
    "keywords": "deletePlaylistsByIdItems Removes items from a playlist Requires authentication as user deletePlaylistsByIdItems Request delete /Playlists/{Id}/Items Parameters Name In Type Default Notes *Id path *EntryIds query Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PlaylistService/getPlaylistsByIdItems.html": {
    "href": "reference/RestAPI/PlaylistService/getPlaylistsByIdItems.html",
    "title": "getPlaylistsByIdItems",
    "keywords": "getPlaylistsByIdItems Gets the original items of a playlist Requires authentication as user getPlaylistsByIdItems Request get /Playlists/{Id}/Items Parameters Name In Type Default Notes *Id path UserId query User Id StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/PlaylistService/postPlaylists.html": {
    "href": "reference/RestAPI/PlaylistService/postPlaylists.html",
    "title": "postPlaylists",
    "keywords": "postPlaylists Creates a new playlist Requires authentication as user postPlaylists Request post /Playlists Parameters Name In Type Default Notes Name query The name of the new playlist. Ids query Item Ids to add to the playlist MediaType query The playlist media type Responses Status Code Type Description Samples 200 PlaylistCreationResult Operation successful. Returning a PlaylistCreationResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PlaylistCreationResult see also MediaBrowser.Model.Playlists.PlaylistCreationResult Name Type Notes Id string Name string"
  },
  "reference/RestAPI/PlaylistService/postPlaylistsByIdItems.html": {
    "href": "reference/RestAPI/PlaylistService/postPlaylistsByIdItems.html",
    "title": "postPlaylistsByIdItems",
    "keywords": "postPlaylistsByIdItems Adds items to a playlist Requires authentication as user postPlaylistsByIdItems Request post /Playlists/{Id}/Items Parameters Name In Type Default Notes UserId query User Id *Ids query Item id, comma delimited *Id path Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PlaylistService/postPlaylistsByIdItemsByItemidMoveByNewindex.html": {
    "href": "reference/RestAPI/PlaylistService/postPlaylistsByIdItemsByItemidMoveByNewindex.html",
    "title": "postPlaylistsByIdItemsByItemidMoveByNewindex",
    "keywords": "postPlaylistsByIdItemsByItemidMoveByNewindex Moves a playlist item Requires authentication as user postPlaylistsByIdItemsByItemidMoveByNewindex Request post /Playlists/{Id}/Items/{ItemId}/Move/{NewIndex} Parameters Name In Type Default Notes *ItemId path ItemId *Id path *NewIndex path NewIndex Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PlaylistService/postPlaylistsByIdItemsDelete.html": {
    "href": "reference/RestAPI/PlaylistService/postPlaylistsByIdItemsDelete.html",
    "title": "postPlaylistsByIdItemsDelete",
    "keywords": "postPlaylistsByIdItemsDelete Removes items from a playlist Requires authentication as user postPlaylistsByIdItemsDelete Request post /Playlists/{Id}/Items/Delete Parameters Name In Type Default Notes *Id path *EntryIds query Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PlaystateService.html": {
    "href": "reference/RestAPI/PlaystateService.html",
    "title": "PlaystateService",
    "keywords": "PlaystateService API Documentation: Playback Check ins deleteUsersByUseridPlayeditemsById delete /Users/{UserId}/PlayedItems/{Id} Marks an item as unplayed deleteUsersByUseridPlayingitemsById delete /Users/{UserId}/PlayingItems/{Id} Reports that a user has stopped playing an item postSessionsPlaying post /Sessions/Playing Reports playback has started within a session postSessionsPlayingPing post /Sessions/Playing/Ping Pings a playback session postSessionsPlayingProgress post /Sessions/Playing/Progress Reports playback progress within a session postSessionsPlayingStopped post /Sessions/Playing/Stopped Reports playback has stopped within a session postUsersByUseridItemsByItemidUserdata post /Users/{UserId}/Items/{ItemId}/UserData Updates userdata for an item postUsersByUseridPlayeditemsById post /Users/{UserId}/PlayedItems/{Id} Marks an item as played postUsersByUseridPlayeditemsByIdDelete post /Users/{UserId}/PlayedItems/{Id}/Delete Marks an item as unplayed postUsersByUseridPlayingitemsById post /Users/{UserId}/PlayingItems/{Id} Reports that a user has begun playing an item postUsersByUseridPlayingitemsByIdDelete post /Users/{UserId}/PlayingItems/{Id}/Delete Reports that a user has stopped playing an item postUsersByUseridPlayingitemsByIdProgress post /Users/{UserId}/PlayingItems/{Id}/Progress Reports a user's playback progress"
  },
  "reference/RestAPI/PlaystateService/deleteUsersByUseridPlayeditemsById.html": {
    "href": "reference/RestAPI/PlaystateService/deleteUsersByUseridPlayeditemsById.html",
    "title": "deleteUsersByUseridPlayeditemsById",
    "keywords": "deleteUsersByUseridPlayeditemsById Marks an item as unplayed Requires authentication as user deleteUsersByUseridPlayeditemsById Request delete /Users/{UserId}/PlayedItems/{Id} Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id Responses Status Code Type Description Samples 200 UserItemDataDto Operation successful. Returning a UserItemDataDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string"
  },
  "reference/RestAPI/PlaystateService/deleteUsersByUseridPlayingitemsById.html": {
    "href": "reference/RestAPI/PlaystateService/deleteUsersByUseridPlayingitemsById.html",
    "title": "deleteUsersByUseridPlayingitemsById",
    "keywords": "deleteUsersByUseridPlayingitemsById Reports that a user has stopped playing an item Requires authentication as user deleteUsersByUseridPlayingitemsById Request delete /Users/{UserId}/PlayingItems/{Id} Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id *MediaSourceId query The id of the MediaSource *NextMediaType query The next media type that will play PositionTicks query Optional. The position, in ticks, where playback stopped. 1 tick = 10000 ms LiveStreamId query PlaySessionId query Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PlaystateService/postSessionsPlaying.html": {
    "href": "reference/RestAPI/PlaystateService/postSessionsPlaying.html",
    "title": "postSessionsPlaying",
    "keywords": "postSessionsPlaying Reports playback has started within a session Requires authentication as user postSessionsPlaying Request post /Sessions/Playing Parameters Name In Type Default Notes *body body PlaybackStartInfo PlaybackStartInfo: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PlaybackStartInfo see also MediaBrowser.Model.Session.PlaybackStartInfo Name Type Notes CanSeek boolean Item BaseItemDto[] NowPlayingQueue QueueItem[] PlaylistItemId string ItemId string SessionId string MediaSourceId string AudioStreamIndex integer (int32) SubtitleStreamIndex integer (int32) IsPaused boolean PlaylistIndex integer (int32) PlaylistLength integer (int32) IsMuted boolean PositionTicks integer (int64) RunTimeTicks integer (int64) PlaybackStartTimeTicks integer (int64) VolumeLevel integer (int32) Brightness integer (int32) AspectRatio string EventName ProgressEvent PlayMethod PlayMethod LiveStreamId string PlaySessionId string RepeatMode RepeatMode SubtitleOffset integer (int32) PlaybackRate number (double) PlaylistItemIds array BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword QueueItem see also MediaBrowser.Model.Session.QueueItem Name Type Notes Id integer (int64) PlaylistItemId string ProgressEvent see also MediaBrowser.Model.Session.ProgressEvent Enum Values TimeUpdate Pause Unpause VolumeChange RepeatModeChange AudioTrackChange SubtitleTrackChange PlaylistItemMove PlaylistItemRemove PlaylistItemAdd QualityChange StateChange SubtitleOffsetChange PlaybackRateChange PlayMethod see also MediaBrowser.Model.Session.PlayMethod Enum Values Transcode DirectStream DirectPlay RepeatMode see also MediaBrowser.Model.Session.RepeatMode Enum Values RepeatNone RepeatAll RepeatOne"
  },
  "reference/RestAPI/PlaystateService/postSessionsPlayingPing.html": {
    "href": "reference/RestAPI/PlaystateService/postSessionsPlayingPing.html",
    "title": "postSessionsPlayingPing",
    "keywords": "postSessionsPlayingPing Pings a playback session Requires authentication as user postSessionsPlayingPing Request post /Sessions/Playing/Ping Parameters Name In Type Default Notes PlaySessionId query Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PlaystateService/postSessionsPlayingProgress.html": {
    "href": "reference/RestAPI/PlaystateService/postSessionsPlayingProgress.html",
    "title": "postSessionsPlayingProgress",
    "keywords": "postSessionsPlayingProgress Reports playback progress within a session Requires authentication as user postSessionsPlayingProgress Request post /Sessions/Playing/Progress Parameters Name In Type Default Notes *body body PlaybackProgressInfo PlaybackProgressInfo: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PlaybackProgressInfo see also MediaBrowser.Model.Session.PlaybackProgressInfo Name Type Notes CanSeek boolean Item BaseItemDto[] NowPlayingQueue QueueItem[] PlaylistItemId string ItemId string SessionId string MediaSourceId string AudioStreamIndex integer (int32) SubtitleStreamIndex integer (int32) IsPaused boolean PlaylistIndex integer (int32) PlaylistLength integer (int32) IsMuted boolean PositionTicks integer (int64) RunTimeTicks integer (int64) PlaybackStartTimeTicks integer (int64) VolumeLevel integer (int32) Brightness integer (int32) AspectRatio string EventName ProgressEvent PlayMethod PlayMethod LiveStreamId string PlaySessionId string RepeatMode RepeatMode SubtitleOffset integer (int32) PlaybackRate number (double) PlaylistItemIds array BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword QueueItem see also MediaBrowser.Model.Session.QueueItem Name Type Notes Id integer (int64) PlaylistItemId string ProgressEvent see also MediaBrowser.Model.Session.ProgressEvent Enum Values TimeUpdate Pause Unpause VolumeChange RepeatModeChange AudioTrackChange SubtitleTrackChange PlaylistItemMove PlaylistItemRemove PlaylistItemAdd QualityChange StateChange SubtitleOffsetChange PlaybackRateChange PlayMethod see also MediaBrowser.Model.Session.PlayMethod Enum Values Transcode DirectStream DirectPlay RepeatMode see also MediaBrowser.Model.Session.RepeatMode Enum Values RepeatNone RepeatAll RepeatOne"
  },
  "reference/RestAPI/PlaystateService/postSessionsPlayingStopped.html": {
    "href": "reference/RestAPI/PlaystateService/postSessionsPlayingStopped.html",
    "title": "postSessionsPlayingStopped",
    "keywords": "postSessionsPlayingStopped Reports playback has stopped within a session Requires authentication as user postSessionsPlayingStopped Request post /Sessions/Playing/Stopped Parameters Name In Type Default Notes *body body PlaybackStopInfo PlaybackStopInfo: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PlaybackStopInfo see also MediaBrowser.Model.Session.PlaybackStopInfo Name Type Notes NowPlayingQueue QueueItem[] PlaylistItemId string PlaylistIndex integer (int32) PlaylistLength integer (int32) Item BaseItemDto[] ItemId string SessionId string MediaSourceId string PositionTicks integer (int64) LiveStreamId string PlaySessionId string Failed boolean NextMediaType string QueueItem see also MediaBrowser.Model.Session.QueueItem Name Type Notes Id integer (int64) PlaylistItemId string BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/PlaystateService/postUsersByUseridItemsByItemidUserdata.html": {
    "href": "reference/RestAPI/PlaystateService/postUsersByUseridItemsByItemidUserdata.html",
    "title": "postUsersByUseridItemsByItemidUserdata",
    "keywords": "postUsersByUseridItemsByItemidUserdata Updates userdata for an item Requires authentication as user postUsersByUseridItemsByItemidUserdata Request post /Users/{UserId}/Items/{ItemId}/UserData Parameters Name In Type Default Notes *UserId path User Id *ItemId path *body body UserItemDataDto UserItemDataDto: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string"
  },
  "reference/RestAPI/PlaystateService/postUsersByUseridPlayeditemsById.html": {
    "href": "reference/RestAPI/PlaystateService/postUsersByUseridPlayeditemsById.html",
    "title": "postUsersByUseridPlayeditemsById",
    "keywords": "postUsersByUseridPlayeditemsById Marks an item as played Requires authentication as user postUsersByUseridPlayeditemsById Request post /Users/{UserId}/PlayedItems/{Id} Parameters Name In Type Default Notes *UserId path User Id DatePlayed query The date the item was played (if any). Format = yyyyMMddHHmmss *Id path Item Id Responses Status Code Type Description Samples 200 UserItemDataDto Operation successful. Returning a UserItemDataDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string"
  },
  "reference/RestAPI/PlaystateService/postUsersByUseridPlayeditemsByIdDelete.html": {
    "href": "reference/RestAPI/PlaystateService/postUsersByUseridPlayeditemsByIdDelete.html",
    "title": "postUsersByUseridPlayeditemsByIdDelete",
    "keywords": "postUsersByUseridPlayeditemsByIdDelete Marks an item as unplayed Requires authentication as user postUsersByUseridPlayeditemsByIdDelete Request post /Users/{UserId}/PlayedItems/{Id}/Delete Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id Responses Status Code Type Description Samples 200 UserItemDataDto Operation successful. Returning a UserItemDataDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string"
  },
  "reference/RestAPI/PlaystateService/postUsersByUseridPlayingitemsById.html": {
    "href": "reference/RestAPI/PlaystateService/postUsersByUseridPlayingitemsById.html",
    "title": "postUsersByUseridPlayingitemsById",
    "keywords": "postUsersByUseridPlayingitemsById Reports that a user has begun playing an item Requires authentication as user postUsersByUseridPlayingitemsById Request post /Users/{UserId}/PlayingItems/{Id} Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id *MediaSourceId query The id of the MediaSource CanSeek query Indicates if the client can seek AudioStreamIndex query SubtitleStreamIndex query PlayMethod query LiveStreamId query PlaySessionId query Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PlaystateService/postUsersByUseridPlayingitemsByIdDelete.html": {
    "href": "reference/RestAPI/PlaystateService/postUsersByUseridPlayingitemsByIdDelete.html",
    "title": "postUsersByUseridPlayingitemsByIdDelete",
    "keywords": "postUsersByUseridPlayingitemsByIdDelete Reports that a user has stopped playing an item Requires authentication as user postUsersByUseridPlayingitemsByIdDelete Request post /Users/{UserId}/PlayingItems/{Id}/Delete Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id *MediaSourceId query The id of the MediaSource *NextMediaType query The next media type that will play PositionTicks query Optional. The position, in ticks, where playback stopped. 1 tick = 10000 ms LiveStreamId query PlaySessionId query Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PlaystateService/postUsersByUseridPlayingitemsByIdProgress.html": {
    "href": "reference/RestAPI/PlaystateService/postUsersByUseridPlayingitemsByIdProgress.html",
    "title": "postUsersByUseridPlayingitemsByIdProgress",
    "keywords": "postUsersByUseridPlayingitemsByIdProgress Reports a user's playback progress Requires authentication as user postUsersByUseridPlayingitemsByIdProgress Request post /Users/{UserId}/PlayingItems/{Id}/Progress Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id *MediaSourceId query The id of the MediaSource PositionTicks query Optional. The current position, in ticks. 1 tick = 10000 ms IsPaused query Indicates if the player is paused. IsMuted query Indicates if the player is muted. AudioStreamIndex query SubtitleStreamIndex query VolumeLevel query Scale of 0-100 PlayMethod query LiveStreamId query PlaySessionId query RepeatMode query SubtitleOffset query PlaybackRate query *body body OnPlaybackProgress OnPlaybackProgress Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions OnPlaybackProgress Emby.Server.MediaEncoding.Api.OnPlaybackProgress Name Type Notes PlaylistIndex integer (int32) PlaylistLength integer (int32) EventName ProgressEvent ProgressEvent see also MediaBrowser.Model.Session.ProgressEvent Enum Values TimeUpdate Pause Unpause VolumeChange RepeatModeChange AudioTrackChange SubtitleTrackChange PlaylistItemMove PlaylistItemRemove PlaylistItemAdd QualityChange StateChange SubtitleOffsetChange PlaybackRateChange"
  },
  "reference/RestAPI/PluginService.html": {
    "href": "reference/RestAPI/PluginService.html",
    "title": "PluginService",
    "keywords": "PluginService API Documentation Wiki deletePluginsById delete /Plugins/{Id} Uninstalls a plugin getPlugins get /Plugins Gets a list of currently installed plugins getPluginsByIdConfiguration get /Plugins/{Id}/Configuration Gets a plugin's configuration getPluginsByIdThumb get /Plugins/{Id}/Thumb Gets a plugin thumb image postPluginsByIdConfiguration post /Plugins/{Id}/Configuration Updates a plugin's configuration postPluginsByIdDelete post /Plugins/{Id}/Delete Uninstalls a plugin"
  },
  "reference/RestAPI/PluginService/deletePluginsById.html": {
    "href": "reference/RestAPI/PluginService/deletePluginsById.html",
    "title": "deletePluginsById",
    "keywords": "deletePluginsById Uninstalls a plugin Requires authentication as administrator deletePluginsById Request delete /Plugins/{Id} Parameters Name In Type Default Notes *Id path Plugin Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PluginService/getPlugins.html": {
    "href": "reference/RestAPI/PluginService/getPlugins.html",
    "title": "getPlugins",
    "keywords": "getPlugins Gets a list of currently installed plugins Requires authentication as user getPlugins Request get /Plugins Responses Status Code Type Description Samples 200 PluginInfo [] Operation successful. Returning a PluginInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PluginInfo see also MediaBrowser.Model.Plugins.PluginInfo Name Type Notes Name string Version string ConfigurationFileName string Description string Id string ImageTag string"
  },
  "reference/RestAPI/PluginService/getPluginsByIdConfiguration.html": {
    "href": "reference/RestAPI/PluginService/getPluginsByIdConfiguration.html",
    "title": "getPluginsByIdConfiguration",
    "keywords": "getPluginsByIdConfiguration Gets a plugin's configuration Requires authentication as user getPluginsByIdConfiguration Request get /Plugins/{Id}/Configuration Parameters Name In Type Default Notes *Id path Plugin Id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PluginService/getPluginsByIdThumb.html": {
    "href": "reference/RestAPI/PluginService/getPluginsByIdThumb.html",
    "title": "getPluginsByIdThumb",
    "keywords": "getPluginsByIdThumb Gets a plugin thumb image No authentication required getPluginsByIdThumb Request get /Plugins/{Id}/Thumb Parameters Name In Type Default Notes *Id path Plugin Id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PluginService/postPluginsByIdConfiguration.html": {
    "href": "reference/RestAPI/PluginService/postPluginsByIdConfiguration.html",
    "title": "postPluginsByIdConfiguration",
    "keywords": "postPluginsByIdConfiguration Updates a plugin's configuration Requires authentication as user postPluginsByIdConfiguration Request post /Plugins/{Id}/Configuration Parameters Name In Type Default Notes *Id path Plugin Id *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/PluginService/postPluginsByIdDelete.html": {
    "href": "reference/RestAPI/PluginService/postPluginsByIdDelete.html",
    "title": "postPluginsByIdDelete",
    "keywords": "postPluginsByIdDelete Uninstalls a plugin Requires authentication as administrator postPluginsByIdDelete Request post /Plugins/{Id}/Delete Parameters Name In Type Default Notes *Id path Plugin Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/RemoteImageService.html": {
    "href": "reference/RestAPI/RemoteImageService.html",
    "title": "RemoteImageService",
    "keywords": "RemoteImageService API Documentation Wiki getImagesRemote get /Images/Remote Gets a remote image getItemsByIdRemoteimages get /Items/{Id}/RemoteImages Gets available remote images for an item getItemsByIdRemoteimagesProviders get /Items/{Id}/RemoteImages/Providers Gets available remote image providers for an item postItemsByIdRemoteimagesDownload post /Items/{Id}/RemoteImages/Download Downloads a remote image for an item"
  },
  "reference/RestAPI/RemoteImageService/getImagesRemote.html": {
    "href": "reference/RestAPI/RemoteImageService/getImagesRemote.html",
    "title": "getImagesRemote",
    "keywords": "getImagesRemote Gets a remote image Requires authentication as administrator getImagesRemote Request get /Images/Remote Parameters Name In Type Default Notes *ImageUrl query The image url Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/RemoteImageService/getItemsByIdRemoteimages.html": {
    "href": "reference/RestAPI/RemoteImageService/getItemsByIdRemoteimages.html",
    "title": "getItemsByIdRemoteimages",
    "keywords": "getItemsByIdRemoteimages Gets available remote images for an item Requires authentication as user getItemsByIdRemoteimages Request get /Items/{Id}/RemoteImages Parameters Name In Type Default Notes *Id path Item Id Type query The image type StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return ProviderName query Optional. The image provider to use IncludeAllLanguages query Optional. Responses Status Code Type Description Samples 200 RemoteImageResult Operation successful. Returning a RemoteImageResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions RemoteImageResult see also MediaBrowser.Model.Providers.RemoteImageResult Name Type Notes Images RemoteImageInfo[] TotalRecordCount integer (int32) Providers array RemoteImageInfo see also MediaBrowser.Model.Providers.RemoteImageInfo Name Type Notes ProviderName string Url string ThumbnailUrl string Height integer (int32) Width integer (int32) CommunityRating number (double) VoteCount integer (int32) Language string DisplayLanguage string Type ImageType RatingType RatingType ImageType see also MediaBrowser.Model.Entities.ImageType Enum Values Primary Art Backdrop Banner Logo Thumb Disc Box Screenshot Menu Chapter BoxRear Thumbnail LogoLight LogoLightColor RatingType see also MediaBrowser.Model.Dto.RatingType Enum Values Score Likes"
  },
  "reference/RestAPI/RemoteImageService/getItemsByIdRemoteimagesProviders.html": {
    "href": "reference/RestAPI/RemoteImageService/getItemsByIdRemoteimagesProviders.html",
    "title": "getItemsByIdRemoteimagesProviders",
    "keywords": "getItemsByIdRemoteimagesProviders Gets available remote image providers for an item Requires authentication as user getItemsByIdRemoteimagesProviders Request get /Items/{Id}/RemoteImages/Providers Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 ImageProviderInfo [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ImageProviderInfo see also MediaBrowser.Model.Providers.ImageProviderInfo Name Type Notes Name string SupportedImages ImageType[] ImageType see also MediaBrowser.Model.Entities.ImageType"
  },
  "reference/RestAPI/RemoteImageService/postItemsByIdRemoteimagesDownload.html": {
    "href": "reference/RestAPI/RemoteImageService/postItemsByIdRemoteimagesDownload.html",
    "title": "postItemsByIdRemoteimagesDownload",
    "keywords": "postItemsByIdRemoteimagesDownload Downloads a remote image for an item Requires authentication as administrator postItemsByIdRemoteimagesDownload Request post /Items/{Id}/RemoteImages/Download Parameters Name In Type Default Notes *Id path Item Id *Type query The image type ProviderName query The image provider ImageUrl query The image url Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ScheduledTaskService.html": {
    "href": "reference/RestAPI/ScheduledTaskService.html",
    "title": "ScheduledTaskService",
    "keywords": "ScheduledTaskService API Documentation Wiki deleteScheduledtasksRunningById delete /ScheduledTasks/Running/{Id} Stops a scheduled task getScheduledtasks get /ScheduledTasks Gets scheduled tasks getScheduledtasksById get /ScheduledTasks/{Id} Gets a scheduled task, by Id postScheduledtasksByIdTriggers post /ScheduledTasks/{Id}/Triggers Updates the triggers for a scheduled task postScheduledtasksRunningById post /ScheduledTasks/Running/{Id} Starts a scheduled task postScheduledtasksRunningByIdDelete post /ScheduledTasks/Running/{Id}/Delete Stops a scheduled task"
  },
  "reference/RestAPI/ScheduledTaskService/deleteScheduledtasksRunningById.html": {
    "href": "reference/RestAPI/ScheduledTaskService/deleteScheduledtasksRunningById.html",
    "title": "deleteScheduledtasksRunningById",
    "keywords": "deleteScheduledtasksRunningById Stops a scheduled task Requires authentication as administrator deleteScheduledtasksRunningById Request delete /ScheduledTasks/Running/{Id} Parameters Name In Type Default Notes *Id path Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ScheduledTaskService/getScheduledtasks.html": {
    "href": "reference/RestAPI/ScheduledTaskService/getScheduledtasks.html",
    "title": "getScheduledtasks",
    "keywords": "getScheduledtasks Gets scheduled tasks Requires authentication as administrator getScheduledtasks Request get /ScheduledTasks Parameters Name In Type Default Notes IsHidden query Optional filter tasks that are hidden, or not. IsEnabled query Optional filter tasks that are enabled, or not. Responses Status Code Type Description Samples 200 TaskInfo [] Operation successful. Returning a TaskInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TaskInfo see also MediaBrowser.Model.Tasks.TaskInfo Name Type Notes Name string State TaskState CurrentProgressPercentage number (double) Id string LastExecutionResult TaskResult Triggers TaskTriggerInfo[] Description string Category string IsHidden boolean Key string TaskState see also MediaBrowser.Model.Tasks.TaskState Enum Values Idle Cancelling Running TaskResult see also MediaBrowser.Model.Tasks.TaskResult Name Type Notes StartTimeUtc string (date-time) EndTimeUtc string (date-time) Status TaskCompletionStatus Name string Key string Id string ErrorMessage string LongErrorMessage string TaskCompletionStatus see also MediaBrowser.Model.Tasks.TaskCompletionStatus Enum Values Completed Failed Cancelled Aborted TaskTriggerInfo see also MediaBrowser.Model.Tasks.TaskTriggerInfo Name Type Notes Type string TimeOfDayTicks integer (int64) IntervalTicks integer (int64) SystemEvent SystemEvent DayOfWeek DayOfWeek MaxRuntimeTicks integer (int64) SystemEvent see also MediaBrowser.Model.Tasks.SystemEvent Enum Values WakeFromSleep DisplayConfigurationChange NetworkChange DayOfWeek see also System.DayOfWeek Enum Values Sunday Monday Tuesday Wednesday Thursday Friday Saturday"
  },
  "reference/RestAPI/ScheduledTaskService/getScheduledtasksById.html": {
    "href": "reference/RestAPI/ScheduledTaskService/getScheduledtasksById.html",
    "title": "getScheduledtasksById",
    "keywords": "getScheduledtasksById Gets a scheduled task, by Id Requires authentication as administrator getScheduledtasksById Request get /ScheduledTasks/{Id} Parameters Name In Type Default Notes *Id path Responses Status Code Type Description Samples 200 TaskInfo Operation successful. Returning a TaskInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TaskInfo see also MediaBrowser.Model.Tasks.TaskInfo Name Type Notes Name string State TaskState CurrentProgressPercentage number (double) Id string LastExecutionResult TaskResult[] Triggers TaskTriggerInfo[] Description string Category string IsHidden boolean Key string TaskState see also MediaBrowser.Model.Tasks.TaskState Enum Values Idle Cancelling Running TaskResult see also MediaBrowser.Model.Tasks.TaskResult Name Type Notes StartTimeUtc string (date-time) EndTimeUtc string (date-time) Status TaskCompletionStatus Name string Key string Id string ErrorMessage string LongErrorMessage string TaskCompletionStatus see also MediaBrowser.Model.Tasks.TaskCompletionStatus Enum Values Completed Failed Cancelled Aborted TaskTriggerInfo see also MediaBrowser.Model.Tasks.TaskTriggerInfo Name Type Notes Type string TimeOfDayTicks integer (int64) IntervalTicks integer (int64) SystemEvent SystemEvent DayOfWeek DayOfWeek MaxRuntimeTicks integer (int64) SystemEvent see also MediaBrowser.Model.Tasks.SystemEvent Enum Values WakeFromSleep DisplayConfigurationChange NetworkChange DayOfWeek see also System.DayOfWeek Enum Values Sunday Monday Tuesday Wednesday Thursday Friday Saturday"
  },
  "reference/RestAPI/ScheduledTaskService/postScheduledtasksByIdTriggers.html": {
    "href": "reference/RestAPI/ScheduledTaskService/postScheduledtasksByIdTriggers.html",
    "title": "postScheduledtasksByIdTriggers",
    "keywords": "postScheduledtasksByIdTriggers Updates the triggers for a scheduled task Requires authentication as administrator postScheduledtasksByIdTriggers Request post /ScheduledTasks/{Id}/Triggers Parameters Name In Type Default Notes *Id path *body body TaskTriggerInfo [] List`1: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TaskTriggerInfo see also MediaBrowser.Model.Tasks.TaskTriggerInfo Name Type Notes Type string TimeOfDayTicks integer (int64) IntervalTicks integer (int64) SystemEvent SystemEvent DayOfWeek DayOfWeek MaxRuntimeTicks integer (int64) SystemEvent see also MediaBrowser.Model.Tasks.SystemEvent Enum Values WakeFromSleep DisplayConfigurationChange NetworkChange DayOfWeek see also System.DayOfWeek Enum Values Sunday Monday Tuesday Wednesday Thursday Friday Saturday"
  },
  "reference/RestAPI/ScheduledTaskService/postScheduledtasksRunningById.html": {
    "href": "reference/RestAPI/ScheduledTaskService/postScheduledtasksRunningById.html",
    "title": "postScheduledtasksRunningById",
    "keywords": "postScheduledtasksRunningById Starts a scheduled task Requires authentication as administrator postScheduledtasksRunningById Request post /ScheduledTasks/Running/{Id} Parameters Name In Type Default Notes *Id path Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ScheduledTaskService/postScheduledtasksRunningByIdDelete.html": {
    "href": "reference/RestAPI/ScheduledTaskService/postScheduledtasksRunningByIdDelete.html",
    "title": "postScheduledtasksRunningByIdDelete",
    "keywords": "postScheduledtasksRunningByIdDelete Stops a scheduled task Requires authentication as administrator postScheduledtasksRunningByIdDelete Request post /ScheduledTasks/Running/{Id}/Delete Parameters Name In Type Default Notes *Id path Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService.html": {
    "href": "reference/RestAPI/SessionsService.html",
    "title": "SessionsService",
    "keywords": "SessionsService API Documentation: Remote control deleteAuthKeysByKey delete /Auth/Keys/{Key} deleteSessionsByIdUsersByUserid delete /Sessions/{Id}/Users/{UserId} Removes an additional user from a session getAuthKeys get /Auth/Keys getAuthProviders get /Auth/Providers getSessions get /Sessions Gets a list of sessions getSessionsPlayqueue get /Sessions/PlayQueue Gets a the current play queue from a session postAuthKeys post /Auth/Keys postAuthKeysByKeyDelete post /Auth/Keys/{Key}/Delete postSessionsByIdCommand post /Sessions/{Id}/Command Issues a system command to a client postSessionsByIdCommandByCommand post /Sessions/{Id}/Command/{Command} Issues a system command to a client postSessionsByIdMessage post /Sessions/{Id}/Message Issues a command to a client to display a message to the user postSessionsByIdPlaying post /Sessions/{Id}/Playing Instructs a session to play an item postSessionsByIdPlayingByCommand post /Sessions/{Id}/Playing/{Command} Issues a playstate command to a client postSessionsByIdSystemByCommand post /Sessions/{Id}/System/{Command} Issues a system command to a client postSessionsByIdUsersByUserid post /Sessions/{Id}/Users/{UserId} Adds an additional user to a session postSessionsByIdUsersByUseridDelete post /Sessions/{Id}/Users/{UserId}/Delete Removes an additional user from a session postSessionsByIdViewing post /Sessions/{Id}/Viewing Instructs a session to browse to an item or view postSessionsCapabilities post /Sessions/Capabilities Updates capabilities for a device postSessionsCapabilitiesFull post /Sessions/Capabilities/Full Updates capabilities for a device postSessionsLogout post /Sessions/Logout Reports that a session has ended"
  },
  "reference/RestAPI/SessionsService/deleteAuthKeysByKey.html": {
    "href": "reference/RestAPI/SessionsService/deleteAuthKeysByKey.html",
    "title": "deleteAuthKeysByKey",
    "keywords": "deleteAuthKeysByKey Requires authentication as administrator deleteAuthKeysByKey Request delete /Auth/Keys/{Key} Parameters Name In Type Default Notes *Key path Auth Key Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/deleteSessionsByIdUsersByUserid.html": {
    "href": "reference/RestAPI/SessionsService/deleteSessionsByIdUsersByUserid.html",
    "title": "deleteSessionsByIdUsersByUserid",
    "keywords": "deleteSessionsByIdUsersByUserid Removes an additional user from a session Requires authentication as user deleteSessionsByIdUsersByUserid Request delete /Sessions/{Id}/Users/{UserId} Parameters Name In Type Default Notes *Id path Session Id *UserId path UserId Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/getAuthKeys.html": {
    "href": "reference/RestAPI/SessionsService/getAuthKeys.html",
    "title": "getAuthKeys",
    "keywords": "getAuthKeys Requires authentication as administrator getAuthKeys Request get /Auth/Keys Parameters Name In Type Default Notes StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/getAuthProviders.html": {
    "href": "reference/RestAPI/SessionsService/getAuthProviders.html",
    "title": "getAuthProviders",
    "keywords": "getAuthProviders Requires authentication as administrator getAuthProviders Request get /Auth/Providers Responses Status Code Type Description Samples 200 NameIdPair [] Operation successful. Returning a NameIdPair[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string"
  },
  "reference/RestAPI/SessionsService/getSessions.html": {
    "href": "reference/RestAPI/SessionsService/getSessions.html",
    "title": "getSessions",
    "keywords": "getSessions Gets a list of sessions Requires authentication as user getSessions Request get /Sessions Parameters Name In Type Default Notes ControllableByUserId query Optional. Filter by sessions that a given user is allowed to remote control. DeviceId query Optional. Filter by device id. Id query Optional. Filter by session id. Responses Status Code Type Description Samples 200 SessionInfo [] Operation successful. Returning a SessionInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SessionInfo see also MediaBrowser.Controller.Session.SessionInfo Name Type Notes PlayState PlayerStateInfo AdditionalUsers SessionUserInfo[] RemoteEndPoint string Protocol string PlayableMediaTypes array PlaylistItemId string PlaylistIndex integer (int32) PlaylistLength integer (int32) Id string ServerId string UserId string UserName string UserPrimaryImageTag string Client string LastActivityDate string (date-time) DeviceName string DeviceType string NowPlayingItem BaseItemDto InternalDeviceId integer (int64) DeviceId string ApplicationVersion string AppIconUrl string SupportedCommands array TranscodingInfo TranscodingInfo SupportsRemoteControl boolean PlayerStateInfo see also MediaBrowser.Model.Session.PlayerStateInfo Name Type Notes PositionTicks integer (int64) CanSeek boolean IsPaused boolean IsMuted boolean VolumeLevel integer (int32) AudioStreamIndex integer (int32) SubtitleStreamIndex integer (int32) MediaSourceId string PlayMethod PlayMethod RepeatMode RepeatMode SubtitleOffset integer (int32) PlaybackRate number (double) PlayMethod see also MediaBrowser.Model.Session.PlayMethod Enum Values Transcode DirectStream DirectPlay RepeatMode see also MediaBrowser.Model.Session.RepeatMode Enum Values RepeatNone RepeatAll RepeatOne SessionUserInfo see also MediaBrowser.Model.Session.SessionUserInfo Name Type Notes UserId string UserName string UserInternalId integer (int64) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword TranscodingInfo see also MediaBrowser.Model.Session.TranscodingInfo Name Type Notes AudioCodec string VideoCodec string SubProtocol string Container string IsVideoDirect boolean IsAudioDirect boolean Bitrate integer (int32) AudioBitrate integer (int32) VideoBitrate integer (int32) Framerate number (float) CompletionPercentage number (double) TranscodingPositionTicks number (double) TranscodingStartPositionTicks number (double) Width integer (int32) Height integer (int32) AudioChannels integer (int32) TranscodeReasons TranscodeReason[] CurrentCpuUsage number (double) AverageCpuUsage number (double) CpuHistory Tuple_Double-Double[] CurrentThrottle integer (int32) VideoDecoder string VideoDecoderIsHardware boolean VideoDecoderMediaType string VideoDecoderHwAccel string VideoEncoder string VideoEncoderIsHardware boolean VideoEncoderMediaType string VideoEncoderHwAccel string VideoPipelineInfo VpStepInfo[] SubtitlePipelineInfos array TranscodeReason see also MediaBrowser.Model.Session.TranscodeReason Tuple_Double-Double Tuple_Double-Double Name Type Notes Item1 number (double) Item2 number (double) VpStepInfo see also MediaBrowser.Model.Session.Transcoding.VpStepInfo Name Type Notes StepType VpStepTypes StepTypeName string HardwareContextName string IsHardwareContext boolean Name string Short string FfmpegName string FfmpegDescription string FfmpegOptions string Param string ParamShort string VpStepTypes see also MediaBrowser.Model.Session.Transcoding.VpStepTypes Enum Values Decoder Encoder Scaling Deinterlace SubtitleOverlay ToneMapping ColorConversion SplitCaptions TextSub2Video GraphicSub2Video GraphicSub2Text BurnInTextSubs BurnInGraphicSubs ScaleSubs TextMod Censor ShowSpeaker StripStyles ConnectTo"
  },
  "reference/RestAPI/SessionsService/getSessionsPlayqueue.html": {
    "href": "reference/RestAPI/SessionsService/getSessionsPlayqueue.html",
    "title": "getSessionsPlayqueue",
    "keywords": "getSessionsPlayqueue Gets a the current play queue from a session Requires authentication as user getSessionsPlayqueue Request get /Sessions/PlayQueue Parameters Name In Type Default Notes Id query Optional. Filter by session id. DeviceId query Optional. Filter by device id. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/SessionsService/postAuthKeys.html": {
    "href": "reference/RestAPI/SessionsService/postAuthKeys.html",
    "title": "postAuthKeys",
    "keywords": "postAuthKeys Requires authentication as administrator postAuthKeys Request post /Auth/Keys Parameters Name In Type Default Notes *App query App Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/postAuthKeysByKeyDelete.html": {
    "href": "reference/RestAPI/SessionsService/postAuthKeysByKeyDelete.html",
    "title": "postAuthKeysByKeyDelete",
    "keywords": "postAuthKeysByKeyDelete Requires authentication as administrator postAuthKeysByKeyDelete Request post /Auth/Keys/{Key}/Delete Parameters Name In Type Default Notes *Key path Auth Key Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/postSessionsByIdCommand.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsByIdCommand.html",
    "title": "postSessionsByIdCommand",
    "keywords": "postSessionsByIdCommand Issues a system command to a client Requires authentication as user postSessionsByIdCommand Request post /Sessions/{Id}/Command Parameters Name In Type Default Notes *Id path Session Id *body body GeneralCommand GeneralCommand: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions GeneralCommand see also MediaBrowser.Model.Session.GeneralCommand Name Type Notes Name string ControllingUserId string Arguments object"
  },
  "reference/RestAPI/SessionsService/postSessionsByIdCommandByCommand.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsByIdCommandByCommand.html",
    "title": "postSessionsByIdCommandByCommand",
    "keywords": "postSessionsByIdCommandByCommand Issues a system command to a client Requires authentication as user postSessionsByIdCommandByCommand Request post /Sessions/{Id}/Command/{Command} Parameters Name In Type Default Notes *Id path Session Id *Command path The command to send. Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/postSessionsByIdMessage.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsByIdMessage.html",
    "title": "postSessionsByIdMessage",
    "keywords": "postSessionsByIdMessage Issues a command to a client to display a message to the user Requires authentication as user postSessionsByIdMessage Request post /Sessions/{Id}/Message Parameters Name In Type Default Notes *Id path Session Id *Text query The message text. *Header query The message header. TimeoutMs query The message timeout. If omitted the user will have to confirm viewing the message. Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/postSessionsByIdPlaying.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsByIdPlaying.html",
    "title": "postSessionsByIdPlaying",
    "keywords": "postSessionsByIdPlaying Instructs a session to play an item Requires authentication as user postSessionsByIdPlaying Request post /Sessions/{Id}/Playing Parameters Name In Type Default Notes *Id path Session Id *ItemIds query The ids of the items to play, comma delimited StartPositionTicks query The starting position of the first item. *PlayCommand query The type of play command to issue (PlayNow, PlayNext, PlayLast). Clients who have not yet implemented play next and play last may play now. *body body PlayRequest PlayRequest: Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PlayRequest see also MediaBrowser.Model.Session.PlayRequest Name Type Notes ControllingUserId string SubtitleStreamIndex integer (int32) AudioStreamIndex integer (int32) MediaSourceId string StartIndex integer (int32)"
  },
  "reference/RestAPI/SessionsService/postSessionsByIdPlayingByCommand.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsByIdPlayingByCommand.html",
    "title": "postSessionsByIdPlayingByCommand",
    "keywords": "postSessionsByIdPlayingByCommand Issues a playstate command to a client Requires authentication as user postSessionsByIdPlayingByCommand Request post /Sessions/{Id}/Playing/{Command} Parameters Name In Type Default Notes *Id path Session Id *Command path *body body PlaystateRequest PlaystateRequest: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PlaystateRequest see also MediaBrowser.Model.Session.PlaystateRequest Name Type Notes Command PlaystateCommand SeekPositionTicks integer (int64) ControllingUserId string PlaystateCommand see also MediaBrowser.Model.Session.PlaystateCommand Enum Values Stop Pause Unpause NextTrack PreviousTrack Seek Rewind FastForward PlayPause"
  },
  "reference/RestAPI/SessionsService/postSessionsByIdSystemByCommand.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsByIdSystemByCommand.html",
    "title": "postSessionsByIdSystemByCommand",
    "keywords": "postSessionsByIdSystemByCommand Issues a system command to a client Requires authentication as user postSessionsByIdSystemByCommand Request post /Sessions/{Id}/System/{Command} Parameters Name In Type Default Notes *Id path Session Id *Command path The command to send. Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/postSessionsByIdUsersByUserid.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsByIdUsersByUserid.html",
    "title": "postSessionsByIdUsersByUserid",
    "keywords": "postSessionsByIdUsersByUserid Adds an additional user to a session Requires authentication as user postSessionsByIdUsersByUserid Request post /Sessions/{Id}/Users/{UserId} Parameters Name In Type Default Notes *Id path Session Id *UserId path UserId Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/postSessionsByIdUsersByUseridDelete.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsByIdUsersByUseridDelete.html",
    "title": "postSessionsByIdUsersByUseridDelete",
    "keywords": "postSessionsByIdUsersByUseridDelete Removes an additional user from a session Requires authentication as user postSessionsByIdUsersByUseridDelete Request post /Sessions/{Id}/Users/{UserId}/Delete Parameters Name In Type Default Notes *Id path Session Id *UserId path UserId Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/postSessionsByIdViewing.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsByIdViewing.html",
    "title": "postSessionsByIdViewing",
    "keywords": "postSessionsByIdViewing Instructs a session to browse to an item or view Requires authentication as user postSessionsByIdViewing Request post /Sessions/{Id}/Viewing Parameters Name In Type Default Notes *Id path Session Id *ItemType query The type of item to browse to. *ItemId query The Id of the item. *ItemName query The name of the item. Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/postSessionsCapabilities.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsCapabilities.html",
    "title": "postSessionsCapabilities",
    "keywords": "postSessionsCapabilities Updates capabilities for a device Requires authentication as user postSessionsCapabilities Request post /Sessions/Capabilities Parameters Name In Type Default Notes *Id query Session Id PlayableMediaTypes query A list of playable media types, comma delimited. Audio, Video, Book, Game, Photo. SupportedCommands query A list of supported remote control commands, comma delimited SupportsMediaControl query Determines whether media can be played remotely. SupportsSync query Determines whether sync is supported. Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SessionsService/postSessionsCapabilitiesFull.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsCapabilitiesFull.html",
    "title": "postSessionsCapabilitiesFull",
    "keywords": "postSessionsCapabilitiesFull Updates capabilities for a device Requires authentication as user postSessionsCapabilitiesFull Request post /Sessions/Capabilities/Full Parameters Name In Type Default Notes *Id query Session Id *body body ClientCapabilities ClientCapabilities: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions ClientCapabilities see also MediaBrowser.Model.Session.ClientCapabilities Name Type Notes PlayableMediaTypes array SupportedCommands array SupportsMediaControl boolean PushToken string PushTokenType string SupportsSync boolean DeviceProfile DeviceProfile[] IconUrl string AppId string DeviceProfile see also MediaBrowser.Model.Dlna.DeviceProfile Name Type Notes Name string Id string SupportedMediaTypes string MaxStreamingBitrate integer (int64) MusicStreamingTranscodingBitrate integer (int32) MaxStaticMusicBitrate integer (int32) DirectPlayProfiles DirectPlayProfile[] TranscodingProfiles TranscodingProfile[] ContainerProfiles ContainerProfile[] CodecProfiles CodecProfile[] ResponseProfiles ResponseProfile[] SubtitleProfiles SubtitleProfile[] DirectPlayProfile see also MediaBrowser.Model.Dlna.DirectPlayProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType DlnaProfileType see also MediaBrowser.Model.Dlna.DlnaProfileType Enum Values Audio Video Photo TranscodingProfile see also MediaBrowser.Model.Dlna.TranscodingProfile Name Type Notes Container string Type DlnaProfileType VideoCodec string AudioCodec string Protocol string EstimateContentLength boolean EnableMpegtsM2TsMode boolean TranscodeSeekInfo TranscodeSeekInfo CopyTimestamps boolean Context EncodingContext MaxAudioChannels string MinSegments integer (int32) SegmentLength integer (int32) BreakOnNonKeyFrames boolean AllowInterlacedVideoStreamCopy boolean ManifestSubtitles string MaxManifestSubtitles integer (int32) TranscodeSeekInfo see also MediaBrowser.Model.Dlna.TranscodeSeekInfo Enum Values Auto Bytes EncodingContext see also MediaBrowser.Model.Dlna.EncodingContext Enum Values Streaming Static ContainerProfile see also MediaBrowser.Model.Dlna.ContainerProfile Name Type Notes Type DlnaProfileType Conditions ProfileCondition[] Container string ProfileCondition see also MediaBrowser.Model.Dlna.ProfileCondition Name Type Notes Condition ProfileConditionType Property ProfileConditionValue Value string IsRequired boolean ProfileConditionType see also MediaBrowser.Model.Dlna.ProfileConditionType Enum Values Equals NotEquals LessThanEqual GreaterThanEqual EqualsAny ProfileConditionValue see also MediaBrowser.Model.Dlna.ProfileConditionValue Enum Values AudioChannels AudioBitrate AudioProfile Width Height Has64BitOffsets PacketLength VideoBitDepth VideoBitrate VideoFramerate VideoLevel VideoProfile VideoTimestamp IsAnamorphic RefFrames NumAudioStreams NumVideoStreams IsSecondaryAudio VideoCodecTag IsAvc IsInterlaced AudioSampleRate AudioBitDepth VideoRange CodecProfile see also MediaBrowser.Model.Dlna.CodecProfile Name Type Notes Type CodecType Conditions ProfileCondition[] ApplyConditions ProfileCondition[] Codec string Container string CodecType see also MediaBrowser.Model.Dlna.CodecType Enum Values Video VideoAudio Audio ResponseProfile see also MediaBrowser.Model.Dlna.ResponseProfile Name Type Notes Container string AudioCodec string VideoCodec string Type DlnaProfileType OrgPn string MimeType string Conditions ProfileCondition[] SubtitleProfile see also MediaBrowser.Model.Dlna.SubtitleProfile Name Type Notes Format string Method SubtitleDeliveryMethod DidlMode string Language string Container string Protocol string SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData"
  },
  "reference/RestAPI/SessionsService/postSessionsLogout.html": {
    "href": "reference/RestAPI/SessionsService/postSessionsLogout.html",
    "title": "postSessionsLogout",
    "keywords": "postSessionsLogout Reports that a session has ended Requires authentication as user postSessionsLogout Request post /Sessions/Logout Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/StudiosService.html": {
    "href": "reference/RestAPI/StudiosService.html",
    "title": "StudiosService",
    "keywords": "StudiosService API Documentation: Items by name getStudios get /Studios Gets all studios from a given item, folder, or the entire library getStudiosByName get /Studios/{Name} Gets a studio, by name"
  },
  "reference/RestAPI/StudiosService/getStudios.html": {
    "href": "reference/RestAPI/StudiosService/getStudios.html",
    "title": "getStudios",
    "keywords": "getStudios Gets all studios from a given item, folder, or the entire library Requires authentication as user getStudios Request get /Studios Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/StudiosService/getStudiosByName.html": {
    "href": "reference/RestAPI/StudiosService/getStudiosByName.html",
    "title": "getStudiosByName",
    "keywords": "getStudiosByName Gets a studio, by name Requires authentication as user getStudiosByName Request get /Studios/{Name} Parameters Name In Type Default Notes *Name path The studio name UserId query Optional. Filter by user id, and attach user data Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/SubtitleOptionsService.html": {
    "href": "reference/RestAPI/SubtitleOptionsService.html",
    "title": "SubtitleOptionsService",
    "keywords": "SubtitleOptionsService API Documentation Wiki getEncodingSubtitleoptions get /Encoding/SubtitleOptions Gets the subtitle options postEncodingSubtitleoptions post /Encoding/SubtitleOptions Updates the subtitle options"
  },
  "reference/RestAPI/SubtitleOptionsService/getEncodingSubtitleoptions.html": {
    "href": "reference/RestAPI/SubtitleOptionsService/getEncodingSubtitleoptions.html",
    "title": "getEncodingSubtitleoptions",
    "keywords": "getEncodingSubtitleoptions Gets the subtitle options Requires authentication as user getEncodingSubtitleoptions Request get /Encoding/SubtitleOptions Responses Status Code Type Description Samples 200 EditObjectContainer Operation successful. Returning a EditObjectContainer object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions EditObjectContainer see also Emby.Web.GenericEdit.EditObjectContainer Name Type Notes Object object DefaultObject object TypeName string EditorRoot EditorRoot[] EditorRoot see also Emby.Web.GenericEdit.Editors.EditorRoot Name Type Notes PropertyConditions PropertyCondition[] PostbackActions PostbackAction[] TitleButton EditorButtonItem[] EditorItems EditorBase[] EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string PropertyCondition see also Emby.Web.GenericEdit.Conditions.PropertyCondition Name Type Notes AffectedPropertyId string ConditionType PropertyConditionType TargetPropertyId string SimpleCondition SimpleCondition ValueCondition ValueCondition Value object PropertyConditionType see also Emby.Web.GenericEdit.Conditions.PropertyConditionType Enum Values Visible Enabled SimpleCondition see also MediaBrowser.Model.Attributes.SimpleCondition Enum Values IsTrue IsFalse IsNull IsNotNullOrEmpty ValueCondition see also MediaBrowser.Model.Attributes.ValueCondition Enum Values IsEqual IsNotEqual IsGreater IsGreaterOrEqual IsLess IsLessOrEqual PostbackAction see also Emby.Web.GenericEdit.Actions.PostbackAction Name Type Notes TargetEditorId string PostbackCommandId string CommandParameterPropertyId string EditorButtonItem see also Emby.Web.GenericEdit.Editors.EditorButtonItem Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string EditorTypes see also Emby.Web.GenericEdit.Common.EditorTypes Enum Values Group Text Numeric Boolean SelectSingle SelectMultiple Date FilePath FolderPath StatusItem ProgressItem ButtonItem ButtonGroup CaptionItem LabelItem ItemList RadioGroup DataGrid PivotGrid SpacerItem EditorBase see also Emby.Web.GenericEdit.Editors.EditorBase Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string"
  },
  "reference/RestAPI/SubtitleOptionsService/postEncodingSubtitleoptions.html": {
    "href": "reference/RestAPI/SubtitleOptionsService/postEncodingSubtitleoptions.html",
    "title": "postEncodingSubtitleoptions",
    "keywords": "postEncodingSubtitleoptions Updates the subtitle options Requires authentication as administrator postEncodingSubtitleoptions Request post /Encoding/SubtitleOptions Parameters Name In Type Default Notes *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SubtitleService.html": {
    "href": "reference/RestAPI/SubtitleService.html",
    "title": "SubtitleService",
    "keywords": "SubtitleService API Documentation Wiki deleteItemsByIdSubtitlesByIndex delete /Items/{Id}/Subtitles/{Index} Deletes an external subtitle file deleteVideosByIdSubtitlesByIndex delete /Videos/{Id}/Subtitles/{Index} Deletes an external subtitle file getItemsByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat get /Items/{Id}/{MediaSourceId}/Subtitles/{Index}/{StartPositionTicks}/Stream.{Format} Gets subtitles in a specified format. getItemsByIdByMediasourceidSubtitlesByIndexStreamByFormat get /Items/{Id}/{MediaSourceId}/Subtitles/{Index}/Stream.{Format} Gets subtitles in a specified format. getItemsByIdRemotesearchSubtitlesByLanguage get /Items/{Id}/RemoteSearch/Subtitles/{Language} getProvidersSubtitlesSubtitlesById get /Providers/Subtitles/Subtitles/{Id} getVideosByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat get /Videos/{Id}/{MediaSourceId}/Subtitles/{Index}/{StartPositionTicks}/Stream.{Format} Gets subtitles in a specified format. getVideosByIdByMediasourceidSubtitlesByIndexStreamByFormat get /Videos/{Id}/{MediaSourceId}/Subtitles/{Index}/Stream.{Format} Gets subtitles in a specified format. postItemsByIdRemotesearchSubtitlesBySubtitleid post /Items/{Id}/RemoteSearch/Subtitles/{SubtitleId} postItemsByIdSubtitlesByIndexDelete post /Items/{Id}/Subtitles/{Index}/Delete Deletes an external subtitle file postVideosByIdSubtitlesByIndexDelete post /Videos/{Id}/Subtitles/{Index}/Delete Deletes an external subtitle file"
  },
  "reference/RestAPI/SubtitleService/deleteItemsByIdSubtitlesByIndex.html": {
    "href": "reference/RestAPI/SubtitleService/deleteItemsByIdSubtitlesByIndex.html",
    "title": "deleteItemsByIdSubtitlesByIndex",
    "keywords": "deleteItemsByIdSubtitlesByIndex Deletes an external subtitle file Requires authentication as user deleteItemsByIdSubtitlesByIndex Request delete /Items/{Id}/Subtitles/{Index} Parameters Name In Type Default Notes *Id path Item Id *MediaSourceId query MediaSourceId *Index path The subtitle stream index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SubtitleService/deleteVideosByIdSubtitlesByIndex.html": {
    "href": "reference/RestAPI/SubtitleService/deleteVideosByIdSubtitlesByIndex.html",
    "title": "deleteVideosByIdSubtitlesByIndex",
    "keywords": "deleteVideosByIdSubtitlesByIndex Deletes an external subtitle file Requires authentication as user deleteVideosByIdSubtitlesByIndex Request delete /Videos/{Id}/Subtitles/{Index} Parameters Name In Type Default Notes *Id path Item Id *MediaSourceId query MediaSourceId *Index path The subtitle stream index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SubtitleService/getItemsByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat.html": {
    "href": "reference/RestAPI/SubtitleService/getItemsByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat.html",
    "title": "getItemsByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat",
    "keywords": "getItemsByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat Gets subtitles in a specified format. No authentication required getItemsByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat Request get /Items/{Id}/{MediaSourceId}/Subtitles/{Index}/{StartPositionTicks}/Stream.{Format} Parameters Name In Type Default Notes *Id path Item Id *MediaSourceId path MediaSourceId *Index path The subtitle stream index *Format path Format *StartPositionTicks path StartPositionTicks EndPositionTicks query EndPositionTicks CopyTimestamps query CopyTimestamps Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SubtitleService/getItemsByIdByMediasourceidSubtitlesByIndexStreamByFormat.html": {
    "href": "reference/RestAPI/SubtitleService/getItemsByIdByMediasourceidSubtitlesByIndexStreamByFormat.html",
    "title": "getItemsByIdByMediasourceidSubtitlesByIndexStreamByFormat",
    "keywords": "getItemsByIdByMediasourceidSubtitlesByIndexStreamByFormat Gets subtitles in a specified format. No authentication required getItemsByIdByMediasourceidSubtitlesByIndexStreamByFormat Request get /Items/{Id}/{MediaSourceId}/Subtitles/{Index}/Stream.{Format} Parameters Name In Type Default Notes *Id path Item Id *MediaSourceId path MediaSourceId *Index path The subtitle stream index *Format path Format StartPositionTicks query StartPositionTicks EndPositionTicks query EndPositionTicks CopyTimestamps query CopyTimestamps Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SubtitleService/getItemsByIdRemotesearchSubtitlesByLanguage.html": {
    "href": "reference/RestAPI/SubtitleService/getItemsByIdRemotesearchSubtitlesByLanguage.html",
    "title": "getItemsByIdRemotesearchSubtitlesByLanguage",
    "keywords": "getItemsByIdRemotesearchSubtitlesByLanguage Requires authentication as user getItemsByIdRemotesearchSubtitlesByLanguage Request get /Items/{Id}/RemoteSearch/Subtitles/{Language} Parameters Name In Type Default Notes *Id path Item Id *MediaSourceId query MediaSourceId *Language path Language IsPerfectMatch query IsPerfectMatch IsForced query IsForced Responses Status Code Type Description Samples 200 RemoteSubtitleInfo [] Operation successful. Returning a RemoteSubtitleInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions RemoteSubtitleInfo see also MediaBrowser.Model.Providers.RemoteSubtitleInfo Name Type Notes ThreeLetterISOLanguageName string Id string ProviderName string Name string Format string Author string Comment string DateCreated string (date-time) CommunityRating number (float) DownloadCount integer (int32) IsHashMatch boolean IsForced boolean Language string"
  },
  "reference/RestAPI/SubtitleService/getProvidersSubtitlesSubtitlesById.html": {
    "href": "reference/RestAPI/SubtitleService/getProvidersSubtitlesSubtitlesById.html",
    "title": "getProvidersSubtitlesSubtitlesById",
    "keywords": "getProvidersSubtitlesSubtitlesById Requires authentication as user getProvidersSubtitlesSubtitlesById Request get /Providers/Subtitles/Subtitles/{Id} Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SubtitleService/getVideosByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat.html": {
    "href": "reference/RestAPI/SubtitleService/getVideosByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat.html",
    "title": "getVideosByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat",
    "keywords": "getVideosByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat Gets subtitles in a specified format. No authentication required getVideosByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat Request get /Videos/{Id}/{MediaSourceId}/Subtitles/{Index}/{StartPositionTicks}/Stream.{Format} Parameters Name In Type Default Notes *Id path Item Id *MediaSourceId path MediaSourceId *Index path The subtitle stream index *Format path Format *StartPositionTicks path StartPositionTicks EndPositionTicks query EndPositionTicks CopyTimestamps query CopyTimestamps Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SubtitleService/getVideosByIdByMediasourceidSubtitlesByIndexStreamByFormat.html": {
    "href": "reference/RestAPI/SubtitleService/getVideosByIdByMediasourceidSubtitlesByIndexStreamByFormat.html",
    "title": "getVideosByIdByMediasourceidSubtitlesByIndexStreamByFormat",
    "keywords": "getVideosByIdByMediasourceidSubtitlesByIndexStreamByFormat Gets subtitles in a specified format. No authentication required getVideosByIdByMediasourceidSubtitlesByIndexStreamByFormat Request get /Videos/{Id}/{MediaSourceId}/Subtitles/{Index}/Stream.{Format} Parameters Name In Type Default Notes *Id path Item Id *MediaSourceId path MediaSourceId *Index path The subtitle stream index *Format path Format StartPositionTicks query StartPositionTicks EndPositionTicks query EndPositionTicks CopyTimestamps query CopyTimestamps Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SubtitleService/postItemsByIdRemotesearchSubtitlesBySubtitleid.html": {
    "href": "reference/RestAPI/SubtitleService/postItemsByIdRemotesearchSubtitlesBySubtitleid.html",
    "title": "postItemsByIdRemotesearchSubtitlesBySubtitleid",
    "keywords": "postItemsByIdRemotesearchSubtitlesBySubtitleid Requires authentication as user postItemsByIdRemotesearchSubtitlesBySubtitleid Request post /Items/{Id}/RemoteSearch/Subtitles/{SubtitleId} Parameters Name In Type Default Notes *Id path Item Id *MediaSourceId query MediaSourceId *SubtitleId path SubtitleId Responses Status Code Type Description Samples 200 SubtitleDownloadResult Operation successful. Returning a SubtitleDownloadResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SubtitleDownloadResult Emby.Api.Subtitles.SubtitleDownloadResult Name Type Notes NewIndex integer (int32)"
  },
  "reference/RestAPI/SubtitleService/postItemsByIdSubtitlesByIndexDelete.html": {
    "href": "reference/RestAPI/SubtitleService/postItemsByIdSubtitlesByIndexDelete.html",
    "title": "postItemsByIdSubtitlesByIndexDelete",
    "keywords": "postItemsByIdSubtitlesByIndexDelete Deletes an external subtitle file Requires authentication as user postItemsByIdSubtitlesByIndexDelete Request post /Items/{Id}/Subtitles/{Index}/Delete Parameters Name In Type Default Notes *Id path Item Id *MediaSourceId query MediaSourceId *Index path The subtitle stream index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SubtitleService/postVideosByIdSubtitlesByIndexDelete.html": {
    "href": "reference/RestAPI/SubtitleService/postVideosByIdSubtitlesByIndexDelete.html",
    "title": "postVideosByIdSubtitlesByIndexDelete",
    "keywords": "postVideosByIdSubtitlesByIndexDelete Deletes an external subtitle file Requires authentication as user postVideosByIdSubtitlesByIndexDelete Request post /Videos/{Id}/Subtitles/{Index}/Delete Parameters Name In Type Default Notes *Id path Item Id *MediaSourceId query MediaSourceId *Index path The subtitle stream index Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SuggestionsService.html": {
    "href": "reference/RestAPI/SuggestionsService.html",
    "title": "SuggestionsService",
    "keywords": "SuggestionsService API Documentation: Item Information getUsersByUseridSuggestions get /Users/{UserId}/Suggestions Gets items based on a query."
  },
  "reference/RestAPI/SuggestionsService/getUsersByUseridSuggestions.html": {
    "href": "reference/RestAPI/SuggestionsService/getUsersByUseridSuggestions.html",
    "title": "getUsersByUseridSuggestions",
    "keywords": "getUsersByUseridSuggestions Gets items based on a query. No authentication required getUsersByUseridSuggestions Request get /Users/{UserId}/Suggestions Parameters Name In Type Default Notes *UserId path Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/SyncService.html": {
    "href": "reference/RestAPI/SyncService.html",
    "title": "SyncService",
    "keywords": "SyncService API Documentation: Sync deleteSyncByTargetidItems delete /Sync/{TargetId}/Items Cancels items from a sync target deleteSyncJobitemsById delete /Sync/JobItems/{Id} Cancels a sync job item deleteSyncJobsById delete /Sync/Jobs/{Id} Cancels a sync job. getSyncItemsReady get /Sync/Items/Ready Gets ready to download sync items. getSyncJobitems get /Sync/JobItems Gets sync job items. getSyncJobitemsByIdAdditionalfiles get /Sync/JobItems/{Id}/AdditionalFiles Gets a sync job item file getSyncJobitemsByIdFile get /Sync/JobItems/{Id}/File Gets a sync job item file getSyncJobs get /Sync/Jobs Gets sync jobs. getSyncJobsById get /Sync/Jobs/{Id} Gets a sync job. getSyncOptions get /Sync/Options Gets a list of available sync targets. getSyncTargets get /Sync/Targets Gets a list of available sync targets. postSyncByItemidStatus post /Sync/{ItemId}/Status Gets sync status for an item. postSyncByTargetidItemsDelete post /Sync/{TargetId}/Items/Delete Cancels items from a sync target postSyncData post /Sync/Data Syncs data between device and server postSyncItemsCancel post /Sync/Items/Cancel Cancels items from a sync target postSyncJobitemsByIdDelete post /Sync/JobItems/{Id}/Delete Cancels a sync job item postSyncJobitemsByIdEnable post /Sync/JobItems/{Id}/Enable Enables a cancelled or queued sync job item postSyncJobitemsByIdMarkforremoval post /Sync/JobItems/{Id}/MarkForRemoval Marks a job item for removal postSyncJobitemsByIdTransferred post /Sync/JobItems/{Id}/Transferred Reports that a sync job item has successfully been transferred. postSyncJobitemsByIdUnmarkforremoval post /Sync/JobItems/{Id}/UnmarkForRemoval Unmarks a job item for removal postSyncJobs post /Sync/Jobs Gets sync jobs. postSyncJobsById post /Sync/Jobs/{Id} Updates a sync job. postSyncJobsByIdDelete post /Sync/Jobs/{Id}/Delete Cancels a sync job. postSyncOfflineactions post /Sync/OfflineActions Reports an action that occurred while offline."
  },
  "reference/RestAPI/SyncService/deleteSyncByTargetidItems.html": {
    "href": "reference/RestAPI/SyncService/deleteSyncByTargetidItems.html",
    "title": "deleteSyncByTargetidItems",
    "keywords": "deleteSyncByTargetidItems Cancels items from a sync target Requires authentication as user deleteSyncByTargetidItems Request delete /Sync/{TargetId}/Items Parameters Name In Type Default Notes *TargetId path TargetId ItemIds query ItemIds Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/deleteSyncJobitemsById.html": {
    "href": "reference/RestAPI/SyncService/deleteSyncJobitemsById.html",
    "title": "deleteSyncJobitemsById",
    "keywords": "deleteSyncJobitemsById Cancels a sync job item Requires authentication as user deleteSyncJobitemsById Request delete /Sync/JobItems/{Id} Parameters Name In Type Default Notes *Id path Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/deleteSyncJobsById.html": {
    "href": "reference/RestAPI/SyncService/deleteSyncJobsById.html",
    "title": "deleteSyncJobsById",
    "keywords": "deleteSyncJobsById Cancels a sync job. Requires authentication as user deleteSyncJobsById Request delete /Sync/Jobs/{Id} Parameters Name In Type Default Notes *Id path Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/getSyncItemsReady.html": {
    "href": "reference/RestAPI/SyncService/getSyncItemsReady.html",
    "title": "getSyncItemsReady",
    "keywords": "getSyncItemsReady Gets ready to download sync items. Requires authentication as user getSyncItemsReady Request get /Sync/Items/Ready Parameters Name In Type Default Notes *TargetId query TargetId Responses Status Code Type Description Samples 200 SyncedItem [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SyncedItem Emby.Server.Sync.Model.SyncedItem Name Type Notes ServerId string SyncJobId integer (int64) SyncJobName string SyncJobDateCreated string (date-time) SyncJobItemId integer (int64) OriginalFileName string Item BaseItemDto UserId string AdditionalFiles ItemFileInfo[] BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword ItemFileInfo Emby.Server.Sync.Model.ItemFileInfo Name Type Notes Type ItemFileType Name string Path string ImageType ImageType Index integer (int32) ItemFileType Emby.Server.Sync.Model.ItemFileType Enum Values Media Image Subtitles ImageType see also MediaBrowser.Model.Entities.ImageType Enum Values Primary Art Backdrop Banner Logo Thumb Disc Box Screenshot Menu Chapter BoxRear Thumbnail LogoLight LogoLightColor"
  },
  "reference/RestAPI/SyncService/getSyncJobitems.html": {
    "href": "reference/RestAPI/SyncService/getSyncJobitems.html",
    "title": "getSyncJobitems",
    "keywords": "getSyncJobitems Gets sync job items. Requires authentication as user getSyncJobitems Request get /Sync/JobItems Responses Status Code Type Description Samples 200 SyncJobItem Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SyncJobItem QueryResult_Sync.Model.SyncJobItem Name Type Notes Items SyncJobItem[] TotalRecordCount integer (int32) SyncJobItem Emby.Server.Sync.Model.SyncJobItem Name Type Notes Id integer (int64) JobId integer (int64) ItemId integer (int64) ItemName string MediaSourceId string MediaSource MediaSourceInfo[] TargetId string OutputPath string Status SyncJobItemStatus Progress number (double) DateCreated string (date-time) PrimaryImageItemId string PrimaryImageTag string TemporaryPath string AdditionalFiles ItemFileInfo[] ItemDateModifiedTicks integer (int64) MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid SyncJobItemStatus Emby.Server.Sync.Model.SyncJobItemStatus Enum Values Queued Converting ReadyToTransfer Transferring Synced Failed ItemFileInfo Emby.Server.Sync.Model.ItemFileInfo Name Type Notes Type ItemFileType Name string Path string ImageType ImageType Index integer (int32) ItemFileType Emby.Server.Sync.Model.ItemFileType Enum Values Media Image Subtitles ImageType see also MediaBrowser.Model.Entities.ImageType Enum Values Primary Art Backdrop Banner Logo Thumb Disc Box Screenshot Menu Chapter BoxRear Thumbnail LogoLight LogoLightColor"
  },
  "reference/RestAPI/SyncService/getSyncJobitemsByIdAdditionalfiles.html": {
    "href": "reference/RestAPI/SyncService/getSyncJobitemsByIdAdditionalfiles.html",
    "title": "getSyncJobitemsByIdAdditionalfiles",
    "keywords": "getSyncJobitemsByIdAdditionalfiles Gets a sync job item file Requires authentication as user getSyncJobitemsByIdAdditionalfiles Request get /Sync/JobItems/{Id}/AdditionalFiles Parameters Name In Type Default Notes *Id path Id *Name query Name Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/getSyncJobitemsByIdFile.html": {
    "href": "reference/RestAPI/SyncService/getSyncJobitemsByIdFile.html",
    "title": "getSyncJobitemsByIdFile",
    "keywords": "getSyncJobitemsByIdFile Gets a sync job item file Requires authentication as user getSyncJobitemsByIdFile Request get /Sync/JobItems/{Id}/File Parameters Name In Type Default Notes *Id path Id Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/getSyncJobs.html": {
    "href": "reference/RestAPI/SyncService/getSyncJobs.html",
    "title": "getSyncJobs",
    "keywords": "getSyncJobs Gets sync jobs. Requires authentication as user getSyncJobs Request get /Sync/Jobs Responses Status Code Type Description Samples 200 SyncJob Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SyncJob QueryResult_Sync.SyncJob Name Type Notes Items SyncJob[] TotalRecordCount integer (int32) SyncJob see also MediaBrowser.Model.Sync.SyncJob Name Type Notes Id integer (int64) TargetId string TargetName string Quality string Bitrate integer (int32) Container string VideoCodec string AudioCodec string Profile string Category SyncCategory ParentId integer (int64) Progress number (double) Name string Status SyncJobStatus UserId integer (int64) UnwatchedOnly boolean SyncNewContent boolean ItemLimit integer (int32) RequestedItemIds array DateCreated string (date-time) DateLastModified string (date-time) ItemCount integer (int32) ParentName string PrimaryImageItemId string PrimaryImageTag string SyncCategory see also MediaBrowser.Model.Sync.SyncCategory Enum Values Latest NextUp Resume SyncJobStatus see also MediaBrowser.Model.Sync.SyncJobStatus Enum Values Queued Converting ReadyToTransfer Transferring Completed CompletedWithError Failed"
  },
  "reference/RestAPI/SyncService/getSyncJobsById.html": {
    "href": "reference/RestAPI/SyncService/getSyncJobsById.html",
    "title": "getSyncJobsById",
    "keywords": "getSyncJobsById Gets a sync job. Requires authentication as user getSyncJobsById Request get /Sync/Jobs/{Id} Parameters Name In Type Default Notes *Id path Id Responses Status Code Type Description Samples 200 SyncJob Operation successful. Returning a SyncJob object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SyncJob see also MediaBrowser.Model.Sync.SyncJob Name Type Notes Id integer (int64) TargetId string TargetName string Quality string Bitrate integer (int32) Container string VideoCodec string AudioCodec string Profile string Category SyncCategory ParentId integer (int64) Progress number (double) Name string Status SyncJobStatus UserId integer (int64) UnwatchedOnly boolean SyncNewContent boolean ItemLimit integer (int32) RequestedItemIds array DateCreated string (date-time) DateLastModified string (date-time) ItemCount integer (int32) ParentName string PrimaryImageItemId string PrimaryImageTag string SyncCategory see also MediaBrowser.Model.Sync.SyncCategory Enum Values Latest NextUp Resume SyncJobStatus see also MediaBrowser.Model.Sync.SyncJobStatus Enum Values Queued Converting ReadyToTransfer Transferring Completed CompletedWithError Failed"
  },
  "reference/RestAPI/SyncService/getSyncOptions.html": {
    "href": "reference/RestAPI/SyncService/getSyncOptions.html",
    "title": "getSyncOptions",
    "keywords": "getSyncOptions Gets a list of available sync targets. Requires authentication as user getSyncOptions Request get /Sync/Options Parameters Name In Type Default Notes *UserId query UserId ItemIds query ItemIds ParentId query ParentId TargetId query TargetId Category query Category Responses Status Code Type Description Samples 200 SyncDialogOptions Operation successful. Returning a SyncDialogOptions object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SyncDialogOptions Emby.Server.Sync.Model.SyncDialogOptions Name Type Notes Targets SyncTarget[] Options SyncJobOption[] QualityOptions SyncQualityOption[] ProfileOptions SyncProfileOption[] SyncTarget see also MediaBrowser.Model.Sync.SyncTarget Name Type Notes Name string Id string SyncJobOption Emby.Server.Sync.Model.SyncJobOption SyncQualityOption Emby.Server.Sync.Model.SyncQualityOption Name Type Notes Name string Description string Id string IsDefault boolean IsOriginalQuality boolean SyncProfileOption Emby.Server.Sync.Model.SyncProfileOption Name Type Notes Name string Description string Id string IsDefault boolean EnableQualityOptions boolean"
  },
  "reference/RestAPI/SyncService/getSyncTargets.html": {
    "href": "reference/RestAPI/SyncService/getSyncTargets.html",
    "title": "getSyncTargets",
    "keywords": "getSyncTargets Gets a list of available sync targets. Requires authentication as user getSyncTargets Request get /Sync/Targets Parameters Name In Type Default Notes *UserId query UserId Responses Status Code Type Description Samples 200 SyncTarget [] Operation successful. Returning a List object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SyncTarget see also MediaBrowser.Model.Sync.SyncTarget Name Type Notes Name string Id string"
  },
  "reference/RestAPI/SyncService/postSyncByItemidStatus.html": {
    "href": "reference/RestAPI/SyncService/postSyncByItemidStatus.html",
    "title": "postSyncByItemidStatus",
    "keywords": "postSyncByItemidStatus Gets sync status for an item. Requires authentication as user postSyncByItemidStatus Request post /Sync/{ItemId}/Status Parameters Name In Type Default Notes *ItemId path *body body SyncedItemProgress SyncedItemProgress: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SyncedItemProgress Emby.Server.Sync.Model.SyncedItemProgress Name Type Notes Progress number (double) Status SyncJobItemStatus SyncJobItemStatus Emby.Server.Sync.Model.SyncJobItemStatus Enum Values Queued Converting ReadyToTransfer Transferring Synced Failed"
  },
  "reference/RestAPI/SyncService/postSyncByTargetidItemsDelete.html": {
    "href": "reference/RestAPI/SyncService/postSyncByTargetidItemsDelete.html",
    "title": "postSyncByTargetidItemsDelete",
    "keywords": "postSyncByTargetidItemsDelete Cancels items from a sync target Requires authentication as user postSyncByTargetidItemsDelete Request post /Sync/{TargetId}/Items/Delete Parameters Name In Type Default Notes *TargetId path TargetId ItemIds query ItemIds Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/postSyncData.html": {
    "href": "reference/RestAPI/SyncService/postSyncData.html",
    "title": "postSyncData",
    "keywords": "postSyncData Syncs data between device and server Requires authentication as user postSyncData Request post /Sync/Data Parameters Name In Type Default Notes *body body SyncDataRequest SyncDataRequest: Responses Status Code Type Description Samples 200 SyncDataResponse Operation successful. Returning a SyncDataResponse object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SyncDataRequest Emby.Server.Sync.Model.SyncDataRequest Name Type Notes LocalItemIds array TargetId string SyncDataResponse Emby.Server.Sync.Model.SyncDataResponse Name Type Notes ItemIdsToRemove array"
  },
  "reference/RestAPI/SyncService/postSyncItemsCancel.html": {
    "href": "reference/RestAPI/SyncService/postSyncItemsCancel.html",
    "title": "postSyncItemsCancel",
    "keywords": "postSyncItemsCancel Cancels items from a sync target Requires authentication as user postSyncItemsCancel Request post /Sync/Items/Cancel Parameters Name In Type Default Notes ItemIds query ItemIds Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/postSyncJobitemsByIdDelete.html": {
    "href": "reference/RestAPI/SyncService/postSyncJobitemsByIdDelete.html",
    "title": "postSyncJobitemsByIdDelete",
    "keywords": "postSyncJobitemsByIdDelete Cancels a sync job item Requires authentication as user postSyncJobitemsByIdDelete Request post /Sync/JobItems/{Id}/Delete Parameters Name In Type Default Notes *Id path Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/postSyncJobitemsByIdEnable.html": {
    "href": "reference/RestAPI/SyncService/postSyncJobitemsByIdEnable.html",
    "title": "postSyncJobitemsByIdEnable",
    "keywords": "postSyncJobitemsByIdEnable Enables a cancelled or queued sync job item Requires authentication as user postSyncJobitemsByIdEnable Request post /Sync/JobItems/{Id}/Enable Parameters Name In Type Default Notes *Id path Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/postSyncJobitemsByIdMarkforremoval.html": {
    "href": "reference/RestAPI/SyncService/postSyncJobitemsByIdMarkforremoval.html",
    "title": "postSyncJobitemsByIdMarkforremoval",
    "keywords": "postSyncJobitemsByIdMarkforremoval Marks a job item for removal Requires authentication as user postSyncJobitemsByIdMarkforremoval Request post /Sync/JobItems/{Id}/MarkForRemoval Parameters Name In Type Default Notes *Id path Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/postSyncJobitemsByIdTransferred.html": {
    "href": "reference/RestAPI/SyncService/postSyncJobitemsByIdTransferred.html",
    "title": "postSyncJobitemsByIdTransferred",
    "keywords": "postSyncJobitemsByIdTransferred Reports that a sync job item has successfully been transferred. Requires authentication as user postSyncJobitemsByIdTransferred Request post /Sync/JobItems/{Id}/Transferred Parameters Name In Type Default Notes *Id path Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/postSyncJobitemsByIdUnmarkforremoval.html": {
    "href": "reference/RestAPI/SyncService/postSyncJobitemsByIdUnmarkforremoval.html",
    "title": "postSyncJobitemsByIdUnmarkforremoval",
    "keywords": "postSyncJobitemsByIdUnmarkforremoval Unmarks a job item for removal Requires authentication as user postSyncJobitemsByIdUnmarkforremoval Request post /Sync/JobItems/{Id}/UnmarkForRemoval Parameters Name In Type Default Notes *Id path Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/postSyncJobs.html": {
    "href": "reference/RestAPI/SyncService/postSyncJobs.html",
    "title": "postSyncJobs",
    "keywords": "postSyncJobs Gets sync jobs. Requires authentication as user postSyncJobs Request post /Sync/Jobs Parameters Name In Type Default Notes *body body SyncJobRequest SyncJobRequest: Responses Status Code Type Description Samples 200 SyncJobCreationResult Operation successful. Returning a SyncJobCreationResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SyncJobRequest Emby.Server.Sync.Model.SyncJobRequest Name Type Notes TargetId string ItemIds array Category SyncCategory ParentId string Quality string Profile string Container string VideoCodec string AudioCodec string Name string UserId string UnwatchedOnly boolean SyncNewContent boolean ItemLimit integer (int32) Bitrate integer (int32) Downloaded boolean SyncCategory see also MediaBrowser.Model.Sync.SyncCategory Enum Values Latest NextUp Resume SyncJobCreationResult Emby.Server.Sync.Model.SyncJobCreationResult Name Type Notes Job SyncJob[] JobItems SyncJobItem[] SyncJob see also MediaBrowser.Model.Sync.SyncJob Name Type Notes Id integer (int64) TargetId string TargetName string Quality string Bitrate integer (int32) Container string VideoCodec string AudioCodec string Profile string Category SyncCategory ParentId integer (int64) Progress number (double) Name string Status SyncJobStatus UserId integer (int64) UnwatchedOnly boolean SyncNewContent boolean ItemLimit integer (int32) RequestedItemIds array DateCreated string (date-time) DateLastModified string (date-time) ItemCount integer (int32) ParentName string PrimaryImageItemId string PrimaryImageTag string SyncJobStatus see also MediaBrowser.Model.Sync.SyncJobStatus Enum Values Queued Converting ReadyToTransfer Transferring Completed CompletedWithError Failed SyncJobItem Emby.Server.Sync.Model.SyncJobItem Name Type Notes Id integer (int64) JobId integer (int64) ItemId integer (int64) ItemName string MediaSourceId string MediaSource MediaSourceInfo[] TargetId string OutputPath string Status SyncJobItemStatus Progress number (double) DateCreated string (date-time) PrimaryImageItemId string PrimaryImageTag string TemporaryPath string AdditionalFiles ItemFileInfo[] ItemDateModifiedTicks integer (int64) MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid SyncJobItemStatus Emby.Server.Sync.Model.SyncJobItemStatus Enum Values Queued Converting ReadyToTransfer Transferring Synced Failed ItemFileInfo Emby.Server.Sync.Model.ItemFileInfo Name Type Notes Type ItemFileType Name string Path string ImageType ImageType Index integer (int32) ItemFileType Emby.Server.Sync.Model.ItemFileType Enum Values Media Image Subtitles ImageType see also MediaBrowser.Model.Entities.ImageType Enum Values Primary Art Backdrop Banner Logo Thumb Disc Box Screenshot Menu Chapter BoxRear Thumbnail LogoLight LogoLightColor"
  },
  "reference/RestAPI/SyncService/postSyncJobsById.html": {
    "href": "reference/RestAPI/SyncService/postSyncJobsById.html",
    "title": "postSyncJobsById",
    "keywords": "postSyncJobsById Updates a sync job. Requires authentication as user postSyncJobsById Request post /Sync/Jobs/{Id} Parameters Name In Type Default Notes *Id path *body body SyncJob SyncJob: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SyncJob see also MediaBrowser.Model.Sync.SyncJob Name Type Notes Id integer (int64) TargetId string TargetName string Quality string Bitrate integer (int32) Container string VideoCodec string AudioCodec string Profile string Category SyncCategory ParentId integer (int64) Progress number (double) Name string Status SyncJobStatus UserId integer (int64) UnwatchedOnly boolean SyncNewContent boolean ItemLimit integer (int32) RequestedItemIds array DateCreated string (date-time) DateLastModified string (date-time) ItemCount integer (int32) ParentName string PrimaryImageItemId string PrimaryImageTag string SyncCategory see also MediaBrowser.Model.Sync.SyncCategory Enum Values Latest NextUp Resume SyncJobStatus see also MediaBrowser.Model.Sync.SyncJobStatus Enum Values Queued Converting ReadyToTransfer Transferring Completed CompletedWithError Failed"
  },
  "reference/RestAPI/SyncService/postSyncJobsByIdDelete.html": {
    "href": "reference/RestAPI/SyncService/postSyncJobsByIdDelete.html",
    "title": "postSyncJobsByIdDelete",
    "keywords": "postSyncJobsByIdDelete Cancels a sync job. Requires authentication as user postSyncJobsByIdDelete Request post /Sync/Jobs/{Id}/Delete Parameters Name In Type Default Notes *Id path Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SyncService/postSyncOfflineactions.html": {
    "href": "reference/RestAPI/SyncService/postSyncOfflineactions.html",
    "title": "postSyncOfflineactions",
    "keywords": "postSyncOfflineactions Reports an action that occurred while offline. Requires authentication as user postSyncOfflineactions Request post /Sync/OfflineActions Parameters Name In Type Default Notes *body body UserAction [] List`1: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserAction see also MediaBrowser.Model.Users.UserAction Name Type Notes Id string ServerId string UserId string ItemId string Type UserActionType Date string (date-time) PositionTicks integer (int64) UserActionType see also MediaBrowser.Model.Users.UserActionType Enum Values PlayedItem"
  },
  "reference/RestAPI/SystemService.html": {
    "href": "reference/RestAPI/SystemService.html",
    "title": "SystemService",
    "keywords": "SystemService API Documentation Wiki getSystemEndpoint get /System/Endpoint Gets information about the request endpoint getSystemInfo get /System/Info Gets information about the server getSystemInfoPublic get /System/Info/Public Gets public information about the server getSystemLogsByName get /System/Logs/{Name} Gets a log file getSystemLogsByNameLines get /System/Logs/{Name}/Lines Gets a log file getSystemLogsQuery get /System/Logs/Query Gets a list of available server log files getSystemPing get /System/Ping getSystemReleasenotes get /System/ReleaseNotes Gets release notes getSystemReleasenotesVersions get /System/ReleaseNotes/Versions Gets release notes getSystemWakeonlaninfo get /System/WakeOnLanInfo Gets wake on lan information postSystemPing post /System/Ping postSystemRestart post /System/Restart Restarts the application, if needed postSystemShutdown post /System/Shutdown Shuts down the application"
  },
  "reference/RestAPI/SystemService/getSystemEndpoint.html": {
    "href": "reference/RestAPI/SystemService/getSystemEndpoint.html",
    "title": "getSystemEndpoint",
    "keywords": "getSystemEndpoint Gets information about the request endpoint Requires authentication as user getSystemEndpoint Request get /System/Endpoint Responses Status Code Type Description Samples 200 EndPointInfo Operation successful. Returning a EndPointInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions EndPointInfo see also MediaBrowser.Model.Net.EndPointInfo Name Type Notes IsLocal boolean IsInNetwork boolean"
  },
  "reference/RestAPI/SystemService/getSystemInfo.html": {
    "href": "reference/RestAPI/SystemService/getSystemInfo.html",
    "title": "getSystemInfo",
    "keywords": "getSystemInfo Gets information about the server Requires authentication as user getSystemInfo Request get /System/Info Responses Status Code Type Description Samples 200 SystemInfo Operation successful. Returning a SystemInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions SystemInfo see also MediaBrowser.Model.System.SystemInfo Name Type Notes SystemUpdateLevel PackageVersionClass OperatingSystemDisplayName string PackageName string HasPendingRestart boolean IsShuttingDown boolean OperatingSystem string SupportsLibraryMonitor boolean SupportsLocalPortConfiguration boolean SupportsWakeServer boolean WebSocketPortNumber integer (int32) CompletedInstallations InstallationInfo[] CanSelfRestart boolean CanSelfUpdate boolean CanLaunchWebBrowser boolean ProgramDataPath string ItemsByNamePath string CachePath string LogPath string InternalMetadataPath string TranscodingTempPath string HttpServerPortNumber integer (int32) SupportsHttps boolean HttpsPortNumber integer (int32) HasUpdateAvailable boolean SupportsAutoRunAtStartup boolean HardwareAccelerationRequiresPremiere boolean LocalAddress string LocalAddresses array WanAddress string RemoteAddresses array ServerName string Version string Id string PackageVersionClass see also MediaBrowser.Model.Updates.PackageVersionClass Enum Values Release Beta Dev InstallationInfo see also MediaBrowser.Model.Updates.InstallationInfo Name Type Notes Id string (guid) Name string AssemblyGuid string Version string UpdateClass PackageVersionClass PercentComplete number (double)"
  },
  "reference/RestAPI/SystemService/getSystemInfoPublic.html": {
    "href": "reference/RestAPI/SystemService/getSystemInfoPublic.html",
    "title": "getSystemInfoPublic",
    "keywords": "getSystemInfoPublic Gets public information about the server No authentication required getSystemInfoPublic Request get /System/Info/Public Responses Status Code Type Description Samples 200 PublicSystemInfo Operation successful. Returning a PublicSystemInfo object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions PublicSystemInfo see also MediaBrowser.Model.System.PublicSystemInfo Name Type Notes LocalAddress string LocalAddresses array WanAddress string RemoteAddresses array ServerName string Version string Id string"
  },
  "reference/RestAPI/SystemService/getSystemLogsByName.html": {
    "href": "reference/RestAPI/SystemService/getSystemLogsByName.html",
    "title": "getSystemLogsByName",
    "keywords": "getSystemLogsByName Gets a log file Requires authentication as administrator getSystemLogsByName Request get /System/Logs/{Name} Parameters Name In Type Default Notes *Name path The log file name. Sanitize query Return sanitized log Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SystemService/getSystemLogsByNameLines.html": {
    "href": "reference/RestAPI/SystemService/getSystemLogsByNameLines.html",
    "title": "getSystemLogsByNameLines",
    "keywords": "getSystemLogsByNameLines Gets a log file Requires authentication as administrator getSystemLogsByNameLines Request get /System/Logs/{Name}/Lines Parameters Name In Type Default Notes *Name path The log file name. Responses Status Code Type Description Samples 200 QueryResult_String Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_String QueryResult_String Name Type Notes Items array TotalRecordCount integer (int32)"
  },
  "reference/RestAPI/SystemService/getSystemLogsQuery.html": {
    "href": "reference/RestAPI/SystemService/getSystemLogsQuery.html",
    "title": "getSystemLogsQuery",
    "keywords": "getSystemLogsQuery Gets a list of available server log files Requires authentication as administrator getSystemLogsQuery Request get /System/Logs/Query Parameters Name In Type Default Notes StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Responses Status Code Type Description Samples 200 QueryResult_LogFile Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_LogFile QueryResult_LogFile Name Type Notes Items LogFile[] TotalRecordCount integer (int32) LogFile see also MediaBrowser.Model.System.LogFile Name Type Notes DateCreated string (date-time) DateModified string (date-time) Size integer (int64) Name string"
  },
  "reference/RestAPI/SystemService/getSystemPing.html": {
    "href": "reference/RestAPI/SystemService/getSystemPing.html",
    "title": "getSystemPing",
    "keywords": "getSystemPing No authentication required getSystemPing Request get /System/Ping Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SystemService/getSystemReleasenotes.html": {
    "href": "reference/RestAPI/SystemService/getSystemReleasenotes.html",
    "title": "getSystemReleasenotes",
    "keywords": "getSystemReleasenotes Gets release notes Requires authentication as user getSystemReleasenotes Request get /System/ReleaseNotes Responses Status Code Type Description Samples 200 PackageVersionInfo Operation successful. Returning a PackageVersionInfo object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PackageVersionInfo see also MediaBrowser.Model.Updates.PackageVersionInfo Name Type Notes name string guid string versionStr string classification PackageVersionClass description string requiredVersionStr string sourceUrl string checksum string targetFilename string infoUrl string runtimes string PackageVersionClass see also MediaBrowser.Model.Updates.PackageVersionClass Enum Values Release Beta Dev"
  },
  "reference/RestAPI/SystemService/getSystemReleasenotesVersions.html": {
    "href": "reference/RestAPI/SystemService/getSystemReleasenotesVersions.html",
    "title": "getSystemReleasenotesVersions",
    "keywords": "getSystemReleasenotesVersions Gets release notes Requires authentication as user getSystemReleasenotesVersions Request get /System/ReleaseNotes/Versions Responses Status Code Type Description Samples 200 PackageVersionInfo [] Operation successful. Returning a PackageVersionInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions PackageVersionInfo see also MediaBrowser.Model.Updates.PackageVersionInfo Name Type Notes name string guid string versionStr string classification PackageVersionClass description string requiredVersionStr string sourceUrl string checksum string targetFilename string infoUrl string runtimes string PackageVersionClass see also MediaBrowser.Model.Updates.PackageVersionClass Enum Values Release Beta Dev"
  },
  "reference/RestAPI/SystemService/getSystemWakeonlaninfo.html": {
    "href": "reference/RestAPI/SystemService/getSystemWakeonlaninfo.html",
    "title": "getSystemWakeonlaninfo",
    "keywords": "getSystemWakeonlaninfo Gets wake on lan information Requires authentication as user getSystemWakeonlaninfo Request get /System/WakeOnLanInfo Responses Status Code Type Description Samples 200 WakeOnLanInfo [] Operation successful. Returning a WakeOnLanInfo[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions WakeOnLanInfo see also MediaBrowser.Model.System.WakeOnLanInfo Name Type Notes MacAddress string BroadcastAddress string Port integer (int32)"
  },
  "reference/RestAPI/SystemService/postSystemPing.html": {
    "href": "reference/RestAPI/SystemService/postSystemPing.html",
    "title": "postSystemPing",
    "keywords": "postSystemPing No authentication required postSystemPing Request post /System/Ping Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SystemService/postSystemRestart.html": {
    "href": "reference/RestAPI/SystemService/postSystemRestart.html",
    "title": "postSystemRestart",
    "keywords": "postSystemRestart Restarts the application, if needed Requires authentication as administrator postSystemRestart Request post /System/Restart Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/SystemService/postSystemShutdown.html": {
    "href": "reference/RestAPI/SystemService/postSystemShutdown.html",
    "title": "postSystemShutdown",
    "keywords": "postSystemShutdown Shuts down the application Requires authentication as administrator postSystemShutdown Request post /System/Shutdown Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/TagService.html": {
    "href": "reference/RestAPI/TagService.html",
    "title": "TagService",
    "keywords": "TagService API Documentation Wiki getArtistsPrefixes get /Artists/Prefixes Gets items based on a query. getAudiocodecs get /AudioCodecs Gets items based on a query. getContainers get /Containers Gets items based on a query. getItemsPrefixes get /Items/Prefixes Gets items based on a query. getItemtypes get /ItemTypes Gets items based on a query. getStreamlanguages get /StreamLanguages Gets items based on a query. getSubtitlecodecs get /SubtitleCodecs Gets items based on a query. getTags get /Tags Gets items based on a query. getVideocodecs get /VideoCodecs Gets items based on a query. getYears get /Years Gets items based on a query. postItemsByIdTagsAdd post /Items/{Id}/Tags/Add Adds new tags to an item"
  },
  "reference/RestAPI/TagService/getArtistsPrefixes.html": {
    "href": "reference/RestAPI/TagService/getArtistsPrefixes.html",
    "title": "getArtistsPrefixes",
    "keywords": "getArtistsPrefixes Gets items based on a query. Requires authentication as user getArtistsPrefixes Request get /Artists/Prefixes Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 NameValuePair [] Operation successful. Returning a NameValuePair[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions NameValuePair see also MediaBrowser.Model.Dto.NameValuePair Name Type Notes Name string Value string"
  },
  "reference/RestAPI/TagService/getAudiocodecs.html": {
    "href": "reference/RestAPI/TagService/getAudiocodecs.html",
    "title": "getAudiocodecs",
    "keywords": "getAudiocodecs Gets items based on a query. Requires authentication as user getAudiocodecs Request get /AudioCodecs Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 TagItem Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TagItem QueryResult_UserLibrary.TagItem Name Type Notes Items TagItem[] TotalRecordCount integer (int32) TagItem Emby.Api.UserLibrary.TagItem Name Type Notes Name string Id string"
  },
  "reference/RestAPI/TagService/getContainers.html": {
    "href": "reference/RestAPI/TagService/getContainers.html",
    "title": "getContainers",
    "keywords": "getContainers Gets items based on a query. Requires authentication as user getContainers Request get /Containers Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 TagItem Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TagItem QueryResult_UserLibrary.TagItem Name Type Notes Items TagItem[] TotalRecordCount integer (int32) TagItem Emby.Api.UserLibrary.TagItem Name Type Notes Name string Id string"
  },
  "reference/RestAPI/TagService/getItemsPrefixes.html": {
    "href": "reference/RestAPI/TagService/getItemsPrefixes.html",
    "title": "getItemsPrefixes",
    "keywords": "getItemsPrefixes Gets items based on a query. Requires authentication as user getItemsPrefixes Request get /Items/Prefixes Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 NameValuePair [] Operation successful. Returning a NameValuePair[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions NameValuePair see also MediaBrowser.Model.Dto.NameValuePair Name Type Notes Name string Value string"
  },
  "reference/RestAPI/TagService/getItemtypes.html": {
    "href": "reference/RestAPI/TagService/getItemtypes.html",
    "title": "getItemtypes",
    "keywords": "getItemtypes Gets items based on a query. Requires authentication as user getItemtypes Request get /ItemTypes Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 TagItem Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TagItem QueryResult_UserLibrary.TagItem Name Type Notes Items TagItem[] TotalRecordCount integer (int32) TagItem Emby.Api.UserLibrary.TagItem Name Type Notes Name string Id string"
  },
  "reference/RestAPI/TagService/getStreamlanguages.html": {
    "href": "reference/RestAPI/TagService/getStreamlanguages.html",
    "title": "getStreamlanguages",
    "keywords": "getStreamlanguages Gets items based on a query. Requires authentication as user getStreamlanguages Request get /StreamLanguages Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 TagItem Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TagItem QueryResult_UserLibrary.TagItem Name Type Notes Items TagItem[] TotalRecordCount integer (int32) TagItem Emby.Api.UserLibrary.TagItem Name Type Notes Name string Id string"
  },
  "reference/RestAPI/TagService/getSubtitlecodecs.html": {
    "href": "reference/RestAPI/TagService/getSubtitlecodecs.html",
    "title": "getSubtitlecodecs",
    "keywords": "getSubtitlecodecs Gets items based on a query. Requires authentication as user getSubtitlecodecs Request get /SubtitleCodecs Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 TagItem Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TagItem QueryResult_UserLibrary.TagItem Name Type Notes Items TagItem[] TotalRecordCount integer (int32) TagItem Emby.Api.UserLibrary.TagItem Name Type Notes Name string Id string"
  },
  "reference/RestAPI/TagService/getTags.html": {
    "href": "reference/RestAPI/TagService/getTags.html",
    "title": "getTags",
    "keywords": "getTags Gets items based on a query. Requires authentication as user getTags Request get /Tags Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 TagItem Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TagItem QueryResult_UserLibrary.TagItem Name Type Notes Items TagItem[] TotalRecordCount integer (int32) TagItem Emby.Api.UserLibrary.TagItem Name Type Notes Name string Id string"
  },
  "reference/RestAPI/TagService/getVideocodecs.html": {
    "href": "reference/RestAPI/TagService/getVideocodecs.html",
    "title": "getVideocodecs",
    "keywords": "getVideocodecs Gets items based on a query. Requires authentication as user getVideocodecs Request get /VideoCodecs Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 TagItem Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TagItem QueryResult_UserLibrary.TagItem Name Type Notes Items TagItem[] TotalRecordCount integer (int32) TagItem Emby.Api.UserLibrary.TagItem Name Type Notes Name string Id string"
  },
  "reference/RestAPI/TagService/getYears.html": {
    "href": "reference/RestAPI/TagService/getYears.html",
    "title": "getYears",
    "keywords": "getYears Gets items based on a query. Requires authentication as user getYears Request get /Years Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 TagItem Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions TagItem QueryResult_UserLibrary.TagItem Name Type Notes Items TagItem[] TotalRecordCount integer (int32) TagItem Emby.Api.UserLibrary.TagItem Name Type Notes Name string Id string"
  },
  "reference/RestAPI/TagService/postItemsByIdTagsAdd.html": {
    "href": "reference/RestAPI/TagService/postItemsByIdTagsAdd.html",
    "title": "postItemsByIdTagsAdd",
    "keywords": "postItemsByIdTagsAdd Adds new tags to an item Requires authentication as user postItemsByIdTagsAdd Request post /Items/{Id}/Tags/Add Parameters Name In Type Default Notes *Id path Item Id *body body AddTags AddTags Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions AddTags Emby.Api.UserLibrary.AddTags Name Type Notes Tags NameIdPair[] NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string"
  },
  "reference/RestAPI/ToneMapOptionsService.html": {
    "href": "reference/RestAPI/ToneMapOptionsService.html",
    "title": "ToneMapOptionsService",
    "keywords": "ToneMapOptionsService API Documentation Wiki getEncodingFulltonemapoptions get /Encoding/FullToneMapOptions Gets the tone mapping options getEncodingPublictonemapoptions get /Encoding/PublicToneMapOptions Gets the tone mapping options postEncodingFulltonemapoptions post /Encoding/FullToneMapOptions Updates the tone mapping options postEncodingPublictonemapoptions post /Encoding/PublicToneMapOptions Updates the tone mapping options"
  },
  "reference/RestAPI/ToneMapOptionsService/getEncodingFulltonemapoptions.html": {
    "href": "reference/RestAPI/ToneMapOptionsService/getEncodingFulltonemapoptions.html",
    "title": "getEncodingFulltonemapoptions",
    "keywords": "getEncodingFulltonemapoptions Gets the tone mapping options Requires authentication as user getEncodingFulltonemapoptions Request get /Encoding/FullToneMapOptions Responses Status Code Type Description Samples 200 EditObjectContainer Operation successful. Returning a EditObjectContainer object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions EditObjectContainer see also Emby.Web.GenericEdit.EditObjectContainer Name Type Notes Object object DefaultObject object TypeName string EditorRoot EditorRoot[] EditorRoot see also Emby.Web.GenericEdit.Editors.EditorRoot Name Type Notes PropertyConditions PropertyCondition[] PostbackActions PostbackAction[] TitleButton EditorButtonItem[] EditorItems EditorBase[] EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string PropertyCondition see also Emby.Web.GenericEdit.Conditions.PropertyCondition Name Type Notes AffectedPropertyId string ConditionType PropertyConditionType TargetPropertyId string SimpleCondition SimpleCondition ValueCondition ValueCondition Value object PropertyConditionType see also Emby.Web.GenericEdit.Conditions.PropertyConditionType Enum Values Visible Enabled SimpleCondition see also MediaBrowser.Model.Attributes.SimpleCondition Enum Values IsTrue IsFalse IsNull IsNotNullOrEmpty ValueCondition see also MediaBrowser.Model.Attributes.ValueCondition Enum Values IsEqual IsNotEqual IsGreater IsGreaterOrEqual IsLess IsLessOrEqual PostbackAction see also Emby.Web.GenericEdit.Actions.PostbackAction Name Type Notes TargetEditorId string PostbackCommandId string CommandParameterPropertyId string EditorButtonItem see also Emby.Web.GenericEdit.Editors.EditorButtonItem Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string EditorTypes see also Emby.Web.GenericEdit.Common.EditorTypes Enum Values Group Text Numeric Boolean SelectSingle SelectMultiple Date FilePath FolderPath StatusItem ProgressItem ButtonItem ButtonGroup CaptionItem LabelItem ItemList RadioGroup DataGrid PivotGrid SpacerItem EditorBase see also Emby.Web.GenericEdit.Editors.EditorBase Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string"
  },
  "reference/RestAPI/ToneMapOptionsService/getEncodingPublictonemapoptions.html": {
    "href": "reference/RestAPI/ToneMapOptionsService/getEncodingPublictonemapoptions.html",
    "title": "getEncodingPublictonemapoptions",
    "keywords": "getEncodingPublictonemapoptions Gets the tone mapping options Requires authentication as user getEncodingPublictonemapoptions Request get /Encoding/PublicToneMapOptions Responses Status Code Type Description Samples 200 EditObjectContainer Operation successful. Returning a EditObjectContainer object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions EditObjectContainer see also Emby.Web.GenericEdit.EditObjectContainer Name Type Notes Object object DefaultObject object TypeName string EditorRoot EditorRoot[] EditorRoot see also Emby.Web.GenericEdit.Editors.EditorRoot Name Type Notes PropertyConditions PropertyCondition[] PostbackActions PostbackAction[] TitleButton EditorButtonItem[] EditorItems EditorBase[] EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string PropertyCondition see also Emby.Web.GenericEdit.Conditions.PropertyCondition Name Type Notes AffectedPropertyId string ConditionType PropertyConditionType TargetPropertyId string SimpleCondition SimpleCondition ValueCondition ValueCondition Value object PropertyConditionType see also Emby.Web.GenericEdit.Conditions.PropertyConditionType Enum Values Visible Enabled SimpleCondition see also MediaBrowser.Model.Attributes.SimpleCondition Enum Values IsTrue IsFalse IsNull IsNotNullOrEmpty ValueCondition see also MediaBrowser.Model.Attributes.ValueCondition Enum Values IsEqual IsNotEqual IsGreater IsGreaterOrEqual IsLess IsLessOrEqual PostbackAction see also Emby.Web.GenericEdit.Actions.PostbackAction Name Type Notes TargetEditorId string PostbackCommandId string CommandParameterPropertyId string EditorButtonItem see also Emby.Web.GenericEdit.Editors.EditorButtonItem Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string EditorTypes see also Emby.Web.GenericEdit.Common.EditorTypes Enum Values Group Text Numeric Boolean SelectSingle SelectMultiple Date FilePath FolderPath StatusItem ProgressItem ButtonItem ButtonGroup CaptionItem LabelItem ItemList RadioGroup DataGrid PivotGrid SpacerItem EditorBase see also Emby.Web.GenericEdit.Editors.EditorBase Name Type Notes EditorType EditorTypes Name string Id string AllowEmpty boolean IsReadOnly boolean IsAdvanced boolean DisplayName string Description string ParentId string"
  },
  "reference/RestAPI/ToneMapOptionsService/postEncodingFulltonemapoptions.html": {
    "href": "reference/RestAPI/ToneMapOptionsService/postEncodingFulltonemapoptions.html",
    "title": "postEncodingFulltonemapoptions",
    "keywords": "postEncodingFulltonemapoptions Updates the tone mapping options Requires authentication as administrator postEncodingFulltonemapoptions Request post /Encoding/FullToneMapOptions Parameters Name In Type Default Notes *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/ToneMapOptionsService/postEncodingPublictonemapoptions.html": {
    "href": "reference/RestAPI/ToneMapOptionsService/postEncodingPublictonemapoptions.html",
    "title": "postEncodingPublictonemapoptions",
    "keywords": "postEncodingPublictonemapoptions Updates the tone mapping options Requires authentication as administrator postEncodingPublictonemapoptions Request post /Encoding/PublicToneMapOptions Parameters Name In Type Default Notes *body body string (binary) Binary stream Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/TrailersService.html": {
    "href": "reference/RestAPI/TrailersService.html",
    "title": "TrailersService",
    "keywords": "TrailersService API Documentation: Item Information getTrailers get /Trailers Finds movies and trailers similar to a given trailer."
  },
  "reference/RestAPI/TrailersService/getTrailers.html": {
    "href": "reference/RestAPI/TrailersService/getTrailers.html",
    "title": "getTrailers",
    "keywords": "getTrailers Finds movies and trailers similar to a given trailer. Requires authentication as user getTrailers Request get /Trailers Parameters Name In Type Default Notes ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/TvShowsService.html": {
    "href": "reference/RestAPI/TvShowsService.html",
    "title": "TvShowsService",
    "keywords": "TvShowsService API Documentation Wiki getShowsByIdEpisodes get /Shows/{Id}/Episodes Gets episodes for a tv season getShowsByIdSeasons get /Shows/{Id}/Seasons Gets seasons for a tv series getShowsNextup get /Shows/NextUp Gets a list of next up episodes getShowsUpcoming get /Shows/Upcoming Gets a list of upcoming episodes"
  },
  "reference/RestAPI/TvShowsService/getShowsByIdEpisodes.html": {
    "href": "reference/RestAPI/TvShowsService/getShowsByIdEpisodes.html",
    "title": "getShowsByIdEpisodes",
    "keywords": "getShowsByIdEpisodes Gets episodes for a tv season Requires authentication as user getShowsByIdEpisodes Request get /Shows/{Id}/Episodes Parameters Name In Type Default Notes *Id path The series id Season query Optional filter by season number. SeasonId query Optional. Filter by season id StartItemId query Optional. Skip through the list until a given item is found. ArtistType query Artist or AlbumArtist MaxOfficialRating query Optional filter by maximum official rating (PG, PG-13, TV-MA, etc). HasThemeSong query Optional filter by items with theme songs. HasThemeVideo query Optional filter by items with theme videos. HasSubtitles query Optional filter by items with subtitles. HasSpecialFeature query Optional filter by items with special features. HasTrailer query Optional filter by items with trailers. AdjacentTo query Optional. Return items that are siblings of a supplied item. MinIndexNumber query Optional filter by minimum index number. MinPlayers query Optional filter by minimum number of game players. MaxPlayers query Optional filter by maximum number of game players. ParentIndexNumber query Optional filter by parent index number. HasParentalRating query Optional filter by items that have or do not have a parental rating IsHD query Optional filter by items that are HD or not. LocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. ExcludeLocationTypes query Optional. If specified, results will be filtered based on LocationType. This allows multiple, comma delimeted. IsMissing query Optional filter by items that are missing episodes or not. IsUnaired query Optional filter by items that are unaired episodes or not. MinCommunityRating query Optional filter by minimum community rating. MinCriticRating query Optional filter by minimum critic rating. AiredDuringSeason query Gets all episodes that aired during a season, including specials. MinPremiereDate query Optional. The minimum premiere date. Format = ISO MinDateLastSaved query Optional. The minimum premiere date. Format = ISO MinDateLastSavedForUser query Optional. The minimum premiere date. Format = ISO MaxPremiereDate query Optional. The maximum premiere date. Format = ISO HasOverview query Optional filter by items that have an overview or not. HasImdbId query Optional filter by items that have an imdb id or not. HasTmdbId query Optional filter by items that have a tmdb id or not. HasTvdbId query Optional filter by items that have a tvdb id or not. ExcludeItemIds query Optional. If specified, results will be filtered by exxcluding item ids. This allows multiple, comma delimeted. StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Recursive query When searching within folders, this determines whether or not the search will be recursive. true/false SearchTerm query Enter a search term to perform a search request SortOrder query Sort Order - Ascending,Descending ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines ExcludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. AnyProviderIdEquals query Optional. If specified, result will be filtered to contain only items which match at least one of the specified IDs. Each provider ID must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple, comma delimeted value pairs. Filters query Optional. Specify additional filters to apply. This allows multiple, comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed, IsFavorite, IsResumable, Likes, Dislikes IsFavorite query Optional filter by items that are marked as favorite, or not. IsMovie query Optional filter for movies. IsSeries query Optional filter for series. IsNews query Optional filter for news. IsKids query Optional filter for kids. IsSports query Optional filter for sports. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. ImageTypes query Optional. If specified, results will be filtered based on those containing image types. This allows multiple, comma delimited. SortBy query Optional. Specify one or more sort orders, comma delimeted. Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating, DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName, Random, Revenue, Runtime IsPlayed query Optional filter by items that are played, or not. Genres query Optional. If specified, results will be filtered based on genre. This allows multiple, pipe delimeted. OfficialRatings query Optional. If specified, results will be filtered based on OfficialRating. This allows multiple, pipe delimeted. Tags query Optional. If specified, results will be filtered based on tag. This allows multiple, pipe delimeted. Years query Optional. If specified, results will be filtered based on production year. This allows multiple, comma delimeted. EnableImages query Optional, include image information in output EnableUserData query Optional, include user data ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. Person query Optional. If specified, results will be filtered to include only those containing the specified person. PersonIds query Optional. If specified, results will be filtered to include only those containing the specified person. PersonTypes query Optional. If specified, along with Person, results will be filtered to include only those containing the specified person and PersonType. Allows multiple, comma-delimited Studios query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. StudioIds query Optional. If specified, results will be filtered based on studio. This allows multiple, pipe delimeted. Artists query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. ArtistIds query Optional. If specified, results will be filtered based on artist. This allows multiple, pipe delimeted. Albums query Optional. If specified, results will be filtered based on album. This allows multiple, pipe delimeted. Ids query Optional. If specific items are needed, specify a list of item id's to retrieve. This allows multiple, comma delimited. VideoTypes query Optional filter by VideoType (videofile, dvd, bluray, iso). Allows multiple, comma delimeted. Containers query Optional filter by Container. Allows multiple, comma delimeted. AudioCodecs query Optional filter by AudioCodec. Allows multiple, comma delimeted. VideoCodecs query Optional filter by VideoCodec. Allows multiple, comma delimeted. SubtitleCodecs query Optional filter by SubtitleCodec. Allows multiple, comma delimeted. Path query Optional filter by Path. UserId query User Id MinOfficialRating query Optional filter by minimum official rating (PG, PG-13, TV-MA, etc). IsLocked query Optional filter by items that are locked. IsPlaceHolder query Optional filter by items that are placeholders HasOfficialRating query Optional filter by items that have official ratings GroupItemsIntoCollections query Whether or not to hide items behind their boxsets. Is3D query Optional filter by items that are 3D, or not. SeriesStatus query Optional filter by Series Status. Allows multiple, comma delimeted. NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. ArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. AlbumArtistStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. NameStartsWith query Optional filter by items whose name is sorted equally than a given input string. NameLessThan query Optional filter by items whose name is equally or lesser than a given input string. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/TvShowsService/getShowsByIdSeasons.html": {
    "href": "reference/RestAPI/TvShowsService/getShowsByIdSeasons.html",
    "title": "getShowsByIdSeasons",
    "keywords": "getShowsByIdSeasons Gets seasons for a tv series Requires authentication as user getShowsByIdSeasons Request get /Shows/{Id}/Seasons Parameters Name In Type Default Notes *UserId query User Id Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls *Id path The series id IsSpecialSeason query Optional. Filter by special season. IsMissing query Optional filter by items that are missing episodes or not. AdjacentTo query Optional. Return items that are siblings of a supplied item. EnableImages query Optional, include image information in output ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. EnableUserData query Optional, include user data Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/TvShowsService/getShowsNextup.html": {
    "href": "reference/RestAPI/TvShowsService/getShowsNextup.html",
    "title": "getShowsNextup",
    "keywords": "getShowsNextup Gets a list of next up episodes Requires authentication as user getShowsNextup Request get /Shows/NextUp Parameters Name In Type Default Notes *UserId query User Id StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls SeriesId query Optional. Filter by series id ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root EnableImages query Optional, include image information in output ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. EnableUserData query Optional, include user data Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/TvShowsService/getShowsUpcoming.html": {
    "href": "reference/RestAPI/TvShowsService/getShowsUpcoming.html",
    "title": "getShowsUpcoming",
    "keywords": "getShowsUpcoming Gets a list of upcoming episodes Requires authentication as user getShowsUpcoming Request get /Shows/Upcoming Parameters Name In Type Default Notes *UserId query User Id StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines, TrailerUrls ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root EnableImages query Optional, include image information in output ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. EnableUserData query Optional, include user data Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/UniversalAudioService.html": {
    "href": "reference/RestAPI/UniversalAudioService.html",
    "title": "UniversalAudioService",
    "keywords": "UniversalAudioService API Documentation: Audio streaming getAudioByIdUniversal get /Audio/{Id}/universal Gets an audio stream getAudioByIdUniversalByContainer get /Audio/{Id}/universal.{Container} Gets an audio stream headAudioByIdUniversal head /Audio/{Id}/universal Gets an audio stream headAudioByIdUniversalByContainer head /Audio/{Id}/universal.{Container} Gets an audio stream"
  },
  "reference/RestAPI/UniversalAudioService/getAudioByIdUniversal.html": {
    "href": "reference/RestAPI/UniversalAudioService/getAudioByIdUniversal.html",
    "title": "getAudioByIdUniversal",
    "keywords": "getAudioByIdUniversal Gets an audio stream Requires authentication as user getAudioByIdUniversal Request get /Audio/{Id}/universal Parameters Name In Type Default Notes *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/UniversalAudioService/getAudioByIdUniversalByContainer.html": {
    "href": "reference/RestAPI/UniversalAudioService/getAudioByIdUniversalByContainer.html",
    "title": "getAudioByIdUniversalByContainer",
    "keywords": "getAudioByIdUniversalByContainer Gets an audio stream Requires authentication as user getAudioByIdUniversalByContainer Request get /Audio/{Id}/universal.{Container} Parameters Name In Type Default Notes *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container path StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/UniversalAudioService/headAudioByIdUniversal.html": {
    "href": "reference/RestAPI/UniversalAudioService/headAudioByIdUniversal.html",
    "title": "headAudioByIdUniversal",
    "keywords": "headAudioByIdUniversal Gets an audio stream Requires authentication as user headAudioByIdUniversal Request head /Audio/{Id}/universal Parameters Name In Type Default Notes *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/UniversalAudioService/headAudioByIdUniversalByContainer.html": {
    "href": "reference/RestAPI/UniversalAudioService/headAudioByIdUniversalByContainer.html",
    "title": "headAudioByIdUniversalByContainer",
    "keywords": "headAudioByIdUniversalByContainer Gets an audio stream Requires authentication as user headAudioByIdUniversalByContainer Request head /Audio/{Id}/universal.{Container} Parameters Name In Type Default Notes *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container path StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/UserLibraryService.html": {
    "href": "reference/RestAPI/UserLibraryService.html",
    "title": "UserLibraryService",
    "keywords": "UserLibraryService API Documentation: Browsing the Library deleteUsersByUseridFavoriteitemsById delete /Users/{UserId}/FavoriteItems/{Id} Unmarks an item as a favorite deleteUsersByUseridItemsByIdRating delete /Users/{UserId}/Items/{Id}/Rating Deletes a user's saved personal rating for an item getLivetvProgramsById get /LiveTv/Programs/{Id} Gets a live tv program getUsersByUseridItemsById get /Users/{UserId}/Items/{Id} Gets an item from a user's library getUsersByUseridItemsByIdIntros get /Users/{UserId}/Items/{Id}/Intros Gets intros to play before the main media item plays getUsersByUseridItemsByIdLocaltrailers get /Users/{UserId}/Items/{Id}/LocalTrailers Gets local trailers for an item getUsersByUseridItemsByIdSpecialfeatures get /Users/{UserId}/Items/{Id}/SpecialFeatures Gets special features for an item getUsersByUseridItemsLatest get /Users/{UserId}/Items/Latest Gets latest media getUsersByUseridItemsRoot get /Users/{UserId}/Items/Root Gets the root folder from a user's library getVideosByIdAdditionalparts get /Videos/{Id}/AdditionalParts Gets additional parts for a video. postUsersByUseridFavoriteitemsById post /Users/{UserId}/FavoriteItems/{Id} Marks an item as a favorite postUsersByUseridFavoriteitemsByIdDelete post /Users/{UserId}/FavoriteItems/{Id}/Delete Unmarks an item as a favorite postUsersByUseridItemsByIdHidefromresume post /Users/{UserId}/Items/{Id}/HideFromResume Updates a user's hide from resume for an item postUsersByUseridItemsByIdRating post /Users/{UserId}/Items/{Id}/Rating Updates a user's rating for an item postUsersByUseridItemsByIdRatingDelete post /Users/{UserId}/Items/{Id}/Rating/Delete Deletes a user's saved personal rating for an item"
  },
  "reference/RestAPI/UserLibraryService/deleteUsersByUseridFavoriteitemsById.html": {
    "href": "reference/RestAPI/UserLibraryService/deleteUsersByUseridFavoriteitemsById.html",
    "title": "deleteUsersByUseridFavoriteitemsById",
    "keywords": "deleteUsersByUseridFavoriteitemsById Unmarks an item as a favorite Requires authentication as user deleteUsersByUseridFavoriteitemsById Request delete /Users/{UserId}/FavoriteItems/{Id} Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id Responses Status Code Type Description Samples 200 UserItemDataDto Operation successful. Returning a UserItemDataDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string"
  },
  "reference/RestAPI/UserLibraryService/deleteUsersByUseridItemsByIdRating.html": {
    "href": "reference/RestAPI/UserLibraryService/deleteUsersByUseridItemsByIdRating.html",
    "title": "deleteUsersByUseridItemsByIdRating",
    "keywords": "deleteUsersByUseridItemsByIdRating Deletes a user's saved personal rating for an item Requires authentication as user deleteUsersByUseridItemsByIdRating Request delete /Users/{UserId}/Items/{Id}/Rating Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id Responses Status Code Type Description Samples 200 UserItemDataDto Operation successful. Returning a UserItemDataDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string"
  },
  "reference/RestAPI/UserLibraryService/getLivetvProgramsById.html": {
    "href": "reference/RestAPI/UserLibraryService/getLivetvProgramsById.html",
    "title": "getLivetvProgramsById",
    "keywords": "getLivetvProgramsById Gets a live tv program Requires authentication as user getLivetvProgramsById Request get /LiveTv/Programs/{Id} Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/UserLibraryService/getUsersByUseridItemsById.html": {
    "href": "reference/RestAPI/UserLibraryService/getUsersByUseridItemsById.html",
    "title": "getUsersByUseridItemsById",
    "keywords": "getUsersByUseridItemsById Gets an item from a user's library Requires authentication as user getUsersByUseridItemsById Request get /Users/{UserId}/Items/{Id} Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/UserLibraryService/getUsersByUseridItemsByIdIntros.html": {
    "href": "reference/RestAPI/UserLibraryService/getUsersByUseridItemsByIdIntros.html",
    "title": "getUsersByUseridItemsByIdIntros",
    "keywords": "getUsersByUseridItemsByIdIntros Gets intros to play before the main media item plays Requires authentication as user getUsersByUseridItemsByIdIntros Request get /Users/{UserId}/Items/{Id}/Intros Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/UserLibraryService/getUsersByUseridItemsByIdLocaltrailers.html": {
    "href": "reference/RestAPI/UserLibraryService/getUsersByUseridItemsByIdLocaltrailers.html",
    "title": "getUsersByUseridItemsByIdLocaltrailers",
    "keywords": "getUsersByUseridItemsByIdLocaltrailers Gets local trailers for an item Requires authentication as user getUsersByUseridItemsByIdLocaltrailers Request get /Users/{UserId}/Items/{Id}/LocalTrailers Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id Responses Status Code Type Description Samples 200 BaseItemDto [] Operation successful. Returning a BaseItemDto[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/UserLibraryService/getUsersByUseridItemsByIdSpecialfeatures.html": {
    "href": "reference/RestAPI/UserLibraryService/getUsersByUseridItemsByIdSpecialfeatures.html",
    "title": "getUsersByUseridItemsByIdSpecialfeatures",
    "keywords": "getUsersByUseridItemsByIdSpecialfeatures Gets special features for an item Requires authentication as user getUsersByUseridItemsByIdSpecialfeatures Request get /Users/{UserId}/Items/{Id}/SpecialFeatures Parameters Name In Type Default Notes *UserId path User Id *Id path Movie Id Responses Status Code Type Description Samples 200 BaseItemDto [] Operation successful. Returning a BaseItemDto[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/UserLibraryService/getUsersByUseridItemsLatest.html": {
    "href": "reference/RestAPI/UserLibraryService/getUsersByUseridItemsLatest.html",
    "title": "getUsersByUseridItemsLatest",
    "keywords": "getUsersByUseridItemsLatest Gets latest media Requires authentication as user getUsersByUseridItemsLatest Request get /Users/{UserId}/Items/Latest Parameters Name In Type Default Notes *UserId path User Id Limit query Limit ParentId query Specify this to localize the search to a specific item or folder. Omit to use the root Fields query Optional. Specify additional fields of information to return in the output. This allows multiple, comma delimeted. Options: Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, SortName, Studios, Taglines IncludeItemTypes query Optional. If specified, results will be filtered based on item type. This allows multiple, comma delimeted. MediaTypes query Optional filter by MediaType. Allows multiple, comma delimited. IsFolder query Filter by items that are folders, or not. IsPlayed query Filter by items that are played, or not. GroupItems query Whether or not to group items into a parent container. EnableImages query Optional, include image information in output ImageTypeLimit query Optional, the max number of images to return, per image type EnableImageTypes query Optional. The image types to include in the output. EnableUserData query Optional, include user data Responses Status Code Type Description Samples 200 BaseItemDto [] Operation successful. Returning a BaseItemDto[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/UserLibraryService/getUsersByUseridItemsRoot.html": {
    "href": "reference/RestAPI/UserLibraryService/getUsersByUseridItemsRoot.html",
    "title": "getUsersByUseridItemsRoot",
    "keywords": "getUsersByUseridItemsRoot Gets the root folder from a user's library Requires authentication as user getUsersByUseridItemsRoot Request get /Users/{UserId}/Items/Root Parameters Name In Type Default Notes *UserId path User Id Responses Status Code Type Description Samples 200 BaseItemDto Operation successful. Returning a BaseItemDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/UserLibraryService/getVideosByIdAdditionalparts.html": {
    "href": "reference/RestAPI/UserLibraryService/getVideosByIdAdditionalparts.html",
    "title": "getVideosByIdAdditionalparts",
    "keywords": "getVideosByIdAdditionalparts Gets additional parts for a video. Requires authentication as user getVideosByIdAdditionalparts Request get /Videos/{Id}/AdditionalParts Parameters Name In Type Default Notes UserId query Optional. Filter by user id, and attach user data *Id path Item Id Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/UserLibraryService/postUsersByUseridFavoriteitemsById.html": {
    "href": "reference/RestAPI/UserLibraryService/postUsersByUseridFavoriteitemsById.html",
    "title": "postUsersByUseridFavoriteitemsById",
    "keywords": "postUsersByUseridFavoriteitemsById Marks an item as a favorite Requires authentication as user postUsersByUseridFavoriteitemsById Request post /Users/{UserId}/FavoriteItems/{Id} Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id Responses Status Code Type Description Samples 200 UserItemDataDto Operation successful. Returning a UserItemDataDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string"
  },
  "reference/RestAPI/UserLibraryService/postUsersByUseridFavoriteitemsByIdDelete.html": {
    "href": "reference/RestAPI/UserLibraryService/postUsersByUseridFavoriteitemsByIdDelete.html",
    "title": "postUsersByUseridFavoriteitemsByIdDelete",
    "keywords": "postUsersByUseridFavoriteitemsByIdDelete Unmarks an item as a favorite Requires authentication as user postUsersByUseridFavoriteitemsByIdDelete Request post /Users/{UserId}/FavoriteItems/{Id}/Delete Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id Responses Status Code Type Description Samples 200 UserItemDataDto Operation successful. Returning a UserItemDataDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string"
  },
  "reference/RestAPI/UserLibraryService/postUsersByUseridItemsByIdHidefromresume.html": {
    "href": "reference/RestAPI/UserLibraryService/postUsersByUseridItemsByIdHidefromresume.html",
    "title": "postUsersByUseridItemsByIdHidefromresume",
    "keywords": "postUsersByUseridItemsByIdHidefromresume Updates a user's hide from resume for an item Requires authentication as user postUsersByUseridItemsByIdHidefromresume Request post /Users/{UserId}/Items/{Id}/HideFromResume Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id *Hide query Whether the item should be hidden from reusme or not. true/false Responses Status Code Type Description Samples 200 UserItemDataDto Operation successful. Returning a UserItemDataDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string"
  },
  "reference/RestAPI/UserLibraryService/postUsersByUseridItemsByIdRating.html": {
    "href": "reference/RestAPI/UserLibraryService/postUsersByUseridItemsByIdRating.html",
    "title": "postUsersByUseridItemsByIdRating",
    "keywords": "postUsersByUseridItemsByIdRating Updates a user's rating for an item Requires authentication as user postUsersByUseridItemsByIdRating Request post /Users/{UserId}/Items/{Id}/Rating Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id *Likes query Whether the user likes the item or not. true/false Responses Status Code Type Description Samples 200 UserItemDataDto Operation successful. Returning a UserItemDataDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string"
  },
  "reference/RestAPI/UserLibraryService/postUsersByUseridItemsByIdRatingDelete.html": {
    "href": "reference/RestAPI/UserLibraryService/postUsersByUseridItemsByIdRatingDelete.html",
    "title": "postUsersByUseridItemsByIdRatingDelete",
    "keywords": "postUsersByUseridItemsByIdRatingDelete Deletes a user's saved personal rating for an item Requires authentication as user postUsersByUseridItemsByIdRatingDelete Request post /Users/{UserId}/Items/{Id}/Rating/Delete Parameters Name In Type Default Notes *UserId path User Id *Id path Item Id Responses Status Code Type Description Samples 200 UserItemDataDto Operation successful. Returning a UserItemDataDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string"
  },
  "reference/RestAPI/UserService.html": {
    "href": "reference/RestAPI/UserService.html",
    "title": "UserService",
    "keywords": "UserService API Documentation Wiki deleteUsersById delete /Users/{Id} Deletes a user deleteUsersByIdTrackselectionsByTracktype delete /Users/{Id}/TrackSelections/{TrackType} Clears audio or subtitle track selections for a user getUsersById get /Users/{Id} Gets a user by Id getUsersPrefixes get /Users/Prefixes Gets a list of users getUsersPublic get /Users/Public Gets a list of publicly visible users for display on a login screen. getUsersQuery get /Users/Query Gets a list of users postUsersAuthenticatebyname post /Users/AuthenticateByName Authenticates a user postUsersById post /Users/{Id} Updates a user postUsersByIdAuthenticate post /Users/{Id}/Authenticate Authenticates a user postUsersByIdConfiguration post /Users/{Id}/Configuration Updates a user configuration postUsersByIdDelete post /Users/{Id}/Delete Deletes a user postUsersByIdEasypassword post /Users/{Id}/EasyPassword Updates a user's easy password postUsersByIdPassword post /Users/{Id}/Password Updates a user's password postUsersByIdPolicy post /Users/{Id}/Policy Updates a user policy postUsersByIdTrackselectionsByTracktypeDelete post /Users/{Id}/TrackSelections/{TrackType}/Delete Clears audio or subtitle track selections for a user postUsersForgotpassword post /Users/ForgotPassword Initiates the forgot password process for a local user postUsersForgotpasswordPin post /Users/ForgotPassword/Pin Redeems a forgot password pin postUsersNew post /Users/New Creates a user"
  },
  "reference/RestAPI/UserService/deleteUsersById.html": {
    "href": "reference/RestAPI/UserService/deleteUsersById.html",
    "title": "deleteUsersById",
    "keywords": "deleteUsersById Deletes a user Requires authentication as administrator deleteUsersById Request delete /Users/{Id} Parameters Name In Type Default Notes *Id path Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/UserService/deleteUsersByIdTrackselectionsByTracktype.html": {
    "href": "reference/RestAPI/UserService/deleteUsersByIdTrackselectionsByTracktype.html",
    "title": "deleteUsersByIdTrackselectionsByTracktype",
    "keywords": "deleteUsersByIdTrackselectionsByTracktype Clears audio or subtitle track selections for a user No authentication required deleteUsersByIdTrackselectionsByTracktype Request delete /Users/{Id}/TrackSelections/{TrackType} Parameters Name In Type Default Notes *Id path *TrackType path Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/UserService/getUsersById.html": {
    "href": "reference/RestAPI/UserService/getUsersById.html",
    "title": "getUsersById",
    "keywords": "getUsersById Gets a user by Id Requires authentication as user getUsersById Request get /Users/{Id} Parameters Name In Type Default Notes *Id path Responses Status Code Type Description Samples 200 UserDto Operation successful. Returning a UserDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserDto see also MediaBrowser.Model.Dto.UserDto Name Type Notes Name string ServerId string ServerName string Prefix string ConnectUserName string DateCreated string (date-time) ConnectLinkType UserLinkType Id string (guid) PrimaryImageTag string HasPassword boolean HasConfiguredPassword boolean HasConfiguredEasyPassword boolean EnableAutoLogin boolean LastLoginDate string (date-time) LastActivityDate string (date-time) Configuration UserConfiguration[] Policy UserPolicy[] PrimaryImageAspectRatio number (double) UserLinkType see also MediaBrowser.Model.Connect.UserLinkType Enum Values LinkedUser Guest UserConfiguration see also MediaBrowser.Model.Configuration.UserConfiguration Name Type Notes AudioLanguagePreference string PlayDefaultAudioTrack boolean SubtitleLanguagePreference string DisplayMissingEpisodes boolean SubtitleMode SubtitlePlaybackMode EnableLocalPassword boolean OrderedViews array LatestItemsExcludes array MyMediaExcludes array HidePlayedInLatest boolean RememberAudioSelections boolean RememberSubtitleSelections boolean EnableNextEpisodeAutoPlay boolean ResumeRewindSeconds integer (int32) IntroSkipMode SegmentSkipMode SubtitlePlaybackMode see also MediaBrowser.Model.Configuration.SubtitlePlaybackMode Enum Values Default Always OnlyForced None Smart SegmentSkipMode see also MediaBrowser.Model.Configuration.SegmentSkipMode Enum Values ShowButton AutoSkip None UserPolicy see also MediaBrowser.Model.Users.UserPolicy Name Type Notes IsAdministrator boolean IsHidden boolean IsHiddenRemotely boolean IsHiddenFromUnusedDevices boolean IsDisabled boolean MaxParentalRating integer (int32) BlockedTags array IsTagBlockingModeInclusive boolean IncludeTags array EnableUserPreferenceAccess boolean AccessSchedules AccessSchedule[] BlockUnratedItems UnratedItem[] EnableRemoteControlOfOtherUsers boolean EnableSharedDeviceControl boolean EnableRemoteAccess boolean EnableLiveTvManagement boolean EnableLiveTvAccess boolean EnableMediaPlayback boolean EnableAudioPlaybackTranscoding boolean EnableVideoPlaybackTranscoding boolean EnablePlaybackRemuxing boolean EnableContentDeletion boolean EnableContentDeletionFromFolders array EnableContentDownloading boolean EnableSubtitleDownloading boolean EnableSubtitleManagement boolean EnableSyncTranscoding boolean EnableMediaConversion boolean EnabledChannels array EnableAllChannels boolean EnabledFolders array EnableAllFolders boolean InvalidLoginAttemptCount integer (int32) EnablePublicSharing boolean BlockedMediaFolders array RemoteClientBitrateLimit integer (int32) AuthenticationProviderId string ExcludedSubFolders array SimultaneousStreamLimit integer (int32) EnabledDevices array EnableAllDevices boolean AccessSchedule see also MediaBrowser.Model.Configuration.AccessSchedule Name Type Notes DayOfWeek DynamicDayOfWeek StartHour number (double) EndHour number (double) DynamicDayOfWeek see also MediaBrowser.Model.Configuration.DynamicDayOfWeek Enum Values Sunday Monday Tuesday Wednesday Thursday Friday Saturday Everyday Weekday Weekend UnratedItem see also MediaBrowser.Model.Configuration.UnratedItem"
  },
  "reference/RestAPI/UserService/getUsersPrefixes.html": {
    "href": "reference/RestAPI/UserService/getUsersPrefixes.html",
    "title": "getUsersPrefixes",
    "keywords": "getUsersPrefixes Gets a list of users Requires authentication as administrator getUsersPrefixes Request get /Users/Prefixes Parameters Name In Type Default Notes IsHidden query Optional filter by IsHidden=true or false IsDisabled query Optional filter by IsDisabled=true or false StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. Responses Status Code Type Description Samples 200 NameIdPair [] Operation successful. Returning a NameIdPair[] object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string"
  },
  "reference/RestAPI/UserService/getUsersPublic.html": {
    "href": "reference/RestAPI/UserService/getUsersPublic.html",
    "title": "getUsersPublic",
    "keywords": "getUsersPublic Gets a list of publicly visible users for display on a login screen. No authentication required getUsersPublic Request get /Users/Public Responses Status Code Type Description Samples 200 UserDto [] Operation successful. Returning a UserDto[] object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions UserDto see also MediaBrowser.Model.Dto.UserDto Name Type Notes Name string ServerId string ServerName string Prefix string ConnectUserName string DateCreated string (date-time) ConnectLinkType UserLinkType Id string (guid) PrimaryImageTag string HasPassword boolean HasConfiguredPassword boolean HasConfiguredEasyPassword boolean EnableAutoLogin boolean LastLoginDate string (date-time) LastActivityDate string (date-time) Configuration UserConfiguration Policy UserPolicy PrimaryImageAspectRatio number (double) UserLinkType see also MediaBrowser.Model.Connect.UserLinkType Enum Values LinkedUser Guest UserConfiguration see also MediaBrowser.Model.Configuration.UserConfiguration Name Type Notes AudioLanguagePreference string PlayDefaultAudioTrack boolean SubtitleLanguagePreference string DisplayMissingEpisodes boolean SubtitleMode SubtitlePlaybackMode EnableLocalPassword boolean OrderedViews array LatestItemsExcludes array MyMediaExcludes array HidePlayedInLatest boolean RememberAudioSelections boolean RememberSubtitleSelections boolean EnableNextEpisodeAutoPlay boolean ResumeRewindSeconds integer (int32) IntroSkipMode SegmentSkipMode SubtitlePlaybackMode see also MediaBrowser.Model.Configuration.SubtitlePlaybackMode Enum Values Default Always OnlyForced None Smart SegmentSkipMode see also MediaBrowser.Model.Configuration.SegmentSkipMode Enum Values ShowButton AutoSkip None UserPolicy see also MediaBrowser.Model.Users.UserPolicy Name Type Notes IsAdministrator boolean IsHidden boolean IsHiddenRemotely boolean IsHiddenFromUnusedDevices boolean IsDisabled boolean MaxParentalRating integer (int32) BlockedTags array IsTagBlockingModeInclusive boolean IncludeTags array EnableUserPreferenceAccess boolean AccessSchedules AccessSchedule[] BlockUnratedItems UnratedItem[] EnableRemoteControlOfOtherUsers boolean EnableSharedDeviceControl boolean EnableRemoteAccess boolean EnableLiveTvManagement boolean EnableLiveTvAccess boolean EnableMediaPlayback boolean EnableAudioPlaybackTranscoding boolean EnableVideoPlaybackTranscoding boolean EnablePlaybackRemuxing boolean EnableContentDeletion boolean EnableContentDeletionFromFolders array EnableContentDownloading boolean EnableSubtitleDownloading boolean EnableSubtitleManagement boolean EnableSyncTranscoding boolean EnableMediaConversion boolean EnabledChannels array EnableAllChannels boolean EnabledFolders array EnableAllFolders boolean InvalidLoginAttemptCount integer (int32) EnablePublicSharing boolean BlockedMediaFolders array RemoteClientBitrateLimit integer (int32) AuthenticationProviderId string ExcludedSubFolders array SimultaneousStreamLimit integer (int32) EnabledDevices array EnableAllDevices boolean AccessSchedule see also MediaBrowser.Model.Configuration.AccessSchedule Name Type Notes DayOfWeek DynamicDayOfWeek StartHour number (double) EndHour number (double) DynamicDayOfWeek see also MediaBrowser.Model.Configuration.DynamicDayOfWeek Enum Values Sunday Monday Tuesday Wednesday Thursday Friday Saturday Everyday Weekday Weekend UnratedItem see also MediaBrowser.Model.Configuration.UnratedItem"
  },
  "reference/RestAPI/UserService/getUsersQuery.html": {
    "href": "reference/RestAPI/UserService/getUsersQuery.html",
    "title": "getUsersQuery",
    "keywords": "getUsersQuery Gets a list of users Requires authentication as administrator getUsersQuery Request get /Users/Query Parameters Name In Type Default Notes IsHidden query Optional filter by IsHidden=true or false IsDisabled query Optional filter by IsDisabled=true or false StartIndex query Optional. The record index to start at. All items with a lower index will be dropped from the results. Limit query Optional. The maximum number of records to return NameStartsWithOrGreater query Optional filter by items whose name is sorted equally or greater than a given input string. Responses Status Code Type Description Samples 200 QueryResult_UserDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_UserDto QueryResult_UserDto Name Type Notes Items UserDto[] TotalRecordCount integer (int32) UserDto see also MediaBrowser.Model.Dto.UserDto Name Type Notes Name string ServerId string ServerName string Prefix string ConnectUserName string DateCreated string (date-time) ConnectLinkType UserLinkType Id string (guid) PrimaryImageTag string HasPassword boolean HasConfiguredPassword boolean HasConfiguredEasyPassword boolean EnableAutoLogin boolean LastLoginDate string (date-time) LastActivityDate string (date-time) Configuration UserConfiguration[] Policy UserPolicy[] PrimaryImageAspectRatio number (double) UserLinkType see also MediaBrowser.Model.Connect.UserLinkType Enum Values LinkedUser Guest UserConfiguration see also MediaBrowser.Model.Configuration.UserConfiguration Name Type Notes AudioLanguagePreference string PlayDefaultAudioTrack boolean SubtitleLanguagePreference string DisplayMissingEpisodes boolean SubtitleMode SubtitlePlaybackMode EnableLocalPassword boolean OrderedViews array LatestItemsExcludes array MyMediaExcludes array HidePlayedInLatest boolean RememberAudioSelections boolean RememberSubtitleSelections boolean EnableNextEpisodeAutoPlay boolean ResumeRewindSeconds integer (int32) IntroSkipMode SegmentSkipMode SubtitlePlaybackMode see also MediaBrowser.Model.Configuration.SubtitlePlaybackMode Enum Values Default Always OnlyForced None Smart SegmentSkipMode see also MediaBrowser.Model.Configuration.SegmentSkipMode Enum Values ShowButton AutoSkip None UserPolicy see also MediaBrowser.Model.Users.UserPolicy Name Type Notes IsAdministrator boolean IsHidden boolean IsHiddenRemotely boolean IsHiddenFromUnusedDevices boolean IsDisabled boolean MaxParentalRating integer (int32) BlockedTags array IsTagBlockingModeInclusive boolean IncludeTags array EnableUserPreferenceAccess boolean AccessSchedules AccessSchedule[] BlockUnratedItems UnratedItem[] EnableRemoteControlOfOtherUsers boolean EnableSharedDeviceControl boolean EnableRemoteAccess boolean EnableLiveTvManagement boolean EnableLiveTvAccess boolean EnableMediaPlayback boolean EnableAudioPlaybackTranscoding boolean EnableVideoPlaybackTranscoding boolean EnablePlaybackRemuxing boolean EnableContentDeletion boolean EnableContentDeletionFromFolders array EnableContentDownloading boolean EnableSubtitleDownloading boolean EnableSubtitleManagement boolean EnableSyncTranscoding boolean EnableMediaConversion boolean EnabledChannels array EnableAllChannels boolean EnabledFolders array EnableAllFolders boolean InvalidLoginAttemptCount integer (int32) EnablePublicSharing boolean BlockedMediaFolders array RemoteClientBitrateLimit integer (int32) AuthenticationProviderId string ExcludedSubFolders array SimultaneousStreamLimit integer (int32) EnabledDevices array EnableAllDevices boolean AccessSchedule see also MediaBrowser.Model.Configuration.AccessSchedule Name Type Notes DayOfWeek DynamicDayOfWeek StartHour number (double) EndHour number (double) DynamicDayOfWeek see also MediaBrowser.Model.Configuration.DynamicDayOfWeek Enum Values Sunday Monday Tuesday Wednesday Thursday Friday Saturday Everyday Weekday Weekend UnratedItem see also MediaBrowser.Model.Configuration.UnratedItem"
  },
  "reference/RestAPI/UserService/postUsersAuthenticatebyname.html": {
    "href": "reference/RestAPI/UserService/postUsersAuthenticatebyname.html",
    "title": "postUsersAuthenticatebyname",
    "keywords": "postUsersAuthenticatebyname Authenticates a user Authenticate a user by nane and password. A 200 status code indicates success, while anything in the 400 or 500 range indicates failure No authentication required postUsersAuthenticatebyname Request post /Users/AuthenticateByName Parameters Name In Type Default Notes *X-Emby-Authorization header The authorization header can be either named 'Authorization' or 'X-Emby-Authorization'. It must be of the following schema: Emby UserId=\"(guid)\", Client=\"(string)\", Device=\"(string)\", DeviceId=\"(string)\", Version=\"string\", Token=\"(string)\" Please consult the documentation for further details. *body body AuthenticateUserByName AuthenticateUserByName Responses Status Code Type Description Samples 200 AuthenticationResult Operation successful. Returning a AuthenticationResult object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions AuthenticateUserByName Emby.Api.AuthenticateUserByName Name Type Notes Username string Pw string AuthenticationResult see also MediaBrowser.Controller.Authentication.AuthenticationResult Name Type Notes User UserDto[] SessionInfo SessionInfo[] AccessToken string ServerId string UserDto see also MediaBrowser.Model.Dto.UserDto Name Type Notes Name string ServerId string ServerName string Prefix string ConnectUserName string DateCreated string (date-time) ConnectLinkType UserLinkType Id string (guid) PrimaryImageTag string HasPassword boolean HasConfiguredPassword boolean HasConfiguredEasyPassword boolean EnableAutoLogin boolean LastLoginDate string (date-time) LastActivityDate string (date-time) Configuration UserConfiguration[] Policy UserPolicy[] PrimaryImageAspectRatio number (double) UserLinkType see also MediaBrowser.Model.Connect.UserLinkType Enum Values LinkedUser Guest UserConfiguration see also MediaBrowser.Model.Configuration.UserConfiguration Name Type Notes AudioLanguagePreference string PlayDefaultAudioTrack boolean SubtitleLanguagePreference string DisplayMissingEpisodes boolean SubtitleMode SubtitlePlaybackMode EnableLocalPassword boolean OrderedViews array LatestItemsExcludes array MyMediaExcludes array HidePlayedInLatest boolean RememberAudioSelections boolean RememberSubtitleSelections boolean EnableNextEpisodeAutoPlay boolean ResumeRewindSeconds integer (int32) IntroSkipMode SegmentSkipMode SubtitlePlaybackMode see also MediaBrowser.Model.Configuration.SubtitlePlaybackMode Enum Values Default Always OnlyForced None Smart SegmentSkipMode see also MediaBrowser.Model.Configuration.SegmentSkipMode Enum Values ShowButton AutoSkip None UserPolicy see also MediaBrowser.Model.Users.UserPolicy Name Type Notes IsAdministrator boolean IsHidden boolean IsHiddenRemotely boolean IsHiddenFromUnusedDevices boolean IsDisabled boolean MaxParentalRating integer (int32) BlockedTags array IsTagBlockingModeInclusive boolean IncludeTags array EnableUserPreferenceAccess boolean AccessSchedules AccessSchedule[] BlockUnratedItems UnratedItem[] EnableRemoteControlOfOtherUsers boolean EnableSharedDeviceControl boolean EnableRemoteAccess boolean EnableLiveTvManagement boolean EnableLiveTvAccess boolean EnableMediaPlayback boolean EnableAudioPlaybackTranscoding boolean EnableVideoPlaybackTranscoding boolean EnablePlaybackRemuxing boolean EnableContentDeletion boolean EnableContentDeletionFromFolders array EnableContentDownloading boolean EnableSubtitleDownloading boolean EnableSubtitleManagement boolean EnableSyncTranscoding boolean EnableMediaConversion boolean EnabledChannels array EnableAllChannels boolean EnabledFolders array EnableAllFolders boolean InvalidLoginAttemptCount integer (int32) EnablePublicSharing boolean BlockedMediaFolders array RemoteClientBitrateLimit integer (int32) AuthenticationProviderId string ExcludedSubFolders array SimultaneousStreamLimit integer (int32) EnabledDevices array EnableAllDevices boolean AccessSchedule see also MediaBrowser.Model.Configuration.AccessSchedule Name Type Notes DayOfWeek DynamicDayOfWeek StartHour number (double) EndHour number (double) DynamicDayOfWeek see also MediaBrowser.Model.Configuration.DynamicDayOfWeek Enum Values Sunday Monday Tuesday Wednesday Thursday Friday Saturday Everyday Weekday Weekend UnratedItem see also MediaBrowser.Model.Configuration.UnratedItem SessionInfo see also MediaBrowser.Controller.Session.SessionInfo Name Type Notes PlayState PlayerStateInfo[] AdditionalUsers SessionUserInfo[] RemoteEndPoint string Protocol string PlayableMediaTypes array PlaylistItemId string PlaylistIndex integer (int32) PlaylistLength integer (int32) Id string ServerId string UserId string UserName string UserPrimaryImageTag string Client string LastActivityDate string (date-time) DeviceName string DeviceType string NowPlayingItem BaseItemDto[] InternalDeviceId integer (int64) DeviceId string ApplicationVersion string AppIconUrl string SupportedCommands array TranscodingInfo TranscodingInfo[] SupportsRemoteControl boolean PlayerStateInfo see also MediaBrowser.Model.Session.PlayerStateInfo Name Type Notes PositionTicks integer (int64) CanSeek boolean IsPaused boolean IsMuted boolean VolumeLevel integer (int32) AudioStreamIndex integer (int32) SubtitleStreamIndex integer (int32) MediaSourceId string PlayMethod PlayMethod RepeatMode RepeatMode SubtitleOffset integer (int32) PlaybackRate number (double) PlayMethod see also MediaBrowser.Model.Session.PlayMethod Enum Values Transcode DirectStream DirectPlay RepeatMode see also MediaBrowser.Model.Session.RepeatMode Enum Values RepeatNone RepeatAll RepeatOne SessionUserInfo see also MediaBrowser.Model.Session.SessionUserInfo Name Type Notes UserId string UserName string UserInternalId integer (int64) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword TranscodingInfo see also MediaBrowser.Model.Session.TranscodingInfo Name Type Notes AudioCodec string VideoCodec string SubProtocol string Container string IsVideoDirect boolean IsAudioDirect boolean Bitrate integer (int32) AudioBitrate integer (int32) VideoBitrate integer (int32) Framerate number (float) CompletionPercentage number (double) TranscodingPositionTicks number (double) TranscodingStartPositionTicks number (double) Width integer (int32) Height integer (int32) AudioChannels integer (int32) TranscodeReasons TranscodeReason[] CurrentCpuUsage number (double) AverageCpuUsage number (double) CpuHistory Tuple_Double-Double[] CurrentThrottle integer (int32) VideoDecoder string VideoDecoderIsHardware boolean VideoDecoderMediaType string VideoDecoderHwAccel string VideoEncoder string VideoEncoderIsHardware boolean VideoEncoderMediaType string VideoEncoderHwAccel string VideoPipelineInfo VpStepInfo[] SubtitlePipelineInfos array TranscodeReason see also MediaBrowser.Model.Session.TranscodeReason Tuple_Double-Double Tuple_Double-Double Name Type Notes Item1 number (double) Item2 number (double) VpStepInfo see also MediaBrowser.Model.Session.Transcoding.VpStepInfo Name Type Notes StepType VpStepTypes StepTypeName string HardwareContextName string IsHardwareContext boolean Name string Short string FfmpegName string FfmpegDescription string FfmpegOptions string Param string ParamShort string VpStepTypes see also MediaBrowser.Model.Session.Transcoding.VpStepTypes Enum Values Decoder Encoder Scaling Deinterlace SubtitleOverlay ToneMapping ColorConversion SplitCaptions TextSub2Video GraphicSub2Video GraphicSub2Text BurnInTextSubs BurnInGraphicSubs ScaleSubs TextMod Censor ShowSpeaker StripStyles ConnectTo"
  },
  "reference/RestAPI/UserService/postUsersById.html": {
    "href": "reference/RestAPI/UserService/postUsersById.html",
    "title": "postUsersById",
    "keywords": "postUsersById Updates a user Requires authentication as user postUsersById Request post /Users/{Id} Parameters Name In Type Default Notes *Id path *body body UserDto UserDto: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserDto see also MediaBrowser.Model.Dto.UserDto Name Type Notes Name string ServerId string ServerName string Prefix string ConnectUserName string DateCreated string (date-time) ConnectLinkType UserLinkType Id string (guid) PrimaryImageTag string HasPassword boolean HasConfiguredPassword boolean HasConfiguredEasyPassword boolean EnableAutoLogin boolean LastLoginDate string (date-time) LastActivityDate string (date-time) Configuration UserConfiguration[] Policy UserPolicy[] PrimaryImageAspectRatio number (double) UserLinkType see also MediaBrowser.Model.Connect.UserLinkType Enum Values LinkedUser Guest UserConfiguration see also MediaBrowser.Model.Configuration.UserConfiguration Name Type Notes AudioLanguagePreference string PlayDefaultAudioTrack boolean SubtitleLanguagePreference string DisplayMissingEpisodes boolean SubtitleMode SubtitlePlaybackMode EnableLocalPassword boolean OrderedViews array LatestItemsExcludes array MyMediaExcludes array HidePlayedInLatest boolean RememberAudioSelections boolean RememberSubtitleSelections boolean EnableNextEpisodeAutoPlay boolean ResumeRewindSeconds integer (int32) IntroSkipMode SegmentSkipMode SubtitlePlaybackMode see also MediaBrowser.Model.Configuration.SubtitlePlaybackMode Enum Values Default Always OnlyForced None Smart SegmentSkipMode see also MediaBrowser.Model.Configuration.SegmentSkipMode Enum Values ShowButton AutoSkip None UserPolicy see also MediaBrowser.Model.Users.UserPolicy Name Type Notes IsAdministrator boolean IsHidden boolean IsHiddenRemotely boolean IsHiddenFromUnusedDevices boolean IsDisabled boolean MaxParentalRating integer (int32) BlockedTags array IsTagBlockingModeInclusive boolean IncludeTags array EnableUserPreferenceAccess boolean AccessSchedules AccessSchedule[] BlockUnratedItems UnratedItem[] EnableRemoteControlOfOtherUsers boolean EnableSharedDeviceControl boolean EnableRemoteAccess boolean EnableLiveTvManagement boolean EnableLiveTvAccess boolean EnableMediaPlayback boolean EnableAudioPlaybackTranscoding boolean EnableVideoPlaybackTranscoding boolean EnablePlaybackRemuxing boolean EnableContentDeletion boolean EnableContentDeletionFromFolders array EnableContentDownloading boolean EnableSubtitleDownloading boolean EnableSubtitleManagement boolean EnableSyncTranscoding boolean EnableMediaConversion boolean EnabledChannels array EnableAllChannels boolean EnabledFolders array EnableAllFolders boolean InvalidLoginAttemptCount integer (int32) EnablePublicSharing boolean BlockedMediaFolders array RemoteClientBitrateLimit integer (int32) AuthenticationProviderId string ExcludedSubFolders array SimultaneousStreamLimit integer (int32) EnabledDevices array EnableAllDevices boolean AccessSchedule see also MediaBrowser.Model.Configuration.AccessSchedule Name Type Notes DayOfWeek DynamicDayOfWeek StartHour number (double) EndHour number (double) DynamicDayOfWeek see also MediaBrowser.Model.Configuration.DynamicDayOfWeek Enum Values Sunday Monday Tuesday Wednesday Thursday Friday Saturday Everyday Weekday Weekend UnratedItem see also MediaBrowser.Model.Configuration.UnratedItem"
  },
  "reference/RestAPI/UserService/postUsersByIdAuthenticate.html": {
    "href": "reference/RestAPI/UserService/postUsersByIdAuthenticate.html",
    "title": "postUsersByIdAuthenticate",
    "keywords": "postUsersByIdAuthenticate Authenticates a user No authentication required postUsersByIdAuthenticate Request post /Users/{Id}/Authenticate Parameters Name In Type Default Notes *Id path *body body AuthenticateUser AuthenticateUser Responses Status Code Type Description Samples 200 AuthenticationResult Operation successful. Returning a AuthenticationResult object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions AuthenticateUser Emby.Api.AuthenticateUser Name Type Notes Pw string AuthenticationResult see also MediaBrowser.Controller.Authentication.AuthenticationResult Name Type Notes User UserDto[] SessionInfo SessionInfo[] AccessToken string ServerId string UserDto see also MediaBrowser.Model.Dto.UserDto Name Type Notes Name string ServerId string ServerName string Prefix string ConnectUserName string DateCreated string (date-time) ConnectLinkType UserLinkType Id string (guid) PrimaryImageTag string HasPassword boolean HasConfiguredPassword boolean HasConfiguredEasyPassword boolean EnableAutoLogin boolean LastLoginDate string (date-time) LastActivityDate string (date-time) Configuration UserConfiguration[] Policy UserPolicy[] PrimaryImageAspectRatio number (double) UserLinkType see also MediaBrowser.Model.Connect.UserLinkType Enum Values LinkedUser Guest UserConfiguration see also MediaBrowser.Model.Configuration.UserConfiguration Name Type Notes AudioLanguagePreference string PlayDefaultAudioTrack boolean SubtitleLanguagePreference string DisplayMissingEpisodes boolean SubtitleMode SubtitlePlaybackMode EnableLocalPassword boolean OrderedViews array LatestItemsExcludes array MyMediaExcludes array HidePlayedInLatest boolean RememberAudioSelections boolean RememberSubtitleSelections boolean EnableNextEpisodeAutoPlay boolean ResumeRewindSeconds integer (int32) IntroSkipMode SegmentSkipMode SubtitlePlaybackMode see also MediaBrowser.Model.Configuration.SubtitlePlaybackMode Enum Values Default Always OnlyForced None Smart SegmentSkipMode see also MediaBrowser.Model.Configuration.SegmentSkipMode Enum Values ShowButton AutoSkip None UserPolicy see also MediaBrowser.Model.Users.UserPolicy Name Type Notes IsAdministrator boolean IsHidden boolean IsHiddenRemotely boolean IsHiddenFromUnusedDevices boolean IsDisabled boolean MaxParentalRating integer (int32) BlockedTags array IsTagBlockingModeInclusive boolean IncludeTags array EnableUserPreferenceAccess boolean AccessSchedules AccessSchedule[] BlockUnratedItems UnratedItem[] EnableRemoteControlOfOtherUsers boolean EnableSharedDeviceControl boolean EnableRemoteAccess boolean EnableLiveTvManagement boolean EnableLiveTvAccess boolean EnableMediaPlayback boolean EnableAudioPlaybackTranscoding boolean EnableVideoPlaybackTranscoding boolean EnablePlaybackRemuxing boolean EnableContentDeletion boolean EnableContentDeletionFromFolders array EnableContentDownloading boolean EnableSubtitleDownloading boolean EnableSubtitleManagement boolean EnableSyncTranscoding boolean EnableMediaConversion boolean EnabledChannels array EnableAllChannels boolean EnabledFolders array EnableAllFolders boolean InvalidLoginAttemptCount integer (int32) EnablePublicSharing boolean BlockedMediaFolders array RemoteClientBitrateLimit integer (int32) AuthenticationProviderId string ExcludedSubFolders array SimultaneousStreamLimit integer (int32) EnabledDevices array EnableAllDevices boolean AccessSchedule see also MediaBrowser.Model.Configuration.AccessSchedule Name Type Notes DayOfWeek DynamicDayOfWeek StartHour number (double) EndHour number (double) DynamicDayOfWeek see also MediaBrowser.Model.Configuration.DynamicDayOfWeek Enum Values Sunday Monday Tuesday Wednesday Thursday Friday Saturday Everyday Weekday Weekend UnratedItem see also MediaBrowser.Model.Configuration.UnratedItem SessionInfo see also MediaBrowser.Controller.Session.SessionInfo Name Type Notes PlayState PlayerStateInfo[] AdditionalUsers SessionUserInfo[] RemoteEndPoint string Protocol string PlayableMediaTypes array PlaylistItemId string PlaylistIndex integer (int32) PlaylistLength integer (int32) Id string ServerId string UserId string UserName string UserPrimaryImageTag string Client string LastActivityDate string (date-time) DeviceName string DeviceType string NowPlayingItem BaseItemDto[] InternalDeviceId integer (int64) DeviceId string ApplicationVersion string AppIconUrl string SupportedCommands array TranscodingInfo TranscodingInfo[] SupportsRemoteControl boolean PlayerStateInfo see also MediaBrowser.Model.Session.PlayerStateInfo Name Type Notes PositionTicks integer (int64) CanSeek boolean IsPaused boolean IsMuted boolean VolumeLevel integer (int32) AudioStreamIndex integer (int32) SubtitleStreamIndex integer (int32) MediaSourceId string PlayMethod PlayMethod RepeatMode RepeatMode SubtitleOffset integer (int32) PlaybackRate number (double) PlayMethod see also MediaBrowser.Model.Session.PlayMethod Enum Values Transcode DirectStream DirectPlay RepeatMode see also MediaBrowser.Model.Session.RepeatMode Enum Values RepeatNone RepeatAll RepeatOne SessionUserInfo see also MediaBrowser.Model.Session.SessionUserInfo Name Type Notes UserId string UserName string UserInternalId integer (int64) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword TranscodingInfo see also MediaBrowser.Model.Session.TranscodingInfo Name Type Notes AudioCodec string VideoCodec string SubProtocol string Container string IsVideoDirect boolean IsAudioDirect boolean Bitrate integer (int32) AudioBitrate integer (int32) VideoBitrate integer (int32) Framerate number (float) CompletionPercentage number (double) TranscodingPositionTicks number (double) TranscodingStartPositionTicks number (double) Width integer (int32) Height integer (int32) AudioChannels integer (int32) TranscodeReasons TranscodeReason[] CurrentCpuUsage number (double) AverageCpuUsage number (double) CpuHistory Tuple_Double-Double[] CurrentThrottle integer (int32) VideoDecoder string VideoDecoderIsHardware boolean VideoDecoderMediaType string VideoDecoderHwAccel string VideoEncoder string VideoEncoderIsHardware boolean VideoEncoderMediaType string VideoEncoderHwAccel string VideoPipelineInfo VpStepInfo[] SubtitlePipelineInfos array TranscodeReason see also MediaBrowser.Model.Session.TranscodeReason Tuple_Double-Double Tuple_Double-Double Name Type Notes Item1 number (double) Item2 number (double) VpStepInfo see also MediaBrowser.Model.Session.Transcoding.VpStepInfo Name Type Notes StepType VpStepTypes StepTypeName string HardwareContextName string IsHardwareContext boolean Name string Short string FfmpegName string FfmpegDescription string FfmpegOptions string Param string ParamShort string VpStepTypes see also MediaBrowser.Model.Session.Transcoding.VpStepTypes Enum Values Decoder Encoder Scaling Deinterlace SubtitleOverlay ToneMapping ColorConversion SplitCaptions TextSub2Video GraphicSub2Video GraphicSub2Text BurnInTextSubs BurnInGraphicSubs ScaleSubs TextMod Censor ShowSpeaker StripStyles ConnectTo"
  },
  "reference/RestAPI/UserService/postUsersByIdConfiguration.html": {
    "href": "reference/RestAPI/UserService/postUsersByIdConfiguration.html",
    "title": "postUsersByIdConfiguration",
    "keywords": "postUsersByIdConfiguration Updates a user configuration Requires authentication as user postUsersByIdConfiguration Request post /Users/{Id}/Configuration Parameters Name In Type Default Notes *Id path *body body UserConfiguration UserConfiguration: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserConfiguration see also MediaBrowser.Model.Configuration.UserConfiguration Name Type Notes AudioLanguagePreference string PlayDefaultAudioTrack boolean SubtitleLanguagePreference string DisplayMissingEpisodes boolean SubtitleMode SubtitlePlaybackMode EnableLocalPassword boolean OrderedViews array LatestItemsExcludes array MyMediaExcludes array HidePlayedInLatest boolean RememberAudioSelections boolean RememberSubtitleSelections boolean EnableNextEpisodeAutoPlay boolean ResumeRewindSeconds integer (int32) IntroSkipMode SegmentSkipMode SubtitlePlaybackMode see also MediaBrowser.Model.Configuration.SubtitlePlaybackMode Enum Values Default Always OnlyForced None Smart SegmentSkipMode see also MediaBrowser.Model.Configuration.SegmentSkipMode Enum Values ShowButton AutoSkip None"
  },
  "reference/RestAPI/UserService/postUsersByIdDelete.html": {
    "href": "reference/RestAPI/UserService/postUsersByIdDelete.html",
    "title": "postUsersByIdDelete",
    "keywords": "postUsersByIdDelete Deletes a user Requires authentication as administrator postUsersByIdDelete Request post /Users/{Id}/Delete Parameters Name In Type Default Notes *Id path Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/UserService/postUsersByIdEasypassword.html": {
    "href": "reference/RestAPI/UserService/postUsersByIdEasypassword.html",
    "title": "postUsersByIdEasypassword",
    "keywords": "postUsersByIdEasypassword Updates a user's easy password Requires authentication as user postUsersByIdEasypassword Request post /Users/{Id}/EasyPassword Parameters Name In Type Default Notes *Id path *body body UpdateUserEasyPassword UpdateUserEasyPassword Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UpdateUserEasyPassword Emby.Api.UpdateUserEasyPassword Name Type Notes Id string NewPw string ResetPassword boolean"
  },
  "reference/RestAPI/UserService/postUsersByIdPassword.html": {
    "href": "reference/RestAPI/UserService/postUsersByIdPassword.html",
    "title": "postUsersByIdPassword",
    "keywords": "postUsersByIdPassword Updates a user's password Requires authentication as user postUsersByIdPassword Request post /Users/{Id}/Password Parameters Name In Type Default Notes *Id path *body body UpdateUserPassword UpdateUserPassword Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UpdateUserPassword Emby.Api.UpdateUserPassword Name Type Notes Id string CurrentPw string NewPw string ResetPassword boolean"
  },
  "reference/RestAPI/UserService/postUsersByIdPolicy.html": {
    "href": "reference/RestAPI/UserService/postUsersByIdPolicy.html",
    "title": "postUsersByIdPolicy",
    "keywords": "postUsersByIdPolicy Updates a user policy Requires authentication as administrator postUsersByIdPolicy Request post /Users/{Id}/Policy Parameters Name In Type Default Notes *Id path *body body UserPolicy UserPolicy: Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions UserPolicy see also MediaBrowser.Model.Users.UserPolicy Name Type Notes IsAdministrator boolean IsHidden boolean IsHiddenRemotely boolean IsHiddenFromUnusedDevices boolean IsDisabled boolean MaxParentalRating integer (int32) BlockedTags array IsTagBlockingModeInclusive boolean IncludeTags array EnableUserPreferenceAccess boolean AccessSchedules AccessSchedule[] BlockUnratedItems UnratedItem[] EnableRemoteControlOfOtherUsers boolean EnableSharedDeviceControl boolean EnableRemoteAccess boolean EnableLiveTvManagement boolean EnableLiveTvAccess boolean EnableMediaPlayback boolean EnableAudioPlaybackTranscoding boolean EnableVideoPlaybackTranscoding boolean EnablePlaybackRemuxing boolean EnableContentDeletion boolean EnableContentDeletionFromFolders array EnableContentDownloading boolean EnableSubtitleDownloading boolean EnableSubtitleManagement boolean EnableSyncTranscoding boolean EnableMediaConversion boolean EnabledChannels array EnableAllChannels boolean EnabledFolders array EnableAllFolders boolean InvalidLoginAttemptCount integer (int32) EnablePublicSharing boolean BlockedMediaFolders array RemoteClientBitrateLimit integer (int32) AuthenticationProviderId string ExcludedSubFolders array SimultaneousStreamLimit integer (int32) EnabledDevices array EnableAllDevices boolean AccessSchedule see also MediaBrowser.Model.Configuration.AccessSchedule Name Type Notes DayOfWeek DynamicDayOfWeek StartHour number (double) EndHour number (double) DynamicDayOfWeek see also MediaBrowser.Model.Configuration.DynamicDayOfWeek Enum Values Sunday Monday Tuesday Wednesday Thursday Friday Saturday Everyday Weekday Weekend UnratedItem see also MediaBrowser.Model.Configuration.UnratedItem"
  },
  "reference/RestAPI/UserService/postUsersByIdTrackselectionsByTracktypeDelete.html": {
    "href": "reference/RestAPI/UserService/postUsersByIdTrackselectionsByTracktypeDelete.html",
    "title": "postUsersByIdTrackselectionsByTracktypeDelete",
    "keywords": "postUsersByIdTrackselectionsByTracktypeDelete Clears audio or subtitle track selections for a user No authentication required postUsersByIdTrackselectionsByTracktypeDelete Request post /Users/{Id}/TrackSelections/{TrackType}/Delete Parameters Name In Type Default Notes *Id path *TrackType path Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/UserService/postUsersForgotpassword.html": {
    "href": "reference/RestAPI/UserService/postUsersForgotpassword.html",
    "title": "postUsersForgotpassword",
    "keywords": "postUsersForgotpassword Initiates the forgot password process for a local user No authentication required postUsersForgotpassword Request post /Users/ForgotPassword Parameters Name In Type Default Notes *body body ForgotPassword ForgotPassword Responses Status Code Type Description Samples 200 ForgotPasswordResult Operation successful. Returning a ForgotPasswordResult object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions ForgotPassword Emby.Api.ForgotPassword Name Type Notes EnteredUsername string ForgotPasswordResult see also MediaBrowser.Model.Users.ForgotPasswordResult Name Type Notes Action ForgotPasswordAction PinFile string PinExpirationDate string (date-time) ForgotPasswordAction see also MediaBrowser.Model.Users.ForgotPasswordAction Enum Values ContactAdmin PinCode InNetworkRequired"
  },
  "reference/RestAPI/UserService/postUsersForgotpasswordPin.html": {
    "href": "reference/RestAPI/UserService/postUsersForgotpasswordPin.html",
    "title": "postUsersForgotpasswordPin",
    "keywords": "postUsersForgotpasswordPin Redeems a forgot password pin No authentication required postUsersForgotpasswordPin Request post /Users/ForgotPassword/Pin Parameters Name In Type Default Notes *body body ForgotPasswordPin ForgotPasswordPin Responses Status Code Type Description Samples 200 PinRedeemResult Operation successful. Returning a PinRedeemResult object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions ForgotPasswordPin Emby.Api.ForgotPasswordPin Name Type Notes Pin string PinRedeemResult see also MediaBrowser.Model.Users.PinRedeemResult Name Type Notes Success boolean UsersReset array"
  },
  "reference/RestAPI/UserService/postUsersNew.html": {
    "href": "reference/RestAPI/UserService/postUsersNew.html",
    "title": "postUsersNew",
    "keywords": "postUsersNew Creates a user Requires authentication as administrator postUsersNew Request post /Users/New Parameters Name In Type Default Notes *body body CreateUserByName CreateUserByName Responses Status Code Type Description Samples 200 UserDto Operation successful. Returning a UserDto object. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error. Definitions CreateUserByName Emby.Api.CreateUserByName Name Type Notes Name string UserDto see also MediaBrowser.Model.Dto.UserDto Name Type Notes Name string ServerId string ServerName string Prefix string ConnectUserName string DateCreated string (date-time) ConnectLinkType UserLinkType Id string (guid) PrimaryImageTag string HasPassword boolean HasConfiguredPassword boolean HasConfiguredEasyPassword boolean EnableAutoLogin boolean LastLoginDate string (date-time) LastActivityDate string (date-time) Configuration UserConfiguration[] Policy UserPolicy[] PrimaryImageAspectRatio number (double) UserLinkType see also MediaBrowser.Model.Connect.UserLinkType Enum Values LinkedUser Guest UserConfiguration see also MediaBrowser.Model.Configuration.UserConfiguration Name Type Notes AudioLanguagePreference string PlayDefaultAudioTrack boolean SubtitleLanguagePreference string DisplayMissingEpisodes boolean SubtitleMode SubtitlePlaybackMode EnableLocalPassword boolean OrderedViews array LatestItemsExcludes array MyMediaExcludes array HidePlayedInLatest boolean RememberAudioSelections boolean RememberSubtitleSelections boolean EnableNextEpisodeAutoPlay boolean ResumeRewindSeconds integer (int32) IntroSkipMode SegmentSkipMode SubtitlePlaybackMode see also MediaBrowser.Model.Configuration.SubtitlePlaybackMode Enum Values Default Always OnlyForced None Smart SegmentSkipMode see also MediaBrowser.Model.Configuration.SegmentSkipMode Enum Values ShowButton AutoSkip None UserPolicy see also MediaBrowser.Model.Users.UserPolicy Name Type Notes IsAdministrator boolean IsHidden boolean IsHiddenRemotely boolean IsHiddenFromUnusedDevices boolean IsDisabled boolean MaxParentalRating integer (int32) BlockedTags array IsTagBlockingModeInclusive boolean IncludeTags array EnableUserPreferenceAccess boolean AccessSchedules AccessSchedule[] BlockUnratedItems UnratedItem[] EnableRemoteControlOfOtherUsers boolean EnableSharedDeviceControl boolean EnableRemoteAccess boolean EnableLiveTvManagement boolean EnableLiveTvAccess boolean EnableMediaPlayback boolean EnableAudioPlaybackTranscoding boolean EnableVideoPlaybackTranscoding boolean EnablePlaybackRemuxing boolean EnableContentDeletion boolean EnableContentDeletionFromFolders array EnableContentDownloading boolean EnableSubtitleDownloading boolean EnableSubtitleManagement boolean EnableSyncTranscoding boolean EnableMediaConversion boolean EnabledChannels array EnableAllChannels boolean EnabledFolders array EnableAllFolders boolean InvalidLoginAttemptCount integer (int32) EnablePublicSharing boolean BlockedMediaFolders array RemoteClientBitrateLimit integer (int32) AuthenticationProviderId string ExcludedSubFolders array SimultaneousStreamLimit integer (int32) EnabledDevices array EnableAllDevices boolean AccessSchedule see also MediaBrowser.Model.Configuration.AccessSchedule Name Type Notes DayOfWeek DynamicDayOfWeek StartHour number (double) EndHour number (double) DynamicDayOfWeek see also MediaBrowser.Model.Configuration.DynamicDayOfWeek Enum Values Sunday Monday Tuesday Wednesday Thursday Friday Saturday Everyday Weekday Weekend UnratedItem see also MediaBrowser.Model.Configuration.UnratedItem"
  },
  "reference/RestAPI/UserViewsService.html": {
    "href": "reference/RestAPI/UserViewsService.html",
    "title": "UserViewsService",
    "keywords": "UserViewsService API Documentation: Browsing the Library getUsersByUseridViews get /Users/{UserId}/Views"
  },
  "reference/RestAPI/UserViewsService/getUsersByUseridViews.html": {
    "href": "reference/RestAPI/UserViewsService/getUsersByUseridViews.html",
    "title": "getUsersByUseridViews",
    "keywords": "getUsersByUseridViews No authentication required getUsersByUseridViews Request get /Users/{UserId}/Views Parameters Name In Type Default Notes *UserId path User Id *IncludeExternalContent query Whether or not to include external views such as channels or live tv Responses Status Code Type Description Samples 200 QueryResult_BaseItemDto Operation successful. Returning a QueryResult object. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error. Definitions QueryResult_BaseItemDto QueryResult_BaseItemDto Name Type Notes Items BaseItemDto[] TotalRecordCount integer (int32) BaseItemDto see also MediaBrowser.Model.Dto.BaseItemDto Name Type Notes Name string OriginalTitle string ServerId string Id string Guid string Etag string Prefix string PlaylistItemId string DateCreated string (date-time) ExtraType string SortIndexNumber integer (int32) SortParentIndexNumber integer (int32) AirsBeforeSeasonNumber integer (int32) AirsAfterSeasonNumber integer (int32) AirsBeforeEpisodeNumber integer (int32) CanDelete boolean CanDownload boolean SupportsResume boolean PresentationUniqueKey string PreferredMetadataLanguage string PreferredMetadataCountryCode string SupportsSync boolean Container string SortName string ForcedSortName string Video3DFormat Video3DFormat PremiereDate string (date-time) ExternalUrls ExternalUrl[] MediaSources MediaSourceInfo[] CriticRating number (float) GameSystemId integer (int64) AsSeries boolean GameSystem string ProductionLocations array Path string OfficialRating string CustomRating string ChannelId string ChannelName string Overview string Taglines array Genres array CommunityRating number (float) RunTimeTicks integer (int64) Size integer (int64) FileName string Bitrate integer (int32) PlayAccess PlayAccess ProductionYear integer (int32) Number string ChannelNumber string IndexNumber integer (int32) IndexNumberEnd integer (int32) ParentIndexNumber integer (int32) RemoteTrailers MediaUrl[] ProviderIds ProviderIdDictionary IsFolder boolean ParentId string Type string People BaseItemPerson[] Studios NameLongIdPair[] GenreItems NameLongIdPair[] TagItems NameLongIdPair[] ParentLogoItemId string ParentBackdropItemId string ParentBackdropImageTags array LocalTrailerCount integer (int32) UserData UserItemDataDto[] RecursiveItemCount integer (int32) ChildCount integer (int32) SeriesName string SeriesId string SeasonId string SpecialFeatureCount integer (int32) DisplayPreferencesId string Status string AirDays DayOfWeek[] Tags array PrimaryImageAspectRatio number (double) Artists array ArtistItems NameIdPair[] Composers NameIdPair[] Album string CollectionType string DisplayOrder string AlbumId string AlbumPrimaryImageTag string SeriesPrimaryImageTag string AlbumArtist string AlbumArtists NameIdPair[] SeasonName string MediaStreams MediaStream[] PartCount integer (int32) ImageTags object BackdropImageTags array ParentLogoImageTag string SeriesStudio string ParentThumbItemId string ParentThumbImageTag string Chapters ChapterInfo[] LocationType LocationType MediaType string EndDate string (date-time) LockedFields MetadataFields[] LockData boolean Width integer (int32) Height integer (int32) CameraMake string CameraModel string Software string ExposureTime number (double) FocalLength number (double) ImageOrientation ImageOrientation Aperture number (double) ShutterSpeed number (double) Latitude number (double) Longitude number (double) Altitude number (double) IsoSpeedRating integer (int32) SeriesTimerId string ChannelPrimaryImageTag string StartDate string (date-time) CompletionPercentage number (double) IsRepeat boolean IsNew boolean EpisodeTitle string IsMovie boolean IsSports boolean IsSeries boolean IsLive boolean IsNews boolean IsKids boolean IsPremiere boolean TimerType TimerType Disabled boolean ManagementId string TimerId string CurrentProgram MovieCount integer (int32) SeriesCount integer (int32) AlbumCount integer (int32) SongCount integer (int32) MusicVideoCount integer (int32) Subviews array ListingsProviderId string ListingsChannelId string ListingsPath string ListingsId string ListingsChannelName string ListingsChannelNumber string AffiliateCallSign string Video3DFormat see also MediaBrowser.Model.Entities.Video3DFormat Enum Values HalfSideBySide FullSideBySide FullTopAndBottom HalfTopAndBottom MVC ExternalUrl see also MediaBrowser.Model.Providers.ExternalUrl Name Type Notes Name string Url string MediaSourceInfo see also MediaBrowser.Model.Dto.MediaSourceInfo Name Type Notes Protocol MediaProtocol Id string Path string EncoderPath string EncoderProtocol MediaProtocol Type MediaSourceType Container string Size integer (int64) Name string SortName string IsRemote boolean RunTimeTicks integer (int64) ContainerStartTimeTicks integer (int64) SupportsTranscoding boolean SupportsDirectStream boolean SupportsDirectPlay boolean IsInfiniteStream boolean RequiresOpening boolean OpenToken string RequiresClosing boolean LiveStreamId string BufferMs integer (int32) RequiresLooping boolean SupportsProbing boolean Video3DFormat Video3DFormat MediaStreams MediaStream[] Formats array Bitrate integer (int32) Timestamp TransportStreamTimestamp RequiredHttpHeaders object DirectStreamUrl string TranscodingUrl string TranscodingSubProtocol string TranscodingContainer string AnalyzeDurationMs integer (int32) ReadAtNativeFramerate boolean DefaultAudioStreamIndex integer (int32) DefaultSubtitleStreamIndex integer (int32) ItemId string ServerId string MediaProtocol see also MediaBrowser.Model.MediaInfo.MediaProtocol Enum Values File Http Rtmp Rtsp Udp Rtp Ftp Mms MediaSourceType see also MediaBrowser.Model.Dto.MediaSourceType Enum Values Default Grouping Placeholder MediaStream see also MediaBrowser.Model.Entities.MediaStream Name Type Notes Codec string CodecTag string Language string ColorTransfer string ColorPrimaries string ColorSpace string Comment string StreamStartTimeTicks integer (int64) TimeBase string CodecTimeBase string Title string Extradata string VideoRange string DisplayTitle string DisplayLanguage string NalLengthSize string IsInterlaced boolean IsAVC boolean ChannelLayout string BitRate integer (int32) BitDepth integer (int32) RefFrames integer (int32) Rotation integer (int32) Channels integer (int32) SampleRate integer (int32) IsDefault boolean IsForced boolean Height integer (int32) Width integer (int32) AverageFrameRate number (float) RealFrameRate number (float) Profile string Type MediaStreamType AspectRatio string Index integer (int32) IsExternal boolean DeliveryMethod SubtitleDeliveryMethod DeliveryUrl string IsExternalUrl boolean IsTextSubtitleStream boolean SupportsExternalStream boolean Path string Protocol MediaProtocol PixelFormat string Level number (double) IsAnamorphic boolean ItemId string ServerId string AttachmentSize integer (int32) MimeType string IsClosedCaptions boolean SubtitleLocationType SubtitleLocationType MediaStreamType see also MediaBrowser.Model.Entities.MediaStreamType Enum Values Unknown Audio Video Subtitle EmbeddedImage Attachment Data SubtitleDeliveryMethod see also MediaBrowser.Model.Dlna.SubtitleDeliveryMethod Enum Values Encode Embed External Hls VideoSideData SubtitleLocationType see also MediaBrowser.Model.Entities.SubtitleLocationType Enum Values InternalStream VideoSideData TransportStreamTimestamp see also MediaBrowser.Model.MediaInfo.TransportStreamTimestamp Enum Values None Zero Valid PlayAccess see also MediaBrowser.Model.Library.PlayAccess Enum Values Full None MediaUrl see also MediaBrowser.Model.Entities.MediaUrl Name Type Notes Url string Name string ProviderIdDictionary see also MediaBrowser.Model.Entities.ProviderIdDictionary BaseItemPerson see also MediaBrowser.Model.Dto.BaseItemPerson Name Type Notes Name string Id string Role string Type PersonType PrimaryImageTag string PersonType see also MediaBrowser.Model.Entities.PersonType Enum Values Actor Director Writer Producer GuestStar Composer Conductor Lyricist NameLongIdPair see also MediaBrowser.Model.Dto.NameLongIdPair Name Type Notes Name string Id integer (int64) UserItemDataDto see also MediaBrowser.Model.Dto.UserItemDataDto Name Type Notes Rating number (double) PlayedPercentage number (double) UnplayedItemCount integer (int32) PlaybackPositionTicks integer (int64) PlayCount integer (int32) IsFavorite boolean LastPlayedDate string (date-time) Played boolean Key string ItemId string ServerId string DayOfWeek see also System.DayOfWeek NameIdPair see also MediaBrowser.Model.Dto.NameIdPair Name Type Notes Name string Id string ChapterInfo see also MediaBrowser.Model.Entities.ChapterInfo Name Type Notes StartPositionTicks integer (int64) Name string ImageTag string MarkerType MarkerType ChapterIndex integer (int32) MarkerType see also MediaBrowser.Model.Entities.MarkerType Enum Values Chapter IntroStart IntroEnd CreditsStart LocationType see also MediaBrowser.Model.Entities.LocationType Enum Values FileSystem Virtual MetadataFields see also MediaBrowser.Model.Entities.MetadataFields ImageOrientation see also MediaBrowser.Model.Drawing.ImageOrientation Enum Values TopLeft TopRight BottomRight BottomLeft LeftTop RightTop RightBottom LeftBottom TimerType see also MediaBrowser.Model.LiveTv.TimerType Enum Values Program DateTime Keyword"
  },
  "reference/RestAPI/VideoHlsService.html": {
    "href": "reference/RestAPI/VideoHlsService.html",
    "title": "VideoHlsService",
    "keywords": "VideoHlsService API Documentation Wiki getVideosByIdHlsByPlaylistidBySegmentidBySegmentcontainer get /Videos/{Id}/hls/{PlaylistId}/{SegmentId}.{SegmentContainer} getVideosByIdLiveM3u8 get /Videos/{Id}/live.m3u8"
  },
  "reference/RestAPI/VideoHlsService/getVideosByIdHlsByPlaylistidBySegmentidBySegmentcontainer.html": {
    "href": "reference/RestAPI/VideoHlsService/getVideosByIdHlsByPlaylistidBySegmentidBySegmentcontainer.html",
    "title": "getVideosByIdHlsByPlaylistidBySegmentidBySegmentcontainer",
    "keywords": "getVideosByIdHlsByPlaylistidBySegmentidBySegmentcontainer No authentication required getVideosByIdHlsByPlaylistidBySegmentidBySegmentcontainer Request get /Videos/{Id}/hls/{PlaylistId}/{SegmentId}.{SegmentContainer} Parameters Name In Type Default Notes *SegmentContainer path *SegmentId path *Id path *PlaylistId path Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/VideoHlsService/getVideosByIdLiveM3u8.html": {
    "href": "reference/RestAPI/VideoHlsService/getVideosByIdLiveM3u8.html",
    "title": "getVideosByIdLiveM3u8",
    "keywords": "getVideosByIdLiveM3u8 Requires authentication as user getVideosByIdLiveM3u8 Request get /Videos/{Id}/live.m3u8 Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container query Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/VideoService.html": {
    "href": "reference/RestAPI/VideoService.html",
    "title": "VideoService",
    "keywords": "VideoService API Documentation: Video streaming getVideosByIdStream get /Videos/{Id}/stream Gets a video stream getVideosByIdStreamByContainer get /Videos/{Id}/stream.{Container} Gets a video stream headVideosByIdStream head /Videos/{Id}/stream Gets a video stream headVideosByIdStreamByContainer head /Videos/{Id}/stream.{Container} Gets a video stream"
  },
  "reference/RestAPI/VideoService/getVideosByIdStream.html": {
    "href": "reference/RestAPI/VideoService/getVideosByIdStream.html",
    "title": "getVideosByIdStream",
    "keywords": "getVideosByIdStream Gets a video stream Requires authentication as user getVideosByIdStream Request get /Videos/{Id}/stream Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container query Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/VideoService/getVideosByIdStreamByContainer.html": {
    "href": "reference/RestAPI/VideoService/getVideosByIdStreamByContainer.html",
    "title": "getVideosByIdStreamByContainer",
    "keywords": "getVideosByIdStreamByContainer Gets a video stream Requires authentication as user getVideosByIdStreamByContainer Request get /Videos/{Id}/stream.{Container} Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container path Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/VideoService/headVideosByIdStream.html": {
    "href": "reference/RestAPI/VideoService/headVideosByIdStream.html",
    "title": "headVideosByIdStream",
    "keywords": "headVideosByIdStream Gets a video stream Requires authentication as user headVideosByIdStream Request head /Videos/{Id}/stream Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container query Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/VideoService/headVideosByIdStreamByContainer.html": {
    "href": "reference/RestAPI/VideoService/headVideosByIdStreamByContainer.html",
    "title": "headVideosByIdStreamByContainer",
    "keywords": "headVideosByIdStreamByContainer Gets a video stream Requires authentication as user headVideosByIdStreamByContainer Request head /Videos/{Id}/stream.{Container} Parameters Name In Type Default Notes DeviceProfileId query Optional. The dlna device profile id to utilize. *Id path Item Id DeviceId query The device id of the client requesting. Used to stop encoding processes when needed. *Container path Container AudioCodec query Optional. Specify a audio codec to encode to, e.g. mp3. If omitted the server will auto-select using the url's extension. Options: aac, mp3, vorbis, wma. EnableAutoStreamCopy query Whether or not to allow automatic stream copy if requested values match the original source. Defaults to true. AudioSampleRate query Optional. Specify a specific audio sample rate, e.g. 44100 AudioBitRate query Optional. Specify an audio bitrate to encode to, e.g. 128000. If omitted this will be left to encoder defaults. AudioChannels query Optional. Specify a specific number of audio channels to encode to, e.g. 2 MaxAudioChannels query Optional. Specify a maximum number of audio channels to encode to, e.g. 2 Static query Optional. If true, the original file will be streamed statically without any encoding. Use either no url extension or the original file extension. true/false Profile query Optional. Specify a specific h264 profile, e.g. main, baseline, high. Level query Optional. Specify a level for the h264 profile, e.g. 3, 3.1. Framerate query Optional. A specific video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. MaxFramerate query Optional. A specific maximum video framerate to encode to, e.g. 23.976. Generally this should be omitted unless the device has specific requirements. CopyTimestamps query Whether or not to copy timestamps when transcoding with an offset. Defaults to false. StartTimeTicks query Optional. Specify a starting offset, in ticks. 1 tick = 10000 ms Width query Optional. The fixed horizontal resolution of the encoded video. Height query Optional. The fixed vertical resolution of the encoded video. MaxWidth query Optional. The maximum horizontal resolution of the encoded video. MaxHeight query Optional. The maximum vertical resolution of the encoded video. VideoBitRate query Optional. Specify a video bitrate to encode to, e.g. 500000. If omitted this will be left to encoder defaults. SubtitleStreamIndex query Optional. The index of the subtitle stream to use. If omitted no subtitles will be used. SubtitleMethod query Optional. Specify the subtitle delivery method. MaxRefFrames query Optional. MaxVideoBitDepth query Optional. VideoCodec query Optional. Specify a video codec to encode to, e.g. h264. If omitted the server will auto-select using the url's extension. Options: h264, mpeg4, theora, vpx, wmv. AudioStreamIndex query Optional. The index of the audio stream to use. If omitted the first audio stream will be used. VideoStreamIndex query Optional. The index of the video stream to use. If omitted the first video stream will be used. Responses Status Code Type Description Samples 200 Operation successful. Response content unknown. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/VideosService.html": {
    "href": "reference/RestAPI/VideosService.html",
    "title": "VideosService",
    "keywords": "VideosService API Documentation Wiki deleteVideosByIdAlternatesources delete /Videos/{Id}/AlternateSources Removes alternate video sources. postVideosByIdAlternatesourcesDelete post /Videos/{Id}/AlternateSources/Delete Removes alternate video sources. postVideosMergeversions post /Videos/MergeVersions Merges videos into a single record"
  },
  "reference/RestAPI/VideosService/deleteVideosByIdAlternatesources.html": {
    "href": "reference/RestAPI/VideosService/deleteVideosByIdAlternatesources.html",
    "title": "deleteVideosByIdAlternatesources",
    "keywords": "deleteVideosByIdAlternatesources Removes alternate video sources. Requires authentication as administrator deleteVideosByIdAlternatesources Request delete /Videos/{Id}/AlternateSources Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/VideosService/postVideosByIdAlternatesourcesDelete.html": {
    "href": "reference/RestAPI/VideosService/postVideosByIdAlternatesourcesDelete.html",
    "title": "postVideosByIdAlternatesourcesDelete",
    "keywords": "postVideosByIdAlternatesourcesDelete Removes alternate video sources. Requires authentication as administrator postVideosByIdAlternatesourcesDelete Request post /Videos/{Id}/AlternateSources/Delete Parameters Name In Type Default Notes *Id path Item Id Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "reference/RestAPI/VideosService/postVideosMergeversions.html": {
    "href": "reference/RestAPI/VideosService/postVideosMergeversions.html",
    "title": "postVideosMergeversions",
    "keywords": "postVideosMergeversions Merges videos into a single record Requires authentication as administrator postVideosMergeversions Request post /Videos/MergeVersions Parameters Name In Type Default Notes Ids query Item id list. This allows multiple, comma delimited. Responses Status Code Type Description Samples 200 Operation successful. Empty response. 400 Bad Request. Server cannot process request. 401 Unauthorized. Client needs to authenticate. 403 Forbidden. No permission for the reqested operation. 404 Resource not found or unavailable. 500 Server error."
  },
  "resources.html": {
    "href": "resources.html",
    "title": "More Resources",
    "keywords": "More Resources Links etc.."
  }
}