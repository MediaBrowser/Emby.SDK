openapi: 3.0.1
info:
  title: Emby Server REST API
  description: Explore the Emby Server API
  termsOfService: https://emby.media/terms
  contact:
    name: Emby Developer Forum
    url: https://emby.media/community/index.php?/forum/47-developer-api
  version: 4.8.3.0
externalDocs:
  description: embyDEV - REST API Documentation
  url: https://dev.emby.media/doc/restapi/index.html
servers:
- url: http://emby.media/emby
tags:
- name: ArtistsService
  externalDocs:
    description: "API Reference: ArtistsService"
    url: https://betadev.emby.media/reference/RestAPI/ArtistsService.html
- name: TagService
  externalDocs:
    description: "API Reference: TagService"
    url: https://betadev.emby.media/reference/RestAPI/TagService.html
- name: ChannelService
  externalDocs:
    description: "API Reference: ChannelService"
    url: https://betadev.emby.media/reference/RestAPI/ChannelService.html
- name: CollectionService
  externalDocs:
    description: "API Reference: CollectionService"
    url: https://betadev.emby.media/reference/RestAPI/CollectionService.html
- name: DeviceService
  externalDocs:
    description: "API Reference: DeviceService"
    url: https://betadev.emby.media/reference/RestAPI/DeviceService.html
- name: FeatureService
  externalDocs:
    description: "API Reference: FeatureService"
    url: https://betadev.emby.media/reference/RestAPI/FeatureService.html
- name: GameGenresService
  externalDocs:
    description: "API Reference: GameGenresService"
    url: https://betadev.emby.media/reference/RestAPI/GameGenresService.html
- name: GenresService
  externalDocs:
    description: "API Reference: GenresService"
    url: https://betadev.emby.media/reference/RestAPI/GenresService.html
- name: ItemsService
  externalDocs:
    description: "API Documentation: Item Information"
    url: https://dev.emby.media/doc/restapi/Item-Information.html
- name: LibraryService
  externalDocs:
    description: "API Documentation: Browsing the Library"
    url: https://dev.emby.media/doc/restapi/Browsing-the-Library.html
- name: MusicGenresService
  externalDocs:
    description: "API Reference: MusicGenresService"
    url: https://betadev.emby.media/reference/RestAPI/MusicGenresService.html
- name: OfficialRatingService
  externalDocs:
    description: "API Reference: OfficialRatingService"
    url: https://betadev.emby.media/reference/RestAPI/OfficialRatingService.html
- name: OpenApiService
  externalDocs:
    description: "API Reference: OpenApiService"
    url: https://betadev.emby.media/reference/RestAPI/OpenApiService.html
- name: PackageService
  externalDocs:
    description: "API Reference: PackageService"
    url: https://betadev.emby.media/reference/RestAPI/PackageService.html
- name: PersonsService
  externalDocs:
    description: "API Reference: PersonsService"
    url: https://betadev.emby.media/reference/RestAPI/PersonsService.html
- name: PlaylistService
  externalDocs:
    description: "API Documentation: Playlists"
    url: https://dev.emby.media/doc/restapi/Playlists.html
- name: PluginService
  externalDocs:
    description: "API Reference: PluginService"
    url: https://betadev.emby.media/reference/RestAPI/PluginService.html
- name: ScheduledTaskService
  externalDocs:
    description: "API Reference: ScheduledTaskService"
    url: https://betadev.emby.media/reference/RestAPI/ScheduledTaskService.html
- name: SessionsService
  externalDocs:
    description: "API Documentation: Remote control"
    url: https://dev.emby.media/doc/restapi/Remote-Control.html
- name: StudiosService
  externalDocs:
    description: "API Reference: StudiosService"
    url: https://betadev.emby.media/reference/RestAPI/StudiosService.html
- name: TrailersService
  externalDocs:
    description: "API Reference: TrailersService"
    url: https://betadev.emby.media/reference/RestAPI/TrailersService.html
- name: ImageService
  externalDocs:
    description: "API Documentation: Images"
    url: https://dev.emby.media/doc/restapi/Images.html
- name: InstantMixService
  externalDocs:
    description: "API Reference: InstantMixService"
    url: https://betadev.emby.media/reference/RestAPI/InstantMixService.html
- name: BackupApi
- name: BrandingService
  externalDocs:
    description: "API Reference: BrandingService"
    url: https://betadev.emby.media/reference/RestAPI/BrandingService.html
- name: ConnectService
  externalDocs:
    description: "API Reference: ConnectService"
    url: https://betadev.emby.media/reference/RestAPI/ConnectService.html
- name: DisplayPreferencesService
  externalDocs:
    description: "API Reference: DisplayPreferencesService"
    url: https://betadev.emby.media/reference/RestAPI/DisplayPreferencesService.html
- name: DlnaService
  externalDocs:
    description: "API Reference: DlnaService"
    url: https://betadev.emby.media/reference/RestAPI/DlnaService.html
- name: EncodingInfoService
  externalDocs:
    description: "API Reference: EncodingInfoService"
    url: https://betadev.emby.media/reference/RestAPI/EncodingInfoService.html
- name: ToneMapOptionsService
  externalDocs:
    description: "API Reference: ToneMapOptionsService"
    url: https://betadev.emby.media/reference/RestAPI/ToneMapOptionsService.html
- name: SubtitleOptionsService
  externalDocs:
    description: "API Reference: SubtitleOptionsService"
    url: https://betadev.emby.media/reference/RestAPI/SubtitleOptionsService.html
- name: FfmpegOptionsService
  externalDocs:
    description: "API Reference: FfmpegOptionsService"
    url: https://betadev.emby.media/reference/RestAPI/FfmpegOptionsService.html
- name: CodecParameterService
  externalDocs:
    description: "API Reference: CodecParameterService"
    url: https://betadev.emby.media/reference/RestAPI/CodecParameterService.html
- name: EnvironmentService
  externalDocs:
    description: "API Reference: EnvironmentService"
    url: https://betadev.emby.media/reference/RestAPI/EnvironmentService.html
- name: RemoteImageService
  externalDocs:
    description: "API Reference: RemoteImageService"
    url: https://betadev.emby.media/reference/RestAPI/RemoteImageService.html
- name: ItemUpdateService
  externalDocs:
    description: "API Reference: ItemUpdateService"
    url: https://betadev.emby.media/reference/RestAPI/ItemUpdateService.html
- name: UserLibraryService
  externalDocs:
    description: "API Documentation: Browsing the Library"
    url: https://dev.emby.media/doc/restapi/Browsing-the-Library.html
- name: LibraryStructureService
  externalDocs:
    description: "API Reference: LibraryStructureService"
    url: https://betadev.emby.media/reference/RestAPI/LibraryStructureService.html
- name: MediaInfoService
  externalDocs:
    description: "API Reference: MediaInfoService"
    url: https://betadev.emby.media/reference/RestAPI/MediaInfoService.html
- name: LiveTvService
  externalDocs:
    description: "API Reference: LiveTvService"
    url: https://betadev.emby.media/reference/RestAPI/LiveTvService.html
- name: LocalizationService
  externalDocs:
    description: "API Reference: LocalizationService"
    url: https://betadev.emby.media/reference/RestAPI/LocalizationService.html
- name: MoviesService
  externalDocs:
    description: "API Reference: MoviesService"
    url: https://betadev.emby.media/reference/RestAPI/MoviesService.html
- name: NotificationsService
  externalDocs:
    description: "API Reference: NotificationsService"
    url: https://betadev.emby.media/reference/RestAPI/NotificationsService.html
- name: PlaystateService
  externalDocs:
    description: "API Reference: PlaystateService"
    url: https://betadev.emby.media/reference/RestAPI/PlaystateService.html
- name: TvShowsService
  externalDocs:
    description: "API Reference: TvShowsService"
    url: https://betadev.emby.media/reference/RestAPI/TvShowsService.html
- name: SyncService
  externalDocs:
    description: "API Documentation: Sync"
    url: https://dev.emby.media/doc/restapi/Sync.html
- name: ConfigurationService
  externalDocs:
    description: "API Reference: ConfigurationService"
    url: https://betadev.emby.media/reference/RestAPI/ConfigurationService.html
- name: SystemService
  externalDocs:
    description: "API Reference: SystemService"
    url: https://betadev.emby.media/reference/RestAPI/SystemService.html
- name: GenericUIApiService
  externalDocs:
    description: "API Reference: GenericUIApiService"
    url: https://betadev.emby.media/reference/RestAPI/GenericUIApiService.html
- name: UserService
  externalDocs:
    description: "API Reference: UserService"
    url: https://betadev.emby.media/reference/RestAPI/UserService.html
- name: VideosService
  externalDocs:
    description: "API Reference: VideosService"
    url: https://betadev.emby.media/reference/RestAPI/VideosService.html
- name: HlsSegmentService
  externalDocs:
    description: "API Reference: HlsSegmentService"
    url: https://betadev.emby.media/reference/RestAPI/HlsSegmentService.html
- name: WebAppService
  externalDocs:
    description: "API Reference: WebAppService"
    url: https://betadev.emby.media/reference/RestAPI/WebAppService.html
- name: UniversalAudioService
  externalDocs:
    description: "API Documentation: Audio streaming"
    url: https://dev.emby.media/doc/restapi/Audio-Streaming.html
- name: AudioService
  externalDocs:
    description: "API Documentation: Audio streaming"
    url: https://dev.emby.media/doc/restapi/Audio-Streaming.html
- name: DynamicHlsService
  externalDocs:
    description: "API Documentation: Http Live Streaming"
    url: https://dev.emby.media/doc/restapi/Http-Live-Streaming.html
- name: VideoHlsService
  externalDocs:
    description: "API Reference: VideoHlsService"
    url: https://betadev.emby.media/reference/RestAPI/VideoHlsService.html
- name: DlnaServerService
  externalDocs:
    description: "API Reference: DlnaServerService"
    url: https://betadev.emby.media/reference/RestAPI/DlnaServerService.html
- name: ItemLookupService
  externalDocs:
    description: "API Reference: ItemLookupService"
    url: https://betadev.emby.media/reference/RestAPI/ItemLookupService.html
- name: ItemRefreshService
  externalDocs:
    description: "API Reference: ItemRefreshService"
    url: https://betadev.emby.media/reference/RestAPI/ItemRefreshService.html
- name: BifService
  externalDocs:
    description: "API Reference: BifService"
    url: https://betadev.emby.media/reference/RestAPI/BifService.html
- name: UserNotificationsService
  externalDocs:
    description: "API Reference: UserNotificationsService"
    url: https://betadev.emby.media/reference/RestAPI/UserNotificationsService.html
- name: ActivityLogService
  externalDocs:
    description: "API Reference: ActivityLogService"
    url: https://betadev.emby.media/reference/RestAPI/ActivityLogService.html
- name: SuggestionsService
  externalDocs:
    description: "API Reference: SuggestionsService"
    url: https://betadev.emby.media/reference/RestAPI/SuggestionsService.html
- name: UserViewsService
  externalDocs:
    description: "API Documentation: Browsing the Library"
    url: https://dev.emby.media/doc/restapi/Browsing-the-Library.html
- name: VideoService
  externalDocs:
    description: "API Documentation: Video streaming"
    url: https://dev.emby.media/doc/restapi/Video-Streaming.html
- name: SubtitleService
  externalDocs:
    description: "API Reference: SubtitleService"
    url: https://betadev.emby.media/reference/RestAPI/SubtitleService.html
- name: LiveStreamService
  externalDocs:
    description: "API Reference: LiveStreamService"
    url: https://betadev.emby.media/reference/RestAPI/LiveStreamService.html
paths:
  /Artists:
    summary: "Gets all artists from a given item, folder, or the entire library"
    get:
      tags:
      - ArtistsService
      summary: "Gets all artists from a given item, folder, or the entire library"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getArtists
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /AudioCodecs:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getAudiocodecs
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<TagItem> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /AudioLayouts:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getAudiolayouts
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<TagItem> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Channels:
    summary: Gets available channels
    get:
      tags:
      - ChannelService
      summary: Gets available channels
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getChannels
      parameters:
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Collections:
    summary: Creates a new collection
    post:
      tags:
      - CollectionService
      summary: Creates a new collection
      description: Requires authentication as user
      operationId: postCollections
      parameters:
      - name: IsLocked
        in: query
        description: Whether or not to lock the new collection.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Name
        in: query
        description: The name of the new collection.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Optional - create the collection within a specific folder
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Ids
        in: query
        description: Item Ids to add to the collection
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a CollectionCreationResult
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collections.CollectionCreationResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/Collections.CollectionCreationResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Containers:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getContainers
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<TagItem> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Devices:
    summary: Gets all devices
    get:
      tags:
      - DeviceService
      summary: Gets all devices
      description: Requires authentication as administrator
      operationId: getDevices
      parameters:
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<DeviceInfo> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_Devices.DeviceInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_Devices.DeviceInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - DeviceService
      summary: Deletes a device
      description: Requires authentication as administrator
      operationId: deleteDevices
      parameters:
      - name: Id
        in: query
        description: Device Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /ExtendedVideoTypes:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getExtendedvideotypes
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<TagItem> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Features:
    summary: Gets a list of installed features
    get:
      tags:
      - FeatureService
      summary: Gets a list of installed features
      description: Requires authentication as administrator
      operationId: getFeatures
      responses:
        "200":
          description: "Operation successful. Returning a FeatureInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /GameGenres:
    summary: "Gets all Game genres from a given item, folder, or the entire library"
    get:
      tags:
      - GameGenresService
      summary: "Gets all Game genres from a given item, folder, or the entire library"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getGamegenres
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Genres:
    summary: "Gets all genres from a given item, folder, or the entire library"
    get:
      tags:
      - GenresService
      summary: "Gets all genres from a given item, folder, or the entire library"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getGenres
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items:
    summary: Gets items based on a query.
    get:
      tags:
      - ItemsService
      summary: Gets items based on a query.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getItems
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - LibraryService
      summary: Deletes an item from the library and file system
      description: Requires authentication as user
      operationId: deleteItems
      parameters:
      - name: Ids
        in: query
        description: Ids
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /ItemTypes:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getItemtypes
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<TagItem> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /MusicGenres:
    summary: "Gets all music genres from a given item, folder, or the entire library"
    get:
      tags:
      - MusicGenresService
      summary: "Gets all music genres from a given item, folder, or the entire library"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getMusicgenres
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /OfficialRatings:
    summary: Gets items based on a query.
    get:
      tags:
      - OfficialRatingService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getOfficialratings
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<OfficialRatingItem>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.OfficialRatingItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.OfficialRatingItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /openapi:
    summary: Gets the OpenAPI 3 specifications
    get:
      tags:
      - OpenApiService
      summary: Gets the OpenAPI 3 specifications
      description: No authentication required
      operationId: getOpenapi
      responses:
        "200":
          description: Operation successful. Returning a String object.
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
            application/xml:
              schema:
                type: string
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /openapi.json:
    summary: Gets OpenAPI 3 specifications
    get:
      tags:
      - OpenApiService
      summary: Gets OpenAPI 3 specifications
      description: No authentication required
      operationId: getOpenapiJson
      responses:
        "200":
          description: Operation successful. Returning a String object.
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
            application/xml:
              schema:
                type: string
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /Packages:
    summary: Gets available packages
    get:
      tags:
      - PackageService
      summary: Gets available packages
      description: Requires authentication as user
      operationId: getPackages
      parameters:
      - name: PackageType
        in: query
        description: Optional package type filter (System/UserInstalled)
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: TargetSystems
        in: query
        description: "Optional. Filter by target system type. Allows multiple, comma\
          \ delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPremium
        in: query
        description: Optional. Filter by premium status
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsAdult
        in: query
        description: Optional. Filter by package that contain adult content.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: "Operation successful. Returning a PackageInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Persons:
    summary: "Gets all persons from a given item, folder, or the entire library"
    get:
      tags:
      - PersonsService
      summary: "Gets all persons from a given item, folder, or the entire library"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getPersons
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Playlists:
    summary: Creates a new playlist
    post:
      tags:
      - PlaylistService
      summary: Creates a new playlist
      description: Requires authentication as user
      operationId: postPlaylists
      parameters:
      - name: Name
        in: query
        description: The name of the new playlist.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Ids
        in: query
        description: Item Ids to add to the playlist
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: MediaType
        in: query
        description: The playlist media type
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a PlaylistCreationResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlists.PlaylistCreationResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/Playlists.PlaylistCreationResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Plugins:
    summary: Gets a list of currently installed plugins
    get:
      tags:
      - PluginService
      summary: Gets a list of currently installed plugins
      description: Requires authentication as administrator
      operationId: getPlugins
      responses:
        "200":
          description: "Operation successful. Returning a PluginInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plugins.PluginInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plugins.PluginInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /ScheduledTasks:
    summary: Gets scheduled tasks
    get:
      tags:
      - ScheduledTaskService
      summary: Gets scheduled tasks
      description: Requires authentication as administrator
      operationId: getScheduledtasks
      parameters:
      - name: IsHidden
        in: query
        description: "Optional filter tasks that are hidden, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsEnabled
        in: query
        description: "Optional filter tasks that are enabled, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: "Operation successful. Returning a TaskInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Sessions:
    summary: Gets a list of sessions
    get:
      tags:
      - SessionsService
      summary: Gets a list of sessions
      description: Requires authentication as user
      operationId: getSessions
      parameters:
      - name: ControllableByUserId
        in: query
        description: Optional. Filter by sessions that a given user is allowed to
          remote control.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: Optional. Filter by device id.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: query
        description: Optional. Filter by session id.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Operation successful. Returning a SessionInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session.SessionInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session.SessionInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /StreamLanguages:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getStreamlanguages
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<TagItem> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Studios:
    summary: "Gets all studios from a given item, folder, or the entire library"
    get:
      tags:
      - StudiosService
      summary: "Gets all studios from a given item, folder, or the entire library"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getStudios
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /SubtitleCodecs:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getSubtitlecodecs
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<TagItem> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /swagger:
    summary: Gets the swagger specifications
    get:
      tags:
      - OpenApiService
      summary: Gets the swagger specifications
      description: No authentication required
      operationId: getSwagger
      responses:
        "200":
          description: Operation successful. Returning a String object.
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
            application/xml:
              schema:
                type: string
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /swagger.json:
    summary: Gets the swagger specifications
    get:
      tags:
      - OpenApiService
      summary: Gets the swagger specifications
      description: No authentication required
      operationId: getSwaggerJson
      responses:
        "200":
          description: Operation successful. Returning a String object.
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
            application/xml:
              schema:
                type: string
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /Tags:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getTags
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<TagItem> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Trailers:
    summary: Finds movies and trailers similar to a given trailer.
    get:
      tags:
      - TrailersService
      summary: Finds movies and trailers similar to a given trailer.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getTrailers
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /VideoCodecs:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getVideocodecs
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<TagItem> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Years:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getYears
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<TagItem> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserLibrary.TagItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Images/{Type}/{Index}/{Tag}/{Format}/{MaxWidth}/{MaxHeight}/{PercentPlayed}/{UnplayedCount}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount
      parameters:
      - name: PercentPlayed
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: UnPlayedCount
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: path
        description: The maximum image width to return.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: path
        description: The maximum image height to return.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: path
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: path
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headItemsByIdImagesByTypeByIndexByTagByFormatByMaxwidthByMaxheightByPercentplayedByUnplayedcount
      parameters:
      - name: PercentPlayed
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: UnPlayedCount
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: path
        description: The maximum image width to return.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: path
        description: The maximum image height to return.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: path
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: path
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Artists/{Name}:
    summary: "Gets an artist, by name"
    get:
      tags:
      - ArtistsService
      summary: "Gets an artist, by name"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getArtistsByName
      parameters:
      - name: Name
        in: path
        description: The artist name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Artists/AlbumArtists:
    summary: "Gets all album artists from a given item, folder, or the entire library"
    get:
      tags:
      - ArtistsService
      summary: "Gets all album artists from a given item, folder, or the entire library"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getArtistsAlbumartists
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Artists/Prefixes:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getArtistsPrefixes
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Operation successful. Returning a NameValuePair[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameValuePair'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameValuePair'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Artists/InstantMix:
    summary: Creates an instant playlist based on a given artist
    get:
      tags:
      - InstantMixService
      summary: Creates an instant playlist based on a given artist
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getArtistsInstantmix
      parameters:
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /AudioBooks/NextUp:
    summary: Gets a list of next up episodes
    get:
      tags:
      - InstantMixService
      summary: Gets a list of next up episodes
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getAudiobooksNextup
      parameters:
      - name: UserId
        in: query
        description: User Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AlbumId
        in: query
        description: Optional. Filter by series id
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Auth/Providers:
    get:
      tags:
      - SessionsService
      description: Requires authentication as administrator
      operationId: getAuthProviders
      responses:
        "200":
          description: "Operation successful. Returning a NameIdPair[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameIdPair'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameIdPair'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Auth/Keys:
    get:
      tags:
      - SessionsService
      description: Requires authentication as administrator
      operationId: getAuthKeys
      parameters:
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    post:
      tags:
      - SessionsService
      description: Requires authentication as administrator
      operationId: postAuthKeys
      parameters:
      - name: App
        in: query
        description: App
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /BackupRestore/Restore:
    post:
      tags:
      - BackupApi
      description: Requires authentication as administrator
      operationId: postBackuprestoreRestore
      requestBody:
        description: "RestoreOptions: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MBBackup.Api.RestoreOptions'
          application/xml:
            schema:
              $ref: '#/components/schemas/MBBackup.Api.RestoreOptions'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /BackupRestore/RestoreData:
    post:
      tags:
      - BackupApi
      description: Requires authentication as administrator
      operationId: postBackuprestoreRestoredata
      requestBody:
        description: "DataRestoreOptions: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MBBackup.Api.DataRestoreOptions'
          application/xml:
            schema:
              $ref: '#/components/schemas/MBBackup.Api.DataRestoreOptions'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /BackupRestore/BackupInfo:
    get:
      tags:
      - BackupApi
      description: Requires authentication as administrator
      operationId: getBackuprestoreBackupinfo
      responses:
        "200":
          description: Operation successful. Returning a AllBackupsInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MBBackup.Api.AllBackupsInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/MBBackup.Api.AllBackupsInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Branding/Configuration:
    summary: Gets branding configuration
    get:
      tags:
      - BrandingService
      summary: Gets branding configuration
      description: Requires authentication as user
      operationId: getBrandingConfiguration
      responses:
        "200":
          description: Operation successful. Returning a BrandingOptions object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branding.BrandingOptions'
            application/xml:
              schema:
                $ref: '#/components/schemas/Branding.BrandingOptions'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Branding/Css:
    summary: Gets custom css
    get:
      tags:
      - BrandingService
      summary: Gets custom css
      description: Requires authentication as user
      operationId: getBrandingCss
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Branding/Css.css:
    summary: Gets custom css
    get:
      tags:
      - BrandingService
      summary: Gets custom css
      description: Requires authentication as user
      operationId: getBrandingCssCss
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Connect/Pending:
    summary: Creates a Connect link for a user
    get:
      tags:
      - ConnectService
      summary: Creates a Connect link for a user
      description: Requires authentication as administrator
      operationId: getConnectPending
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Connect/Exchange:
    summary: Gets the corresponding local user from a connect user id
    get:
      tags:
      - ConnectService
      summary: Gets the corresponding local user from a connect user id
      description: Requires authentication as user
      operationId: getConnectExchange
      parameters:
      - name: ConnectUserId
        in: query
        description: ConnectUserId
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a ConnectAuthenticationExchangeResult
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connect.ConnectAuthenticationExchangeResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connect.ConnectAuthenticationExchangeResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Devices/Options:
    summary: Updates device options
    get:
      tags:
      - DeviceService
      summary: Gets options for a device
      description: Requires authentication as administrator
      operationId: getDevicesOptions
      parameters:
      - name: Id
        in: query
        description: Device Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a DeviceOptions object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Devices.DeviceOptions'
            application/xml:
              schema:
                $ref: '#/components/schemas/Devices.DeviceOptions'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    post:
      tags:
      - DeviceService
      summary: Updates device options
      description: Requires authentication as administrator
      operationId: postDevicesOptions
      parameters:
      - name: Id
        in: query
        description: Device Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      requestBody:
        description: "DeviceOptions: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Devices.DeviceOptions'
          application/xml:
            schema:
              $ref: '#/components/schemas/Devices.DeviceOptions'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Devices/Info:
    summary: Gets info for a device
    get:
      tags:
      - DeviceService
      summary: Gets info for a device
      description: Requires authentication as administrator
      operationId: getDevicesInfo
      parameters:
      - name: Id
        in: query
        description: Device Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a DeviceInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Devices.DeviceInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Devices.DeviceInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Devices/CameraUploads:
    summary: Gets camera upload history for a device
    get:
      tags:
      - DeviceService
      summary: Gets camera upload history for a device
      description: Requires authentication as user
      operationId: getDevicesCamerauploads
      responses:
        "200":
          description: Operation successful. Returning a ContentUploadHistory object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Devices.ContentUploadHistory'
            application/xml:
              schema:
                $ref: '#/components/schemas/Devices.ContentUploadHistory'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - DeviceService
      summary: Uploads content
      description: Requires authentication as user
      operationId: postDevicesCamerauploads
      parameters:
      - name: Album
        in: query
        description: Album
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Name
        in: query
        description: Name
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: query
        description: Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Devices/Delete:
    summary: Deletes a device
    post:
      tags:
      - DeviceService
      summary: Deletes a device
      description: Requires authentication as administrator
      operationId: postDevicesDelete
      parameters:
      - name: Id
        in: query
        description: Device Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /DisplayPreferences/{Id}:
    summary: Gets a user's display preferences for an item
    get:
      tags:
      - DisplayPreferencesService
      summary: Gets a user's display preferences for an item
      description: Requires authentication as user
      operationId: getDisplaypreferencesById
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Client
        in: query
        description: Client
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a DisplayPreferences object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisplayPreferences'
            application/xml:
              schema:
                $ref: '#/components/schemas/DisplayPreferences'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /DisplayPreferences/{DisplayPreferencesId}:
    summary: Updates a user's display preferences for an item
    post:
      tags:
      - DisplayPreferencesService
      summary: Updates a user's display preferences for an item
      description: Requires authentication as user
      operationId: postDisplaypreferencesByDisplaypreferencesid
      parameters:
      - name: DisplayPreferencesId
        in: path
        description: DisplayPreferences Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      requestBody:
        description: "DisplayPreferences: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisplayPreferences'
          application/xml:
            schema:
              $ref: '#/components/schemas/DisplayPreferences'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Dlna/ProfileInfos:
    summary: Gets a list of profiles
    get:
      tags:
      - DlnaService
      summary: Gets a list of profiles
      description: Requires authentication as administrator
      operationId: getDlnaProfileinfos
      responses:
        "200":
          description: "Operation successful. Returning a DlnaProfile[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dlna.Profiles.DlnaProfile'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dlna.Profiles.DlnaProfile'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Dlna/Profiles:
    summary: Creates a profile
    post:
      tags:
      - DlnaService
      summary: Creates a profile
      description: Requires authentication as administrator
      operationId: postDlnaProfiles
      requestBody:
        description: "DlnaProfile: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dlna.Profiles.DlnaProfile'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dlna.Profiles.DlnaProfile'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Encoding/ToneMapOptions:
    summary: Gets available tone mapping options
    get:
      tags:
      - EncodingInfoService
      summary: Gets available tone mapping options
      description: Requires authentication as administrator
      operationId: getEncodingTonemapoptions
      responses:
        "200":
          description: Operation successful. Returning a ToneMapOptionsVisibility
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration.ToneMapping.ToneMapOptionsVisibility'
            application/xml:
              schema:
                $ref: '#/components/schemas/Configuration.ToneMapping.ToneMapOptionsVisibility'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Encoding/FullToneMapOptions:
    summary: Gets the tone mapping options
    get:
      tags:
      - ToneMapOptionsService
      summary: Gets the tone mapping options
      description: Requires authentication as user
      operationId: getEncodingFulltonemapoptions
      responses:
        "200":
          description: Operation successful. Returning a EditObjectContainer object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditObjectContainer'
            application/xml:
              schema:
                $ref: '#/components/schemas/EditObjectContainer'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - ToneMapOptionsService
      summary: Updates the tone mapping options
      description: Requires authentication as administrator
      operationId: postEncodingFulltonemapoptions
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Encoding/PublicToneMapOptions:
    summary: Gets the tone mapping options
    get:
      tags:
      - ToneMapOptionsService
      summary: Gets the tone mapping options
      description: Requires authentication as user
      operationId: getEncodingPublictonemapoptions
      responses:
        "200":
          description: Operation successful. Returning a EditObjectContainer object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditObjectContainer'
            application/xml:
              schema:
                $ref: '#/components/schemas/EditObjectContainer'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - ToneMapOptionsService
      summary: Updates the tone mapping options
      description: Requires authentication as administrator
      operationId: postEncodingPublictonemapoptions
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Encoding/SubtitleOptions:
    summary: Gets the subtitle options
    get:
      tags:
      - SubtitleOptionsService
      summary: Gets the subtitle options
      description: Requires authentication as user
      operationId: getEncodingSubtitleoptions
      responses:
        "200":
          description: Operation successful. Returning a EditObjectContainer object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditObjectContainer'
            application/xml:
              schema:
                $ref: '#/components/schemas/EditObjectContainer'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - SubtitleOptionsService
      summary: Updates the subtitle options
      description: Requires authentication as administrator
      operationId: postEncodingSubtitleoptions
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Encoding/FfmpegOptions:
    summary: Gets the ffmpeg options
    get:
      tags:
      - FfmpegOptionsService
      summary: Gets the ffmpeg options
      description: Requires authentication as user
      operationId: getEncodingFfmpegoptions
      responses:
        "200":
          description: Operation successful. Returning a EditObjectContainer object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditObjectContainer'
            application/xml:
              schema:
                $ref: '#/components/schemas/EditObjectContainer'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - FfmpegOptionsService
      summary: Updates the ffmpeg options
      description: Requires authentication as administrator
      operationId: postEncodingFfmpegoptions
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Encoding/CodecParameters:
    summary: Gets the parameters for a specified codec.
    get:
      tags:
      - CodecParameterService
      summary: Gets the parameters for a specified codec.
      description: Requires authentication as user
      operationId: getEncodingCodecparameters
      parameters:
      - name: CodecId
        in: query
        description: Codec Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: ParameterContext
        in: query
        description: Parameter Context
        required: true
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/MediaEncoding.CodecParameterContext'
      responses:
        "200":
          description: Operation successful. Returning a EditObjectContainer object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditObjectContainer'
            application/xml:
              schema:
                $ref: '#/components/schemas/EditObjectContainer'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - CodecParameterService
      summary: Updates the parameters for a specified codec.
      description: Requires authentication as administrator
      operationId: postEncodingCodecparameters
      parameters:
      - name: CodecId
        in: query
        description: Codec Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: ParameterContext
        in: query
        description: Parameter Context
        required: true
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/MediaEncoding.CodecParameterContext'
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Environment/ValidatePath:
    summary: Gets the contents of a given directory in the file system
    post:
      tags:
      - EnvironmentService
      summary: Gets the contents of a given directory in the file system
      description: Requires authentication as administrator
      operationId: postEnvironmentValidatepath
      parameters:
      - name: Path
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: string
      requestBody:
        description: ValidatePath
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatePath'
          application/xml:
            schema:
              $ref: '#/components/schemas/ValidatePath'
        required: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Environment/DefaultDirectoryBrowser:
    summary: Gets the parent path of a given path
    get:
      tags:
      - EnvironmentService
      summary: Gets the parent path of a given path
      description: Requires authentication as administrator
      operationId: getEnvironmentDefaultdirectorybrowser
      responses:
        "200":
          description: Operation successful. Returning a DefaultDirectoryBrowserInfo
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultDirectoryBrowserInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/DefaultDirectoryBrowserInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Environment/DirectoryContents:
    summary: Gets the contents of a given directory in the file system
    get:
      tags:
      - EnvironmentService
      summary: Gets the contents of a given directory in the file system
      description: Requires authentication as administrator
      operationId: getEnvironmentDirectorycontents
      parameters:
      - name: Path
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: IncludeFiles
        in: query
        description: An optional filter to include or exclude files from the results.
          true/false
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: IncludeDirectories
        in: query
        description: An optional filter to include or exclude folders from the results.
          true/false
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Operation successful. Returning a List<FileSystemEntryInfo>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IO.FileSystemEntryInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IO.FileSystemEntryInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    post:
      tags:
      - EnvironmentService
      summary: Gets the contents of a given directory in the file system
      description: Requires authentication as administrator
      operationId: postEnvironmentDirectorycontents
      parameters:
      - name: Path
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: IncludeFiles
        in: query
        description: An optional filter to include or exclude files from the results.
          true/false
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: IncludeDirectories
        in: query
        description: An optional filter to include or exclude folders from the results.
          true/false
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      requestBody:
        description: GetDirectoryContents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDirectoryContents'
          application/xml:
            schema:
              $ref: '#/components/schemas/GetDirectoryContents'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a List<FileSystemEntryInfo>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IO.FileSystemEntryInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IO.FileSystemEntryInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Environment/NetworkShares:
    summary: Gets shares from a network device
    get:
      tags:
      - EnvironmentService
      summary: Gets shares from a network device
      description: Requires authentication as administrator
      operationId: getEnvironmentNetworkshares
      parameters:
      - name: Path
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a List<FileSystemEntryInfo>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IO.FileSystemEntryInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IO.FileSystemEntryInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Environment/Drives:
    summary: Gets available drives from the server's file system
    get:
      tags:
      - EnvironmentService
      summary: Gets available drives from the server's file system
      description: Requires authentication as administrator
      operationId: getEnvironmentDrives
      responses:
        "200":
          description: Operation successful. Returning a List<FileSystemEntryInfo>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IO.FileSystemEntryInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IO.FileSystemEntryInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Environment/NetworkDevices:
    summary: Gets a list of devices on the network
    get:
      tags:
      - EnvironmentService
      summary: Gets a list of devices on the network
      description: Requires authentication as administrator
      operationId: getEnvironmentNetworkdevices
      responses:
        "200":
          description: Operation successful. Returning a List<FileSystemEntryInfo>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IO.FileSystemEntryInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IO.FileSystemEntryInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Environment/ParentPath:
    summary: Gets the parent path of a given path
    get:
      tags:
      - EnvironmentService
      summary: Gets the parent path of a given path
      description: Requires authentication as administrator
      operationId: getEnvironmentParentpath
      parameters:
      - name: Path
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a String object.
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
            application/xml:
              schema:
                type: string
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /GameGenres/{Name}:
    summary: "Gets a Game genre, by name"
    get:
      tags:
      - GameGenresService
      summary: "Gets a Game genre, by name"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getGamegenresByName
      parameters:
      - name: Name
        in: path
        description: The genre name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Genres/{Name}:
    summary: "Gets a genre, by name"
    get:
      tags:
      - GenresService
      summary: "Gets a genre, by name"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getGenresByName
      parameters:
      - name: Name
        in: path
        description: The genre name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Images/Remote:
    summary: Gets a remote image
    get:
      tags:
      - RemoteImageService
      summary: Gets a remote image
      description: Requires authentication as administrator
      operationId: getImagesRemote
      parameters:
      - name: ImageUrl
        in: query
        description: The image url
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Items/{ItemId}:
    summary: Updates an item
    post:
      tags:
      - ItemUpdateService
      summary: Updates an item
      description: Requires authentication as administrator
      operationId: postItemsByItemid
      parameters:
      - name: ItemId
        in: path
        description: The id of the item
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "BaseItemDto: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseItemDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/BaseItemDto'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Items/Prefixes:
    summary: Gets items based on a query.
    get:
      tags:
      - TagService
      summary: Gets items based on a query.
      description: Requires authentication as user
      operationId: getItemsPrefixes
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Operation successful. Returning a NameValuePair[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameValuePair'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameValuePair'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/Access:
    summary: Updates user item access
    post:
      tags:
      - UserLibraryService
      summary: Updates user item access
      description: Requires authentication as user
      operationId: postItemsAccess
      requestBody:
        description: UpdateUserItemAccess
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLibrary.UpdateUserItemAccess'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserLibrary.UpdateUserItemAccess'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/Counts:
    get:
      tags:
      - LibraryService
      description: Requires authentication as user
      operationId: getItemsCounts
      parameters:
      - name: UserId
        in: query
        description: Optional. Get counts from a specific user's library.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: Optional. Get counts of favorite items
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a ItemCounts object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCounts'
            application/xml:
              schema:
                $ref: '#/components/schemas/ItemCounts'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/Intros:
    summary: Gets info to debug intros
    get:
      tags:
      - LibraryService
      summary: Gets info to debug intros
      description: Requires authentication as administrator
      operationId: getItemsIntros
      responses:
        "200":
          description: Operation successful. Returning a List<IntroDebugInfo> object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Persistence.IntroDebugInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Persistence.IntroDebugInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Items/Delete:
    summary: Deletes an item from the library and file system
    post:
      tags:
      - LibraryService
      summary: Deletes an item from the library and file system
      description: Requires authentication as user
      operationId: postItemsDelete
      parameters:
      - name: Ids
        in: query
        description: Ids
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}:
    summary: Deletes an item from the library and file system
    delete:
      tags:
      - LibraryService
      summary: Deletes an item from the library and file system
      description: Requires authentication as user
      operationId: deleteItemsById
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Libraries/AvailableOptions:
    get:
      tags:
      - LibraryService
      description: Requires authentication as user
      operationId: getLibrariesAvailableoptions
      responses:
        "200":
          description: Operation successful. Returning a LibraryOptionsResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library.LibraryOptionsResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/Library.LibraryOptionsResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Library/SelectableMediaFolders:
    summary: Gets all user media folders.
    get:
      tags:
      - LibraryService
      summary: Gets all user media folders.
      description: Requires authentication as user
      operationId: getLibrarySelectablemediafolders
      responses:
        "200":
          description: "Operation successful. Returning a MediaFolder[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library.MediaFolder'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library.MediaFolder'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Library/MediaFolders:
    summary: Gets all user media folders.
    get:
      tags:
      - LibraryService
      summary: Gets all user media folders.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getLibraryMediafolders
      parameters:
      - name: IsHidden
        in: query
        description: "Optional. Filter by folders that are marked hidden, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Library/PhysicalPaths:
    summary: Gets a list of physical paths from virtual folders
    get:
      tags:
      - LibraryService
      summary: Gets a list of physical paths from virtual folders
      description: Requires authentication as administrator
      operationId: getLibraryPhysicalpaths
      responses:
        "200":
          description: Operation successful. Returning a List<String> object.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Library/Refresh:
    summary: Starts a library scan
    post:
      tags:
      - LibraryService
      summary: Starts a library scan
      description: Requires authentication as administrator
      operationId: postLibraryRefresh
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Library/VirtualFolders:
    post:
      tags:
      - LibraryStructureService
      description: Requires authentication as administrator
      operationId: postLibraryVirtualfolders
      requestBody:
        description: AddVirtualFolder
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library.AddVirtualFolder'
          application/xml:
            schema:
              $ref: '#/components/schemas/Library.AddVirtualFolder'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - LibraryStructureService
      description: Requires authentication as administrator
      operationId: deleteLibraryVirtualfolders
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveStreams/Open:
    summary: Opens a media source
    post:
      tags:
      - MediaInfoService
      summary: Opens a media source
      description: Requires authentication as user
      operationId: postLivestreamsOpen
      requestBody:
        description: "LiveStreamRequest: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStreamRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/LiveStreamRequest'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a LiveStreamResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStreamResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/LiveStreamResponse'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveStreams/Close:
    summary: Closes a media source
    post:
      tags:
      - MediaInfoService
      summary: Closes a media source
      description: Requires authentication as user
      operationId: postLivestreamsClose
      parameters:
      - name: LiveStreamId
        in: query
        description: LiveStreamId
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveStreams/MediaInfo:
    summary: Closes a media source
    post:
      tags:
      - MediaInfoService
      summary: Closes a media source
      description: Requires authentication as user
      operationId: postLivestreamsMediainfo
      parameters:
      - name: LiveStreamId
        in: query
        description: LiveStreamId
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/ChannelTags:
    summary: Gets live tv channel tags
    get:
      tags:
      - LiveTvService
      summary: Gets live tv channel tags
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getLivetvChanneltags
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Folder:
    summary: Gets the top level live tv folder
    get:
      tags:
      - LiveTvService
      summary: Gets the top level live tv folder
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getLivetvFolder
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/ChannelMappings:
    get:
      tags:
      - LiveTvService
      description: Requires authentication as administrator
      operationId: getLivetvChannelmappings
      parameters:
      - name: ProviderId
        in: query
        description: Provider id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    put:
      tags:
      - LiveTvService
      description: Requires authentication as administrator
      operationId: putLivetvChannelmappings
      parameters:
      - name: ProviderId
        in: query
        description: Provider id
        required: true
        style: form
        explode: false
        schema:
          type: string
      requestBody:
        description: SetChannelMapping
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.SetChannelMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.SetChannelMapping'
        required: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    post:
      tags:
      - LiveTvService
      description: Requires authentication as administrator
      operationId: postLivetvChannelmappings
      parameters:
      - name: ProviderId
        in: query
        description: Provider id
        required: true
        style: form
        explode: false
        schema:
          type: string
      requestBody:
        description: SetChannelMapping
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.SetChannelMapping'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.SetChannelMapping'
        required: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - LiveTvService
      description: Requires authentication as administrator
      operationId: deleteLivetvChannelmappings
      parameters:
      - name: ProviderId
        in: query
        description: Provider id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    head:
      tags:
      - LiveTvService
      description: Requires authentication as administrator
      operationId: headLivetvChannelmappings
      parameters:
      - name: ProviderId
        in: query
        description: Provider id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/ChannelMappingOptions:
    get:
      tags:
      - LiveTvService
      description: Requires authentication as administrator
      operationId: getLivetvChannelmappingoptions
      parameters:
      - name: ProviderId
        in: query
        description: Provider id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    put:
      tags:
      - LiveTvService
      description: Requires authentication as administrator
      operationId: putLivetvChannelmappingoptions
      parameters:
      - name: ProviderId
        in: query
        description: Provider id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    post:
      tags:
      - LiveTvService
      description: Requires authentication as administrator
      operationId: postLivetvChannelmappingoptions
      parameters:
      - name: ProviderId
        in: query
        description: Provider id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - LiveTvService
      description: Requires authentication as administrator
      operationId: deleteLivetvChannelmappingoptions
      parameters:
      - name: ProviderId
        in: query
        description: Provider id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    head:
      tags:
      - LiveTvService
      description: Requires authentication as administrator
      operationId: headLivetvChannelmappingoptions
      parameters:
      - name: ProviderId
        in: query
        description: Provider id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/ListingProviders:
    summary: Adds a listing provider
    get:
      tags:
      - LiveTvService
      summary: Gets current listing providers
      description: Requires authentication as administrator
      operationId: getLivetvListingproviders
      parameters:
      - name: ChannelId
        in: query
        description: Channel id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Operation successful. Returning a ListingsProviderInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LiveTv.ListingsProviderInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LiveTv.ListingsProviderInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    post:
      tags:
      - LiveTvService
      summary: Adds a listing provider
      description: Requires authentication as administrator
      operationId: postLivetvListingproviders
      requestBody:
        description: "ListingsProviderInfo: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveTv.ListingsProviderInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/LiveTv.ListingsProviderInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a ListingsProviderInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveTv.ListingsProviderInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/LiveTv.ListingsProviderInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - LiveTvService
      summary: Deletes a listing provider
      description: Requires authentication as administrator
      operationId: deleteLivetvListingproviders
      parameters:
      - name: Id
        in: query
        description: Provider id
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/TunerHosts:
    summary: Gets tuner hosts
    get:
      tags:
      - LiveTvService
      summary: Gets tuner hosts
      description: Requires authentication as administrator
      operationId: getLivetvTunerhosts
      responses:
        "200":
          description: "Operation successful. Returning a TunerHostInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LiveTv.TunerHostInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LiveTv.TunerHostInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    post:
      tags:
      - LiveTvService
      summary: Adds a tuner host
      description: Requires authentication as administrator
      operationId: postLivetvTunerhosts
      requestBody:
        description: "TunerHostInfo: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveTv.TunerHostInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/LiveTv.TunerHostInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a TunerHostInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveTv.TunerHostInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/LiveTv.TunerHostInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - LiveTvService
      summary: Deletes a tuner host
      description: Requires authentication as administrator
      operationId: deleteLivetvTunerhosts
      parameters:
      - name: Id
        in: query
        description: Tuner host id
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/Info:
    summary: Gets available live tv services.
    get:
      tags:
      - LiveTvService
      summary: Gets available live tv services.
      description: Requires authentication as user
      operationId: getLivetvInfo
      responses:
        "200":
          description: Operation successful. Returning a LiveTvInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveTv.LiveTvInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/LiveTv.LiveTvInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/EPG:
    summary: Gets the epg.
    get:
      tags:
      - LiveTvService
      summary: Gets the epg.
      description: Requires authentication as user
      operationId: getLivetvEPG
      parameters:
      - name: Type
        in: query
        description: Optional filter by channel type.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/LiveTv.ChannelType'
      - name: IsLiked
        in: query
        description: "Filter by channels that are liked, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsDisliked
        in: query
        description: "Filter by channels that are disliked, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableFavoriteSorting
        in: query
        description: Incorporate favorite and like status into channel sorting.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AddCurrentProgram
        in: query
        description: Optional. Adds current program info to each channel
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: ChannelIds
        in: query
        description: The channels to return guide information for.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<EpgRow> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_Api.EpgRow'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_Api.EpgRow'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Channels:
    summary: Gets available live tv channels.
    get:
      tags:
      - LiveTvService
      summary: Gets available live tv channels.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getLivetvChannels
      parameters:
      - name: Type
        in: query
        description: Optional filter by channel type.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/LiveTv.ChannelType'
      - name: IsLiked
        in: query
        description: "Filter by channels that are liked, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsDisliked
        in: query
        description: "Filter by channels that are disliked, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableFavoriteSorting
        in: query
        description: Incorporate favorite and like status into channel sorting.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AddCurrentProgram
        in: query
        description: Optional. Adds current program info to each channel
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Programs:
    summary: Gets available live tv epgs..
    get:
      tags:
      - LiveTvService
      summary: Gets available live tv epgs..
      description: Requires authentication as user
      operationId: getLivetvPrograms
      parameters:
      - name: ChannelIds
        in: query
        description: The channels to return guide information for.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - LiveTvService
      summary: Gets available live tv epgs..
      description: Requires authentication as user
      operationId: postLivetvPrograms
      parameters:
      - name: ChannelIds
        in: query
        description: The channels to return guide information for.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      requestBody:
        description: "BaseItemsRequest: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.BaseItemsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.BaseItemsRequest'
        required: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Recordings:
    summary: Gets live tv recordings
    get:
      tags:
      - LiveTvService
      summary: Gets live tv recordings
      description: Requires authentication as user
      operationId: getLivetvRecordings
      parameters:
      - name: ChannelId
        in: query
        description: Optional filter by channel id.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Status
        in: query
        description: Optional filter by recording status.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/LiveTv.RecordingStatus'
      - name: IsInProgress
        in: query
        description: "Optional filter by recordings that are in progress, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesTimerId
        in: query
        description: Optional filter by recordings belonging to a series timer
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Timers:
    summary: Gets live tv timers
    get:
      tags:
      - LiveTvService
      summary: Gets live tv timers
      description: Requires authentication as user
      operationId: getLivetvTimers
      parameters:
      - name: ChannelId
        in: query
        description: Optional filter by channel id.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SeriesTimerId
        in: query
        description: Optional filter by timers belonging to a series timer
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<TimerInfoDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_LiveTv.TimerInfoDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_LiveTv.TimerInfoDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - LiveTvService
      summary: Creates a live tv timer
      description: Requires authentication as user
      operationId: postLivetvTimers
      requestBody:
        description: "TimerInfoDto: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveTv.TimerInfoDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/LiveTv.TimerInfoDto'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/SeriesTimers:
    summary: Gets live tv series timers
    get:
      tags:
      - LiveTvService
      summary: Gets live tv series timers
      description: Requires authentication as user
      operationId: getLivetvSeriestimers
      parameters:
      - name: SortBy
        in: query
        description: Optional. Sort by SortName or Priority
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: Optional. Sort in Ascending or Descending order
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<SeriesTimerInfoDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_LiveTv.SeriesTimerInfoDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_LiveTv.SeriesTimerInfoDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - LiveTvService
      summary: Creates a live tv series timer
      description: Requires authentication as user
      operationId: postLivetvSeriestimers
      requestBody:
        description: "SeriesTimerInfo: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveTv.SeriesTimerInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/LiveTv.SeriesTimerInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/GuideInfo:
    summary: Gets guide info
    get:
      tags:
      - LiveTvService
      summary: Gets guide info
      description: Requires authentication as user
      operationId: getLivetvGuideinfo
      responses:
        "200":
          description: Operation successful. Returning a GuideInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveTv.GuideInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/LiveTv.GuideInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/AvailableRecordingOptions:
    summary: Gets available recording options
    get:
      tags:
      - LiveTvService
      summary: Gets available recording options
      description: Requires authentication as user
      operationId: getLivetvAvailablerecordingoptions
      responses:
        "200":
          description: Operation successful. Returning a AvailableRecordingOptions
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.AvailableRecordingOptions'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.AvailableRecordingOptions'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Localization/ParentalRatings:
    summary: Gets known parental ratings
    get:
      tags:
      - LocalizationService
      summary: Gets known parental ratings
      description: Requires authentication as user
      operationId: getLocalizationParentalratings
      responses:
        "200":
          description: "Operation successful. Returning a ParentalRating[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParentalRating'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParentalRating'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Localization/Options:
    summary: Gets localization options
    get:
      tags:
      - LocalizationService
      summary: Gets localization options
      description: Requires authentication as user
      operationId: getLocalizationOptions
      responses:
        "200":
          description: "Operation successful. Returning a LocalizatonOption[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Globalization.LocalizatonOption'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Globalization.LocalizatonOption'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Localization/Countries:
    summary: Gets known countries
    get:
      tags:
      - LocalizationService
      summary: Gets known countries
      description: Requires authentication as user
      operationId: getLocalizationCountries
      responses:
        "200":
          description: "Operation successful. Returning a CountryInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Globalization.CountryInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Globalization.CountryInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Localization/Cultures:
    summary: Gets known cultures
    get:
      tags:
      - LocalizationService
      summary: Gets known cultures
      description: Requires authentication as user
      operationId: getLocalizationCultures
      responses:
        "200":
          description: "Operation successful. Returning a CultureDto[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Globalization.CultureDto'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Globalization.CultureDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Movies/Recommendations:
    summary: Gets movie recommendations
    get:
      tags:
      - MoviesService
      summary: Gets movie recommendations
      description: Requires authentication as user
      operationId: getMoviesRecommendations
      parameters:
      - name: CategoryLimit
        in: query
        description: The max number of categories to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: ItemLimit
        in: query
        description: The max number of items to return per category
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Operation successful. Returning a RecommendationDto[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecommendationDto'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecommendationDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /MusicGenres/{Name}:
    summary: "Gets a music genre, by name"
    get:
      tags:
      - MusicGenresService
      summary: "Gets a music genre, by name"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getMusicgenresByName
      parameters:
      - name: Name
        in: path
        description: The genre name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /MusicGenres/InstantMix:
    summary: Creates an instant playlist based on a music genre
    get:
      tags:
      - InstantMixService
      summary: Creates an instant playlist based on a music genre
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getMusicgenresInstantmix
      parameters:
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Notifications/Types:
    summary: Gets notification types
    get:
      tags:
      - NotificationsService
      summary: Gets notification types
      description: Requires authentication as user
      operationId: getNotificationsTypes
      responses:
        "200":
          description: "Operation successful. Returning a NotificationCategoryInfo[]\
            \ object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationCategoryInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationCategoryInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Notifications/Admin:
    summary: Sends a notification to all admin users
    post:
      tags:
      - NotificationsService
      summary: Sends a notification to all admin users
      description: Requires authentication as user
      operationId: postNotificationsAdmin
      parameters:
      - name: Name
        in: query
        description: The notification's name
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Description
        in: query
        description: The notification's description
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: ImageUrl
        in: query
        description: The notification's image url
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Url
        in: query
        description: The notification's info url
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Level
        in: query
        description: The notification level
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Packages/Updates:
    summary: Gets available package updates for currently installed packages
    get:
      tags:
      - PackageService
      summary: Gets available package updates for currently installed packages
      description: Requires authentication as administrator
      operationId: getPackagesUpdates
      parameters:
      - name: PackageType
        in: query
        description: Package type filter (System/UserInstalled)
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Operation successful. Returning a PackageVersionInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageVersionInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageVersionInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Packages/{Name}:
    summary: "Gets a package, by name or assembly guid"
    get:
      tags:
      - PackageService
      summary: "Gets a package, by name or assembly guid"
      description: Requires authentication as user
      operationId: getPackagesByName
      parameters:
      - name: Name
        in: path
        description: The name of the package
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: AssemblyGuid
        in: query
        description: The guid of the associated assembly
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a PackageInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/PackageInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Persons/{Name}:
    summary: "Gets a person, by name"
    get:
      tags:
      - PersonsService
      summary: "Gets a person, by name"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getPersonsByName
      parameters:
      - name: Name
        in: path
        description: The person name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Playback/BitrateTest:
    get:
      tags:
      - MediaInfoService
      description: Requires authentication as user
      operationId: getPlaybackBitratetest
      parameters:
      - name: Size
        in: query
        description: Size
        required: true
        style: form
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Plugins/{Id}:
    summary: Uninstalls a plugin
    delete:
      tags:
      - PluginService
      summary: Uninstalls a plugin
      description: Requires authentication as administrator
      operationId: deletePluginsById
      parameters:
      - name: Id
        in: path
        description: Plugin Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /ScheduledTasks/{Id}:
    summary: "Gets a scheduled task, by Id"
    get:
      tags:
      - ScheduledTaskService
      summary: "Gets a scheduled task, by Id"
      description: Requires authentication as administrator
      operationId: getScheduledtasksById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a TaskInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Sessions/PlayQueue:
    summary: Gets a the current play queue from a session
    get:
      tags:
      - SessionsService
      summary: Gets a the current play queue from a session
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getSessionsPlayqueue
      parameters:
      - name: Id
        in: query
        description: Optional. Filter by session id.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: Optional. Filter by device id.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/Logout:
    summary: Reports that a session has ended
    post:
      tags:
      - SessionsService
      summary: Reports that a session has ended
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Authentication"
        url: https://dev.emby.media/doc/restapi/User-Authentication.html
      operationId: postSessionsLogout
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/Capabilities:
    summary: Updates capabilities for a device
    post:
      tags:
      - SessionsService
      summary: Updates capabilities for a device
      description: Requires authentication as user
      operationId: postSessionsCapabilities
      parameters:
      - name: Id
        in: query
        description: Session Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: PlayableMediaTypes
        in: query
        description: "A list of playable media types, comma delimited. Audio, Video,\
          \ Book, Game, Photo."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SupportedCommands
        in: query
        description: "A list of supported remote control commands, comma delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SupportsMediaControl
        in: query
        description: Determines whether media can be played remotely.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SupportsSync
        in: query
        description: Determines whether sync is supported.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/Playing:
    summary: Reports playback has started within a session
    post:
      tags:
      - PlaystateService
      summary: Reports playback has started within a session
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Playback Check-ins"
        url: https://dev.emby.media/doc/restapi/Playback-Check-ins.html
      operationId: postSessionsPlaying
      requestBody:
        description: "PlaybackStartInfo: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybackStartInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/PlaybackStartInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Shows/Missing:
    summary: Gets a list of missing episodes
    get:
      tags:
      - TvShowsService
      summary: Gets a list of missing episodes
      description: Requires authentication as user
      operationId: getShowsMissing
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Shows/Upcoming:
    summary: Gets a list of upcoming episodes
    get:
      tags:
      - TvShowsService
      summary: Gets a list of upcoming episodes
      description: Requires authentication as user
      operationId: getShowsUpcoming
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Shows/NextUp:
    summary: Gets a list of next up episodes
    get:
      tags:
      - TvShowsService
      summary: Gets a list of next up episodes
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getShowsNextup
      parameters:
      - name: UserId
        in: query
        description: User Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SeriesId
        in: query
        description: Optional. Filter by series id
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Studios/{Name}:
    summary: "Gets a studio, by name"
    get:
      tags:
      - StudiosService
      summary: "Gets a studio, by name"
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Items by name"
        url: https://dev.emby.media/doc/restapi/Items-by-Name.html
      operationId: getStudiosByName
      parameters:
      - name: Name
        in: path
        description: The studio name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/Targets:
    summary: Gets a list of available sync targets.
    get:
      tags:
      - SyncService
      summary: Gets a list of available sync targets.
      description: Requires authentication as user
      operationId: getSyncTargets
      parameters:
      - name: UserId
        in: query
        description: UserId
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a List<SyncTarget> object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SyncTarget'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SyncTarget'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/Jobs:
    summary: Gets sync jobs.
    get:
      tags:
      - SyncService
      summary: Gets sync jobs.
      description: Requires authentication as user
      operationId: getSyncJobs
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<SyncJob> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_SyncJob'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_SyncJob'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - SyncService
      summary: Gets sync jobs.
      description: Requires authentication as user
      operationId: postSyncJobs
      requestBody:
        description: "SyncJobRequest: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncJobRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SyncJobRequest'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a SyncJobCreationResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJobCreationResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/SyncJobCreationResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/JobItems:
    summary: Gets sync job items.
    get:
      tags:
      - SyncService
      summary: Gets sync job items.
      description: Requires authentication as user
      operationId: getSyncJobitems
      parameters:
      - name: TargetId
        in: query
        description: TargetId
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<SyncJobItem>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_SyncJobItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_SyncJobItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/Options:
    summary: Gets a list of available sync targets.
    get:
      tags:
      - SyncService
      summary: Gets a list of available sync targets.
      description: Requires authentication as user
      operationId: getSyncOptions
      parameters:
      - name: UserId
        in: query
        description: UserId
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: ItemIds
        in: query
        description: ItemIds
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: ParentId
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: TargetId
        in: query
        description: TargetId
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Category
        in: query
        description: Category
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SyncCategory'
      responses:
        "200":
          description: Operation successful. Returning a SyncDialogOptions object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncDialogOptions'
            application/xml:
              schema:
                $ref: '#/components/schemas/SyncDialogOptions'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/OfflineActions:
    summary: Reports an action that occurred while offline.
    post:
      tags:
      - SyncService
      summary: Reports an action that occurred while offline.
      description: Requires authentication as user
      operationId: postSyncOfflineactions
      requestBody:
        description: "List`1: "
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserAction'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserAction'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/Data:
    summary: Syncs data between device and server
    post:
      tags:
      - SyncService
      summary: Syncs data between device and server
      description: Requires authentication as user
      operationId: postSyncData
      parameters:
      - name: TargetId
        in: query
        description: TargetId
        required: true
        style: form
        explode: false
        schema:
          type: string
      requestBody:
        description: "SyncDataRequest: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncDataRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SyncDataRequest'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a SyncDataResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncDataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SyncDataResponse'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /System/Configuration:
    summary: Gets application configuration
    get:
      tags:
      - ConfigurationService
      summary: Gets application configuration
      description: Requires authentication as user
      operationId: getSystemConfiguration
      responses:
        "200":
          description: Operation successful. Returning a ServerConfiguration object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServerConfiguration'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - ConfigurationService
      summary: Updates application configuration
      description: Requires authentication as administrator
      operationId: postSystemConfiguration
      requestBody:
        description: "ServerConfiguration: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /System/ReleaseNotes:
    summary: Gets release notes
    get:
      tags:
      - SystemService
      summary: Gets release notes
      description: Requires authentication as user
      operationId: getSystemReleasenotes
      responses:
        "200":
          description: Operation successful. Returning a PackageVersionInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageVersionInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/PackageVersionInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /System/Ping:
    get:
      tags:
      - SystemService
      description: Requires authentication as user
      operationId: getSystemPing
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - SystemService
      description: Requires authentication as user
      operationId: postSystemPing
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /System/WakeOnLanInfo:
    summary: Gets wake on lan information
    get:
      tags:
      - SystemService
      summary: Gets wake on lan information
      description: Requires authentication as user
      operationId: getSystemWakeonlaninfo
      responses:
        "200":
          description: "Operation successful. Returning a WakeOnLanInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WakeOnLanInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WakeOnLanInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /System/Info:
    summary: Gets information about the server
    get:
      tags:
      - SystemService
      summary: Gets information about the server
      description: Requires authentication as user
      operationId: getSystemInfo
      responses:
        "200":
          description: Operation successful. Returning a SystemInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/SystemInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /System/Restart:
    summary: "Restarts the application, if needed"
    post:
      tags:
      - SystemService
      summary: "Restarts the application, if needed"
      description: Requires authentication as administrator
      operationId: postSystemRestart
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /System/Shutdown:
    summary: Shuts down the application
    post:
      tags:
      - SystemService
      summary: Shuts down the application
      description: Requires authentication as administrator
      operationId: postSystemShutdown
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /System/Endpoint:
    summary: Gets information about the request endpoint
    get:
      tags:
      - SystemService
      summary: Gets information about the request endpoint
      description: Requires authentication as user
      operationId: getSystemEndpoint
      responses:
        "200":
          description: Operation successful. Returning a EndPointInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Net.EndPointInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Net.EndPointInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /UI/View:
    summary: Gets UI view data
    get:
      tags:
      - GenericUIApiService
      summary: Gets UI view data
      description: Requires authentication as user
      operationId: getUIView
      parameters:
      - name: PageId
        in: query
        description: Id of the page controller
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: ClientLocale
        in: query
        description: Locale identifier of the client
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a UIViewInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UIViewInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UIViewInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /UI/Command:
    summary: Execute a command in the context of tv setup
    post:
      tags:
      - GenericUIApiService
      summary: Execute a command in the context of tv setup
      description: Requires authentication as user
      operationId: postUICommand
      requestBody:
        description: RunUICommand
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunUICommand'
          application/xml:
            schema:
              $ref: '#/components/schemas/RunUICommand'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a UIViewInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UIViewInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UIViewInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/Public:
    summary: Gets a list of publicly visible users for display on a login screen.
    get:
      tags:
      - UserService
      summary: Gets a list of publicly visible users for display on a login screen.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Authentication"
        url: https://dev.emby.media/doc/restapi/User-Authentication.html
      operationId: getUsersPublic
      responses:
        "200":
          description: "Operation successful. Returning a UserDto[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/Query:
    summary: Gets a list of users
    get:
      tags:
      - UserService
      summary: Gets a list of users
      description: Requires authentication as administrator
      operationId: getUsersQuery
      parameters:
      - name: IsHidden
        in: query
        description: Optional filter by IsHidden=true or false
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsDisabled
        in: query
        description: Optional filter by IsDisabled=true or false
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<UserDto> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Users/Prefixes:
    summary: Gets a list of users
    get:
      tags:
      - UserService
      summary: Gets a list of users
      description: Requires authentication as administrator
      operationId: getUsersPrefixes
      parameters:
      - name: IsHidden
        in: query
        description: Optional filter by IsHidden=true or false
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsDisabled
        in: query
        description: Optional filter by IsDisabled=true or false
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Operation successful. Returning a NameIdPair[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameIdPair'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameIdPair'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Users/ItemAccess:
    summary: Gets a list of users
    get:
      tags:
      - UserService
      summary: Gets a list of users
      description: Requires authentication as user
      operationId: getUsersItemaccess
      parameters:
      - name: IsHidden
        in: query
        description: Optional filter by IsHidden=true or false
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsDisabled
        in: query
        description: Optional filter by IsDisabled=true or false
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<UserDto> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_UserDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_UserDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}:
    summary: Gets a user by Id
    get:
      tags:
      - UserService
      summary: Gets a user by Id
      description: Requires authentication as user
      operationId: getUsersById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a UserDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - UserService
      summary: Updates a user
      description: Requires authentication as user
      operationId: postUsersById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "UserDto: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - UserService
      summary: Deletes a user
      description: Requires authentication as administrator
      operationId: deleteUsersById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Users/AuthenticateByName:
    summary: Authenticates a user
    description: "Authenticate a user by nane and password. A 200 status code indicates\
      \ success, while anything in the 400 or 500 range indicates failure"
    post:
      tags:
      - UserService
      summary: Authenticates a user
      description: |-
        Authenticate a user by nane and password. A 200 status code indicates success, while anything in the 400 or 500 range indicates failure
        ---
        Requires authentication as user
      externalDocs:
        description: "API Documentation: Authentication"
        url: https://dev.emby.media/doc/restapi/User-Authentication.html
      operationId: postUsersAuthenticatebyname
      parameters:
      - name: X-Emby-Authorization
        in: header
        description: "The authorization header can be either named 'Authorization'\
          \ or 'X-Emby-Authorization'.   \nIt must be of the following schema:   \
          \ \nEmby UserId=\"(guid)\", Client=\"(string)\", Device=\"(string)\", DeviceId=\"\
          (string)\", Version=\"string\", Token=\"(string)\"    \nPlease consult the\
          \ documentation for further details."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: AuthenticateUserByName
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateUserByName'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuthenticateUserByName'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a AuthenticationResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication.AuthenticationResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/Authentication.AuthenticationResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/New:
    summary: Creates a user
    post:
      tags:
      - UserService
      summary: Creates a user
      description: Requires authentication as administrator
      operationId: postUsersNew
      requestBody:
        description: CreateUserByName
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserByName'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateUserByName'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a UserDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Users/ForgotPassword:
    summary: Initiates the forgot password process for a local user
    post:
      tags:
      - UserService
      summary: Initiates the forgot password process for a local user
      description: Requires authentication as user
      operationId: postUsersForgotpassword
      requestBody:
        description: ForgotPassword
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
          application/xml:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a ForgotPasswordResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/MergeVersions:
    summary: Merges videos into a single record
    post:
      tags:
      - VideosService
      summary: Merges videos into a single record
      description: Requires authentication as administrator
      operationId: postVideosMergeversions
      parameters:
      - name: Ids
        in: query
        description: "Item id list. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Videos/ActiveEncodings:
    delete:
      tags:
      - HlsSegmentService
      description: Requires authentication as user
      operationId: deleteVideosActiveencodings
      parameters:
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: PlaySessionId
        in: query
        description: The play session id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /web/ConfigurationPage:
    get:
      tags:
      - WebAppService
      description: Requires authentication as user
      operationId: getWebConfigurationpage
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /web/ConfigurationPages:
    get:
      tags:
      - WebAppService
      description: Requires authentication as user
      operationId: getWebConfigurationpages
      responses:
        "200":
          description: Operation successful. Returning a List<ConfigurationPageInfo>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.ConfigurationPageInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.ConfigurationPageInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /web/strings:
    get:
      tags:
      - WebAppService
      description: Requires authentication as user
      operationId: getWebStrings
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /web/stringset:
    get:
      tags:
      - WebAppService
      description: Requires authentication as user
      operationId: getWebStringset
      responses:
        "200":
          description: "Operation successful. Returning a String[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Albums/{Id}/InstantMix:
    summary: Creates an instant playlist based on a given album
    get:
      tags:
      - InstantMixService
      summary: Creates an instant playlist based on a given album
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getAlbumsByIdInstantmix
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Albums/{Id}/Similar:
    summary: Finds albums similar to a given album.
    get:
      tags:
      - LibraryService
      summary: Finds albums similar to a given album.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getAlbumsByIdSimilar
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Artists/{Id}/Similar:
    summary: Finds albums similar to a given album.
    get:
      tags:
      - LibraryService
      summary: Finds albums similar to a given album.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getArtistsByIdSimilar
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Audio/{Id}/universal.{Container}:
    summary: Gets an audio stream
    get:
      tags:
      - UniversalAudioService
      summary: Gets an audio stream
      description: Requires authentication as user
      operationId: getAudioByIdUniversalByContainer
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - UniversalAudioService
      summary: Gets an audio stream
      description: Requires authentication as user
      operationId: headAudioByIdUniversalByContainer
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Audio/{Id}/universal:
    summary: Gets an audio stream
    get:
      tags:
      - UniversalAudioService
      summary: Gets an audio stream
      description: Requires authentication as user
      operationId: getAudioByIdUniversal
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - UniversalAudioService
      summary: Gets an audio stream
      description: Requires authentication as user
      operationId: headAudioByIdUniversal
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Audio/{Id}/stream.{Container}:
    summary: Gets an audio stream
    get:
      tags:
      - AudioService
      summary: Gets an audio stream
      description: Requires authentication as user
      operationId: getAudioByIdStreamByContainer
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: path
        description: Container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - AudioService
      summary: Gets an audio stream
      description: Requires authentication as user
      operationId: headAudioByIdStreamByContainer
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: path
        description: Container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Audio/{Id}/stream:
    summary: Gets an audio stream
    get:
      tags:
      - AudioService
      summary: Gets an audio stream
      description: Requires authentication as user
      operationId: getAudioByIdStream
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - AudioService
      summary: Gets an audio stream
      description: Requires authentication as user
      operationId: headAudioByIdStream
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Audio/{Id}/{StreamFileName}:
    summary: Gets an audio stream
    get:
      tags:
      - AudioService
      summary: Gets an audio stream
      description: Requires authentication as user
      operationId: getAudioByIdByStreamfilename
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: StreamFileName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - AudioService
      summary: Gets an audio stream
      description: Requires authentication as user
      operationId: headAudioByIdByStreamfilename
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: StreamFileName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Audio/{Id}/master.m3u8:
    summary: Gets an audio stream using HTTP live streaming.
    get:
      tags:
      - DynamicHlsService
      summary: Gets an audio stream using HTTP live streaming.
      description: Requires authentication as user
      operationId: getAudioByIdMasterM3u8
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - DynamicHlsService
      summary: Gets an audio stream using HTTP live streaming.
      description: Requires authentication as user
      operationId: headAudioByIdMasterM3u8
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Audio/{Id}/live.m3u8:
    get:
      tags:
      - DynamicHlsService
      description: Requires authentication as user
      operationId: getAudioByIdLiveM3u8
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Audio/{Id}/main.m3u8:
    summary: Gets an audio stream using HTTP live streaming.
    get:
      tags:
      - DynamicHlsService
      summary: Gets an audio stream using HTTP live streaming.
      description: Requires authentication as user
      operationId: getAudioByIdMainM3u8
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Auth/Keys/{Key}:
    delete:
      tags:
      - SessionsService
      description: Requires authentication as administrator
      operationId: deleteAuthKeysByKey
      parameters:
      - name: Key
        in: path
        description: Auth Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Collections/{Id}/Items:
    summary: Adds items to a collection
    post:
      tags:
      - CollectionService
      summary: Adds items to a collection
      description: Requires authentication as user
      operationId: postCollectionsByIdItems
      parameters:
      - name: Ids
        in: query
        description: "Item id, comma delimited"
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - CollectionService
      summary: Removes items from a collection
      description: Requires authentication as user
      operationId: deleteCollectionsByIdItems
      parameters:
      - name: Ids
        in: query
        description: "Item id, comma delimited"
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Dlna/{UuId}/description.xml:
    summary: Gets dlna server info
    get:
      tags:
      - DlnaServerService
      summary: Gets dlna server info
      description: No authentication required
      operationId: getDlnaByUuidDescriptionXml
      parameters:
      - name: UuId
        in: path
        description: Server UuId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /Dlna/{UuId}/description:
    summary: Gets dlna server info
    get:
      tags:
      - DlnaServerService
      summary: Gets dlna server info
      description: No authentication required
      operationId: getDlnaByUuidDescription
      parameters:
      - name: UuId
        in: path
        description: Server UuId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /Dlna/icons/{Filename}:
    summary: Gets a server icon
    get:
      tags:
      - DlnaServerService
      summary: Gets a server icon
      description: No authentication required
      operationId: getDlnaIconsByFilename
      parameters:
      - name: UuId
        in: query
        description: Server UuId
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Filename
        in: path
        description: The icon filename
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /Dlna/Profiles/{Id}:
    summary: Gets a single profile
    get:
      tags:
      - DlnaService
      summary: Gets a single profile
      description: Requires authentication as administrator
      operationId: getDlnaProfilesById
      parameters:
      - name: Id
        in: path
        description: Profile Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a DlnaProfile object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dlna.Profiles.DlnaProfile'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dlna.Profiles.DlnaProfile'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    post:
      tags:
      - DlnaService
      summary: Updates a profile
      description: Requires authentication as administrator
      operationId: postDlnaProfilesById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "DlnaProfile: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dlna.Profiles.DlnaProfile'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dlna.Profiles.DlnaProfile'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - DlnaService
      summary: Deletes a profile
      description: Requires authentication as administrator
      operationId: deleteDlnaProfilesById
      parameters:
      - name: Id
        in: path
        description: Profile Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Dlna/Profiles/Default:
    summary: Gets the default profile
    get:
      tags:
      - DlnaService
      summary: Gets the default profile
      description: Requires authentication as administrator
      operationId: getDlnaProfilesDefault
      responses:
        "200":
          description: Operation successful. Returning a DlnaProfile object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dlna.Profiles.DlnaProfile'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dlna.Profiles.DlnaProfile'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Encoding/CodecInformation/Video:
    summary: Gets details about available video encoders and decoders
    get:
      tags:
      - EncodingInfoService
      summary: Gets details about available video encoders and decoders
      description: Requires authentication as administrator
      operationId: getEncodingCodecinformationVideo
      responses:
        "200":
          description: "Operation successful. Returning a VideoCodecBase[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoCodecBase'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoCodecBase'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Encoding/CodecConfiguration/Defaults:
    summary: Gets default codec configurations
    get:
      tags:
      - EncodingInfoService
      summary: Gets default codec configurations
      description: Requires authentication as administrator
      operationId: getEncodingCodecconfigurationDefaults
      responses:
        "200":
          description: "Operation successful. Returning a CodecConfiguration[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodecConfiguration'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodecConfiguration'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Games/{Id}/Similar:
    summary: Finds games similar to a given game.
    get:
      tags:
      - LibraryService
      summary: Finds games similar to a given game.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getGamesByIdSimilar
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/ExternalIdInfos:
    summary: Gets external id infos for an item
    get:
      tags:
      - ItemLookupService
      summary: Gets external id infos for an item
      description: Requires authentication as administrator
      operationId: getItemsByIdExternalidinfos
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a List<ExternalIdInfo> object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalIdInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalIdInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Items/RemoteSearch/Trailer:
    post:
      tags:
      - ItemLookupService
      description: Requires authentication as user
      operationId: postItemsRemotesearchTrailer
      requestBody:
        description: "RemoteSearchQuery`1: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_TrailerInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_TrailerInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a List<RemoteSearchResult>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/RemoteSearch/Book:
    post:
      tags:
      - ItemLookupService
      description: Requires authentication as user
      operationId: postItemsRemotesearchBook
      requestBody:
        description: "RemoteSearchQuery`1: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_BookInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_BookInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a List<RemoteSearchResult>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/RemoteSearch/Movie:
    post:
      tags:
      - ItemLookupService
      description: Requires authentication as user
      operationId: postItemsRemotesearchMovie
      requestBody:
        description: "RemoteSearchQuery`1: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_MovieInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_MovieInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a List<RemoteSearchResult>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/RemoteSearch/Series:
    post:
      tags:
      - ItemLookupService
      description: Requires authentication as user
      operationId: postItemsRemotesearchSeries
      requestBody:
        description: "RemoteSearchQuery`1: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_SeriesInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_SeriesInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a List<RemoteSearchResult>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/RemoteSearch/Game:
    post:
      tags:
      - ItemLookupService
      description: Requires authentication as user
      operationId: postItemsRemotesearchGame
      requestBody:
        description: "RemoteSearchQuery`1: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_GameInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_GameInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a List<RemoteSearchResult>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/RemoteSearch/BoxSet:
    post:
      tags:
      - ItemLookupService
      description: Requires authentication as user
      operationId: postItemsRemotesearchBoxset
      requestBody:
        description: "RemoteSearchQuery`1: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_ItemLookupInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_ItemLookupInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a List<RemoteSearchResult>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/RemoteSearch/MusicVideo:
    post:
      tags:
      - ItemLookupService
      description: Requires authentication as user
      operationId: postItemsRemotesearchMusicvideo
      requestBody:
        description: "RemoteSearchQuery`1: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_MusicVideoInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_MusicVideoInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a List<RemoteSearchResult>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/RemoteSearch/Person:
    post:
      tags:
      - ItemLookupService
      description: Requires authentication as administrator
      operationId: postItemsRemotesearchPerson
      requestBody:
        description: "RemoteSearchQuery`1: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_PersonLookupInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_PersonLookupInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a List<RemoteSearchResult>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Items/RemoteSearch/MusicAlbum:
    post:
      tags:
      - ItemLookupService
      description: Requires authentication as user
      operationId: postItemsRemotesearchMusicalbum
      requestBody:
        description: "RemoteSearchQuery`1: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_AlbumInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_AlbumInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a List<RemoteSearchResult>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/RemoteSearch/MusicArtist:
    post:
      tags:
      - ItemLookupService
      description: Requires authentication as user
      operationId: postItemsRemotesearchMusicartist
      requestBody:
        description: "RemoteSearchQuery`1: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_ArtistInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteSearchQuery_ArtistInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a List<RemoteSearchResult>
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSearchResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/RemoteSearch/Image:
    summary: Gets a remote image
    get:
      tags:
      - ItemLookupService
      summary: Gets a remote image
      description: Requires authentication as administrator
      operationId: getItemsRemotesearchImage
      parameters:
      - name: ImageUrl
        in: query
        description: The image url
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: ProviderName
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Items/Metadata/Reset:
    summary: Resets metadata for one or more items
    post:
      tags:
      - ItemLookupService
      summary: Resets metadata for one or more items
      description: Requires authentication as administrator
      operationId: postItemsMetadataReset
      parameters:
      - name: ItemIds
        in: query
        description: The item ids
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Items/{Id}/Refresh:
    summary: Refreshes metadata for an item
    post:
      tags:
      - ItemRefreshService
      summary: Refreshes metadata for an item
      description: Requires authentication as user
      operationId: postItemsByIdRefresh
      parameters:
      - name: Recursive
        in: query
        description: Indicates if the refresh should occur recursively.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MetadataRefreshMode
        in: query
        description: Specifies the metadata refresh mode
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/MetadataRefreshMode'
      - name: ImageRefreshMode
        in: query
        description: Specifies the image refresh mode
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/MetadataRefreshMode'
      - name: ReplaceAllMetadata
        in: query
        description: Determines if metadata should be replaced. Only applicable if
          mode is FullRefresh
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: ReplaceAllImages
        in: query
        description: Determines if images should be replaced. Only applicable if mode
          is FullRefresh
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{ItemId}/MetadataEditor:
    summary: Gets metadata editor info for an item
    get:
      tags:
      - ItemUpdateService
      summary: Gets metadata editor info for an item
      description: Requires authentication as administrator
      operationId: getItemsByItemidMetadataeditor
      parameters:
      - name: ItemId
        in: path
        description: The id of the item
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a MetadataEditorInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataEditorInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/MetadataEditorInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Items/{Id}/MakePublic:
    summary: Makes an item public to all users
    post:
      tags:
      - UserLibraryService
      summary: Makes an item public to all users
      description: Requires authentication as user
      operationId: postItemsByIdMakepublic
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/MakePrivate:
    summary: Makes an item private
    post:
      tags:
      - UserLibraryService
      summary: Makes an item private
      description: Requires authentication as user
      operationId: postItemsByIdMakeprivate
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/Shared/Leave:
    summary: Leaves a shared item
    post:
      tags:
      - UserLibraryService
      summary: Leaves a shared item
      description: Requires authentication as user
      operationId: postItemsSharedLeave
      requestBody:
        description: LeaveSharedItems
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLibrary.LeaveSharedItems'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserLibrary.LeaveSharedItems'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/InstantMix:
    summary: Creates an instant playlist based on a given item
    get:
      tags:
      - InstantMixService
      summary: Creates an instant playlist based on a given item
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getItemsByIdInstantmix
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/DeleteInfo:
    summary: Gets delete info for an item
    get:
      tags:
      - LibraryService
      summary: Gets delete info for an item
      description: Requires authentication as user
      operationId: getItemsByIdDeleteinfo
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a DeleteInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library.DeleteInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Library.DeleteInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Similar:
    summary: Gets similar items
    get:
      tags:
      - LibraryService
      summary: Gets similar items
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getItemsByIdSimilar
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Download:
    summary: Downloads item media
    get:
      tags:
      - LibraryService
      summary: Downloads item media
      description: Requires authentication as user
      operationId: getItemsByIdDownload
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/File:
    summary: Gets the original file of an item
    get:
      tags:
      - LibraryService
      summary: Gets the original file of an item
      description: Requires authentication as user
      operationId: getItemsByIdFile
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Ancestors:
    summary: Gets all parents of an item
    get:
      tags:
      - LibraryService
      summary: Gets all parents of an item
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getItemsByIdAncestors
      parameters:
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Operation successful. Returning a BaseItemDto[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/CriticReviews:
    summary: Gets critic reviews for an item
    get:
      tags:
      - LibraryService
      summary: Gets critic reviews for an item
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getItemsByIdCriticreviews
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Delete:
    summary: Deletes an item from the library and file system
    post:
      tags:
      - LibraryService
      summary: Deletes an item from the library and file system
      description: Requires authentication as user
      operationId: postItemsByIdDelete
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/ThemeMedia:
    summary: Gets theme videos and songs for an item
    get:
      tags:
      - LibraryService
      summary: Gets theme videos and songs for an item
      description: Requires authentication as user
      operationId: getItemsByIdThememedia
      parameters:
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: InheritFromParent
        in: query
        description: Determines whether or not parent items should be searched for
          theme media.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a AllThemeMediaResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllThemeMediaResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/AllThemeMediaResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/ThemeSongs:
    summary: Gets theme songs for an item
    get:
      tags:
      - LibraryService
      summary: Gets theme songs for an item
      description: Requires authentication as user
      operationId: getItemsByIdThemesongs
      parameters:
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: InheritFromParent
        in: query
        description: Determines whether or not parent items should be searched for
          theme media.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a ThemeMediaResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeMediaResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThemeMediaResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/ThemeVideos:
    summary: Gets theme videos for an item
    get:
      tags:
      - LibraryService
      summary: Gets theme videos for an item
      description: Requires authentication as user
      operationId: getItemsByIdThemevideos
      parameters:
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: InheritFromParent
        in: query
        description: Determines whether or not parent items should be searched for
          theme media.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a ThemeMediaResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeMediaResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThemeMediaResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Images:
    summary: Gets information about an item's images
    get:
      tags:
      - ImageService
      summary: Gets information about an item's images
      description: Requires authentication as user
      operationId: getItemsByIdImages
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a List<ImageInfo> object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/RemoteImages:
    summary: Gets available remote images for an item
    get:
      tags:
      - RemoteImageService
      summary: Gets available remote images for an item
      description: Requires authentication as user
      operationId: getItemsByIdRemoteimages
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: query
        description: The image type
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ProviderName
        in: query
        description: Optional. The image provider to use
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IncludeAllLanguages
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Operation successful. Returning a RemoteImageResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteImageResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/RemoteImageResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/ThumbnailSet:
    get:
      tags:
      - BifService
      description: Requires authentication as user
      operationId: getItemsByIdThumbnailset
      parameters:
      - name: Width
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a ThumbnailSetInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RokuMetadata.Api.ThumbnailSetInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/RokuMetadata.Api.ThumbnailSetInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/PlaybackInfo:
    summary: Gets live playback media info for an item
    get:
      tags:
      - MediaInfoService
      summary: Gets live playback media info for an item
      description: Requires authentication as user
      operationId: getItemsByIdPlaybackinfo
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a PlaybackInfoResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlaybackInfoResponse'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - MediaInfoService
      summary: Gets live playback media info for an item
      description: Requires authentication as user
      operationId: postItemsByIdPlaybackinfo
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "PlaybackInfoRequest: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybackInfoRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/PlaybackInfoRequest'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a PlaybackInfoResponse object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PlaybackInfoResponse'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Library/Series/Added:
    summary: Deprecated. Use /Library/Media/Updated
    post:
      tags:
      - LibraryService
      summary: Deprecated. Use /Library/Media/Updated
      description: Requires authentication as user
      operationId: postLibrarySeriesAdded
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Library/Series/Updated:
    summary: Deprecated. Use /Library/Media/Updated
    post:
      tags:
      - LibraryService
      summary: Deprecated. Use /Library/Media/Updated
      description: Requires authentication as user
      operationId: postLibrarySeriesUpdated
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Library/Media/Updated:
    summary: Reports that new movies have been added by an external source
    post:
      tags:
      - LibraryService
      summary: Reports that new movies have been added by an external source
      description: Requires authentication as user
      operationId: postLibraryMediaUpdated
      requestBody:
        description: PostUpdatedMedia
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library.PostUpdatedMedia'
          application/xml:
            schema:
              $ref: '#/components/schemas/Library.PostUpdatedMedia'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Library/Movies/Added:
    summary: Deprecated. Use /Library/Media/Updated
    post:
      tags:
      - LibraryService
      summary: Deprecated. Use /Library/Media/Updated
      description: Requires authentication as user
      operationId: postLibraryMoviesAdded
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Library/Movies/Updated:
    summary: Deprecated. Use /Library/Media/Updated
    post:
      tags:
      - LibraryService
      summary: Deprecated. Use /Library/Media/Updated
      description: Requires authentication as user
      operationId: postLibraryMoviesUpdated
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Library/VirtualFolders/Query:
    get:
      tags:
      - LibraryStructureService
      description: Requires authentication as user
      operationId: getLibraryVirtualfoldersQuery
      parameters:
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<VirtualFolderInfo>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_VirtualFolderInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_VirtualFolderInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Library/VirtualFolders/LibraryOptions:
    post:
      tags:
      - LibraryStructureService
      description: Requires authentication as administrator
      operationId: postLibraryVirtualfoldersLibraryoptions
      requestBody:
        description: UpdateLibraryOptions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library.UpdateLibraryOptions'
          application/xml:
            schema:
              $ref: '#/components/schemas/Library.UpdateLibraryOptions'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Library/VirtualFolders/Name:
    post:
      tags:
      - LibraryStructureService
      description: Requires authentication as administrator
      operationId: postLibraryVirtualfoldersName
      requestBody:
        description: RenameVirtualFolder
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library.RenameVirtualFolder'
          application/xml:
            schema:
              $ref: '#/components/schemas/Library.RenameVirtualFolder'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Library/VirtualFolders/Delete:
    post:
      tags:
      - LibraryStructureService
      description: Requires authentication as administrator
      operationId: postLibraryVirtualfoldersDelete
      requestBody:
        description: RemoveVirtualFolder
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library.RemoveVirtualFolder'
          application/xml:
            schema:
              $ref: '#/components/schemas/Library.RemoveVirtualFolder'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Library/VirtualFolders/Paths:
    post:
      tags:
      - LibraryStructureService
      description: Requires authentication as administrator
      operationId: postLibraryVirtualfoldersPaths
      requestBody:
        description: AddMediaPath
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library.AddMediaPath'
          application/xml:
            schema:
              $ref: '#/components/schemas/Library.AddMediaPath'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - LibraryStructureService
      description: Requires authentication as administrator
      operationId: deleteLibraryVirtualfoldersPaths
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/Programs/{Id}:
    summary: Gets a live tv program
    get:
      tags:
      - UserLibraryService
      summary: Gets a live tv program
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getLivetvProgramsById
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/TunerHosts/Types:
    get:
      tags:
      - LiveTvService
      description: Requires authentication as user
      operationId: getLivetvTunerhostsTypes
      responses:
        "200":
          description: Operation successful. Returning a List<NameIdPair> object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameIdPair'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameIdPair'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Manage/Channels:
    summary: Gets the channel management list
    get:
      tags:
      - LiveTvService
      summary: Gets the channel management list
      description: Requires authentication as administrator
      operationId: getLivetvManageChannels
      parameters:
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Name, StartDate"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<ChannelManagementInfo>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_ChannelManagementInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_ChannelManagementInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/ChannelTags/Prefixes:
    summary: Gets live tv channel tag prefixes
    get:
      tags:
      - LiveTvService
      summary: Gets live tv channel tag prefixes
      description: Requires authentication as user
      operationId: getLivetvChanneltagsPrefixes
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Operation successful. Returning a TagItem[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.TagItem'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.TagItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Recordings/Folders:
    summary: Gets recording folders
    get:
      tags:
      - LiveTvService
      summary: Gets recording folders
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getLivetvRecordingsFolders
      parameters:
      - name: UserId
        in: query
        description: Optional filter by user and attach user data.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: "Operation successful. Returning a BaseItemDto[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Tuners/Discvover:
    get:
      tags:
      - LiveTvService
      description: Requires authentication as user
      operationId: getLivetvTunersDiscvover
      responses:
        "200":
          description: Operation successful. Returning a List<TunerHostInfo> object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LiveTv.TunerHostInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LiveTv.TunerHostInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/ListingProviders/Default:
    get:
      tags:
      - LiveTvService
      description: Requires authentication as user
      operationId: getLivetvListingprovidersDefault
      responses:
        "200":
          description: Operation successful. Returning a ListingsProviderInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveTv.ListingsProviderInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/LiveTv.ListingsProviderInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/ListingProviders/Delete:
    summary: Deletes a listing provider
    post:
      tags:
      - LiveTvService
      summary: Deletes a listing provider
      description: Requires authentication as administrator
      operationId: postLivetvListingprovidersDelete
      parameters:
      - name: Id
        in: query
        description: Provider id
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/TunerHosts/Delete:
    summary: Deletes a tuner host
    post:
      tags:
      - LiveTvService
      summary: Deletes a tuner host
      description: Requires authentication as administrator
      operationId: postLivetvTunerhostsDelete
      parameters:
      - name: Id
        in: query
        description: Tuner host id
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/ListingProviders/Lineups:
    summary: Gets available lineups
    get:
      tags:
      - LiveTvService
      summary: Gets available lineups
      description: Requires authentication as administrator
      operationId: getLivetvListingprovidersLineups
      parameters:
      - name: Id
        in: query
        description: Provider id
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Type
        in: query
        description: Provider Type
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Location
        in: query
        description: Location
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Country
        in: query
        description: Country
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a List<NameIdPair> object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameIdPair'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NameIdPair'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/Channels/{Id}:
    summary: Gets a live tv channel
    get:
      tags:
      - LiveTvService
      summary: Gets a live tv channel
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getLivetvChannelsById
      parameters:
      - name: Id
        in: path
        description: Channel Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: Optional attach user data.
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Programs/Recommended:
    summary: Gets available live tv epgs..
    get:
      tags:
      - LiveTvService
      summary: Gets available live tv epgs..
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getLivetvProgramsRecommended
      parameters:
      - name: UserId
        in: query
        description: Optional filter by user id.
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: IsAiring
        in: query
        description: "Optional. Filter by programs that are currently airing, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasAired
        in: query
        description: "Optional. Filter by programs that have completed airing, or\
          \ not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: GenreIds
        in: query
        description: The genres to return guide information for.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Recordings/Series:
    summary: Gets live tv recordings
    get:
      tags:
      - LiveTvService
      summary: Gets live tv recordings
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getLivetvRecordingsSeries
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Recordings/{Id}:
    summary: Gets a live tv recording
    get:
      tags:
      - LiveTvService
      summary: Gets a live tv recording
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getLivetvRecordingsById
      parameters:
      - name: Id
        in: path
        description: Recording Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: Optional attach user data.
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - LiveTvService
      summary: Deletes a live tv recording
      description: Requires authentication as user
      operationId: deleteLivetvRecordingsById
      parameters:
      - name: Id
        in: path
        description: Recording Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Timers/{Id}:
    summary: Gets a live tv timer
    get:
      tags:
      - LiveTvService
      summary: Gets a live tv timer
      description: Requires authentication as user
      operationId: getLivetvTimersById
      parameters:
      - name: Id
        in: path
        description: Timer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a TimerInfoDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveTv.TimerInfoDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/LiveTv.TimerInfoDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - LiveTvService
      summary: Updates a live tv timer
      description: Requires authentication as user
      operationId: postLivetvTimersById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "TimerInfoDto: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveTv.TimerInfoDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/LiveTv.TimerInfoDto'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - LiveTvService
      summary: Cancels a live tv timer
      description: Requires authentication as user
      operationId: deleteLivetvTimersById
      parameters:
      - name: Id
        in: path
        description: Timer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/SeriesTimers/{Id}:
    summary: Gets a live tv series timer
    get:
      tags:
      - LiveTvService
      summary: Gets a live tv series timer
      description: Requires authentication as user
      operationId: getLivetvSeriestimersById
      parameters:
      - name: Id
        in: path
        description: Timer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a TimerInfoDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveTv.TimerInfoDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/LiveTv.TimerInfoDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - LiveTvService
      summary: Updates a live tv series timer
      description: Requires authentication as user
      operationId: postLivetvSeriestimersById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "SeriesTimerInfo: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveTv.SeriesTimerInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/LiveTv.SeriesTimerInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - LiveTvService
      summary: Cancels a live tv series timer
      description: Requires authentication as user
      operationId: deleteLivetvSeriestimersById
      parameters:
      - name: Id
        in: path
        description: Timer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Timers/Defaults:
    summary: Gets default values for a new timer
    get:
      tags:
      - LiveTvService
      summary: Gets default values for a new timer
      description: Requires authentication as user
      operationId: getLivetvTimersDefaults
      parameters:
      - name: ProgramId
        in: query
        description: "Optional, to attach default values based on a program."
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a SeriesTimerInfoDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveTv.SeriesTimerInfoDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/LiveTv.SeriesTimerInfoDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Recordings/Groups:
    summary: Gets live tv recording groups
    get:
      tags:
      - LiveTvService
      summary: Gets live tv recording groups
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getLivetvRecordingsGroups
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/ListingProviders/Available:
    summary: Gets listing provider
    get:
      tags:
      - LiveTvService
      summary: Gets listing provider
      description: Requires authentication as administrator
      operationId: getLivetvListingprovidersAvailable
      responses:
        "200":
          description: "Operation successful. Returning a ListingProviderTypeInfo[]\
            \ object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.ListingProviderTypeInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api.ListingProviderTypeInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Movies/{Id}/Similar:
    summary: Finds movies and trailers similar to a given movie.
    get:
      tags:
      - LibraryService
      summary: Finds movies and trailers similar to a given movie.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getMoviesByIdSimilar
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /MusicGenres/{Name}/InstantMix:
    summary: Creates an instant playlist based on a music genre
    get:
      tags:
      - InstantMixService
      summary: Creates an instant playlist based on a music genre
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getMusicgenresByNameInstantmix
      parameters:
      - name: Name
        in: path
        description: The genre name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Notifications/Services/Test:
    summary: Sends a test notification
    post:
      tags:
      - UserNotificationsService
      summary: Sends a test notification
      description: Requires authentication as user
      operationId: postNotificationsServicesTest
      requestBody:
        description: "UserNotificationInfo: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserNotificationInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Notifications/Services/Defaults:
    summary: Gets default notification info
    get:
      tags:
      - UserNotificationsService
      summary: Gets default notification info
      description: Requires authentication as user
      operationId: getNotificationsServicesDefaults
      responses:
        "200":
          description: Operation successful. Returning a UserNotificationInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserNotificationInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Packages/Installed/{Name}:
    summary: Installs a package
    post:
      tags:
      - PackageService
      summary: Installs a package
      description: Requires authentication as administrator
      operationId: postPackagesInstalledByName
      parameters:
      - name: Name
        in: path
        description: Package name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: AssemblyGuid
        in: query
        description: Guid of the associated assembly
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Version
        in: query
        description: Optional version. Defaults to latest version.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UpdateClass
        in: query
        description: "Optional update class (Dev, Beta, Release). Defaults to Release."
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/PackageVersionClass'
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Packages/Installing/{Id}:
    summary: Cancels a package installation
    delete:
      tags:
      - PackageService
      summary: Cancels a package installation
      description: Requires authentication as administrator
      operationId: deletePackagesInstallingById
      parameters:
      - name: Id
        in: path
        description: Installation Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Playlists/{Id}/AddToPlaylistInfo:
    summary: Gets add to playlist info
    get:
      tags:
      - PlaylistService
      summary: Gets add to playlist info
      description: Requires authentication as user
      operationId: getPlaylistsByIdAddtoplaylistinfo
      parameters:
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Ids
        in: query
        description: "Item id, comma delimited"
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a GetAddToPlaylistInfo object.
          content:
            application/json:
              schema:
                x-content-type: application/json
            application/xml:
              schema: {}
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Playlists/{Id}/Items:
    summary: Adds items to a playlist
    get:
      tags:
      - PlaylistService
      summary: Gets the original items of a playlist
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getPlaylistsByIdItems
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - PlaylistService
      summary: Adds items to a playlist
      description: Requires authentication as user
      operationId: postPlaylistsByIdItems
      parameters:
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Ids
        in: query
        description: "Item id, comma delimited"
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a AddToPlaylistResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlists.AddToPlaylistResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/Playlists.AddToPlaylistResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - PlaylistService
      summary: Removes items from a playlist
      description: Requires authentication as user
      operationId: deletePlaylistsByIdItems
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: EntryIds
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Playlists/{Id}/InstantMix:
    summary: Creates an instant playlist based on a given playlist
    get:
      tags:
      - InstantMixService
      summary: Creates an instant playlist based on a given playlist
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getPlaylistsByIdInstantmix
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Plugins/{Id}/Thumb:
    summary: Gets a plugin thumb image
    get:
      tags:
      - PluginService
      summary: Gets a plugin thumb image
      description: Requires authentication as user
      operationId: getPluginsByIdThumb
      parameters:
      - name: Id
        in: path
        description: Plugin Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Plugins/{Id}/Configuration:
    summary: Gets a plugin's configuration
    get:
      tags:
      - PluginService
      summary: Gets a plugin's configuration
      description: Requires authentication as administrator
      operationId: getPluginsByIdConfiguration
      parameters:
      - name: Id
        in: path
        description: Plugin Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    post:
      tags:
      - PluginService
      summary: Updates a plugin's configuration
      description: Requires authentication as administrator
      operationId: postPluginsByIdConfiguration
      parameters:
      - name: Id
        in: path
        description: Plugin Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Plugins/{Id}/Delete:
    summary: Uninstalls a plugin
    post:
      tags:
      - PluginService
      summary: Uninstalls a plugin
      description: Requires authentication as administrator
      operationId: postPluginsByIdDelete
      parameters:
      - name: Id
        in: path
        description: Plugin Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /ScheduledTasks/Running/{Id}:
    summary: Starts a scheduled task
    post:
      tags:
      - ScheduledTaskService
      summary: Starts a scheduled task
      description: Requires authentication as administrator
      operationId: postScheduledtasksRunningById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - ScheduledTaskService
      summary: Stops a scheduled task
      description: Requires authentication as administrator
      operationId: deleteScheduledtasksRunningById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /ScheduledTasks/{Id}/Triggers:
    summary: Updates the triggers for a scheduled task
    post:
      tags:
      - ScheduledTaskService
      summary: Updates the triggers for a scheduled task
      description: Requires authentication as administrator
      operationId: postScheduledtasksByIdTriggers
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "List`1: "
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TaskTriggerInfo'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TaskTriggerInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Sessions/{Id}/Viewing:
    summary: Instructs a session to browse to an item or view
    post:
      tags:
      - SessionsService
      summary: Instructs a session to browse to an item or view
      description: Requires authentication as user
      operationId: postSessionsByIdViewing
      parameters:
      - name: Id
        in: path
        description: Session Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ItemType
        in: query
        description: The type of item to browse to.
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: ItemId
        in: query
        description: The Id of the item.
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: ItemName
        in: query
        description: The name of the item.
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/{Id}/Message:
    summary: Issues a command to a client to display a message to the user
    post:
      tags:
      - SessionsService
      summary: Issues a command to a client to display a message to the user
      description: Requires authentication as user
      operationId: postSessionsByIdMessage
      parameters:
      - name: Id
        in: path
        description: Session Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Text
        in: query
        description: The message text.
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Header
        in: query
        description: The message header.
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: TimeoutMs
        in: query
        description: The message timeout. If omitted the user will have to confirm
          viewing the message.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/{Id}/Playing:
    summary: Instructs a session to play an item
    post:
      tags:
      - SessionsService
      summary: Instructs a session to play an item
      description: Requires authentication as user
      operationId: postSessionsByIdPlaying
      parameters:
      - name: Id
        in: path
        description: Session Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ItemIds
        in: query
        description: "The ids of the items to play, comma delimited"
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: StartPositionTicks
        in: query
        description: The starting position of the first item.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PlayCommand
        in: query
        description: "The type of play command to issue (PlayNow, PlayNext, PlayLast).\
          \ Clients who have not yet implemented play next and play last may play\
          \ now."
        required: true
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/PlayCommand'
      requestBody:
        description: "PlayRequest: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/PlayRequest'
        required: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/{Id}/Command:
    summary: Issues a system command to a client
    post:
      tags:
      - SessionsService
      summary: Issues a system command to a client
      description: Requires authentication as user
      operationId: postSessionsByIdCommand
      parameters:
      - name: Id
        in: path
        description: Session Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "GeneralCommand: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralCommand'
          application/xml:
            schema:
              $ref: '#/components/schemas/GeneralCommand'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/Capabilities/Full:
    summary: Updates capabilities for a device
    post:
      tags:
      - SessionsService
      summary: Updates capabilities for a device
      description: Requires authentication as user
      operationId: postSessionsCapabilitiesFull
      parameters:
      - name: Id
        in: query
        description: Session Id
        required: true
        style: form
        explode: false
        schema:
          type: string
      requestBody:
        description: "ClientCapabilities: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCapabilities'
          application/xml:
            schema:
              $ref: '#/components/schemas/ClientCapabilities'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/Playing/Progress:
    summary: Reports playback progress within a session
    post:
      tags:
      - PlaystateService
      summary: Reports playback progress within a session
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Playback Check-ins"
        url: https://dev.emby.media/doc/restapi/Playback-Check-ins.html
      operationId: postSessionsPlayingProgress
      requestBody:
        description: "PlaybackProgressInfo: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybackProgressInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/PlaybackProgressInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/Playing/Ping:
    summary: Pings a playback session
    post:
      tags:
      - PlaystateService
      summary: Pings a playback session
      description: Requires authentication as user
      operationId: postSessionsPlayingPing
      parameters:
      - name: PlaySessionId
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/Playing/Stopped:
    summary: Reports playback has stopped within a session
    post:
      tags:
      - PlaystateService
      summary: Reports playback has stopped within a session
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Playback Check-ins"
        url: https://dev.emby.media/doc/restapi/Playback-Check-ins.html
      operationId: postSessionsPlayingStopped
      requestBody:
        description: "PlaybackStopInfo: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybackStopInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/PlaybackStopInfo'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Shows/{Id}/Seasons:
    summary: Gets seasons for a tv series
    get:
      tags:
      - TvShowsService
      summary: Gets seasons for a tv series
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getShowsByIdSeasons
      parameters:
      - name: UserId
        in: query
        description: User Id
        required: true
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Id
        in: path
        description: The series id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IsSpecialSeason
        in: query
        description: Optional. Filter by special season.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Shows/{Id}/Episodes:
    summary: Gets episodes for a tv season
    get:
      tags:
      - TvShowsService
      summary: Gets episodes for a tv season
      description: Requires authentication as user
      operationId: getShowsByIdEpisodes
      parameters:
      - name: Id
        in: path
        description: The series id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Season
        in: query
        description: Optional filter by season number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SeasonId
        in: query
        description: Optional. Filter by season id
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: StartItemId
        in: query
        description: Optional. Skip through the list until a given item is found.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: query
        description: User Id
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Shows/{Id}/Similar:
    summary: Finds tv shows similar to a given one.
    get:
      tags:
      - LibraryService
      summary: Finds tv shows similar to a given one.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getShowsByIdSimilar
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Songs/{Id}/InstantMix:
    summary: Creates an instant playlist based on a given song
    get:
      tags:
      - InstantMixService
      summary: Creates an instant playlist based on a given song
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getSongsByIdInstantmix
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/{ItemId}/Status:
    summary: Gets sync status for an item.
    post:
      tags:
      - SyncService
      summary: Gets sync status for an item.
      description: Requires authentication as user
      operationId: postSyncByItemidStatus
      parameters:
      - name: ItemId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "SyncedItemProgress: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncedItemProgress'
          application/xml:
            schema:
              $ref: '#/components/schemas/SyncedItemProgress'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/Jobs/{Id}:
    summary: Gets a sync job.
    get:
      tags:
      - SyncService
      summary: Gets a sync job.
      description: Requires authentication as user
      operationId: getSyncJobsById
      parameters:
      - name: Id
        in: path
        description: Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a SyncJob object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncJob'
            application/xml:
              schema:
                $ref: '#/components/schemas/SyncJob'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - SyncService
      summary: Updates a sync job.
      description: Requires authentication as user
      operationId: postSyncJobsById
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: "SyncJob: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncJob'
          application/xml:
            schema:
              $ref: '#/components/schemas/SyncJob'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - SyncService
      summary: Cancels a sync job.
      description: Requires authentication as user
      operationId: deleteSyncJobsById
      parameters:
      - name: Id
        in: path
        description: Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/Items/Cancel:
    summary: Cancels items from a sync target
    post:
      tags:
      - SyncService
      summary: Cancels items from a sync target
      description: Requires authentication as user
      operationId: postSyncItemsCancel
      parameters:
      - name: ItemIds
        in: query
        description: ItemIds
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/{TargetId}/Items:
    summary: Cancels items from a sync target
    delete:
      tags:
      - SyncService
      summary: Cancels items from a sync target
      description: Requires authentication as user
      operationId: deleteSyncByTargetidItems
      parameters:
      - name: TargetId
        in: path
        description: TargetId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ItemIds
        in: query
        description: ItemIds
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/Items/Ready:
    summary: Gets ready to download sync items.
    get:
      tags:
      - SyncService
      summary: Gets ready to download sync items.
      description: Requires authentication as user
      operationId: getSyncItemsReady
      parameters:
      - name: TargetId
        in: query
        description: TargetId
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a List<SyncedItem> object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SyncedItem'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SyncedItem'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/JobItems/{Id}:
    summary: Cancels a sync job item
    delete:
      tags:
      - SyncService
      summary: Cancels a sync job item
      description: Requires authentication as user
      operationId: deleteSyncJobitemsById
      parameters:
      - name: Id
        in: path
        description: Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /System/Configuration/Partial:
    summary: Updates application configuration
    post:
      tags:
      - ConfigurationService
      summary: Updates application configuration
      description: Requires authentication as administrator
      operationId: postSystemConfigurationPartial
      requestBody:
        description: "ServerConfiguration: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
          application/xml:
            schema:
              $ref: '#/components/schemas/ServerConfiguration'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /System/Configuration/{Key}:
    summary: Gets a named configuration
    get:
      tags:
      - ConfigurationService
      summary: Gets a named configuration
      description: Requires authentication as user
      operationId: getSystemConfigurationByKey
      parameters:
      - name: Key
        in: path
        description: Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - ConfigurationService
      summary: Updates named configuration
      description: Requires authentication as administrator
      operationId: postSystemConfigurationByKey
      parameters:
      - name: Key
        in: path
        description: Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /System/ReleaseNotes/Versions:
    summary: Gets release notes
    get:
      tags:
      - SystemService
      summary: Gets release notes
      description: Requires authentication as user
      operationId: getSystemReleasenotesVersions
      responses:
        "200":
          description: "Operation successful. Returning a PackageVersionInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageVersionInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageVersionInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /System/Logs/Query:
    summary: Gets a list of available server log files
    get:
      tags:
      - SystemService
      summary: Gets a list of available server log files
      description: Requires authentication as administrator
      operationId: getSystemLogsQuery
      parameters:
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<LogFile> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_LogFile'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_LogFile'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /System/Logs/{Name}:
    summary: Gets a log file
    get:
      tags:
      - SystemService
      summary: Gets a log file
      description: Requires authentication as administrator
      operationId: getSystemLogsByName
      parameters:
      - name: Name
        in: path
        description: The log file name.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Sanitize
        in: query
        description: Return sanitized log
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /System/Info/Public:
    summary: Gets public information about the server
    get:
      tags:
      - SystemService
      summary: Gets public information about the server
      description: Requires authentication as user
      operationId: getSystemInfoPublic
      responses:
        "200":
          description: Operation successful. Returning a PublicSystemInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSystemInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/PublicSystemInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /System/ActivityLog/Entries:
    summary: Gets activity log entries
    get:
      tags:
      - ActivityLogService
      summary: Gets activity log entries
      description: Requires authentication as administrator
      operationId: getSystemActivitylogEntries
      parameters:
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinDate
        in: query
        description: Optional. The minimum date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<ActivityLogEntry>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_ActivityLogEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_ActivityLogEntry'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Trailers/{Id}/Similar:
    summary: Finds movies and trailers similar to a given trailer.
    get:
      tags:
      - LibraryService
      summary: Finds movies and trailers similar to a given trailer.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getTrailersByIdSimilar
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Suggestions:
    summary: Gets items based on a query.
    get:
      tags:
      - SuggestionsService
      summary: Gets items based on a query.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getUsersByUseridSuggestions
      parameters:
      - name: UserId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/Delete:
    summary: Deletes a user
    post:
      tags:
      - UserService
      summary: Deletes a user
      description: Requires authentication as administrator
      operationId: postUsersByIdDelete
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Users/{Id}/Authenticate:
    summary: Authenticates a user
    post:
      tags:
      - UserService
      summary: Authenticates a user
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Authentication"
        url: https://dev.emby.media/doc/restapi/User-Authentication.html
      operationId: postUsersByIdAuthenticate
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: AuthenticateUser
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateUser'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuthenticateUser'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a AuthenticationResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication.AuthenticationResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/Authentication.AuthenticationResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/Password:
    summary: Updates a user's password
    post:
      tags:
      - UserService
      summary: Updates a user's password
      description: Requires authentication as user
      operationId: postUsersByIdPassword
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: UpdateUserPassword
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPassword'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateUserPassword'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/ForgotPassword/Pin:
    summary: Redeems a forgot password pin
    post:
      tags:
      - UserService
      summary: Redeems a forgot password pin
      description: Requires authentication as user
      operationId: postUsersForgotpasswordPin
      requestBody:
        description: ForgotPasswordPin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordPin'
          application/xml:
            schema:
              $ref: '#/components/schemas/ForgotPasswordPin'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a PinRedeemResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinRedeemResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/PinRedeemResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/Configuration:
    summary: Updates a user configuration
    post:
      tags:
      - UserService
      summary: Updates a user configuration
      description: Requires authentication as user
      operationId: postUsersByIdConfiguration
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "UserConfiguration: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfiguration'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserConfiguration'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/Policy:
    summary: Updates a user policy
    post:
      tags:
      - UserService
      summary: Updates a user policy
      description: Requires authentication as administrator
      operationId: postUsersByIdPolicy
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "UserPolicy: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPolicy'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserPolicy'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Users/{UserId}/Items:
    summary: Gets items based on a query.
    get:
      tags:
      - ItemsService
      summary: Gets items based on a query.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Browsing the Library"
        url: https://dev.emby.media/doc/restapi/Browsing-the-Library.html
      operationId: getUsersByUseridItems
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Views:
    get:
      tags:
      - UserViewsService
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Browsing the Library"
        url: https://dev.emby.media/doc/restapi/Browsing-the-Library.html
      operationId: getUsersByUseridViews
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IncludeExternalContent
        in: query
        description: Whether or not to include external views such as channels or
          live tv
        required: true
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/AlternateSources:
    summary: Removes alternate video sources.
    delete:
      tags:
      - VideosService
      summary: Removes alternate video sources.
      description: Requires authentication as administrator
      operationId: deleteVideosByIdAlternatesources
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Videos/{Id}/AdditionalParts:
    summary: Gets additional parts for a video.
    get:
      tags:
      - UserLibraryService
      summary: Gets additional parts for a video.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getVideosByIdAdditionalparts
      parameters:
      - name: UserId
        in: query
        description: "Optional. Filter by user id, and attach user data"
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: guid
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/index.bif:
    get:
      tags:
      - BifService
      description: Requires authentication as user
      operationId: getVideosByIdIndexBif
      parameters:
      - name: Width
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/stream.{Container}:
    summary: Gets a video stream
    get:
      tags:
      - VideoService
      summary: Gets a video stream
      description: Requires authentication as user
      operationId: getVideosByIdStreamByContainer
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: path
        description: Container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - VideoService
      summary: Gets a video stream
      description: Requires authentication as user
      operationId: headVideosByIdStreamByContainer
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: path
        description: Container
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/stream:
    summary: Gets a video stream
    get:
      tags:
      - VideoService
      summary: Gets a video stream
      description: Requires authentication as user
      operationId: getVideosByIdStream
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - VideoService
      summary: Gets a video stream
      description: Requires authentication as user
      operationId: headVideosByIdStream
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/{StreamFileName}:
    summary: Gets a video stream
    get:
      tags:
      - VideoService
      summary: Gets a video stream
      description: Requires authentication as user
      operationId: getVideosByIdByStreamfilename
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: StreamFileName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - VideoService
      summary: Gets a video stream
      description: Requires authentication as user
      operationId: headVideosByIdByStreamfilename
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: StreamFileName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/master.m3u8:
    summary: Gets a video stream using HTTP live streaming.
    get:
      tags:
      - DynamicHlsService
      summary: Gets a video stream using HTTP live streaming.
      description: Requires authentication as user
      operationId: getVideosByIdMasterM3u8
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - DynamicHlsService
      summary: Gets a video stream using HTTP live streaming.
      description: Requires authentication as user
      operationId: headVideosByIdMasterM3u8
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/live.m3u8:
    get:
      tags:
      - DynamicHlsService
      description: Requires authentication as user
      operationId: getVideosByIdLiveM3u8
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/main.m3u8:
    summary: Gets a video stream using HTTP live streaming.
    get:
      tags:
      - DynamicHlsService
      summary: Gets a video stream using HTTP live streaming.
      description: Requires authentication as user
      operationId: getVideosByIdMainM3u8
      parameters:
      - name: DeviceProfileId
        in: query
        description: Optional. The dlna device profile id to utilize.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Container
        in: query
        description: Container
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: AudioCodec
        in: query
        description: "Optional. Specify a audio codec to encode to, e.g. mp3. If omitted\
          \ the server will auto-select using the url's extension. Options: aac, mp3,\
          \ vorbis, wma."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableAutoStreamCopy
        in: query
        description: Whether or not to allow automatic stream copy if requested values
          match the original source. Defaults to true.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioSampleRate
        in: query
        description: "Optional. Specify a specific audio sample rate, e.g. 44100"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioBitRate
        in: query
        description: "Optional. Specify an audio bitrate to encode to, e.g. 128000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: AudioChannels
        in: query
        description: "Optional. Specify a specific number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxAudioChannels
        in: query
        description: "Optional. Specify a maximum number of audio channels to encode\
          \ to, e.g. 2"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Static
        in: query
        description: "Optional. If true, the original file will be streamed statically\
          \ without any encoding. Use either no url extension or the original file\
          \ extension. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: CopyTimestamps
        in: query
        description: Whether or not to copy timestamps when transcoding with an offset.
          Defaults to false.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: StartTimeTicks
        in: query
        description: "Optional. Specify a starting offset, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Width
        in: query
        description: Optional. The fixed horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Height
        in: query
        description: Optional. The fixed vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxWidth
        in: query
        description: Optional. The maximum horizontal resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxHeight
        in: query
        description: Optional. The maximum vertical resolution of the encoded video.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoBitRate
        in: query
        description: "Optional. Specify a video bitrate to encode to, e.g. 500000.\
          \ If omitted this will be left to encoder defaults."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        description: Optional. The index of the subtitle stream to use. If omitted
          no subtitles will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleMethod
        in: query
        description: Optional. Specify the subtitle delivery method.
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
      - name: MaxVideoBitDepth
        in: query
        description: Optional.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoCodec
        in: query
        description: "Optional. Specify a video codec to encode to, e.g. h264. If\
          \ omitted the server will auto-select using the url's extension. Options:\
          \ h264, mpeg4, theora, vpx, wmv."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AudioStreamIndex
        in: query
        description: Optional. The index of the audio stream to use. If omitted the
          first audio stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VideoStreamIndex
        in: query
        description: Optional. The index of the video stream to use. If omitted the
          first video stream will be used.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/subtitles.m3u8:
    summary: Gets an HLS subtitle playlist.
    get:
      tags:
      - DynamicHlsService
      summary: Gets an HLS subtitle playlist.
      description: Requires authentication as user
      operationId: getVideosByIdSubtitlesM3u8
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: SubtitleSegmentLength
        in: query
        description: The subtitle segment length
        required: true
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: ManifestSubtitles
        in: query
        description: The subtitle segment format
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/live_subtitles.m3u8:
    summary: Gets an HLS subtitle playlist.
    get:
      tags:
      - DynamicHlsService
      summary: Gets an HLS subtitle playlist.
      description: Requires authentication as user
      operationId: getVideosByIdLiveSubtitlesM3u8
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: SubtitleSegmentLength
        in: query
        description: The subtitle segment length
        required: true
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: ManifestSubtitles
        in: query
        description: The subtitle segment format
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/ActiveEncodings/Delete:
    post:
      tags:
      - HlsSegmentService
      description: Requires authentication as user
      operationId: postVideosActiveencodingsDelete
      parameters:
      - name: DeviceId
        in: query
        description: The device id of the client requesting. Used to stop encoding
          processes when needed.
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: PlaySessionId
        in: query
        description: The play session id
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Artists/{Name}/Images/{Type}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getArtistsByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headArtistsByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Auth/Keys/{Key}/Delete:
    post:
      tags:
      - SessionsService
      description: Requires authentication as administrator
      operationId: postAuthKeysByKeyDelete
      parameters:
      - name: Key
        in: path
        description: Auth Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Collections/{Id}/Items/Delete:
    summary: Removes items from a collection
    post:
      tags:
      - CollectionService
      summary: Removes items from a collection
      description: Requires authentication as user
      operationId: postCollectionsByIdItemsDelete
      parameters:
      - name: Ids
        in: query
        description: "Item id, comma delimited"
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Dlna/{UuId}/contentdirectory/contentdirectory.xml:
    summary: Gets dlna content directory xml
    get:
      tags:
      - DlnaServerService
      summary: Gets dlna content directory xml
      description: No authentication required
      operationId: getDlnaByUuidContentdirectoryContentdirectoryXml
      parameters:
      - name: UuId
        in: path
        description: Server UuId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /Dlna/{UuId}/contentdirectory/contentdirectory:
    summary: Gets dlna content directory xml
    get:
      tags:
      - DlnaServerService
      summary: Gets dlna content directory xml
      description: No authentication required
      operationId: getDlnaByUuidContentdirectoryContentdirectory
      parameters:
      - name: UuId
        in: path
        description: Server UuId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /Dlna/{UuId}/connectionmanager/connectionmanager.xml:
    summary: Gets dlna connection manager xml
    get:
      tags:
      - DlnaServerService
      summary: Gets dlna connection manager xml
      description: No authentication required
      operationId: getDlnaByUuidConnectionmanagerConnectionmanagerXml
      parameters:
      - name: UuId
        in: path
        description: Server UuId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /Dlna/{UuId}/connectionmanager/connectionmanager:
    summary: Gets dlna connection manager xml
    get:
      tags:
      - DlnaServerService
      summary: Gets dlna connection manager xml
      description: No authentication required
      operationId: getDlnaByUuidConnectionmanagerConnectionmanager
      parameters:
      - name: UuId
        in: path
        description: Server UuId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /Dlna/{UuId}/contentdirectory/control:
    summary: Processes a control request
    post:
      tags:
      - DlnaServerService
      summary: Processes a control request
      description: No authentication required
      operationId: postDlnaByUuidContentdirectoryControl
      parameters:
      - name: UuId
        in: path
        description: Server UuId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /Dlna/{UuId}/connectionmanager/control:
    summary: Processes a control request
    post:
      tags:
      - DlnaServerService
      summary: Processes a control request
      description: No authentication required
      operationId: postDlnaByUuidConnectionmanagerControl
      parameters:
      - name: UuId
        in: path
        description: Server UuId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /Dlna/{UuId}/icons/{Filename}:
    summary: Gets a server icon
    get:
      tags:
      - DlnaServerService
      summary: Gets a server icon
      description: No authentication required
      operationId: getDlnaByUuidIconsByFilename
      parameters:
      - name: UuId
        in: path
        description: Server UuId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Filename
        in: path
        description: The icon filename
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      x-RequiredAuthentication: No authentication required
  /GameGenres/{Name}/Images/{Type}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getGamegenresByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headGamegenresByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Genres/{Name}/Images/{Type}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getGenresByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headGenresByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/RemoteSearch/Apply/{Id}:
    summary: Applies search criteria to an item and refreshes metadata
    post:
      tags:
      - ItemLookupService
      summary: Applies search criteria to an item and refreshes metadata
      description: Requires authentication as administrator
      operationId: postItemsRemotesearchApplyById
      parameters:
      - name: Id
        in: path
        description: The item id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ReplaceAllImages
        in: query
        description: Whether or not to replace all images
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      requestBody:
        description: "RemoteSearchResult: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteSearchResult'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteSearchResult'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Items/{Id}/Tags/Add:
    summary: Adds new tags to an item
    post:
      tags:
      - TagService
      summary: Adds new tags to an item
      description: Requires authentication as user
      operationId: postItemsByIdTagsAdd
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: AddTags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLibrary.AddTags'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserLibrary.AddTags'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Tags/Delete:
    summary: Removes tags from an item
    post:
      tags:
      - TagService
      summary: Removes tags from an item
      description: Requires authentication as user
      operationId: postItemsByIdTagsDelete
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: RemoveTags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLibrary.RemoveTags'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserLibrary.RemoveTags'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Subtitles/{Index}:
    summary: Deletes an external subtitle file
    delete:
      tags:
      - SubtitleService
      summary: Deletes an external subtitle file
      description: Requires authentication as user
      operationId: deleteItemsByIdSubtitlesByIndex
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: query
        description: MediaSourceId
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Index
        in: path
        description: The subtitle stream index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Images/{Type}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getItemsByIdImagesByType
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - ImageService
      summary: "Uploads an image for an item, must be base64 encoded."
      description: Requires authentication as administrator
      operationId: postItemsByIdImagesByType
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - ImageService
      description: Requires authentication as administrator
      operationId: deleteItemsByIdImagesByType
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headItemsByIdImagesByType
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/RemoteImages/Providers:
    summary: Gets available remote image providers for an item
    get:
      tags:
      - RemoteImageService
      summary: Gets available remote image providers for an item
      description: Requires authentication as user
      operationId: getItemsByIdRemoteimagesProviders
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a List<ImageProviderInfo> object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageProviderInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageProviderInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/RemoteImages/Download:
    summary: Downloads a remote image for an item
    post:
      tags:
      - RemoteImageService
      summary: Downloads a remote image for an item
      description: Requires authentication as administrator
      operationId: postItemsByIdRemoteimagesDownload
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: query
        description: The image type
        required: true
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: ProviderName
        in: query
        description: The image provider
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ImageUrl
        in: query
        description: The image url
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Library/VirtualFolders/Paths/Update:
    post:
      tags:
      - LibraryStructureService
      description: Requires authentication as administrator
      operationId: postLibraryVirtualfoldersPathsUpdate
      requestBody:
        description: UpdateMediaPath
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library.UpdateMediaPath'
          application/xml:
            schema:
              $ref: '#/components/schemas/Library.UpdateMediaPath'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Library/VirtualFolders/Paths/Delete:
    post:
      tags:
      - LibraryStructureService
      description: Requires authentication as administrator
      operationId: postLibraryVirtualfoldersPathsDelete
      requestBody:
        description: RemoveMediaPath
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Library.RemoveMediaPath'
          application/xml:
            schema:
              $ref: '#/components/schemas/Library.RemoveMediaPath'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/LiveStreamFiles/{Id}/stream.{Container}:
    summary: Gets a live tv channel
    get:
      tags:
      - LiveStreamService
      summary: Gets a live tv channel
      description: Requires authentication as user
      operationId: getLivetvLivestreamfilesByIdStreamByContainer
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Container
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/LiveRecordings/{Id}/stream:
    summary: Gets a live tv channel
    get:
      tags:
      - LiveStreamService
      summary: Gets a live tv channel
      description: Requires authentication as user
      operationId: getLivetvLiverecordingsByIdStream
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/ListingProviders/SchedulesDirect/Countries:
    summary: Gets available lineups
    get:
      tags:
      - LiveTvService
      summary: Gets available lineups
      description: Requires authentication as administrator
      operationId: getLivetvListingprovidersSchedulesdirectCountries
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/TunerHosts/Default/{Type}:
    summary: Gets tuner hosts
    get:
      tags:
      - LiveTvService
      summary: Gets tuner hosts
      description: Requires authentication as administrator
      operationId: getLivetvTunerhostsDefaultByType
      parameters:
      - name: Type
        in: path
        description: Type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a TunerHostInfo object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveTv.TunerHostInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/LiveTv.TunerHostInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/Recordings/{Id}/Delete:
    summary: Deletes a live tv recording
    post:
      tags:
      - LiveTvService
      summary: Deletes a live tv recording
      description: Requires authentication as user
      operationId: postLivetvRecordingsByIdDelete
      parameters:
      - name: Id
        in: path
        description: Recording Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Timers/{Id}/Delete:
    summary: Cancels a live tv timer
    post:
      tags:
      - LiveTvService
      summary: Cancels a live tv timer
      description: Requires authentication as user
      operationId: postLivetvTimersByIdDelete
      parameters:
      - name: Id
        in: path
        description: Timer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/SeriesTimers/{Id}/Delete:
    summary: Cancels a live tv series timer
    post:
      tags:
      - LiveTvService
      summary: Cancels a live tv series timer
      description: Requires authentication as user
      operationId: postLivetvSeriestimersByIdDelete
      parameters:
      - name: Id
        in: path
        description: Timer Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Tuners/{Id}/Reset:
    summary: Resets a tv tuner
    post:
      tags:
      - LiveTvService
      summary: Resets a tv tuner
      description: Requires authentication as administrator
      operationId: postLivetvTunersByIdReset
      parameters:
      - name: Id
        in: path
        description: Tuner Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /MusicGenres/{Name}/Images/{Type}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getMusicgenresByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headMusicgenresByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Packages/Installing/{Id}/Delete:
    summary: Cancels a package installation
    post:
      tags:
      - PackageService
      summary: Cancels a package installation
      description: Requires authentication as administrator
      operationId: postPackagesInstallingByIdDelete
      parameters:
      - name: Id
        in: path
        description: Installation Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Persons/{Name}/Images/{Type}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getPersonsByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headPersonsByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Playlists/{Id}/Items/Delete:
    summary: Removes items from a playlist
    post:
      tags:
      - PlaylistService
      summary: Removes items from a playlist
      description: Requires authentication as user
      operationId: postPlaylistsByIdItemsDelete
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: EntryIds
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Providers/Subtitles/Subtitles/{Id}:
    get:
      tags:
      - SubtitleService
      description: Requires authentication as user
      operationId: getProvidersSubtitlesSubtitlesById
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /ScheduledTasks/Running/{Id}/Delete:
    summary: Stops a scheduled task
    post:
      tags:
      - ScheduledTaskService
      summary: Stops a scheduled task
      description: Requires authentication as administrator
      operationId: postScheduledtasksRunningByIdDelete
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Sessions/{Id}/Playing/{Command}:
    summary: Issues a playstate command to a client
    post:
      tags:
      - SessionsService
      summary: Issues a playstate command to a client
      description: Requires authentication as user
      operationId: postSessionsByIdPlayingByCommand
      parameters:
      - name: Id
        in: path
        description: Session Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Command
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PlaystateCommand'
      requestBody:
        description: "PlaystateRequest: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaystateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/PlaystateRequest'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/{Id}/System/{Command}:
    summary: Issues a system command to a client
    post:
      tags:
      - SessionsService
      summary: Issues a system command to a client
      description: Requires authentication as user
      operationId: postSessionsByIdSystemByCommand
      parameters:
      - name: Id
        in: path
        description: Session Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Command
        in: path
        description: The command to send.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/{Id}/Command/{Command}:
    summary: Issues a system command to a client
    post:
      tags:
      - SessionsService
      summary: Issues a system command to a client
      description: Requires authentication as user
      operationId: postSessionsByIdCommandByCommand
      parameters:
      - name: Id
        in: path
        description: Session Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Command
        in: path
        description: The command to send.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/{Id}/Users/{UserId}:
    summary: Adds an additional user to a session
    post:
      tags:
      - SessionsService
      summary: Adds an additional user to a session
      description: Requires authentication as user
      operationId: postSessionsByIdUsersByUserid
      parameters:
      - name: Id
        in: path
        description: Session Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: path
        description: UserId Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - SessionsService
      summary: Removes an additional user from a session
      description: Requires authentication as user
      operationId: deleteSessionsByIdUsersByUserid
      parameters:
      - name: Id
        in: path
        description: Session Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: path
        description: UserId Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Studios/{Name}/Images/{Type}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getStudiosByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headStudiosByNameImagesByType
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/Jobs/{Id}/Delete:
    summary: Cancels a sync job.
    post:
      tags:
      - SyncService
      summary: Cancels a sync job.
      description: Requires authentication as user
      operationId: postSyncJobsByIdDelete
      parameters:
      - name: Id
        in: path
        description: Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/{TargetId}/Items/Delete:
    summary: Cancels items from a sync target
    post:
      tags:
      - SyncService
      summary: Cancels items from a sync target
      description: Requires authentication as user
      operationId: postSyncByTargetidItemsDelete
      parameters:
      - name: TargetId
        in: path
        description: TargetId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ItemIds
        in: query
        description: ItemIds
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/JobItems/{Id}/Transferred:
    summary: Reports that a sync job item has successfully been transferred.
    post:
      tags:
      - SyncService
      summary: Reports that a sync job item has successfully been transferred.
      description: Requires authentication as user
      operationId: postSyncJobitemsByIdTransferred
      parameters:
      - name: Id
        in: path
        description: Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/JobItems/{Id}/File:
    summary: Gets a sync job item file
    get:
      tags:
      - SyncService
      summary: Gets a sync job item file
      description: Requires authentication as user
      operationId: getSyncJobitemsByIdFile
      parameters:
      - name: Id
        in: path
        description: Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/JobItems/{Id}/AdditionalFiles:
    summary: Gets a sync job item file
    get:
      tags:
      - SyncService
      summary: Gets a sync job item file
      description: Requires authentication as user
      operationId: getSyncJobitemsByIdAdditionalfiles
      parameters:
      - name: Id
        in: path
        description: Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Name
        in: query
        description: Name
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/JobItems/{Id}/Enable:
    summary: Enables a cancelled or queued sync job item
    post:
      tags:
      - SyncService
      summary: Enables a cancelled or queued sync job item
      description: Requires authentication as user
      operationId: postSyncJobitemsByIdEnable
      parameters:
      - name: Id
        in: path
        description: Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/JobItems/{Id}/Delete:
    summary: Cancels a sync job item
    post:
      tags:
      - SyncService
      summary: Cancels a sync job item
      description: Requires authentication as user
      operationId: postSyncJobitemsByIdDelete
      parameters:
      - name: Id
        in: path
        description: Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/JobItems/{Id}/MarkForRemoval:
    summary: Marks a job item for removal
    post:
      tags:
      - SyncService
      summary: Marks a job item for removal
      description: Requires authentication as user
      operationId: postSyncJobitemsByIdMarkforremoval
      parameters:
      - name: Id
        in: path
        description: Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sync/JobItems/{Id}/UnmarkForRemoval:
    summary: Unmarks a job item for removal
    post:
      tags:
      - SyncService
      summary: Unmarks a job item for removal
      description: Requires authentication as user
      operationId: postSyncJobitemsByIdUnmarkforremoval
      parameters:
      - name: Id
        in: path
        description: Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /System/Logs/{Name}/Lines:
    summary: Gets a log file
    get:
      tags:
      - SystemService
      summary: Gets a log file
      description: Requires authentication as administrator
      operationId: getSystemLogsByNameLines
      parameters:
      - name: Name
        in: path
        description: The log file name.
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<String> object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_String'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_String'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Users/{Id}/TrackSelections/{TrackType}:
    summary: Clears audio or subtitle track selections for a user
    delete:
      tags:
      - UserService
      summary: Clears audio or subtitle track selections for a user
      description: Requires authentication as user
      operationId: deleteUsersByIdTrackselectionsByTracktype
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: TrackType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/Configuration/Partial:
    summary: Updates a user configuration
    post:
      tags:
      - UserService
      summary: Updates a user configuration
      description: Requires authentication as user
      operationId: postUsersByIdConfigurationPartial
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/TypedSettings/{Key}:
    summary: Gets a typed user setting
    get:
      tags:
      - UserService
      summary: Gets a typed user setting
      description: Requires authentication as user
      operationId: getUsersByUseridTypedsettingsByKey
      parameters:
      - name: Key
        in: path
        description: Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - UserService
      summary: Updates a typed user setting
      description: Requires authentication as user
      operationId: postUsersByUseridTypedsettingsByKey
      parameters:
      - name: UserId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Key
        in: path
        description: Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Items/Resume:
    summary: Gets items based on a query.
    get:
      tags:
      - ItemsService
      summary: Gets items based on a query.
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getUsersByUseridItemsResume
      parameters:
      - name: ArtistType
        in: query
        description: Artist or AlbumArtist
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxOfficialRating
        in: query
        description: "Optional filter by maximum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasThemeSong
        in: query
        description: Optional filter by items with theme songs.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasThemeVideo
        in: query
        description: Optional filter by items with theme videos.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSubtitles
        in: query
        description: Optional filter by items with subtitles.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasSpecialFeature
        in: query
        description: Optional filter by items with special features.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTrailer
        in: query
        description: Optional filter by items with trailers.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: AdjacentTo
        in: query
        description: Optional. Return items that are siblings of a supplied item.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinIndexNumber
        in: query
        description: Optional filter by minimum index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinStartDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxStartDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinEndDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxEndDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinPlayers
        in: query
        description: Optional filter by minimum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MaxPlayers
        in: query
        description: Optional filter by maximum number of game players.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParentIndexNumber
        in: query
        description: Optional filter by parent index number.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: HasParentalRating
        in: query
        description: Optional filter by items that have or do not have a parental
          rating
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHD
        in: query
        description: Optional filter by items that are HD or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsUnaired
        in: query
        description: Optional filter by items that are unaired episodes or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: MinCommunityRating
        in: query
        description: Optional filter by minimum community rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: MinCriticRating
        in: query
        description: Optional filter by minimum critic rating.
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
          nullable: true
      - name: AiredDuringSeason
        in: query
        description: "Gets all episodes that aired during a season, including specials."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: MinPremiereDate
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSaved
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MinDateLastSavedForUser
        in: query
        description: Optional. The minimum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: MaxPremiereDate
        in: query
        description: Optional. The maximum premiere date. Format = ISO
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: HasOverview
        in: query
        description: Optional filter by items that have an overview or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasImdbId
        in: query
        description: Optional filter by items that have an imdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTmdbId
        in: query
        description: Optional filter by items that have a tmdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasTvdbId
        in: query
        description: Optional filter by items that have a tvdb id or not.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ExcludeItemIds
        in: query
        description: "Optional. If specified, results will be filtered by exxcluding\
          \ item ids. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StartIndex
        in: query
        description: Optional. The record index to start at. All items with a lower
          index will be dropped from the results.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Limit
        in: query
        description: Optional. The maximum number of records to return
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Recursive
        in: query
        description: "When searching within folders, this determines whether or not\
          \ the search will be recursive. true/false"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: SearchTerm
        in: query
        description: Enter a search term to perform a search request
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: SortOrder
        in: query
        description: "Sort Order - Ascending,Descending"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AnyProviderIdEquals
        in: query
        description: "Optional. If specified, result will be filtered to contain only\
          \ items which match at least one of the specified IDs. Each provider ID\
          \ must be in the form 'prov.id', e.g. 'imdb.tt123456'. This allows multiple,\
          \ comma delimeted value pairs."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Filters
        in: query
        description: "Optional. Specify additional filters to apply. This allows multiple,\
          \ comma delimeted. Options: IsFolder, IsNotFolder, IsUnplayed, IsPlayed,\
          \ IsFavorite, IsResumable, Likes, Dislikes"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFavorite
        in: query
        description: "Optional filter by items that are marked as favorite, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsMovie
        in: query
        description: Optional filter for movies.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSeries
        in: query
        description: Optional filter for series.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsFolder
        in: query
        description: Optional filter for folders.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNews
        in: query
        description: Optional filter for news.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsKids
        in: query
        description: Optional filter for kids.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsSports
        in: query
        description: Optional filter for sports.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNew
        in: query
        description: Optional filter for IsNew.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPremiere
        in: query
        description: Optional filter for IsPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsNewOrPremiere
        in: query
        description: Optional filter for IsNewOrPremiere.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsRepeat
        in: query
        description: Optional filter for IsRepeat.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ProjectToMedia
        in: query
        description: ProjectToMedia
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ImageTypes
        in: query
        description: "Optional. If specified, results will be filtered based on those\
          \ containing image types. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SortBy
        in: query
        description: "Optional. Specify one or more sort orders, comma delimeted.\
          \ Options: Album, AlbumArtist, Artist, Budget, CommunityRating, CriticRating,\
          \ DateCreated, DatePlayed, PlayCount, PremiereDate, ProductionYear, SortName,\
          \ Random, Revenue, Runtime"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsPlayed
        in: query
        description: "Optional filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: Genres
        in: query
        description: "Optional. If specified, results will be filtered based on genre.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OfficialRatings
        in: query
        description: "Optional. If specified, results will be filtered based on OfficialRating.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Tags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExcludeTags
        in: query
        description: "Optional. If specified, results will be filtered based on tag.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Years
        in: query
        description: "Optional. If specified, results will be filtered based on production\
          \ year. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Person
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonIds
        in: query
        description: "Optional. If specified, results will be filtered to include\
          \ only those containing the specified person."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PersonTypes
        in: query
        description: "Optional. If specified, along with Person, results will be filtered\
          \ to include only those containing the specified person and PersonType.\
          \ Allows multiple, comma-delimited"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Studios
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: StudioIds
        in: query
        description: "Optional. If specified, results will be filtered based on studio.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Artists
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ArtistIds
        in: query
        description: "Optional. If specified, results will be filtered based on artist.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Albums
        in: query
        description: "Optional. If specified, results will be filtered based on album.\
          \ This allows multiple, pipe delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Ids
        in: query
        description: "Optional. If specific items are needed, specify a list of item\
          \ id's to retrieve. This allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoTypes
        in: query
        description: "Optional filter by VideoType (videofile, dvd, bluray, iso).\
          \ Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Containers
        in: query
        description: "Optional filter by Container. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioCodecs
        in: query
        description: "Optional filter by AudioCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: AudioLayouts
        in: query
        description: "Optional filter by AudioLayout. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: VideoCodecs
        in: query
        description: "Optional filter by VideoCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ExtendedVideoTypes
        in: query
        description: "Optional filter by ExtendedVideoType. Allows multiple, comma\
          \ delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: SubtitleCodecs
        in: query
        description: "Optional filter by SubtitleCodec. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Path
        in: query
        description: Optional filter by Path.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      - name: MinOfficialRating
        in: query
        description: "Optional filter by minimum official rating (PG, PG-13, TV-MA,\
          \ etc)."
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: IsLocked
        in: query
        description: Optional filter by items that are locked.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlaceHolder
        in: query
        description: Optional filter by items that are placeholders
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: HasOfficialRating
        in: query
        description: Optional filter by items that have official ratings
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItemsIntoCollections
        in: query
        description: Whether or not to hide items behind their boxsets.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Is3D
        in: query
        description: "Optional filter by items that are 3D, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: SeriesStatus
        in: query
        description: "Optional filter by Series Status. Allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: NameStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AlbumArtistStartsWithOrGreater
        in: query
        description: Optional filter by items whose name is sorted equally or greater
          than a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameStartsWith
        in: query
        description: Optional filter by items whose name is sorted equally than a
          given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: NameLessThan
        in: query
        description: Optional filter by items whose name is equally or lesser than
          a given input string.
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Items/Latest:
    summary: Gets latest media
    get:
      tags:
      - UserLibraryService
      summary: Gets latest media
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Latest Items"
        url: https://dev.emby.media/doc/restapi/Latest-Items.html
      operationId: getUsersByUseridItemsLatest
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Limit
        in: query
        description: Limit
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: ParentId
        in: query
        description: Specify this to localize the search to a specific item or folder.
          Omit to use the root
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Chapters,\
          \ DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview,\
          \ ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, SortName,\
          \ Studios, Taglines"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IncludeItemTypes
        in: query
        description: "Optional. If specified, results will be filtered based on item\
          \ type. This allows multiple, comma delimeted."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: MediaTypes
        in: query
        description: "Optional filter by MediaType. Allows multiple, comma delimited."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: IsFolder
        in: query
        description: "Filter by items that are folders, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsPlayed
        in: query
        description: "Filter by items that are played, or not."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: GroupItems
        in: query
        description: Whether or not to group items into a parent container.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: "Operation successful. Returning a BaseItemDto[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Items/{Id}:
    summary: Gets an item from a user's library
    get:
      tags:
      - UserLibraryService
      summary: Gets an item from a user's library
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getUsersByUseridItemsById
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Items/Root:
    summary: Gets the root folder from a user's library
    get:
      tags:
      - UserLibraryService
      summary: Gets the root folder from a user's library
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getUsersByUseridItemsRoot
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Returning a BaseItemDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/FavoriteItems/{Id}:
    summary: Marks an item as a favorite
    post:
      tags:
      - UserLibraryService
      summary: Marks an item as a favorite
      description: Requires authentication as user
      operationId: postUsersByUseridFavoriteitemsById
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a UserItemDataDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - UserLibraryService
      summary: Unmarks an item as a favorite
      description: Requires authentication as user
      operationId: deleteUsersByUseridFavoriteitemsById
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a UserItemDataDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/Images/{Type}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Authentication"
        url: https://dev.emby.media/doc/restapi/User-Authentication.html
      operationId: getUsersByIdImagesByType
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - ImageService
      summary: "Uploads an image for an item, must be base64 encoded."
      description: Requires authentication as user
      operationId: postUsersByIdImagesByType
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: deleteUsersByIdImagesByType
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headUsersByIdImagesByType
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/PlayedItems/{Id}:
    summary: Marks an item as played
    post:
      tags:
      - PlaystateService
      summary: Marks an item as played
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Playback Check-ins"
        url: https://dev.emby.media/doc/restapi/Playback-Check-ins.html
      operationId: postUsersByUseridPlayeditemsById
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: DatePlayed
        in: query
        description: The date the item was played (if any). Format = yyyyMMddHHmmss
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a UserItemDataDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - PlaystateService
      summary: Marks an item as unplayed
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Playback Check-ins"
        url: https://dev.emby.media/doc/restapi/Playback-Check-ins.html
      operationId: deleteUsersByUseridPlayeditemsById
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a UserItemDataDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/PlayingItems/{Id}:
    summary: Reports that a user has begun playing an item
    post:
      tags:
      - PlaystateService
      summary: Reports that a user has begun playing an item
      description: Requires authentication as user
      operationId: postUsersByUseridPlayingitemsById
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: query
        description: The id of the MediaSource
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: CanSeek
        in: query
        description: Indicates if the client can seek
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioStreamIndex
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: PlayMethod
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/PlayMethod'
      - name: LiveStreamId
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PlaySessionId
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - PlaystateService
      summary: Reports that a user has stopped playing an item
      description: Requires authentication as user
      operationId: deleteUsersByUseridPlayingitemsById
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: query
        description: The id of the MediaSource
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: NextMediaType
        in: query
        description: The next media type that will play
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: PositionTicks
        in: query
        description: "Optional. The position, in ticks, where playback stopped. 1ms\
          \ = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: LiveStreamId
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PlaySessionId
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/Connect/Link:
    summary: Creates a Connect link for a user
    post:
      tags:
      - ConnectService
      summary: Creates a Connect link for a user
      description: Requires authentication as administrator
      operationId: postUsersByIdConnectLink
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      - name: ConnectUsername
        in: query
        description: Connect username
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a UserLinkResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connect.UserLinkResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/Connect.UserLinkResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - ConnectService
      summary: Removes a Connect link for a user
      description: Requires authentication as administrator
      operationId: deleteUsersByIdConnectLink
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Videos/{Id}/AlternateSources/Delete:
    summary: Removes alternate video sources.
    post:
      tags:
      - VideosService
      summary: Removes alternate video sources.
      description: Requires authentication as administrator
      operationId: postVideosByIdAlternatesourcesDelete
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Videos/{Id}/Subtitles/{Index}:
    summary: Deletes an external subtitle file
    delete:
      tags:
      - SubtitleService
      summary: Deletes an external subtitle file
      description: Requires authentication as user
      operationId: deleteVideosByIdSubtitlesByIndex
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: query
        description: MediaSourceId
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Index
        in: path
        description: The subtitle stream index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Artists/{Name}/Images/{Type}/{Index}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getArtistsByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headArtistsByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Audio/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer}:
    get:
      tags:
      - DynamicHlsService
      description: Requires authentication as user
      operationId: getAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer
      parameters:
      - name: SegmentContainer
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: SegmentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: PlaylistId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - DynamicHlsService
      description: Requires authentication as user
      operationId: headAudioByIdHls1ByPlaylistidBySegmentidBySegmentcontainer
      parameters:
      - name: SegmentContainer
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: SegmentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: PlaylistId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Audio/{Id}/hls/{PlaylistId}/{SegmentId}.{SegmentContainer}:
    get:
      tags:
      - VideoHlsService
      description: Requires authentication as user
      operationId: getAudioByIdHlsByPlaylistidBySegmentidBySegmentcontainer
      parameters:
      - name: SegmentContainer
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: SegmentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: PlaylistId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /GameGenres/{Name}/Images/{Type}/{Index}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getGamegenresByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headGamegenresByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Genres/{Name}/Images/{Type}/{Index}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getGenresByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headGenresByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/RemoteSearch/Subtitles/{Language}:
    get:
      tags:
      - SubtitleService
      description: Requires authentication as user
      operationId: getItemsByIdRemotesearchSubtitlesByLanguage
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: query
        description: MediaSourceId
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Language
        in: path
        description: Language
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: IsPerfectMatch
        in: query
        description: IsPerfectMatch
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsForced
        in: query
        description: IsForced
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: IsHearingImpaired
        in: query
        description: IsHearingImpaired
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: "Operation successful. Returning a RemoteSubtitleInfo[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSubtitleInfo'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSubtitleInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Subtitles/{Index}/Delete:
    summary: Deletes an external subtitle file
    post:
      tags:
      - SubtitleService
      summary: Deletes an external subtitle file
      description: Requires authentication as user
      operationId: postItemsByIdSubtitlesByIndexDelete
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: query
        description: MediaSourceId
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Index
        in: path
        description: The subtitle stream index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/RemoteSearch/Subtitles/{SubtitleId}:
    post:
      tags:
      - SubtitleService
      description: Requires authentication as user
      operationId: postItemsByIdRemotesearchSubtitlesBySubtitleid
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: query
        description: MediaSourceId
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: SubtitleId
        in: path
        description: SubtitleId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a SubtitleDownloadResult object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subtitles.SubtitleDownloadResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subtitles.SubtitleDownloadResult'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Images/{Type}/{Index}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getItemsByIdImagesByTypeByIndex
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - ImageService
      summary: "Uploads an image for an item, must be base64 encoded."
      description: Requires authentication as administrator
      operationId: postItemsByIdImagesByTypeByIndex
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    delete:
      tags:
      - ImageService
      description: Requires authentication as administrator
      operationId: deleteItemsByIdImagesByTypeByIndex
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headItemsByIdImagesByTypeByIndex
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Images/{Type}/Delete:
    post:
      tags:
      - ImageService
      description: Requires authentication as administrator
      operationId: postItemsByIdImagesByTypeDelete
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/LiveStreamFiles/{Id}/hls/master.m3u8:
    summary: Gets a live tv channel
    get:
      tags:
      - LiveStreamService
      summary: Gets a live tv channel
      description: Requires authentication as user
      operationId: getLivetvLivestreamfilesByIdHlsMasterM3u8
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - LiveStreamService
      summary: Gets a live tv channel
      description: Requires authentication as user
      operationId: headLivetvLivestreamfilesByIdHlsMasterM3u8
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/LiveRecordings/{Id}/hls/master.m3u8:
    summary: Gets a live recording
    get:
      tags:
      - LiveStreamService
      summary: Gets a live recording
      description: Requires authentication as user
      operationId: getLivetvLiverecordingsByIdHlsMasterM3u8
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - LiveStreamService
      summary: Gets a live recording
      description: Requires authentication as user
      operationId: headLivetvLiverecordingsByIdHlsMasterM3u8
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/LiveRecordings/{Id}/hls/live.m3u8:
    summary: Gets a live recording
    get:
      tags:
      - LiveStreamService
      summary: Gets a live recording
      description: Requires authentication as user
      operationId: getLivetvLiverecordingsByIdHlsLiveM3u8
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - LiveStreamService
      summary: Gets a live recording
      description: Requires authentication as user
      operationId: headLivetvLiverecordingsByIdHlsLiveM3u8
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/LiveStreamFiles/{Id}/hls/live.m3u8:
    summary: Gets a live tv channel
    get:
      tags:
      - LiveStreamService
      summary: Gets a live tv channel
      description: Requires authentication as user
      operationId: getLivetvLivestreamfilesByIdHlsLiveM3u8
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - LiveStreamService
      summary: Gets a live tv channel
      description: Requires authentication as user
      operationId: headLivetvLivestreamfilesByIdHlsLiveM3u8
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/LiveStreamFiles/{Id}/hls/{Segment}:
    summary: Gets a live tv channel
    get:
      tags:
      - LiveStreamService
      summary: Gets a live tv channel
      description: Requires authentication as user
      operationId: getLivetvLivestreamfilesByIdHlsBySegment
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Segment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - LiveStreamService
      summary: Gets a live tv channel
      description: Requires authentication as user
      operationId: headLivetvLivestreamfilesByIdHlsBySegment
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Segment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/LiveRecordings/{Id}/hls/{Segment}:
    summary: Gets a live recording
    get:
      tags:
      - LiveStreamService
      summary: Gets a live recording
      description: Requires authentication as user
      operationId: getLivetvLiverecordingsByIdHlsBySegment
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Segment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - LiveStreamService
      summary: Gets a live recording
      description: Requires authentication as user
      operationId: headLivetvLiverecordingsByIdHlsBySegment
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Segment
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /LiveTv/Manage/Channels/{Id}/Disabled:
    summary: Sets a channel disabled or not
    post:
      tags:
      - LiveTvService
      summary: Sets a channel disabled or not
      description: Requires authentication as administrator
      operationId: postLivetvManageChannelsByIdDisabled
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: SetChannelDisabled
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.SetChannelDisabled'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.SetChannelDisabled'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<ChannelManagementInfo>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_ChannelManagementInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_ChannelManagementInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /LiveTv/Manage/Channels/{Id}/SortIndex:
    summary: Sets a channel sort index
    post:
      tags:
      - LiveTvService
      summary: Sets a channel sort index
      description: Requires authentication as administrator
      operationId: postLivetvManageChannelsByIdSortindex
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: SetChannelSortIndex
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.SetChannelSortIndex'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.SetChannelSortIndex'
        required: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<ChannelManagementInfo>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_ChannelManagementInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_ChannelManagementInfo'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /MusicGenres/{Name}/Images/{Type}/{Index}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getMusicgenresByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headMusicgenresByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Persons/{Name}/Images/{Type}/{Index}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getPersonsByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headPersonsByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Sessions/{Id}/Users/{UserId}/Delete:
    summary: Removes an additional user from a session
    post:
      tags:
      - SessionsService
      summary: Removes an additional user from a session
      description: Requires authentication as user
      operationId: postSessionsByIdUsersByUseridDelete
      parameters:
      - name: Id
        in: path
        description: Session Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: UserId
        in: path
        description: UserId Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Studios/{Name}/Images/{Type}/{Index}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getStudiosByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headStudiosByNameImagesByTypeByIndex
      parameters:
      - name: Name
        in: path
        description: Item name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/TrackSelections/{TrackType}/Delete:
    summary: Clears audio or subtitle track selections for a user
    post:
      tags:
      - UserService
      summary: Clears audio or subtitle track selections for a user
      description: Requires authentication as user
      operationId: postUsersByIdTrackselectionsByTracktypeDelete
      parameters:
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: TrackType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Items/{Id}/SpecialFeatures:
    summary: Gets special features for an item
    get:
      tags:
      - UserLibraryService
      summary: Gets special features for an item
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getUsersByUseridItemsByIdSpecialfeatures
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Id
        in: path
        description: Movie Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: "Operation successful. Returning a BaseItemDto[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Items/{Id}/LocalTrailers:
    summary: Gets local trailers for an item
    get:
      tags:
      - UserLibraryService
      summary: Gets local trailers for an item
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getUsersByUseridItemsByIdLocaltrailers
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: "Operation successful. Returning a BaseItemDto[] object."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseItemDto'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Items/{Id}/Intros:
    summary: Gets intros to play before the main media item plays
    get:
      tags:
      - UserLibraryService
      summary: Gets intros to play before the main media item plays
      description: Requires authentication as user
      externalDocs:
        description: "API Documentation: Item Information"
        url: https://dev.emby.media/doc/restapi/Item-Information.html
      operationId: getUsersByUseridItemsByIdIntros
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      - name: Fields
        in: query
        description: "Optional. Specify additional fields of information to return\
          \ in the output. This allows multiple, comma delimeted. Options: Budget,\
          \ Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams,\
          \ Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio,\
          \ Revenue, SortName, Studios, Taglines, TrailerUrls"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: EnableImages
        in: query
        description: "Optional, include image information in output"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: ImageTypeLimit
        in: query
        description: "Optional, the max number of images to return, per image type"
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EnableImageTypes
        in: query
        description: Optional. The image types to include in the output.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: EnableUserData
        in: query
        description: "Optional, include user data"
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Operation successful. Returning a QueryResult<BaseItemDto>
            object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/QueryResult_BaseItemDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/FavoriteItems/{Id}/Delete:
    summary: Unmarks an item as a favorite
    post:
      tags:
      - UserLibraryService
      summary: Unmarks an item as a favorite
      description: Requires authentication as user
      operationId: postUsersByUseridFavoriteitemsByIdDelete
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a UserItemDataDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Items/{Id}/Rating:
    summary: Deletes a user's saved personal rating for an item
    post:
      tags:
      - UserLibraryService
      summary: Updates a user's rating for an item
      description: Requires authentication as user
      operationId: postUsersByUseridItemsByIdRating
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Likes
        in: query
        description: Whether the user likes the item or not. true/false
        required: true
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Operation successful. Returning a UserItemDataDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - UserLibraryService
      summary: Deletes a user's saved personal rating for an item
      description: Requires authentication as user
      operationId: deleteUsersByUseridItemsByIdRating
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a UserItemDataDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Items/{Id}/HideFromResume:
    summary: Updates a user's hide from resume for an item
    post:
      tags:
      - UserLibraryService
      summary: Updates a user's hide from resume for an item
      description: Requires authentication as user
      operationId: postUsersByUseridItemsByIdHidefromresume
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Hide
        in: query
        description: Whether the item should be hidden from reusme or not. true/false
        required: true
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Operation successful. Returning a UserItemDataDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/Images/{Type}/{Index}:
    get:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: getUsersByIdImagesByTypeByIndex
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    post:
      tags:
      - ImageService
      summary: "Uploads an image for an item, must be base64 encoded."
      description: Requires authentication as user
      operationId: postUsersByIdImagesByTypeByIndex
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: Binary stream
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    delete:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: deleteUsersByIdImagesByTypeByIndex
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: headUsersByIdImagesByTypeByIndex
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MaxWidth
        in: query
        description: The maximum image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: MaxHeight
        in: query
        description: The maximum image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Width
        in: query
        description: The fixed image width to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Height
        in: query
        description: The fixed image height to return.
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Quality
        in: query
        description: "Optional quality setting, from 0-100. Defaults to 90 and should\
          \ suffice in most cases."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: Tag
        in: query
        description: Optional. Supply the cache tag from the item object to receive
          strong caching headers.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: CropWhitespace
        in: query
        description: "Specify if whitespace should be cropped out of the image. True/False.\
          \ If unspecified, whitespace will be cropped from logos and clear art."
        required: false
        style: form
        explode: false
        schema:
          type: boolean
          nullable: true
      - name: EnableImageEnhancers
        in: query
        description: Enable or disable image enhancers such as cover art.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Format
        in: query
        description: "Determines the output foramt of the image - original,gif,jpg,png"
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: BackgroundColor
        in: query
        description: Optional. Apply a background color for transparent images.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ForegroundLayer
        in: query
        description: Optional. Apply a foreground layer on top of the image.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: AutoOrient
        in: query
        description: Set to true to force normalization of orientation in the event
          the renderer does not support it.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: KeepAnimation
        in: query
        description: Set to true to retain image animation (when supported).
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/Images/{Type}/Delete:
    post:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: postUsersByIdImagesByTypeDelete
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: query
        description: Image Index
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Items/{ItemId}/UserData:
    summary: Updates userdata for an item
    post:
      tags:
      - PlaystateService
      summary: Updates userdata for an item
      description: Requires authentication as user
      operationId: postUsersByUseridItemsByItemidUserdata
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ItemId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: "UserItemDataDto: "
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserItemDataDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserItemDataDto'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/PlayingItems/{Id}/Progress:
    summary: Reports a user's playback progress
    post:
      tags:
      - PlaystateService
      summary: Reports a user's playback progress
      description: Requires authentication as user
      operationId: postUsersByUseridPlayingitemsByIdProgress
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: query
        description: The id of the MediaSource
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: PositionTicks
        in: query
        description: "Optional. The current position, in ticks. 1ms = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: IsPaused
        in: query
        description: Indicates if the player is paused.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: IsMuted
        in: query
        description: Indicates if the player is muted.
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      - name: AudioStreamIndex
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SubtitleStreamIndex
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: VolumeLevel
        in: query
        description: Scale of 0-100
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
          nullable: true
      - name: PlayMethod
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/PlayMethod'
      - name: LiveStreamId
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PlaySessionId
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: RepeatMode
        in: query
        required: false
        style: form
        explode: false
        schema:
          $ref: '#/components/schemas/RepeatMode'
      - name: SubtitleOffset
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      - name: PlaybackRate
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: number
          format: double
      requestBody:
        description: OnPlaybackProgress
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.OnPlaybackProgress'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.OnPlaybackProgress'
        required: true
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/PlayingItems/{Id}/Delete:
    summary: Reports that a user has stopped playing an item
    post:
      tags:
      - PlaystateService
      summary: Reports that a user has stopped playing an item
      description: Requires authentication as user
      operationId: postUsersByUseridPlayingitemsByIdDelete
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: query
        description: The id of the MediaSource
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: NextMediaType
        in: query
        description: The next media type that will play
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: PositionTicks
        in: query
        description: "Optional. The position, in ticks, where playback stopped. 1ms\
          \ = 10000 ticks."
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: LiveStreamId
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: PlaySessionId
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/PlayedItems/{Id}/Delete:
    summary: Marks an item as unplayed
    post:
      tags:
      - PlaystateService
      summary: Marks an item as unplayed
      description: Requires authentication as user
      operationId: postUsersByUseridPlayeditemsByIdDelete
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a UserItemDataDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/Connect/Link/Delete:
    summary: Removes a Connect link for a user
    post:
      tags:
      - ConnectService
      summary: Removes a Connect link for a user
      description: Requires authentication as administrator
      operationId: postUsersByIdConnectLinkDelete
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: guid
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Videos/{Id}/Subtitles/{Index}/Delete:
    summary: Deletes an external subtitle file
    post:
      tags:
      - SubtitleService
      summary: Deletes an external subtitle file
      description: Requires authentication as user
      operationId: postVideosByIdSubtitlesByIndexDelete
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: query
        description: MediaSourceId
        required: true
        style: form
        explode: false
        schema:
          type: string
      - name: Index
        in: path
        description: The subtitle stream index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer}:
    get:
      tags:
      - DynamicHlsService
      description: Requires authentication as user
      operationId: getVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer
      parameters:
      - name: SegmentContainer
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: SegmentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: PlaylistId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
    head:
      tags:
      - DynamicHlsService
      description: Requires authentication as user
      operationId: headVideosByIdHls1ByPlaylistidBySegmentidBySegmentcontainer
      parameters:
      - name: SegmentContainer
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: SegmentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: PlaylistId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/hls/{PlaylistId}/{SegmentId}.{SegmentContainer}:
    get:
      tags:
      - VideoHlsService
      description: Requires authentication as user
      operationId: getVideosByIdHlsByPlaylistidBySegmentidBySegmentcontainer
      parameters:
      - name: SegmentContainer
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: SegmentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: PlaylistId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/{MediaSourceId}/Subtitles/{Index}/Stream.{Format}:
    summary: Gets subtitles in a specified format.
    get:
      tags:
      - SubtitleService
      summary: Gets subtitles in a specified format.
      description: Requires authentication as user
      operationId: getItemsByIdByMediasourceidSubtitlesByIndexStreamByFormat
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: path
        description: MediaSourceId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Index
        in: path
        description: The subtitle stream index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: Format
        in: path
        description: Format
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: StartPositionTicks
        in: query
        description: StartPositionTicks
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
      - name: EndPositionTicks
        in: query
        description: EndPositionTicks
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CopyTimestamps
        in: query
        description: CopyTimestamps
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/Images/{Type}/{Index}/Delete:
    post:
      tags:
      - ImageService
      description: Requires authentication as administrator
      operationId: postItemsByIdImagesByTypeByIndexDelete
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Items/{Id}/Images/{Type}/{Index}/Index:
    summary: Updates the index for an item image
    post:
      tags:
      - ImageService
      summary: Updates the index for an item image
      description: Requires authentication as administrator
      operationId: postItemsByIdImagesByTypeByIndexIndex
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: NewIndex
        in: query
        description: The new image index
        required: true
        style: form
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Items/{Id}/Images/{Type}/{Index}/Url:
    summary: Updates the index for an item image
    post:
      tags:
      - ImageService
      summary: Updates the index for an item image
      description: Requires authentication as administrator
      operationId: postItemsByIdImagesByTypeByIndexUrl
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: Url
        in: query
        description: The url for the new image
        required: true
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as administrator
  /Playlists/{Id}/Items/{ItemId}/Move/{NewIndex}:
    summary: Moves a playlist item
    post:
      tags:
      - PlaylistService
      summary: Moves a playlist item
      description: Requires authentication as user
      operationId: postPlaylistsByIdItemsByItemidMoveByNewindex
      parameters:
      - name: ItemId
        in: path
        description: ItemId
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: Id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: NewIndex
        in: path
        description: NewIndex
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{UserId}/Items/{Id}/Rating/Delete:
    summary: Deletes a user's saved personal rating for an item
    post:
      tags:
      - UserLibraryService
      summary: Deletes a user's saved personal rating for an item
      description: Requires authentication as user
      operationId: postUsersByUseridItemsByIdRatingDelete
      parameters:
      - name: UserId
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operation successful. Returning a UserItemDataDto object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserItemDataDto'
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Users/{Id}/Images/{Type}/{Index}/Delete:
    post:
      tags:
      - ImageService
      description: Requires authentication as user
      operationId: postUsersByIdImagesByTypeByIndexDelete
      parameters:
      - name: Id
        in: path
        description: User Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Type
        in: path
        description: Image Type
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/ImageType'
      - name: Index
        in: path
        description: Image Index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Operation successful. Empty response.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/{MediaSourceId}/Subtitles/{Index}/Stream.{Format}:
    summary: Gets subtitles in a specified format.
    get:
      tags:
      - SubtitleService
      summary: Gets subtitles in a specified format.
      description: Requires authentication as user
      operationId: getVideosByIdByMediasourceidSubtitlesByIndexStreamByFormat
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: path
        description: MediaSourceId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Index
        in: path
        description: The subtitle stream index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: Format
        in: path
        description: Format
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: StartPositionTicks
        in: query
        description: StartPositionTicks
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
      - name: EndPositionTicks
        in: query
        description: EndPositionTicks
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CopyTimestamps
        in: query
        description: CopyTimestamps
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Items/{Id}/{MediaSourceId}/Subtitles/{Index}/{StartPositionTicks}/Stream.{Format}:
    summary: Gets subtitles in a specified format.
    get:
      tags:
      - SubtitleService
      summary: Gets subtitles in a specified format.
      description: Requires authentication as user
      operationId: getItemsByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: path
        description: MediaSourceId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Index
        in: path
        description: The subtitle stream index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: Format
        in: path
        description: Format
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: StartPositionTicks
        in: path
        description: StartPositionTicks
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: EndPositionTicks
        in: query
        description: EndPositionTicks
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CopyTimestamps
        in: query
        description: CopyTimestamps
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
  /Videos/{Id}/{MediaSourceId}/Subtitles/{Index}/{StartPositionTicks}/Stream.{Format}:
    summary: Gets subtitles in a specified format.
    get:
      tags:
      - SubtitleService
      summary: Gets subtitles in a specified format.
      description: Requires authentication as user
      operationId: getVideosByIdByMediasourceidSubtitlesByIndexByStartpositionticksStreamByFormat
      parameters:
      - name: Id
        in: path
        description: Item Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: MediaSourceId
        in: path
        description: MediaSourceId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Index
        in: path
        description: The subtitle stream index
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: Format
        in: path
        description: Format
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: StartPositionTicks
        in: path
        description: StartPositionTicks
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: EndPositionTicks
        in: query
        description: EndPositionTicks
        required: false
        style: form
        explode: false
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CopyTimestamps
        in: query
        description: CopyTimestamps
        required: false
        style: form
        explode: false
        schema:
          type: boolean
      responses:
        "200":
          description: Operation successful. Response content unknown.
        "400":
          description: Bad Request. Server cannot process request.
        "401":
          description: Unauthorized. Client needs to authenticate.
        "403":
          description: Forbidden. No permission for the reqested operation.
        "404":
          description: Resource not found or unavailable.
        "500":
          description: Server error.
      security:
      - apikeyauth: []
      - embyauth: []
      x-RequiredAuthentication: Requires authentication as user
components:
  schemas:
    QueryResult_BaseItemDto:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/BaseItemDto'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 4
        Items:
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          Size: 2
          CriticRating: 6.4384236
          GameSystemId: 3
          Studios:
          - Id: 3
            Name: Name
          - Id: 3
            Name: Name
          CameraMake: CameraMake
          Aperture: 1.041444916118296
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: ExtraType
          ParentBackdropItemId: ParentBackdropItemId
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 6.628464275087742
          MediaType: MediaType
          ManagementId: ManagementId
          Tags:
          - Tags
          - Tags
          Status: Status
          IndexNumberEnd: 6
          ArtistItems:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          GenreItems:
          - null
          - null
          OfficialRating: OfficialRating
          Longitude: 9.132027271330688
          Composers:
          - null
          - null
          LockData: true
          FocalLength: 4.258773108174356
          IsNews: true
          ShutterSpeed: 4.678947989005849
          Id: Id
          SortIndexNumber: 0
          IsFolder: true
          CanMakePublic: true
          SeriesTimerId: SeriesTimerId
          SeriesId: SeriesId
          ListingsPath: ListingsPath
          MediaStreams:
          - null
          - null
          FileName: FileName
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          CanDownload: true
          IsMovie: true
          SeriesCount: 5
          PrimaryImageItemId: PrimaryImageItemId
          ListingsChannelId: ListingsChannelId
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 4
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 8
          Path: Path
          ParentId: ParentId
          TimerType: Program
          GameSystem: GameSystem
          MusicVideoCount: 8
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          Subviews:
          - Subviews
          - Subviews
          Bitrate: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: ParentThumbItemId
          PreferredMetadataLanguage: PreferredMetadataLanguage
          CanLeaveContent: true
          Type: Type
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ChildCount: 7
          TagItems:
          - null
          - null
          Artists:
          - Artists
          - Artists
          ListingsChannelName: ListingsChannelName
          RunTimeTicks: 1
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          SortParentIndexNumber: 6
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 7.260521264802104
          Guid: Guid
          SortName: SortName
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          AsSeries: true
          AlbumId: AlbumId
          SupportsSync: true
          LocalTrailerCount: 7
          IndexNumber: 5
          CompletionPercentage: 0.5199002018724985
          Genres:
          - Genres
          - Genres
          SeasonId: SeasonId
          LockedFields:
          - Cast
          - Cast
          Disabled: true
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          PresentationUniqueKey: PresentationUniqueKey
          CustomRating: CustomRating
          ListingsChannelNumber: ListingsChannelNumber
          SyncStatus: Queued
          CanManageAccess: true
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: ParentLogoItemId
          PartCount: 7
          ListingsProviderId: ListingsProviderId
          CanEditItems: true
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 9
          CommunityRating: 6.965118
          Software: Software
          Chapters:
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData:
            UnplayedItemCount: 6
            Played: true
            ServerId: ServerId
            PlayedPercentage: 7.058770351582356
            Rating: 0.8851374739011653
            PlayCount: 4
            PlaybackPositionTicks: 0
            LastPlayedDate: 2000-01-23T04:56:07.000+00:00
            IsFavorite: true
            ItemId: ItemId
            Key: Key
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: ChannelId
          ParentIndexNumber: 3
          IsNew: true
          AffiliateCallSign: AffiliateCallSign
          ListingsId: ListingsId
          AlbumArtists:
          - null
          - null
          ServerId: ServerId
          Number: Number
          AlbumCount: 4
          IsRepeat: true
          CollectionType: CollectionType
          PrimaryImageAspectRatio: 3.0576100241049344
          Height: 0
          IsKids: true
          DisplayOrder: DisplayOrder
          MovieCount: 7
          People:
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          Overview: Overview
          SpecialFeatureCount: 3
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: null
          SupportsResume: true
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 0.8774076871421566
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          Size: 2
          CriticRating: 6.4384236
          GameSystemId: 3
          Studios:
          - Id: 3
            Name: Name
          - Id: 3
            Name: Name
          CameraMake: CameraMake
          Aperture: 1.041444916118296
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: ExtraType
          ParentBackdropItemId: ParentBackdropItemId
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 6.628464275087742
          MediaType: MediaType
          ManagementId: ManagementId
          Tags:
          - Tags
          - Tags
          Status: Status
          IndexNumberEnd: 6
          ArtistItems:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          GenreItems:
          - null
          - null
          OfficialRating: OfficialRating
          Longitude: 9.132027271330688
          Composers:
          - null
          - null
          LockData: true
          FocalLength: 4.258773108174356
          IsNews: true
          ShutterSpeed: 4.678947989005849
          Id: Id
          SortIndexNumber: 0
          IsFolder: true
          CanMakePublic: true
          SeriesTimerId: SeriesTimerId
          SeriesId: SeriesId
          ListingsPath: ListingsPath
          MediaStreams:
          - null
          - null
          FileName: FileName
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          CanDownload: true
          IsMovie: true
          SeriesCount: 5
          PrimaryImageItemId: PrimaryImageItemId
          ListingsChannelId: ListingsChannelId
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 4
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 8
          Path: Path
          ParentId: ParentId
          TimerType: Program
          GameSystem: GameSystem
          MusicVideoCount: 8
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          Subviews:
          - Subviews
          - Subviews
          Bitrate: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: ParentThumbItemId
          PreferredMetadataLanguage: PreferredMetadataLanguage
          CanLeaveContent: true
          Type: Type
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ChildCount: 7
          TagItems:
          - null
          - null
          Artists:
          - Artists
          - Artists
          ListingsChannelName: ListingsChannelName
          RunTimeTicks: 1
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          SortParentIndexNumber: 6
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 7.260521264802104
          Guid: Guid
          SortName: SortName
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          AsSeries: true
          AlbumId: AlbumId
          SupportsSync: true
          LocalTrailerCount: 7
          IndexNumber: 5
          CompletionPercentage: 0.5199002018724985
          Genres:
          - Genres
          - Genres
          SeasonId: SeasonId
          LockedFields:
          - Cast
          - Cast
          Disabled: true
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          PresentationUniqueKey: PresentationUniqueKey
          CustomRating: CustomRating
          ListingsChannelNumber: ListingsChannelNumber
          SyncStatus: Queued
          CanManageAccess: true
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: ParentLogoItemId
          PartCount: 7
          ListingsProviderId: ListingsProviderId
          CanEditItems: true
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 9
          CommunityRating: 6.965118
          Software: Software
          Chapters:
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData:
            UnplayedItemCount: 6
            Played: true
            ServerId: ServerId
            PlayedPercentage: 7.058770351582356
            Rating: 0.8851374739011653
            PlayCount: 4
            PlaybackPositionTicks: 0
            LastPlayedDate: 2000-01-23T04:56:07.000+00:00
            IsFavorite: true
            ItemId: ItemId
            Key: Key
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: ChannelId
          ParentIndexNumber: 3
          IsNew: true
          AffiliateCallSign: AffiliateCallSign
          ListingsId: ListingsId
          AlbumArtists:
          - null
          - null
          ServerId: ServerId
          Number: Number
          AlbumCount: 4
          IsRepeat: true
          CollectionType: CollectionType
          PrimaryImageAspectRatio: 3.0576100241049344
          Height: 0
          IsKids: true
          DisplayOrder: DisplayOrder
          MovieCount: 7
          People:
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          Overview: Overview
          SpecialFeatureCount: 3
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: null
          SupportsResume: true
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 0.8774076871421566
    BaseItemDto:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        OriginalTitle:
          type: string
        ServerId:
          type: string
          description: The server identifier.
        Id:
          type: string
          description: The id.
        Guid:
          type: string
        Etag:
          type: string
          description: The etag.
        Prefix:
          type: string
          description: The Prefix.
        PlaylistItemId:
          type: string
          description: The playlist item identifier.
        DateCreated:
          type: string
          description: The date created.
          format: date-time
          nullable: true
        ExtraType:
          type: string
        SortIndexNumber:
          type: integer
          format: int32
          nullable: true
        SortParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        CanDelete:
          type: boolean
          nullable: true
        CanDownload:
          type: boolean
          nullable: true
        CanEditItems:
          type: boolean
          nullable: true
        SupportsResume:
          type: boolean
          nullable: true
        PresentationUniqueKey:
          type: string
        PreferredMetadataLanguage:
          type: string
        PreferredMetadataCountryCode:
          type: string
        SupportsSync:
          type: boolean
          description: "A value indicating whether \\[supports synchronize\\]."
          nullable: true
        SyncStatus:
          $ref: '#/components/schemas/SyncJobItemStatus'
        CanManageAccess:
          type: boolean
          nullable: true
        CanLeaveContent:
          type: boolean
          nullable: true
        CanMakePublic:
          type: boolean
          nullable: true
        Container:
          type: string
        SortName:
          type: string
          description: The name of the sort.
        ForcedSortName:
          type: string
        Video3DFormat:
          $ref: '#/components/schemas/Video3DFormat'
        PremiereDate:
          type: string
          description: The premiere date.
          format: date-time
          nullable: true
        ExternalUrls:
          type: array
          description: The external urls.
          items:
            $ref: '#/components/schemas/ExternalUrl'
        MediaSources:
          type: array
          description: The media versions.
          items:
            $ref: '#/components/schemas/MediaSourceInfo'
        CriticRating:
          type: number
          description: The critic rating.
          format: float
          nullable: true
        GameSystemId:
          type: integer
          format: int64
          nullable: true
        AsSeries:
          type: boolean
          nullable: true
        GameSystem:
          type: string
          description: The game system.
        ProductionLocations:
          type: array
          items:
            type: string
        Path:
          type: string
          description: The path.
        OfficialRating:
          type: string
          description: The official rating.
        CustomRating:
          type: string
          description: The custom rating.
        ChannelId:
          type: string
          description: The channel identifier.
        ChannelName:
          type: string
        Overview:
          type: string
          description: The overview.
        Taglines:
          type: array
          description: The taglines.
          items:
            type: string
        Genres:
          type: array
          description: The genres.
          items:
            type: string
        CommunityRating:
          type: number
          description: The community rating.
          format: float
          nullable: true
        RunTimeTicks:
          type: integer
          description: The run time ticks.
          format: int64
          nullable: true
        Size:
          type: integer
          format: int64
          nullable: true
        FileName:
          type: string
        Bitrate:
          type: integer
          format: int32
          nullable: true
        ProductionYear:
          type: integer
          description: The production year.
          format: int32
          nullable: true
        Number:
          type: string
          description: The number.
        ChannelNumber:
          type: string
        IndexNumber:
          type: integer
          description: The index number.
          format: int32
          nullable: true
        IndexNumberEnd:
          type: integer
          description: The index number end.
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          description: The parent index number.
          format: int32
          nullable: true
        RemoteTrailers:
          type: array
          description: The trailer urls.
          items:
            $ref: '#/components/schemas/MediaUrl'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        IsFolder:
          type: boolean
          description: A value indicating whether this instance is folder.
          nullable: true
        ParentId:
          type: string
          description: The parent id.
        Type:
          type: string
          description: The type.
        People:
          type: array
          description: The people.
          items:
            $ref: '#/components/schemas/BaseItemPerson'
        Studios:
          type: array
          description: The studios.
          items:
            $ref: '#/components/schemas/NameLongIdPair'
        GenreItems:
          type: array
          items:
            $ref: '#/components/schemas/NameLongIdPair'
        TagItems:
          type: array
          items:
            $ref: '#/components/schemas/NameLongIdPair'
        ParentLogoItemId:
          type: string
          description: "If the item does not have a logo, this will hold the Id of\
            \ the Parent that has one."
        ParentBackdropItemId:
          type: string
          description: "If the item does not have any backdrops, this will hold the\
            \ Id of the Parent that has one."
        ParentBackdropImageTags:
          type: array
          description: The parent backdrop image tags.
          items:
            type: string
        LocalTrailerCount:
          type: integer
          description: The local trailer count.
          format: int32
          nullable: true
        UserData:
          $ref: '#/components/schemas/UserItemDataDto'
        RecursiveItemCount:
          type: integer
          description: The recursive item count.
          format: int32
          nullable: true
        ChildCount:
          type: integer
          description: The child count.
          format: int32
          nullable: true
        SeriesName:
          type: string
          description: The name of the series.
        SeriesId:
          type: string
          description: The series id.
        SeasonId:
          type: string
          description: The season identifier.
        SpecialFeatureCount:
          type: integer
          description: The special feature count.
          format: int32
          nullable: true
        DisplayPreferencesId:
          type: string
          description: The display preferences id.
        Status:
          type: string
          description: The status.
        AirDays:
          type: array
          description: The air days.
          items:
            $ref: '#/components/schemas/DayOfWeek'
        Tags:
          type: array
          description: The tags.
          items:
            type: string
        PrimaryImageAspectRatio:
          type: number
          description: "The primary image aspect ratio, after image enhancements."
          format: double
          nullable: true
        Artists:
          type: array
          description: The artists.
          items:
            type: string
        ArtistItems:
          type: array
          description: The artist items.
          items:
            $ref: '#/components/schemas/NameIdPair'
        Composers:
          type: array
          items:
            $ref: '#/components/schemas/NameIdPair'
        Album:
          type: string
          description: The album.
        CollectionType:
          type: string
          description: The type of the collection.
        DisplayOrder:
          type: string
          description: The display order.
        AlbumId:
          type: string
          description: The album id.
        AlbumPrimaryImageTag:
          type: string
          description: The album image tag.
        SeriesPrimaryImageTag:
          type: string
          description: The series primary image tag.
        AlbumArtist:
          type: string
          description: The album artist.
        AlbumArtists:
          type: array
          description: The album artists.
          items:
            $ref: '#/components/schemas/NameIdPair'
        SeasonName:
          type: string
          description: The name of the season.
        MediaStreams:
          type: array
          description: The media streams.
          items:
            $ref: '#/components/schemas/MediaStream'
        PartCount:
          type: integer
          description: The part count.
          format: int32
          nullable: true
        ImageTags:
          type: object
          additionalProperties:
            type: string
          description: The image tags.
        BackdropImageTags:
          type: array
          description: The backdrop image tags.
          items:
            type: string
        ParentLogoImageTag:
          type: string
          description: The parent logo image tag.
        SeriesStudio:
          type: string
          description: The series studio.
        PrimaryImageItemId:
          type: string
        PrimaryImageTag:
          type: string
        ParentThumbItemId:
          type: string
          description: The parent thumb item id.
        ParentThumbImageTag:
          type: string
          description: The parent thumb image tag.
        Chapters:
          type: array
          description: The chapters.
          items:
            $ref: '#/components/schemas/ChapterInfo'
        LocationType:
          $ref: '#/components/schemas/LocationType'
        MediaType:
          type: string
          description: The type of the media.
        EndDate:
          type: string
          description: The end date.
          format: date-time
          nullable: true
        LockedFields:
          type: array
          description: The locked fields.
          items:
            $ref: '#/components/schemas/MetadataFields'
        LockData:
          type: boolean
          description: "A value indicating whether \\[enable internet providers\\\
            ]."
          nullable: true
        Width:
          type: integer
          format: int32
          nullable: true
        Height:
          type: integer
          format: int32
          nullable: true
        CameraMake:
          type: string
        CameraModel:
          type: string
        Software:
          type: string
        ExposureTime:
          type: number
          format: double
          nullable: true
        FocalLength:
          type: number
          format: double
          nullable: true
        ImageOrientation:
          $ref: '#/components/schemas/Drawing.ImageOrientation'
        Aperture:
          type: number
          format: double
          nullable: true
        ShutterSpeed:
          type: number
          format: double
          nullable: true
        Latitude:
          type: number
          format: double
          nullable: true
        Longitude:
          type: number
          format: double
          nullable: true
        Altitude:
          type: number
          format: double
          nullable: true
        IsoSpeedRating:
          type: integer
          format: int32
          nullable: true
        SeriesTimerId:
          type: string
          description: The series timer identifier.
        ChannelPrimaryImageTag:
          type: string
          description: The channel primary image tag.
        StartDate:
          type: string
          description: "The start date of the recording, in UTC."
          format: date-time
          nullable: true
        CompletionPercentage:
          type: number
          description: The completion percentage.
          format: double
          nullable: true
        IsRepeat:
          type: boolean
          description: A value indicating whether this instance is repeat.
          nullable: true
        IsNew:
          type: boolean
          nullable: true
        EpisodeTitle:
          type: string
          description: The episode title.
        IsMovie:
          type: boolean
          description: A value indicating whether this instance is movie.
          nullable: true
        IsSports:
          type: boolean
          description: A value indicating whether this instance is sports.
          nullable: true
        IsSeries:
          type: boolean
          description: A value indicating whether this instance is series.
          nullable: true
        IsLive:
          type: boolean
          description: A value indicating whether this instance is live.
          nullable: true
        IsNews:
          type: boolean
          description: A value indicating whether this instance is news.
          nullable: true
        IsKids:
          type: boolean
          description: A value indicating whether this instance is kids.
          nullable: true
        IsPremiere:
          type: boolean
          description: A value indicating whether this instance is premiere.
          nullable: true
        TimerType:
          $ref: '#/components/schemas/LiveTv.TimerType'
        Disabled:
          type: boolean
          nullable: true
        ManagementId:
          type: string
        TimerId:
          type: string
          description: The timer identifier.
        CurrentProgram:
          $ref: '#/components/schemas/BaseItemDto'
        MovieCount:
          type: integer
          format: int32
          nullable: true
        SeriesCount:
          type: integer
          format: int32
          nullable: true
        AlbumCount:
          type: integer
          format: int32
          nullable: true
        SongCount:
          type: integer
          format: int32
          nullable: true
        MusicVideoCount:
          type: integer
          format: int32
          nullable: true
        Subviews:
          type: array
          items:
            type: string
        ListingsProviderId:
          type: string
        ListingsChannelId:
          type: string
        ListingsPath:
          type: string
        ListingsId:
          type: string
        ListingsChannelName:
          type: string
        ListingsChannelNumber:
          type: string
        AffiliateCallSign:
          type: string
      description: "This is strictly used as a data transfer object from the api layer.\
        \ This holds information about a BaseItem in a format that is convenient for\
        \ the client.\r\n"
      example:
        SeasonName: SeasonName
        PremiereDate: 2000-01-23T04:56:07.000+00:00
        Size: 2
        CriticRating: 6.4384236
        GameSystemId: 3
        Studios:
        - Id: 3
          Name: Name
        - Id: 3
          Name: Name
        CameraMake: CameraMake
        Aperture: 1.041444916118296
        ChannelPrimaryImageTag: ChannelPrimaryImageTag
        ExtraType: ExtraType
        ParentBackdropItemId: ParentBackdropItemId
        Etag: Etag
        ParentLogoImageTag: ParentLogoImageTag
        ExposureTime: 6.628464275087742
        MediaType: MediaType
        ManagementId: ManagementId
        Tags:
        - Tags
        - Tags
        Status: Status
        IndexNumberEnd: 6
        ArtistItems:
        - Id: Id
          Name: Name
        - Id: Id
          Name: Name
        MediaSources:
        - EncoderPath: EncoderPath
          RequiredHttpHeaders:
            key: RequiredHttpHeaders
          RunTimeTicks: 5
          HasMixedProtocols: true
          MediaStreams:
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          Size: 1
          Video3DFormat: null
          BufferMs: 7
          ContainerStartTimeTicks: 5
          SortName: SortName
          Timestamp: None
          ItemId: ItemId
          Name: Name
          RequiresOpening: true
          DirectStreamUrl: DirectStreamUrl
          SupportsDirectStream: true
          RequiresClosing: true
          Container: Container
          ServerId: ServerId
          LiveStreamId: LiveStreamId
          RequiresLooping: true
          Protocol: File
          AddApiKeyToDirectStreamUrl: true
          DefaultSubtitleStreamIndex: 9
          TrancodeLiveStartIndex: 2
          IsInfiniteStream: true
          Path: Path
          IsRemote: true
          EncoderProtocol: null
          SupportsDirectPlay: true
          TranscodingSubProtocol: TranscodingSubProtocol
          Formats:
          - Formats
          - Formats
          AnalyzeDurationMs: 6
          WallClockStart: 2000-01-23T04:56:07.000+00:00
          Bitrate: 9
          OpenToken: OpenToken
          ProbeProtocol: null
          SupportsProbing: true
          Type: Default
          ReadAtNativeFramerate: true
          TranscodingContainer: TranscodingContainer
          ProbePath: ProbePath
          TranscodingUrl: TranscodingUrl
          Id: Id
          SupportsTranscoding: true
          DefaultAudioStreamIndex: 8
        - EncoderPath: EncoderPath
          RequiredHttpHeaders:
            key: RequiredHttpHeaders
          RunTimeTicks: 5
          HasMixedProtocols: true
          MediaStreams:
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          Size: 1
          Video3DFormat: null
          BufferMs: 7
          ContainerStartTimeTicks: 5
          SortName: SortName
          Timestamp: None
          ItemId: ItemId
          Name: Name
          RequiresOpening: true
          DirectStreamUrl: DirectStreamUrl
          SupportsDirectStream: true
          RequiresClosing: true
          Container: Container
          ServerId: ServerId
          LiveStreamId: LiveStreamId
          RequiresLooping: true
          Protocol: File
          AddApiKeyToDirectStreamUrl: true
          DefaultSubtitleStreamIndex: 9
          TrancodeLiveStartIndex: 2
          IsInfiniteStream: true
          Path: Path
          IsRemote: true
          EncoderProtocol: null
          SupportsDirectPlay: true
          TranscodingSubProtocol: TranscodingSubProtocol
          Formats:
          - Formats
          - Formats
          AnalyzeDurationMs: 6
          WallClockStart: 2000-01-23T04:56:07.000+00:00
          Bitrate: 9
          OpenToken: OpenToken
          ProbeProtocol: null
          SupportsProbing: true
          Type: Default
          ReadAtNativeFramerate: true
          TranscodingContainer: TranscodingContainer
          ProbePath: ProbePath
          TranscodingUrl: TranscodingUrl
          Id: Id
          SupportsTranscoding: true
          DefaultAudioStreamIndex: 8
        GenreItems:
        - null
        - null
        OfficialRating: OfficialRating
        Longitude: 9.132027271330688
        Composers:
        - null
        - null
        LockData: true
        FocalLength: 4.258773108174356
        IsNews: true
        ShutterSpeed: 4.678947989005849
        Id: Id
        SortIndexNumber: 0
        IsFolder: true
        CanMakePublic: true
        SeriesTimerId: SeriesTimerId
        SeriesId: SeriesId
        ListingsPath: ListingsPath
        MediaStreams:
        - null
        - null
        FileName: FileName
        PrimaryImageTag: PrimaryImageTag
        Prefix: Prefix
        CanDownload: true
        IsMovie: true
        SeriesCount: 5
        PrimaryImageItemId: PrimaryImageItemId
        ListingsChannelId: ListingsChannelId
        SeriesStudio: SeriesStudio
        IsLive: true
        Width: 4
        ExternalUrls:
        - Url: Url
          Name: Name
        - Url: Url
          Name: Name
        RecursiveItemCount: 8
        Path: Path
        ParentId: ParentId
        TimerType: Program
        GameSystem: GameSystem
        MusicVideoCount: 8
        IsSeries: true
        ProductionLocations:
        - ProductionLocations
        - ProductionLocations
        Subviews:
        - Subviews
        - Subviews
        Bitrate: 6
        EndDate: 2000-01-23T04:56:07.000+00:00
        SeriesPrimaryImageTag: SeriesPrimaryImageTag
        ParentThumbItemId: ParentThumbItemId
        PreferredMetadataLanguage: PreferredMetadataLanguage
        CanLeaveContent: true
        Type: Type
        BackdropImageTags:
        - BackdropImageTags
        - BackdropImageTags
        ParentBackdropImageTags:
        - ParentBackdropImageTags
        - ParentBackdropImageTags
        ChildCount: 7
        TagItems:
        - null
        - null
        Artists:
        - Artists
        - Artists
        ListingsChannelName: ListingsChannelName
        RunTimeTicks: 1
        AlbumPrimaryImageTag: AlbumPrimaryImageTag
        Video3DFormat: HalfSideBySide
        CanDelete: true
        PlaylistItemId: PlaylistItemId
        SortParentIndexNumber: 6
        DisplayPreferencesId: DisplayPreferencesId
        Album: Album
        Latitude: 7.260521264802104
        Guid: Guid
        SortName: SortName
        Name: Name
        StartDate: 2000-01-23T04:56:07.000+00:00
        Container: Container
        ProductionYear: 6
        SeriesName: SeriesName
        AsSeries: true
        AlbumId: AlbumId
        SupportsSync: true
        LocalTrailerCount: 7
        IndexNumber: 5
        CompletionPercentage: 0.5199002018724985
        Genres:
        - Genres
        - Genres
        SeasonId: SeasonId
        LockedFields:
        - Cast
        - Cast
        Disabled: true
        ProviderIds:
          key: ProviderIds
        RemoteTrailers:
        - Url: Url
          Name: Name
        - Url: Url
          Name: Name
        PresentationUniqueKey: PresentationUniqueKey
        CustomRating: CustomRating
        ListingsChannelNumber: ListingsChannelNumber
        SyncStatus: Queued
        CanManageAccess: true
        AirDays:
        - Sunday
        - Sunday
        ParentLogoItemId: ParentLogoItemId
        PartCount: 7
        ListingsProviderId: ListingsProviderId
        CanEditItems: true
        ChannelName: ChannelName
        EpisodeTitle: EpisodeTitle
        IsoSpeedRating: 9
        CommunityRating: 6.965118
        Software: Software
        Chapters:
        - StartPositionTicks: 5
          ImageTag: ImageTag
          MarkerType: Chapter
          ChapterIndex: 3
          Name: Name
        - StartPositionTicks: 5
          ImageTag: ImageTag
          MarkerType: Chapter
          ChapterIndex: 3
          Name: Name
        SongCount: 6
        Taglines:
        - Taglines
        - Taglines
        PreferredMetadataCountryCode: PreferredMetadataCountryCode
        CameraModel: CameraModel
        ChannelNumber: ChannelNumber
        UserData:
          UnplayedItemCount: 6
          Played: true
          ServerId: ServerId
          PlayedPercentage: 7.058770351582356
          Rating: 0.8851374739011653
          PlayCount: 4
          PlaybackPositionTicks: 0
          LastPlayedDate: 2000-01-23T04:56:07.000+00:00
          IsFavorite: true
          ItemId: ItemId
          Key: Key
        TimerId: TimerId
        DateCreated: 2000-01-23T04:56:07.000+00:00
        ParentThumbImageTag: ParentThumbImageTag
        IsSports: true
        ChannelId: ChannelId
        ParentIndexNumber: 3
        IsNew: true
        AffiliateCallSign: AffiliateCallSign
        ListingsId: ListingsId
        AlbumArtists:
        - null
        - null
        ServerId: ServerId
        Number: Number
        AlbumCount: 4
        IsRepeat: true
        CollectionType: CollectionType
        PrimaryImageAspectRatio: 3.0576100241049344
        Height: 0
        IsKids: true
        DisplayOrder: DisplayOrder
        MovieCount: 7
        People:
        - Role: Role
          Type: Actor
          PrimaryImageTag: PrimaryImageTag
          Id: Id
          Name: Name
        - Role: Role
          Type: Actor
          PrimaryImageTag: PrimaryImageTag
          Id: Id
          Name: Name
        Overview: Overview
        SpecialFeatureCount: 3
        ImageOrientation: TopLeft
        AlbumArtist: AlbumArtist
        ImageTags:
          key: ImageTags
        OriginalTitle: OriginalTitle
        ForcedSortName: ForcedSortName
        CurrentProgram: null
        SupportsResume: true
        LocationType: FileSystem
        IsPremiere: true
        Altitude: 0.8774076871421566
      x-internal-ref-name: MediaBrowser.Model.Dto.BaseItemDto
    SyncJobItemStatus:
      type: string
      enum:
      - Queued
      - Converting
      - ReadyToTransfer
      - Transferring
      - Synced
      - Failed
      x-internal-ref-name: MediaBrowser.Model.Sync.SyncJobItemStatus
    Video3DFormat:
      type: string
      enum:
      - HalfSideBySide
      - FullSideBySide
      - FullTopAndBottom
      - HalfTopAndBottom
      - MVC
      x-internal-ref-name: MediaBrowser.Model.Entities.Video3DFormat
    ExternalUrl:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Url:
          type: string
          description: The type of the item.
      example:
        Url: Url
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Providers.ExternalUrl
    MediaSourceInfo:
      type: object
      properties:
        Protocol:
          $ref: '#/components/schemas/MediaProtocol'
        Id:
          type: string
        Path:
          type: string
        EncoderPath:
          type: string
        EncoderProtocol:
          $ref: '#/components/schemas/MediaProtocol'
        Type:
          $ref: '#/components/schemas/MediaSourceType'
        ProbePath:
          type: string
        ProbeProtocol:
          $ref: '#/components/schemas/MediaProtocol'
        Container:
          type: string
        Size:
          type: integer
          format: int64
          nullable: true
        Name:
          type: string
        SortName:
          type: string
        IsRemote:
          type: boolean
          description: Differentiate internet url vs local network
        HasMixedProtocols:
          type: boolean
        RunTimeTicks:
          type: integer
          format: int64
          nullable: true
        ContainerStartTimeTicks:
          type: integer
          format: int64
          nullable: true
        SupportsTranscoding:
          type: boolean
        TrancodeLiveStartIndex:
          type: integer
          format: int32
          nullable: true
        WallClockStart:
          type: string
          format: date-time
          nullable: true
        SupportsDirectStream:
          type: boolean
        SupportsDirectPlay:
          type: boolean
        IsInfiniteStream:
          type: boolean
        RequiresOpening:
          type: boolean
        OpenToken:
          type: string
        RequiresClosing:
          type: boolean
        LiveStreamId:
          type: string
        BufferMs:
          type: integer
          format: int32
          nullable: true
          deprecated: true
        RequiresLooping:
          type: boolean
        SupportsProbing:
          type: boolean
          deprecated: true
        Video3DFormat:
          $ref: '#/components/schemas/Video3DFormat'
        MediaStreams:
          type: array
          items:
            $ref: '#/components/schemas/MediaStream'
        Formats:
          type: array
          items:
            type: string
        Bitrate:
          type: integer
          format: int32
          nullable: true
        Timestamp:
          $ref: '#/components/schemas/TransportStreamTimestamp'
        RequiredHttpHeaders:
          type: object
          additionalProperties:
            type: string
        DirectStreamUrl:
          type: string
        AddApiKeyToDirectStreamUrl:
          type: boolean
        TranscodingUrl:
          type: string
        TranscodingSubProtocol:
          type: string
        TranscodingContainer:
          type: string
        AnalyzeDurationMs:
          type: integer
          format: int32
          nullable: true
          deprecated: true
        ReadAtNativeFramerate:
          type: boolean
          deprecated: true
        DefaultAudioStreamIndex:
          type: integer
          format: int32
          nullable: true
        DefaultSubtitleStreamIndex:
          type: integer
          format: int32
          nullable: true
        ItemId:
          type: string
          description: Used only by our Windows app. Not used by Emby Server.
        ServerId:
          type: string
          description: Used only by our Windows app. Not used by Emby Server.
      example:
        EncoderPath: EncoderPath
        RequiredHttpHeaders:
          key: RequiredHttpHeaders
        RunTimeTicks: 5
        HasMixedProtocols: true
        MediaStreams:
        - VideoRange: VideoRange
          ColorSpace: ColorSpace
          Index: 4
          BitDepth: 2
          ItemId: ItemId
          SupportsExternalStream: true
          Codec: Codec
          SampleRate: 1
          IsAnamorphic: true
          PixelFormat: PixelFormat
          AttachmentSize: 9
          SubtitleLocationType: InternalStream
          RefFrames: 4
          IsAVC: true
          ColorTransfer: ColorTransfer
          ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
          IsExternalUrl: true
          DisplayTitle: DisplayTitle
          IsForced: true
          ChannelLayout: ChannelLayout
          DisplayLanguage: DisplayLanguage
          AverageFrameRate: 7.4577446
          StreamStartTimeTicks: 9
          IsExternal: true
          Level: 5.025004791520295
          ExtendedVideoSubType: None
          Channels: 1
          Profile: Profile
          MimeType: MimeType
          DeliveryUrl: DeliveryUrl
          ColorPrimaries: ColorPrimaries
          ServerId: ServerId
          Language: Language
          IsTextSubtitleStream: true
          NalLengthSize: NalLengthSize
          Height: 1
          Protocol: null
          Width: 6
          TimeBase: TimeBase
          CodecTag: CodecTag
          IsDefault: true
          Path: Path
          Comment: Comment
          DeliveryMethod: Encode
          Title: Title
          ExtendedVideoType: None
          Rotation: 7
          RealFrameRate: 1.1730742
          IsHearingImpaired: true
          AspectRatio: AspectRatio
          Type: Unknown
          IsInterlaced: true
          Extradata: Extradata
          BitRate: 3
        - VideoRange: VideoRange
          ColorSpace: ColorSpace
          Index: 4
          BitDepth: 2
          ItemId: ItemId
          SupportsExternalStream: true
          Codec: Codec
          SampleRate: 1
          IsAnamorphic: true
          PixelFormat: PixelFormat
          AttachmentSize: 9
          SubtitleLocationType: InternalStream
          RefFrames: 4
          IsAVC: true
          ColorTransfer: ColorTransfer
          ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
          IsExternalUrl: true
          DisplayTitle: DisplayTitle
          IsForced: true
          ChannelLayout: ChannelLayout
          DisplayLanguage: DisplayLanguage
          AverageFrameRate: 7.4577446
          StreamStartTimeTicks: 9
          IsExternal: true
          Level: 5.025004791520295
          ExtendedVideoSubType: None
          Channels: 1
          Profile: Profile
          MimeType: MimeType
          DeliveryUrl: DeliveryUrl
          ColorPrimaries: ColorPrimaries
          ServerId: ServerId
          Language: Language
          IsTextSubtitleStream: true
          NalLengthSize: NalLengthSize
          Height: 1
          Protocol: null
          Width: 6
          TimeBase: TimeBase
          CodecTag: CodecTag
          IsDefault: true
          Path: Path
          Comment: Comment
          DeliveryMethod: Encode
          Title: Title
          ExtendedVideoType: None
          Rotation: 7
          RealFrameRate: 1.1730742
          IsHearingImpaired: true
          AspectRatio: AspectRatio
          Type: Unknown
          IsInterlaced: true
          Extradata: Extradata
          BitRate: 3
        Size: 1
        Video3DFormat: null
        BufferMs: 7
        ContainerStartTimeTicks: 5
        SortName: SortName
        Timestamp: None
        ItemId: ItemId
        Name: Name
        RequiresOpening: true
        DirectStreamUrl: DirectStreamUrl
        SupportsDirectStream: true
        RequiresClosing: true
        Container: Container
        ServerId: ServerId
        LiveStreamId: LiveStreamId
        RequiresLooping: true
        Protocol: File
        AddApiKeyToDirectStreamUrl: true
        DefaultSubtitleStreamIndex: 9
        TrancodeLiveStartIndex: 2
        IsInfiniteStream: true
        Path: Path
        IsRemote: true
        EncoderProtocol: null
        SupportsDirectPlay: true
        TranscodingSubProtocol: TranscodingSubProtocol
        Formats:
        - Formats
        - Formats
        AnalyzeDurationMs: 6
        WallClockStart: 2000-01-23T04:56:07.000+00:00
        Bitrate: 9
        OpenToken: OpenToken
        ProbeProtocol: null
        SupportsProbing: true
        Type: Default
        ReadAtNativeFramerate: true
        TranscodingContainer: TranscodingContainer
        ProbePath: ProbePath
        TranscodingUrl: TranscodingUrl
        Id: Id
        SupportsTranscoding: true
        DefaultAudioStreamIndex: 8
      x-internal-ref-name: MediaBrowser.Model.Dto.MediaSourceInfo
    MediaProtocol:
      type: string
      enum:
      - File
      - Http
      - Rtmp
      - Rtsp
      - Udp
      - Rtp
      - Ftp
      - Mms
      x-internal-ref-name: MediaBrowser.Model.MediaInfo.MediaProtocol
    MediaSourceType:
      type: string
      enum:
      - Default
      - Grouping
      - Placeholder
      x-internal-ref-name: MediaBrowser.Model.Dto.MediaSourceType
    MediaStream:
      type: object
      properties:
        Codec:
          type: string
          description: "The codec.\r\n\r\nProbe Field: `codec_name`  \r\nApplies to:\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Video`, `MediaBrowser.Model.Entities.MediaStreamType.Audio`,\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Subtitle`  \r\nRelated\
            \ Enums: `T:Emby.Media.Model.Enums.VideoMediaTypes`, `Emby.Media.Model.Enums.AudioMediaTypes`,\
            \ `Emby.Media.Model.Enums.SubtitleMediaTypes`."
        CodecTag:
          type: string
          description: "The codec tag.\r\n\r\nProbe Field: `codec_tag`  \r\nApplies\
            \ to: `MediaBrowser.Model.Entities.MediaStreamType.Video`, `MediaBrowser.Model.Entities.MediaStreamType.Audio`,\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Subtitle`."
        Language:
          type: string
          description: "The language.\r\n\r\nProbe Field: `tags[\"language\"]`  \r\
            \nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Audio`, `MediaBrowser.Model.Entities.MediaStreamType.Subtitle`."
        ColorTransfer:
          type: string
          description: "The color transfer characteristics.\r\n\r\nProbe Field: `color_transfer`\
            \  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`\
            \  \r\nRelated Enum: `Emby.Media.Model.Enums.ColorTransfers`."
        ColorPrimaries:
          type: string
          description: "The chromaticity coordinates of the source primaries.\r\n\r\
            \nProbe Field: `color_primaries`  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`\
            \  \r\nRelated Enum: `Emby.Media.Model.Enums.ColorPrimaries`."
        ColorSpace:
          type: string
          description: "The YUV colorspace type.\r\n\r\nProbe Field: `color_space`\
            \  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`\
            \  \r\nRelated Enum: `Emby.Media.Model.Enums.ColorSpaces`."
        Comment:
          type: string
          description: "The comment.\r\n\r\nProbe Field: `tags[\"comment\"]`  \r\n\
            Applies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`, `MediaBrowser.Model.Entities.MediaStreamType.Audio`,\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Subtitle`."
        StreamStartTimeTicks:
          type: integer
          description: "The start time of the stream.\r\n\r\nProbe Field: `start_time`\
            \  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`,\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Audio`, `MediaBrowser.Model.Entities.MediaStreamType.Subtitle`.\
            \  \r\nActual type: `System.TimeSpan`."
          format: int64
          nullable: true
        TimeBase:
          type: string
          description: "The time\\-base.\r\n\r\nProbe Field: `time_base`  \r\nApplies\
            \ to: `MediaBrowser.Model.Entities.MediaStreamType.Video`, `MediaBrowser.Model.Entities.MediaStreamType.Audio`,\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Subtitle`.  \r\nActual\
            \ type: `Emby.Media.Model.Types.Rational`."
        Title:
          type: string
          description: "The title.\r\n\r\nProbe Field: `tags[\"title\"]`  \r\nApplies\
            \ to: `MediaBrowser.Model.Entities.MediaStreamType.Video`, `MediaBrowser.Model.Entities.MediaStreamType.Audio`,\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Subtitle`."
        Extradata:
          type: string
          description: "The extradata.\r\n\r\nProbe Field: `extradata`  \r\nApplies\
            \ to: `MediaBrowser.Model.Entities.MediaStreamType.Video`, `MediaBrowser.Model.Entities.MediaStreamType.Audio`,\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Subtitle`.\r\n\r\nCurrently,\
            \ this value is only parsed for subtitle streams with codec `Emby.Media.Model.Enums.SubtitleMediaTypes.dvb_teletext`."
        VideoRange:
          type: string
        DisplayTitle:
          type: string
          description: "The display title.\r\n\r\nCustom property set by the application."
        DisplayLanguage:
          type: string
          description: "The display language.\r\n\r\nCustom property set by the application."
        NalLengthSize:
          type: string
          description: "The nal length size.\r\n\r\nProbe Field: `nal_length_size`\
            \  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`\
            \ of type `Emby.Media.Model.Enums.VideoMediaTypes.h264`.  \r\nActual type:\
            \ `System.Int32`."
        IsInterlaced:
          type: boolean
          description: "A value indicating whether this instance is interlaced.\r\n\
            \r\nProbe Field: `field_order` \\!\\= `progressive`  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`."
        IsAVC:
          type: boolean
          nullable: true
          deprecated: true
        ChannelLayout:
          type: string
          description: "The channel layout.\r\n\r\nProbe Field: `channel_layout` \
            \ \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Audio`\
            \  \r\nRelated Enum: `MediaBrowser.Model.Entities.MediaStream.ChannelLayout`."
        BitRate:
          type: integer
          description: "The bit rate.\r\n\r\nProbe Field: `bit_rate`  \r\nApplies\
            \ to: `MediaBrowser.Model.Entities.MediaStreamType.Video`, `MediaBrowser.Model.Entities.MediaStreamType.Audio`.\r\
            \n\r\nTHIS VALUE IS PROCESSED BY CUSTOM LOGIC AND DOES NOT NECESSARILY\
            \ MATCH FFPROBE RESULTS\\!"
          format: int32
          nullable: true
        BitDepth:
          type: integer
          description: "The bit depth.\r\n\r\nProbe Field: `bits_per_sample` or `bits_per_raw_sample`\
            \  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`,\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Audio`."
          format: int32
          nullable: true
        RefFrames:
          type: integer
          description: "The reference frames.\r\n\r\nProbe Field: `refs`  \r\nApplies\
            \ to: `MediaBrowser.Model.Entities.MediaStreamType.Video`."
          format: int32
          nullable: true
        Rotation:
          type: integer
          format: int32
          nullable: true
        Channels:
          type: integer
          description: "The audio channel count.\r\n\r\nProbe Field: `channels`  \r\
            \nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Audio`."
          format: int32
          nullable: true
        SampleRate:
          type: integer
          description: "The sample rate.\r\n\r\nProbe Field: `sample_rate`  \r\nApplies\
            \ to: `MediaBrowser.Model.Entities.MediaStreamType.Audio`  \r\nRelated\
            \ Enum: `Emby.Media.Model.Enums.SampleRates`."
          format: int32
          nullable: true
        IsDefault:
          type: boolean
          description: "A value indicating whether this instance is default.\r\n\r\
            \nProbe Field: `disposition[\"default\"]`  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`,\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Audio`, `MediaBrowser.Model.Entities.MediaStreamType.Subtitle`."
        IsForced:
          type: boolean
          description: "A value indicating whether this instance is forced.\r\n\r\n\
            Probe Field: `disposition[\"forced\"]`  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`,\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Audio`, `MediaBrowser.Model.Entities.MediaStreamType.Subtitle`."
        IsHearingImpaired:
          type: boolean
        Height:
          type: integer
          description: "The height.\r\n\r\nProbe Field: `height`  \r\nApplies to:\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Video`."
          format: int32
          nullable: true
        Width:
          type: integer
          description: "The width.\r\n\r\nProbe Field: `width`  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`."
          format: int32
          nullable: true
        AverageFrameRate:
          type: number
          description: "The average frame rate..\r\n\r\nProbe Field: `avg_frame_rate`\
            \  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`.\
            \  \r\nActual type: `Emby.Media.Model.Types.Rational`."
          format: float
          nullable: true
        RealFrameRate:
          type: number
          description: "The real frame rate..\r\n\r\nProbe Field: `r_frame_rate` \
            \ \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`.\
            \  \r\nActual type: `Emby.Media.Model.Types.Rational`."
          format: float
          nullable: true
        Profile:
          type: string
          description: "The profile.\r\n\r\nProbe Field: `profile`  \r\nApplies to:\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Video`, `MediaBrowser.Model.Entities.MediaStreamType.Audio`\
            \  \r\nRelated Enums: `Emby.Media.Model.Enums.AacProfiles`, `Emby.Media.Model.Enums.AvcProfiles`,\
            \ `Emby.Media.Model.Enums.H263Profiles`, `Emby.Media.Model.Enums.HevcProfiles`,\
            \ `Emby.Media.Model.Enums.Mpeg2Profiles`,`Emby.Media.Model.Enums.Vc1Profiles`,\
            \ `Emby.Media.Model.Enums.Mpeg4Profiles`, `Emby.Media.Model.Enums.Vp8Profiles`,\
            \ `Emby.Media.Model.Enums.Vp9Profiles`."
        Type:
          $ref: '#/components/schemas/MediaStreamType'
        AspectRatio:
          type: string
          description: "The aspect ratio.\r\n\r\nProbe Field: `display_aspect_ratio`\
            \  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`.\
            \  \r\nActual type: `Emby.Media.Model.Types.Rational`."
        Index:
          type: integer
          description: "The index of the stream inside its container.\r\n\r\nProbe\
            \ Field: `index`  \r\nApplies to: `MediaBrowser.Model.Entities.MediaStreamType.Video`,\
            \ `MediaBrowser.Model.Entities.MediaStreamType.Audio`, `MediaBrowser.Model.Entities.MediaStreamType.Subtitle`."
          format: int32
        IsExternal:
          type: boolean
          description: "A value indicating whether this instance is external.\r\n\r\
            \nCustom property set by the application."
        DeliveryMethod:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
        DeliveryUrl:
          type: string
          description: "The delivery URL.\r\n\r\nCustom property set by the application."
        IsExternalUrl:
          type: boolean
          description: "A value indicating whether this instance is external URL.\r\
            \n\r\nCustom property set by the application."
          nullable: true
        IsTextSubtitleStream:
          type: boolean
        SupportsExternalStream:
          type: boolean
          description: "A value indicating whether \\[supports external stream\\]."
        Path:
          type: string
          description: The filename.
        Protocol:
          $ref: '#/components/schemas/MediaProtocol'
        PixelFormat:
          type: string
          description: "The pixel format.\r\n\r\nProbe Field: `pix_fmt`  \r\nApplies\
            \ to: `MediaBrowser.Model.Entities.MediaStreamType.Video`.  \r\nActual\
            \ type: `MediaBrowser.Model.Entities.MediaStream.PixelFormat`."
        Level:
          type: number
          description: "The codec level.\r\n\r\nProbe Field: `level`  \r\nApplies\
            \ to: `MediaBrowser.Model.Entities.MediaStreamType.Video`  \r\nRelated\
            \ Enums: `Emby.Media.Model.Enums.AvcLevels`, `Emby.Media.Model.Enums.H263Levels`,\
            \ `Emby.Media.Model.Enums.HevcLevels`, `Emby.Media.Model.Enums.Mpeg2Levels`,`Emby.Media.Model.Enums.Vc1Levels`,\
            \ `Emby.Media.Model.Enums.Mpeg4Levels`, `Emby.Media.Model.Enums.Vp8Levels`,\
            \ `Emby.Media.Model.Enums.Vp9Levels`."
          format: double
          nullable: true
        IsAnamorphic:
          type: boolean
          description: A value indicating whether this instance is anamorphic.
          nullable: true
        ExtendedVideoType:
          $ref: '#/components/schemas/ExtendedVideoTypes'
        ExtendedVideoSubType:
          $ref: '#/components/schemas/ExtendedVideoSubTypes'
        ExtendedVideoSubTypeDescription:
          type: string
          description: The extended video sub\-type description.
        ItemId:
          type: string
          description: Used only by our Windows app. Not used by Emby Server.
        ServerId:
          type: string
          description: Used only by our Windows app. Not used by Emby Server.
        AttachmentSize:
          type: integer
          description: The size of the attachment.
          format: int32
          nullable: true
        MimeType:
          type: string
          description: The type of the MIME.
        SubtitleLocationType:
          $ref: '#/components/schemas/SubtitleLocationType'
      description: "MediaStream information.\r\n\r\n\r\nMediaStream itens are typically\
        \ included in a `MediaBrowser.Model.Dto.MediaSourceInfo` object.\r\n\r\n\r\
        \n`MediaBrowser.Model.Dto.MediaSourceInfo.MediaStreams`\r\n"
      example:
        VideoRange: VideoRange
        ColorSpace: ColorSpace
        Index: 4
        BitDepth: 2
        ItemId: ItemId
        SupportsExternalStream: true
        Codec: Codec
        SampleRate: 1
        IsAnamorphic: true
        PixelFormat: PixelFormat
        AttachmentSize: 9
        SubtitleLocationType: InternalStream
        RefFrames: 4
        IsAVC: true
        ColorTransfer: ColorTransfer
        ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
        IsExternalUrl: true
        DisplayTitle: DisplayTitle
        IsForced: true
        ChannelLayout: ChannelLayout
        DisplayLanguage: DisplayLanguage
        AverageFrameRate: 7.4577446
        StreamStartTimeTicks: 9
        IsExternal: true
        Level: 5.025004791520295
        ExtendedVideoSubType: None
        Channels: 1
        Profile: Profile
        MimeType: MimeType
        DeliveryUrl: DeliveryUrl
        ColorPrimaries: ColorPrimaries
        ServerId: ServerId
        Language: Language
        IsTextSubtitleStream: true
        NalLengthSize: NalLengthSize
        Height: 1
        Protocol: null
        Width: 6
        TimeBase: TimeBase
        CodecTag: CodecTag
        IsDefault: true
        Path: Path
        Comment: Comment
        DeliveryMethod: Encode
        Title: Title
        ExtendedVideoType: None
        Rotation: 7
        RealFrameRate: 1.1730742
        IsHearingImpaired: true
        AspectRatio: AspectRatio
        Type: Unknown
        IsInterlaced: true
        Extradata: Extradata
        BitRate: 3
      x-internal-ref-name: MediaBrowser.Model.Entities.MediaStream
    MediaStreamType:
      type: string
      description: "Enum MediaStreamType\r\n"
      enum:
      - Unknown
      - Audio
      - Video
      - Subtitle
      - EmbeddedImage
      - Attachment
      - Data
      x-internal-ref-name: MediaBrowser.Model.Entities.MediaStreamType
    SubtitleDeliveryMethod:
      type: string
      enum:
      - Encode
      - Embed
      - External
      - Hls
      - VideoSideData
      x-internal-ref-name: MediaBrowser.Model.Dlna.SubtitleDeliveryMethod
    ExtendedVideoTypes:
      type: string
      enum:
      - None
      - Hdr10
      - Hdr10Plus
      - HyperLogGamma
      - DolbyVision
      x-internal-ref-name: MediaBrowser.Model.Entities.ExtendedVideoTypes
    ExtendedVideoSubTypes:
      type: string
      enum:
      - None
      - Hdr10
      - HyperLogGamma
      - Hdr10Plus0
      - DoviProfile02
      - DoviProfile10
      - DoviProfile22
      - DoviProfile30
      - DoviProfile42
      - DoviProfile50
      - DoviProfile61
      - DoviProfile76
      - DoviProfile81
      - DoviProfile82
      - DoviProfile83
      - DoviProfile84
      - DoviProfile85
      - DoviProfile92
      x-internal-ref-name: MediaBrowser.Model.Entities.ExtendedVideoSubTypes
    SubtitleLocationType:
      type: string
      enum:
      - InternalStream
      - VideoSideData
      x-internal-ref-name: MediaBrowser.Model.Entities.SubtitleLocationType
    TransportStreamTimestamp:
      type: string
      enum:
      - None
      - Zero
      - Valid
      x-internal-ref-name: MediaBrowser.Model.MediaInfo.TransportStreamTimestamp
    MediaUrl:
      type: object
      properties:
        Url:
          type: string
        Name:
          type: string
      example:
        Url: Url
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Entities.MediaUrl
    ProviderIdDictionary:
      type: object
      additionalProperties:
        type: string
      x-internal-ref-name: MediaBrowser.Model.Entities.ProviderIdDictionary
      x-schema-name: ProviderIdDictionary
    BaseItemPerson:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Id:
          type: string
          description: The identifier.
        Role:
          type: string
          description: The role.
        Type:
          $ref: '#/components/schemas/PersonType'
        PrimaryImageTag:
          type: string
          description: The primary image tag.
      description: "This is used by the api to get information about a Person within\
        \ a BaseItem\r\n"
      example:
        Role: Role
        Type: Actor
        PrimaryImageTag: PrimaryImageTag
        Id: Id
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Dto.BaseItemPerson
    PersonType:
      type: string
      enum:
      - Actor
      - Director
      - Writer
      - Producer
      - GuestStar
      - Composer
      - Conductor
      - Lyricist
      x-internal-ref-name: MediaBrowser.Model.Entities.PersonType
    NameLongIdPair:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Id:
          type: integer
          description: The identifier.
          format: int64
      example:
        Id: 3
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Dto.NameLongIdPair
    UserItemDataDto:
      type: object
      properties:
        Rating:
          type: number
          description: The rating.
          format: double
          nullable: true
        PlayedPercentage:
          type: number
          description: The played percentage.
          format: double
          nullable: true
        UnplayedItemCount:
          type: integer
          description: The unplayed item count.
          format: int32
          nullable: true
        PlaybackPositionTicks:
          type: integer
          description: The playback position ticks.
          format: int64
        PlayCount:
          type: integer
          description: The play count.
          format: int32
          nullable: true
        IsFavorite:
          type: boolean
          description: A value indicating whether this instance is favorite.
        LastPlayedDate:
          type: string
          description: The last played date.
          format: date-time
          nullable: true
        Played:
          type: boolean
          description: A value indicating whether this `MediaBrowser.Model.Dto.UserItemDataDto`
            is played.
        Key:
          type: string
          description: The key.
        ItemId:
          type: string
          description: The item identifier.
        ServerId:
          type: string
          description: Used only by our Windows app. Not used by Emby Server.
      description: "Class UserItemDataDto\r\n"
      example:
        UnplayedItemCount: 6
        Played: true
        ServerId: ServerId
        PlayedPercentage: 7.058770351582356
        Rating: 0.8851374739011653
        PlayCount: 4
        PlaybackPositionTicks: 0
        LastPlayedDate: 2000-01-23T04:56:07.000+00:00
        IsFavorite: true
        ItemId: ItemId
        Key: Key
      x-internal-ref-name: MediaBrowser.Model.Dto.UserItemDataDto
    DayOfWeek:
      type: string
      enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      x-internal-ref-name: System.DayOfWeek
    NameIdPair:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Id:
          type: string
          description: The identifier.
      example:
        Id: Id
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Dto.NameIdPair
    ChapterInfo:
      type: object
      properties:
        StartPositionTicks:
          type: integer
          description: The start position ticks.
          format: int64
        Name:
          type: string
          description: The name.
        ImageTag:
          type: string
        MarkerType:
          $ref: '#/components/schemas/MarkerType'
        ChapterIndex:
          type: integer
          format: int32
      description: "Class ChapterInfo\r\n"
      example:
        StartPositionTicks: 5
        ImageTag: ImageTag
        MarkerType: Chapter
        ChapterIndex: 3
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Entities.ChapterInfo
    MarkerType:
      type: string
      enum:
      - Chapter
      - IntroStart
      - IntroEnd
      - CreditsStart
      x-internal-ref-name: MediaBrowser.Model.Entities.MarkerType
    LocationType:
      type: string
      description: "Enum LocationType\r\n"
      enum:
      - FileSystem
      - Virtual
      x-internal-ref-name: MediaBrowser.Model.Entities.LocationType
    MetadataFields:
      type: string
      description: "Enum MetadataFields\r\n"
      enum:
      - Cast
      - Genres
      - ProductionLocations
      - Studios
      - Tags
      - Name
      - Overview
      - Runtime
      - OfficialRating
      - Collections
      - ChannelNumber
      - SortName
      - OriginalTitle
      - SortIndexNumber
      - SortParentIndexNumber
      - CommunityRating
      - CriticRating
      - Tagline
      x-internal-ref-name: MediaBrowser.Model.Entities.MetadataFields
    Drawing.ImageOrientation:
      type: string
      enum:
      - TopLeft
      - TopRight
      - BottomRight
      - BottomLeft
      - LeftTop
      - RightTop
      - RightBottom
      - LeftBottom
      x-internal-ref-name: MediaBrowser.Model.Drawing.ImageOrientation
    LiveTv.TimerType:
      type: string
      enum:
      - Program
      - DateTime
      - Keyword
      x-internal-ref-name: MediaBrowser.Model.LiveTv.TimerType
    QueryResult_UserLibrary.TagItem:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/UserLibrary.TagItem'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 0
        Items:
        - Id: Id
          Name: Name
        - Id: Id
          Name: Name
    UserLibrary.TagItem:
      type: object
      properties:
        Name:
          type: string
        Id:
          type: string
      example:
        Id: Id
        Name: Name
      x-internal-ref-name: Emby.Api.UserLibrary.TagItem
    Collections.CollectionCreationResult:
      type: object
      properties:
        Id:
          type: string
        Name:
          type: string
      example:
        Id: Id
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Collections.CollectionCreationResult
    QueryResult_Devices.DeviceInfo:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/Devices.DeviceInfo'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 6
        Items:
        - AppVersion: AppVersion
          IconUrl: IconUrl
          InternalId: 0
          LastUserName: LastUserName
          LastUserId: LastUserId
          IpAddress: IpAddress
          Id: Id
          DateLastActivity: 2000-01-23T04:56:07.000+00:00
          ReportedDeviceId: ReportedDeviceId
          Name: Name
          AppName: AppName
        - AppVersion: AppVersion
          IconUrl: IconUrl
          InternalId: 0
          LastUserName: LastUserName
          LastUserId: LastUserId
          IpAddress: IpAddress
          Id: Id
          DateLastActivity: 2000-01-23T04:56:07.000+00:00
          ReportedDeviceId: ReportedDeviceId
          Name: Name
          AppName: AppName
    Devices.DeviceInfo:
      type: object
      properties:
        Name:
          type: string
        Id:
          type: string
          description: The identifier.
        InternalId:
          type: integer
          format: int64
        ReportedDeviceId:
          type: string
        LastUserName:
          type: string
          description: The last name of the user.
        AppName:
          type: string
          description: The name of the application.
        AppVersion:
          type: string
          description: The application version.
        LastUserId:
          type: string
          description: The last user identifier.
        DateLastActivity:
          type: string
          format: date-time
        IconUrl:
          type: string
        IpAddress:
          type: string
          format: ipv4
      example:
        AppVersion: AppVersion
        IconUrl: IconUrl
        InternalId: 0
        LastUserName: LastUserName
        LastUserId: LastUserId
        IpAddress: IpAddress
        Id: Id
        DateLastActivity: 2000-01-23T04:56:07.000+00:00
        ReportedDeviceId: ReportedDeviceId
        Name: Name
        AppName: AppName
      x-internal-ref-name: MediaBrowser.Model.Devices.DeviceInfo
    FeatureInfo:
      type: object
      properties:
        Name:
          type: string
        Id:
          type: string
        FeatureType:
          $ref: '#/components/schemas/FeatureType'
      example:
        FeatureType: System
        Id: Id
        Name: Name
      x-internal-ref-name: Emby.Features.FeatureInfo
    FeatureType:
      type: string
      enum:
      - System
      - User
      x-internal-ref-name: Emby.Features.FeatureType
    QueryResult_UserLibrary.OfficialRatingItem:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/UserLibrary.OfficialRatingItem'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 0
        Items:
        - Name: Name
        - Name: Name
    UserLibrary.OfficialRatingItem:
      type: object
      properties:
        Name:
          type: string
      example:
        Name: Name
      x-internal-ref-name: Emby.Api.UserLibrary.OfficialRatingItem
    PackageInfo:
      type: object
      properties:
        id:
          type: string
          description: The internal id of this package.
        name:
          type: string
          description: The name.
        shortDescription:
          type: string
          description: The short description.
        overview:
          type: string
          description: The overview.
        isPremium:
          type: boolean
          description: A value indicating whether this instance is premium.
        adult:
          type: boolean
          description: A value indicating whether this instance is adult only content.
        richDescUrl:
          type: string
          description: The rich desc URL.
        thumbImage:
          type: string
          description: The thumb image.
        previewImage:
          type: string
          description: The preview image.
        type:
          type: string
          description: The type.
        targetFilename:
          type: string
          description: The target filename.
        owner:
          type: string
          description: The owner.
        category:
          type: string
          description: The category.
        tileColor:
          type: string
          description: The catalog tile color.
        featureId:
          type: string
          description: The feature id of this package (if premium).
        price:
          type: number
          description: The price for this package (if premium).
          format: float
          nullable: true
        targetSystem:
          $ref: '#/components/schemas/PackageTargetSystem'
        guid:
          type: string
          description: The guid of the assembly associated with this package (if a
            plug\-in). This is used to identify the proper item for automatic updates.
        isRegistered:
          type: boolean
          description: Whether or not this package is registered.
        expDate:
          type: string
          description: The expiration date for this package.
          format: date-time
        versions:
          type: array
          description: The versions.
          items:
            $ref: '#/components/schemas/PackageVersionInfo'
        enableInAppStore:
          type: boolean
          description: "A value indicating whether \\[enable in application store\\\
            ]."
        installs:
          type: integer
          description: The installs.
          format: int32
      description: "Class PackageInfo\r\n"
      example:
        owner: owner
        overview: overview
        tileColor: tileColor
        shortDescription: shortDescription
        type: type
        richDescUrl: richDescUrl
        targetSystem: Server
        expDate: 2000-01-23T04:56:07.000+00:00
        installs: 6
        enableInAppStore: true
        thumbImage: thumbImage
        versions:
        - sourceUrl: sourceUrl
          versionStr: versionStr
          runtimes: runtimes
          requiredVersionStr: requiredVersionStr
          infoUrl: infoUrl
          targetFilename: targetFilename
          name: name
          checksum: checksum
          guid: guid
          description: description
          classification: Release
          timestamp: 2000-01-23T04:56:07.000+00:00
        - sourceUrl: sourceUrl
          versionStr: versionStr
          runtimes: runtimes
          requiredVersionStr: requiredVersionStr
          infoUrl: infoUrl
          targetFilename: targetFilename
          name: name
          checksum: checksum
          guid: guid
          description: description
          classification: Release
          timestamp: 2000-01-23T04:56:07.000+00:00
        price: 0.8008282
        targetFilename: targetFilename
        name: name
        guid: guid
        isRegistered: true
        id: id
        isPremium: true
        adult: true
        category: category
        previewImage: previewImage
        featureId: featureId
      x-internal-ref-name: MediaBrowser.Model.Updates.PackageInfo
    PackageTargetSystem:
      type: string
      description: "Enum PackageType\r\n"
      enum:
      - Server
      - MBTheater
      - MBClassic
      - Other
      x-internal-ref-name: MediaBrowser.Model.Updates.PackageTargetSystem
    PackageVersionInfo:
      type: object
      properties:
        name:
          type: string
          description: The name.
        guid:
          type: string
          description: The guid.
        versionStr:
          type: string
          description: The version STR.
        classification:
          $ref: '#/components/schemas/PackageVersionClass'
        description:
          type: string
          description: The description.
        requiredVersionStr:
          type: string
          description: The required version STR.
        sourceUrl:
          type: string
          description: The source URL.
        checksum:
          type: string
          description: The source URL.
        targetFilename:
          type: string
          description: The target filename.
        infoUrl:
          type: string
        runtimes:
          type: string
        timestamp:
          type: string
          format: date-time
          nullable: true
      description: "Class PackageVersionInfo\r\n"
      example:
        sourceUrl: sourceUrl
        versionStr: versionStr
        runtimes: runtimes
        requiredVersionStr: requiredVersionStr
        infoUrl: infoUrl
        targetFilename: targetFilename
        name: name
        checksum: checksum
        guid: guid
        description: description
        classification: Release
        timestamp: 2000-01-23T04:56:07.000+00:00
      x-internal-ref-name: MediaBrowser.Model.Updates.PackageVersionInfo
    PackageVersionClass:
      type: string
      description: "Enum PackageVersionClass\r\n"
      enum:
      - Release
      - Beta
      - Dev
      x-internal-ref-name: MediaBrowser.Model.Updates.PackageVersionClass
    Playlists.PlaylistCreationResult:
      type: object
      properties:
        Id:
          type: string
        Name:
          type: string
        ItemAddedCount:
          type: integer
          format: int32
      example:
        ItemAddedCount: 0
        Id: Id
        Name: Name
      x-internal-ref-name: MediaBrowser.Controller.Playlists.PlaylistCreationResult
    Plugins.PluginInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Version:
          type: string
          description: The version.
        ConfigurationFileName:
          type: string
          description: The name of the configuration file.
        Description:
          type: string
          description: The description.
        Id:
          type: string
          description: The unique id.
        ImageTag:
          type: string
          description: The image URL.
      description: "This is a serializable stub class that is used by the api to provide\
        \ information about installed plugins.\r\n"
      example:
        ImageTag: ImageTag
        Description: Description
        Version: Version
        Id: Id
        ConfigurationFileName: ConfigurationFileName
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Plugins.PluginInfo
    TaskInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        State:
          $ref: '#/components/schemas/TaskState'
        CurrentProgressPercentage:
          type: number
          description: The progress.
          format: double
          nullable: true
        Id:
          type: string
          description: The id.
        LastExecutionResult:
          $ref: '#/components/schemas/TaskResult'
        Triggers:
          type: array
          description: The triggers.
          items:
            $ref: '#/components/schemas/TaskTriggerInfo'
        Description:
          type: string
          description: The description.
        Category:
          type: string
          description: The category.
        IsHidden:
          type: boolean
          description: A value indicating whether this instance is hidden.
        Key:
          type: string
          description: The key.
      description: "Class TaskInfo\r\n"
      example:
        IsHidden: true
        Description: Description
        Category: Category
        State: Idle
        CurrentProgressPercentage: 0.8008281904610115
        Triggers:
        - SystemEvent: WakeFromSleep
          DayOfWeek: Sunday
          Type: Type
          IntervalTicks: 1
          TimeOfDayTicks: 6
          MaxRuntimeTicks: 5
        - SystemEvent: WakeFromSleep
          DayOfWeek: Sunday
          Type: Type
          IntervalTicks: 1
          TimeOfDayTicks: 6
          MaxRuntimeTicks: 5
        Id: Id
        LastExecutionResult:
          Status: Completed
          StartTimeUtc: 2000-01-23T04:56:07.000+00:00
          LongErrorMessage: LongErrorMessage
          Id: Id
          EndTimeUtc: 2000-01-23T04:56:07.000+00:00
          ErrorMessage: ErrorMessage
          Key: Key
          Name: Name
        Key: Key
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Tasks.TaskInfo
    TaskState:
      type: string
      description: "Enum TaskState\r\n"
      enum:
      - Idle
      - Cancelling
      - Running
      x-internal-ref-name: MediaBrowser.Model.Tasks.TaskState
    TaskResult:
      type: object
      properties:
        StartTimeUtc:
          type: string
          description: The start time UTC.
          format: date-time
        EndTimeUtc:
          type: string
          description: The end time UTC.
          format: date-time
        Status:
          $ref: '#/components/schemas/TaskCompletionStatus'
        Name:
          type: string
          description: The name.
        Key:
          type: string
          description: The key.
        Id:
          type: string
          description: The id.
        ErrorMessage:
          type: string
          description: The error message.
        LongErrorMessage:
          type: string
          description: The long error message.
      description: "Class TaskExecutionInfo\r\n"
      example:
        Status: Completed
        StartTimeUtc: 2000-01-23T04:56:07.000+00:00
        LongErrorMessage: LongErrorMessage
        Id: Id
        EndTimeUtc: 2000-01-23T04:56:07.000+00:00
        ErrorMessage: ErrorMessage
        Key: Key
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Tasks.TaskResult
    TaskCompletionStatus:
      type: string
      description: "Enum TaskCompletionStatus\r\n"
      enum:
      - Completed
      - Failed
      - Cancelled
      - Aborted
      x-internal-ref-name: MediaBrowser.Model.Tasks.TaskCompletionStatus
    TaskTriggerInfo:
      type: object
      properties:
        Type:
          type: string
          description: The type.
        TimeOfDayTicks:
          type: integer
          description: The time of day.
          format: int64
          nullable: true
        IntervalTicks:
          type: integer
          description: The interval.
          format: int64
          nullable: true
        SystemEvent:
          $ref: '#/components/schemas/SystemEvent'
        DayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        MaxRuntimeTicks:
          type: integer
          description: The maximum runtime ticks.
          format: int64
          nullable: true
      description: "Class TaskTriggerInfo\r\n"
      example:
        SystemEvent: WakeFromSleep
        DayOfWeek: Sunday
        Type: Type
        IntervalTicks: 1
        TimeOfDayTicks: 6
        MaxRuntimeTicks: 5
      x-internal-ref-name: MediaBrowser.Model.Tasks.TaskTriggerInfo
    SystemEvent:
      type: string
      description: "Enum SystemEvent\r\n"
      enum:
      - WakeFromSleep
      - DisplayConfigurationChange
      - NetworkChange
      x-internal-ref-name: MediaBrowser.Model.Tasks.SystemEvent
    Session.SessionInfo:
      type: object
      properties:
        PlayState:
          $ref: '#/components/schemas/PlayerStateInfo'
        AdditionalUsers:
          type: array
          items:
            $ref: '#/components/schemas/SessionUserInfo'
        RemoteEndPoint:
          type: string
          description: The remote end point.
          format: ipv4
        Protocol:
          type: string
        PlayableMediaTypes:
          type: array
          description: The playable media types.
          items:
            type: string
        PlaylistItemId:
          type: string
        PlaylistIndex:
          type: integer
          format: int32
        PlaylistLength:
          type: integer
          format: int32
        Id:
          type: string
          description: The id.
        ServerId:
          type: string
        UserId:
          type: string
          description: The user id.
        UserName:
          type: string
          description: The username.
        UserPrimaryImageTag:
          type: string
        Client:
          type: string
          description: The type of the client.
        LastActivityDate:
          type: string
          description: The last activity date.
          format: date-time
        DeviceName:
          type: string
          description: The name of the device.
        DeviceType:
          type: string
        NowPlayingItem:
          $ref: '#/components/schemas/BaseItemDto'
        InternalDeviceId:
          type: integer
          format: int64
        DeviceId:
          type: string
          description: The device id.
        ApplicationVersion:
          type: string
          description: The application version.
        AppIconUrl:
          type: string
          description: The application icon URL.
        SupportedCommands:
          type: array
          description: The supported commands.
          items:
            type: string
        TranscodingInfo:
          $ref: '#/components/schemas/TranscodingInfo'
        SupportsRemoteControl:
          type: boolean
      description: "Class SessionInfo\r\n"
      example:
        PlaylistLength: 3
        ApplicationVersion: ApplicationVersion
        SupportedCommands:
        - SupportedCommands
        - SupportedCommands
        DeviceId: DeviceId
        PlaylistItemId: PlaylistItemId
        PlaylistIndex: 9
        ServerId: ServerId
        RemoteEndPoint: RemoteEndPoint
        InternalDeviceId: 2
        SupportsRemoteControl: true
        Protocol: Protocol
        Client: Client
        UserName: UserName
        UserPrimaryImageTag: UserPrimaryImageTag
        DeviceType: DeviceType
        PlayableMediaTypes:
        - PlayableMediaTypes
        - PlayableMediaTypes
        NowPlayingItem:
          SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          Size: 2
          CriticRating: 6.4384236
          GameSystemId: 3
          Studios:
          - Id: 3
            Name: Name
          - Id: 3
            Name: Name
          CameraMake: CameraMake
          Aperture: 1.041444916118296
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: ExtraType
          ParentBackdropItemId: ParentBackdropItemId
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 6.628464275087742
          MediaType: MediaType
          ManagementId: ManagementId
          Tags:
          - Tags
          - Tags
          Status: Status
          IndexNumberEnd: 6
          ArtistItems:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          GenreItems:
          - null
          - null
          OfficialRating: OfficialRating
          Longitude: 9.132027271330688
          Composers:
          - null
          - null
          LockData: true
          FocalLength: 4.258773108174356
          IsNews: true
          ShutterSpeed: 4.678947989005849
          Id: Id
          SortIndexNumber: 0
          IsFolder: true
          CanMakePublic: true
          SeriesTimerId: SeriesTimerId
          SeriesId: SeriesId
          ListingsPath: ListingsPath
          MediaStreams:
          - null
          - null
          FileName: FileName
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          CanDownload: true
          IsMovie: true
          SeriesCount: 5
          PrimaryImageItemId: PrimaryImageItemId
          ListingsChannelId: ListingsChannelId
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 4
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 8
          Path: Path
          ParentId: ParentId
          TimerType: Program
          GameSystem: GameSystem
          MusicVideoCount: 8
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          Subviews:
          - Subviews
          - Subviews
          Bitrate: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: ParentThumbItemId
          PreferredMetadataLanguage: PreferredMetadataLanguage
          CanLeaveContent: true
          Type: Type
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ChildCount: 7
          TagItems:
          - null
          - null
          Artists:
          - Artists
          - Artists
          ListingsChannelName: ListingsChannelName
          RunTimeTicks: 1
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          SortParentIndexNumber: 6
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 7.260521264802104
          Guid: Guid
          SortName: SortName
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          AsSeries: true
          AlbumId: AlbumId
          SupportsSync: true
          LocalTrailerCount: 7
          IndexNumber: 5
          CompletionPercentage: 0.5199002018724985
          Genres:
          - Genres
          - Genres
          SeasonId: SeasonId
          LockedFields:
          - Cast
          - Cast
          Disabled: true
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          PresentationUniqueKey: PresentationUniqueKey
          CustomRating: CustomRating
          ListingsChannelNumber: ListingsChannelNumber
          SyncStatus: Queued
          CanManageAccess: true
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: ParentLogoItemId
          PartCount: 7
          ListingsProviderId: ListingsProviderId
          CanEditItems: true
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 9
          CommunityRating: 6.965118
          Software: Software
          Chapters:
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData:
            UnplayedItemCount: 6
            Played: true
            ServerId: ServerId
            PlayedPercentage: 7.058770351582356
            Rating: 0.8851374739011653
            PlayCount: 4
            PlaybackPositionTicks: 0
            LastPlayedDate: 2000-01-23T04:56:07.000+00:00
            IsFavorite: true
            ItemId: ItemId
            Key: Key
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: ChannelId
          ParentIndexNumber: 3
          IsNew: true
          AffiliateCallSign: AffiliateCallSign
          ListingsId: ListingsId
          AlbumArtists:
          - null
          - null
          ServerId: ServerId
          Number: Number
          AlbumCount: 4
          IsRepeat: true
          CollectionType: CollectionType
          PrimaryImageAspectRatio: 3.0576100241049344
          Height: 0
          IsKids: true
          DisplayOrder: DisplayOrder
          MovieCount: 7
          People:
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          Overview: Overview
          SpecialFeatureCount: 3
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: null
          SupportsResume: true
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 0.8774076871421566
        TranscodingInfo:
          IsAudioDirect: true
          ProcessStatistics:
            Metrics:
            - Time: Time
              WorkingSet: 6.778324963048013
              VirtualMemory: 2.8841621266687802
              CpuPercent: 1.284659006116532
            - Time: Time
              WorkingSet: 6.778324963048013
              VirtualMemory: 2.8841621266687802
              CpuPercent: 1.284659006116532
            AverageCpu: 6.438423552598547
            CurrentCpu: 9.018348186070783
            CurrentWorkingSet: 6.965117697638846
            CurrentVirtualMemory: 3.5571952270680973
          TranscodeReasons:
          - ContainerNotSupported
          - ContainerNotSupported
          VideoEncoderHwAccel: VideoEncoderHwAccel
          Framerate: 1.0246457
          Container: Container
          TranscodingStartPositionTicks: 7.457744773683766
          IsVideoDirect: true
          AverageCpuUsage: 9.369310271410669
          VideoDecoderIsHardware: true
          VideoDecoderMediaType: VideoDecoderMediaType
          SubProtocol: SubProtocol
          CompletionPercentage: 1.4894159098541704
          Height: 4
          VideoPipelineInfo:
          - StepType: Decoder
            FfmpegDescription: FfmpegDescription
            Param: Param
            ParamShort: ParamShort
            StepTypeName: StepTypeName
            IsHardwareContext: true
            FfmpegOptions: FfmpegOptions
            FfmpegName: FfmpegName
            Short: Short
            HardwareContextName: HardwareContextName
            Name: Name
          - StepType: Decoder
            FfmpegDescription: FfmpegDescription
            Param: Param
            ParamShort: ParamShort
            StepTypeName: StepTypeName
            IsHardwareContext: true
            FfmpegOptions: FfmpegOptions
            FfmpegName: FfmpegName
            Short: Short
            HardwareContextName: HardwareContextName
            Name: Name
          VideoDecoder: VideoDecoder
          Width: 1
          AudioCodec: AudioCodec
          VideoEncoderIsHardware: true
          SubtitlePipelineInfos:
          - - null
            - null
          - - null
            - null
          CpuHistory:
          - Item1: 6.683562403749608
            Item2: 8.762042012749001
          - Item1: 6.683562403749608
            Item2: 8.762042012749001
          CurrentThrottle: 6
          VideoCodec: VideoCodec
          Bitrate: 4
          VideoDecoderHwAccel: VideoDecoderHwAccel
          TranscodingPositionTicks: 6.84685269835264
          CurrentCpuUsage: 9.965781217890562
          AudioBitrate: 7
          AudioChannels: 5
          VideoEncoderMediaType: VideoEncoderMediaType
          VideoEncoder: VideoEncoder
          VideoBitrate: 1
        AppIconUrl: AppIconUrl
        UserId: UserId
        LastActivityDate: 2000-01-23T04:56:07.000+00:00
        Id: Id
        AdditionalUsers:
        - UserName: UserName
          UserId: UserId
          UserInternalId: 7
        - UserName: UserName
          UserId: UserId
          UserInternalId: 7
        PlayState:
          RepeatMode: RepeatNone
          CanSeek: true
          PlayMethod: Transcode
          SubtitleOffset: 5
          PositionTicks: 0
          AudioStreamIndex: 1
          IsMuted: true
          VolumeLevel: 6
          MediaSourceId: MediaSourceId
          IsPaused: true
          SubtitleStreamIndex: 5
          PlaybackRate: 2.3021358869347655
        DeviceName: DeviceName
      x-internal-ref-name: MediaBrowser.Controller.Session.SessionInfo
    PlayerStateInfo:
      type: object
      properties:
        PositionTicks:
          type: integer
          description: The now playing position ticks.
          format: int64
          nullable: true
        CanSeek:
          type: boolean
          description: A value indicating whether this instance can seek.
        IsPaused:
          type: boolean
          description: A value indicating whether this instance is paused.
        IsMuted:
          type: boolean
          description: A value indicating whether this instance is muted.
        VolumeLevel:
          type: integer
          description: The volume level.
          format: int32
          nullable: true
        AudioStreamIndex:
          type: integer
          description: The index of the now playing audio stream.
          format: int32
          nullable: true
        SubtitleStreamIndex:
          type: integer
          description: The index of the now playing subtitle stream.
          format: int32
          nullable: true
        MediaSourceId:
          type: string
          description: The now playing media version identifier.
        PlayMethod:
          $ref: '#/components/schemas/PlayMethod'
        RepeatMode:
          $ref: '#/components/schemas/RepeatMode'
        SubtitleOffset:
          type: integer
          format: int32
        PlaybackRate:
          type: number
          format: double
      example:
        RepeatMode: RepeatNone
        CanSeek: true
        PlayMethod: Transcode
        SubtitleOffset: 5
        PositionTicks: 0
        AudioStreamIndex: 1
        IsMuted: true
        VolumeLevel: 6
        MediaSourceId: MediaSourceId
        IsPaused: true
        SubtitleStreamIndex: 5
        PlaybackRate: 2.3021358869347655
      x-internal-ref-name: MediaBrowser.Model.Session.PlayerStateInfo
    PlayMethod:
      type: string
      enum:
      - Transcode
      - DirectStream
      - DirectPlay
      x-internal-ref-name: MediaBrowser.Model.Session.PlayMethod
    RepeatMode:
      type: string
      enum:
      - RepeatNone
      - RepeatAll
      - RepeatOne
      x-internal-ref-name: MediaBrowser.Model.Session.RepeatMode
    SessionUserInfo:
      type: object
      properties:
        UserId:
          type: string
          description: The user identifier.
        UserName:
          type: string
          description: The name of the user.
        UserInternalId:
          type: integer
          format: int64
      description: "Class SessionUserInfo.\r\n"
      example:
        UserName: UserName
        UserId: UserId
        UserInternalId: 7
      x-internal-ref-name: MediaBrowser.Model.Session.SessionUserInfo
    TranscodingInfo:
      type: object
      properties:
        AudioCodec:
          type: string
        VideoCodec:
          type: string
        SubProtocol:
          type: string
        Container:
          type: string
        IsVideoDirect:
          type: boolean
        IsAudioDirect:
          type: boolean
        Bitrate:
          type: integer
          format: int32
          nullable: true
        AudioBitrate:
          type: integer
          format: int32
          nullable: true
        VideoBitrate:
          type: integer
          format: int32
          nullable: true
        Framerate:
          type: number
          format: float
          nullable: true
        CompletionPercentage:
          type: number
          format: double
          nullable: true
        TranscodingPositionTicks:
          type: number
          format: double
          nullable: true
        TranscodingStartPositionTicks:
          type: number
          format: double
          nullable: true
        Width:
          type: integer
          format: int32
          nullable: true
        Height:
          type: integer
          format: int32
          nullable: true
        AudioChannels:
          type: integer
          format: int32
          nullable: true
        TranscodeReasons:
          type: array
          items:
            $ref: '#/components/schemas/TranscodeReason'
        CurrentCpuUsage:
          type: number
          description: "Deprecated, please use ProcessStatistics instead"
          format: double
          nullable: true
          deprecated: true
        AverageCpuUsage:
          type: number
          description: "Deprecated, please use ProcessStatistics instead"
          format: double
          nullable: true
          deprecated: true
        CpuHistory:
          type: array
          description: "Deprecated, please use ProcessStatistics instead"
          deprecated: true
          items:
            $ref: '#/components/schemas/Tuple_Double-Double'
        ProcessStatistics:
          $ref: '#/components/schemas/ProcessRun.Metrics.ProcessStatistics'
        CurrentThrottle:
          type: integer
          format: int32
          nullable: true
        VideoDecoder:
          type: string
        VideoDecoderIsHardware:
          type: boolean
        VideoDecoderMediaType:
          type: string
        VideoDecoderHwAccel:
          type: string
        VideoEncoder:
          type: string
        VideoEncoderIsHardware:
          type: boolean
        VideoEncoderMediaType:
          type: string
        VideoEncoderHwAccel:
          type: string
        VideoPipelineInfo:
          type: array
          items:
            $ref: '#/components/schemas/Transcoding.VpStepInfo'
        SubtitlePipelineInfos:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/Transcoding.VpStepInfo'
      example:
        IsAudioDirect: true
        ProcessStatistics:
          Metrics:
          - Time: Time
            WorkingSet: 6.778324963048013
            VirtualMemory: 2.8841621266687802
            CpuPercent: 1.284659006116532
          - Time: Time
            WorkingSet: 6.778324963048013
            VirtualMemory: 2.8841621266687802
            CpuPercent: 1.284659006116532
          AverageCpu: 6.438423552598547
          CurrentCpu: 9.018348186070783
          CurrentWorkingSet: 6.965117697638846
          CurrentVirtualMemory: 3.5571952270680973
        TranscodeReasons:
        - ContainerNotSupported
        - ContainerNotSupported
        VideoEncoderHwAccel: VideoEncoderHwAccel
        Framerate: 1.0246457
        Container: Container
        TranscodingStartPositionTicks: 7.457744773683766
        IsVideoDirect: true
        AverageCpuUsage: 9.369310271410669
        VideoDecoderIsHardware: true
        VideoDecoderMediaType: VideoDecoderMediaType
        SubProtocol: SubProtocol
        CompletionPercentage: 1.4894159098541704
        Height: 4
        VideoPipelineInfo:
        - StepType: Decoder
          FfmpegDescription: FfmpegDescription
          Param: Param
          ParamShort: ParamShort
          StepTypeName: StepTypeName
          IsHardwareContext: true
          FfmpegOptions: FfmpegOptions
          FfmpegName: FfmpegName
          Short: Short
          HardwareContextName: HardwareContextName
          Name: Name
        - StepType: Decoder
          FfmpegDescription: FfmpegDescription
          Param: Param
          ParamShort: ParamShort
          StepTypeName: StepTypeName
          IsHardwareContext: true
          FfmpegOptions: FfmpegOptions
          FfmpegName: FfmpegName
          Short: Short
          HardwareContextName: HardwareContextName
          Name: Name
        VideoDecoder: VideoDecoder
        Width: 1
        AudioCodec: AudioCodec
        VideoEncoderIsHardware: true
        SubtitlePipelineInfos:
        - - null
          - null
        - - null
          - null
        CpuHistory:
        - Item1: 6.683562403749608
          Item2: 8.762042012749001
        - Item1: 6.683562403749608
          Item2: 8.762042012749001
        CurrentThrottle: 6
        VideoCodec: VideoCodec
        Bitrate: 4
        VideoDecoderHwAccel: VideoDecoderHwAccel
        TranscodingPositionTicks: 6.84685269835264
        CurrentCpuUsage: 9.965781217890562
        AudioBitrate: 7
        AudioChannels: 5
        VideoEncoderMediaType: VideoEncoderMediaType
        VideoEncoder: VideoEncoder
        VideoBitrate: 1
      x-internal-ref-name: MediaBrowser.Model.Session.TranscodingInfo
    TranscodeReason:
      type: string
      enum:
      - ContainerNotSupported
      - VideoCodecNotSupported
      - AudioCodecNotSupported
      - ContainerBitrateExceedsLimit
      - AudioBitrateNotSupported
      - AudioChannelsNotSupported
      - VideoResolutionNotSupported
      - UnknownVideoStreamInfo
      - UnknownAudioStreamInfo
      - AudioProfileNotSupported
      - AudioSampleRateNotSupported
      - AnamorphicVideoNotSupported
      - InterlacedVideoNotSupported
      - SecondaryAudioNotSupported
      - RefFramesNotSupported
      - VideoBitDepthNotSupported
      - VideoBitrateNotSupported
      - VideoFramerateNotSupported
      - VideoLevelNotSupported
      - VideoProfileNotSupported
      - AudioBitDepthNotSupported
      - SubtitleCodecNotSupported
      - DirectPlayError
      - VideoRangeNotSupported
      - SubtitleContentOptionsEnabled
      x-internal-ref-name: MediaBrowser.Model.Session.TranscodeReason
    Tuple_Double-Double:
      type: object
      properties:
        Item1:
          type: number
          format: double
        Item2:
          type: number
          format: double
      example:
        Item1: 6.683562403749608
        Item2: 8.762042012749001
    ProcessRun.Metrics.ProcessStatistics:
      type: object
      properties:
        CurrentCpu:
          type: number
          description: The current cpu.
          format: double
        AverageCpu:
          type: number
          description: The average cpu.
          format: double
        CurrentVirtualMemory:
          type: number
          description: The currently allocated virtual memory.
          format: double
        CurrentWorkingSet:
          type: number
          description: The currently allocated working set.
          format: double
        Metrics:
          type: array
          description: The metrics.
          items:
            $ref: '#/components/schemas/ProcessRun.Metrics.ProcessMetricPoint'
      example:
        Metrics:
        - Time: Time
          WorkingSet: 6.778324963048013
          VirtualMemory: 2.8841621266687802
          CpuPercent: 1.284659006116532
        - Time: Time
          WorkingSet: 6.778324963048013
          VirtualMemory: 2.8841621266687802
          CpuPercent: 1.284659006116532
        AverageCpu: 6.438423552598547
        CurrentCpu: 9.018348186070783
        CurrentWorkingSet: 6.965117697638846
        CurrentVirtualMemory: 3.5571952270680973
      x-internal-ref-name: MediaBrowser.Model.ProcessRun.Metrics.ProcessStatistics
    ProcessRun.Metrics.ProcessMetricPoint:
      type: object
      properties:
        Time:
          type: string
          description: The time.
          format: time
        CpuPercent:
          type: number
          description: The cpu percent.
          format: double
        VirtualMemory:
          type: number
          description: The virtual memory.
          format: double
        WorkingSet:
          type: number
          description: The working set.
          format: double
      example:
        Time: Time
        WorkingSet: 6.778324963048013
        VirtualMemory: 2.8841621266687802
        CpuPercent: 1.284659006116532
      x-internal-ref-name: MediaBrowser.Model.ProcessRun.Metrics.ProcessMetricPoint
    Transcoding.VpStepInfo:
      type: object
      properties:
        StepType:
          $ref: '#/components/schemas/Transcoding.VpStepTypes'
        StepTypeName:
          type: string
        HardwareContextName:
          type: string
        IsHardwareContext:
          type: boolean
        Name:
          type: string
        Short:
          type: string
        FfmpegName:
          type: string
        FfmpegDescription:
          type: string
        FfmpegOptions:
          type: string
        Param:
          type: string
        ParamShort:
          type: string
      example:
        StepType: Decoder
        FfmpegDescription: FfmpegDescription
        Param: Param
        ParamShort: ParamShort
        StepTypeName: StepTypeName
        IsHardwareContext: true
        FfmpegOptions: FfmpegOptions
        FfmpegName: FfmpegName
        Short: Short
        HardwareContextName: HardwareContextName
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Session.Transcoding.VpStepInfo
    Transcoding.VpStepTypes:
      type: string
      description: "Video Processing Step Type enum.\r\n"
      enum:
      - Decoder
      - Encoder
      - Scaling
      - Deinterlace
      - SubtitleOverlay
      - ToneMapping
      - ColorConversion
      - SplitCaptions
      - TextSub2Video
      - GraphicSub2Video
      - GraphicSub2Text
      - BurnInTextSubs
      - BurnInGraphicSubs
      - ScaleSubs
      - TextMod
      - Censor
      - ShowSpeaker
      - StripStyles
      - ConnectTo
      x-internal-ref-name: MediaBrowser.Model.Session.Transcoding.VpStepTypes
    ImageType:
      type: string
      description: "Enum ImageType\r\n"
      enum:
      - Primary
      - Art
      - Backdrop
      - Banner
      - Logo
      - Thumb
      - Disc
      - Box
      - Screenshot
      - Menu
      - Chapter
      - BoxRear
      - Thumbnail
      - LogoLight
      - LogoLightColor
      x-internal-ref-name: MediaBrowser.Model.Entities.ImageType
    NameValuePair:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Value:
          type: string
          description: The value.
      example:
        Value: Value
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Dto.NameValuePair
    MBBackup.Api.RestoreOptions:
      type: object
      properties:
        RestoreServerId:
          type: boolean
        UseFiles:
          type: string
      x-internal-ref-name: MBBackup.Api.RestoreOptions
    MBBackup.Api.DataRestoreOptions:
      type: object
      properties:
        Users:
          type: array
          items:
            $ref: '#/components/schemas/MBBackup.Api.UserRestoreInfo'
      x-internal-ref-name: MBBackup.Api.DataRestoreOptions
    MBBackup.Api.UserRestoreInfo:
      type: object
      properties:
        SourceUserId:
          type: string
        TargetUserId:
          type: string
      x-internal-ref-name: MBBackup.Api.UserRestoreInfo
    MBBackup.Api.AllBackupsInfo:
      type: object
      properties:
        FullBackupInfo:
          $ref: '#/components/schemas/MBBackup.BackupInfo'
        LightBackups:
          type: array
          items:
            $ref: '#/components/schemas/MBBackup.BackupInfo'
      example:
        LightBackups:
        - null
        - null
        FullBackupInfo:
          ServerVersion: ServerVersion
          PluginVersion: PluginVersion
          CanRestore: true
          DateCreated: 2000-01-23T04:56:07.000+00:00
          Users:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
          IsFullBackup: true
          Name: Name
      x-internal-ref-name: MBBackup.Api.AllBackupsInfo
    MBBackup.BackupInfo:
      type: object
      properties:
        ServerVersion:
          type: string
        PluginVersion:
          type: string
        Name:
          type: string
        CanRestore:
          type: boolean
        IsFullBackup:
          type: boolean
        DateCreated:
          type: string
          format: date-time
        Users:
          type: array
          items:
            $ref: '#/components/schemas/NameIdPair'
      example:
        ServerVersion: ServerVersion
        PluginVersion: PluginVersion
        CanRestore: true
        DateCreated: 2000-01-23T04:56:07.000+00:00
        Users:
        - Id: Id
          Name: Name
        - Id: Id
          Name: Name
        IsFullBackup: true
        Name: Name
      x-internal-ref-name: MBBackup.BackupInfo
    Branding.BrandingOptions:
      type: object
      properties:
        LoginDisclaimer:
          type: string
          description: The login disclaimer.
        CustomCss:
          type: string
          description: The custom CSS.
      example:
        CustomCss: CustomCss
        LoginDisclaimer: LoginDisclaimer
      x-internal-ref-name: MediaBrowser.Model.Branding.BrandingOptions
    Connect.ConnectAuthenticationExchangeResult:
      type: object
      properties:
        LocalUserId:
          type: string
        AccessToken:
          type: string
      example:
        LocalUserId: LocalUserId
        AccessToken: AccessToken
      x-internal-ref-name: Emby.Server.Connect.ConnectAuthenticationExchangeResult
    Devices.DeviceOptions:
      type: object
      properties:
        CustomName:
          type: string
      example:
        CustomName: CustomName
      x-internal-ref-name: MediaBrowser.Model.Devices.DeviceOptions
    Devices.ContentUploadHistory:
      type: object
      properties:
        DeviceId:
          type: string
        FilesUploaded:
          type: array
          items:
            $ref: '#/components/schemas/Devices.LocalFileInfo'
      example:
        FilesUploaded:
        - Album: Album
          Id: Id
          MimeType: MimeType
          Name: Name
        - Album: Album
          Id: Id
          MimeType: MimeType
          Name: Name
        DeviceId: DeviceId
      x-internal-ref-name: MediaBrowser.Model.Devices.ContentUploadHistory
    Devices.LocalFileInfo:
      type: object
      properties:
        Name:
          type: string
        Id:
          type: string
        Album:
          type: string
        MimeType:
          type: string
      example:
        Album: Album
        Id: Id
        MimeType: MimeType
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Devices.LocalFileInfo
    DisplayPreferences:
      type: object
      properties:
        Id:
          type: string
          description: The user id.
        SortBy:
          type: string
          description: The sort by.
        CustomPrefs:
          type: object
          additionalProperties:
            type: string
          description: The custom prefs.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
        Client:
          type: string
          description: The client
      description: "Defines the display preferences for any item that supports them\
        \ (usually Folders)\r\n"
      example:
        SortBy: SortBy
        SortOrder: Ascending
        Id: Id
        Client: Client
        CustomPrefs:
          key: CustomPrefs
      x-internal-ref-name: MediaBrowser.Model.Entities.DisplayPreferences
    SortOrder:
      type: string
      description: "Enum SortOrder\r\n"
      enum:
      - Ascending
      - Descending
      x-internal-ref-name: MediaBrowser.Model.Entities.SortOrder
    Dlna.Profiles.DlnaProfile:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/Dlna.Profiles.DeviceProfileType'
        Path:
          type: string
        UserId:
          type: string
        AlbumArtPn:
          type: string
        MaxAlbumArtWidth:
          type: integer
          format: int32
        MaxAlbumArtHeight:
          type: integer
          format: int32
        MaxIconWidth:
          type: integer
          format: int32
          nullable: true
        MaxIconHeight:
          type: integer
          format: int32
          nullable: true
        FriendlyName:
          type: string
        Manufacturer:
          type: string
        ManufacturerUrl:
          type: string
        ModelName:
          type: string
        ModelDescription:
          type: string
        ModelNumber:
          type: string
        ModelUrl:
          type: string
        SerialNumber:
          type: string
        EnableAlbumArtInDidl:
          type: boolean
        EnableSingleAlbumArtLimit:
          type: boolean
        EnableSingleSubtitleLimit:
          type: boolean
        ProtocolInfo:
          type: string
        TimelineOffsetSeconds:
          type: integer
          format: int32
        RequiresPlainVideoItems:
          type: boolean
        RequiresPlainFolders:
          type: boolean
        IgnoreTranscodeByteRangeRequests:
          type: boolean
        SupportsSamsungBookmark:
          type: boolean
        Identification:
          $ref: '#/components/schemas/Dlna.Profiles.DeviceIdentification'
        ProtocolInfoDetection:
          $ref: '#/components/schemas/Dlna.Profiles.ProtocolInfoDetection'
        Name:
          type: string
          description: The name.
        Id:
          type: string
        SupportedMediaTypes:
          type: string
        MaxStreamingBitrate:
          type: integer
          format: int64
          nullable: true
        MusicStreamingTranscodingBitrate:
          type: integer
          format: int32
          nullable: true
        MaxStaticMusicBitrate:
          type: integer
          format: int32
          nullable: true
        DirectPlayProfiles:
          type: array
          description: The direct play profiles.
          items:
            $ref: '#/components/schemas/DirectPlayProfile'
        TranscodingProfiles:
          type: array
          description: The transcoding profiles.
          items:
            $ref: '#/components/schemas/TranscodingProfile'
        ContainerProfiles:
          type: array
          items:
            $ref: '#/components/schemas/ContainerProfile'
        CodecProfiles:
          type: array
          items:
            $ref: '#/components/schemas/CodecProfile'
        ResponseProfiles:
          type: array
          items:
            $ref: '#/components/schemas/ResponseProfile'
        SubtitleProfiles:
          type: array
          items:
            $ref: '#/components/schemas/SubtitleProfile'
      example:
        ManufacturerUrl: ManufacturerUrl
        EnableSingleAlbumArtLimit: true
        MusicStreamingTranscodingBitrate: 7
        AlbumArtPn: AlbumArtPn
        TranscodingProfiles:
        - Context: Streaming
          BreakOnNonKeyFrames: true
          CopyTimestamps: true
          MinSegments: 3
          EnableMpegtsM2TsMode: true
          MaxAudioChannels: MaxAudioChannels
          VideoCodec: VideoCodec
          Container: Container
          Type: null
          MaxWidth: 7
          EstimateContentLength: true
          AllowInterlacedVideoStreamCopy: true
          SegmentLength: 2
          ManifestSubtitles: ManifestSubtitles
          TranscodeSeekInfo: Auto
          MaxHeight: 1
          Protocol: Protocol
          MaxManifestSubtitles: 4
          AudioCodec: AudioCodec
          FillEmptySubtitleSegments: true
        - Context: Streaming
          BreakOnNonKeyFrames: true
          CopyTimestamps: true
          MinSegments: 3
          EnableMpegtsM2TsMode: true
          MaxAudioChannels: MaxAudioChannels
          VideoCodec: VideoCodec
          Container: Container
          Type: null
          MaxWidth: 7
          EstimateContentLength: true
          AllowInterlacedVideoStreamCopy: true
          SegmentLength: 2
          ManifestSubtitles: ManifestSubtitles
          TranscodeSeekInfo: Auto
          MaxHeight: 1
          Protocol: Protocol
          MaxManifestSubtitles: 4
          AudioCodec: AudioCodec
          FillEmptySubtitleSegments: true
        SupportsSamsungBookmark: true
        Identification:
          ModelNumber: ModelNumber
          ManufacturerUrl: ManufacturerUrl
          DeviceDescription: DeviceDescription
          ModelUrl: ModelUrl
          ModelName: ModelName
          SerialNumber: SerialNumber
          FriendlyName: FriendlyName
          Headers:
          - Value: Value
            Name: Name
            Match: Equals
          - Value: Value
            Name: Name
            Match: Equals
          Manufacturer: Manufacturer
          ModelDescription: ModelDescription
        MaxStreamingBitrate: 2
        IgnoreTranscodeByteRangeRequests: true
        Name: Name
        ResponseProfiles:
        - Container: Container
          Type: null
          OrgPn: OrgPn
          VideoCodec: VideoCodec
          AudioCodec: AudioCodec
          MimeType: MimeType
          Conditions:
          - null
          - null
        - Container: Container
          Type: null
          OrgPn: OrgPn
          VideoCodec: VideoCodec
          AudioCodec: AudioCodec
          MimeType: MimeType
          Conditions:
          - null
          - null
        ModelUrl: ModelUrl
        Manufacturer: Manufacturer
        ProtocolInfo: ProtocolInfo
        RequiresPlainVideoItems: true
        ModelDescription: ModelDescription
        MaxAlbumArtWidth: 0
        Path: Path
        ModelNumber: ModelNumber
        ModelName: ModelName
        MaxIconHeight: 5
        FriendlyName: FriendlyName
        RequiresPlainFolders: true
        EnableSingleSubtitleLimit: true
        SubtitleProfiles:
        - Container: Container
          Format: Format
          Language: Language
          DidlMode: DidlMode
          Method: Encode
          Protocol: Protocol
        - Container: Container
          Format: Format
          Language: Language
          DidlMode: DidlMode
          Method: Encode
          Protocol: Protocol
        MaxAlbumArtHeight: 6
        EnableAlbumArtInDidl: true
        Type: System
        SerialNumber: SerialNumber
        SupportedMediaTypes: SupportedMediaTypes
        CodecProfiles:
        - Type: Video
          Codec: Codec
          Container: Container
          ApplyConditions:
          - null
          - null
          Conditions:
          - null
          - null
        - Type: Video
          Codec: Codec
          Container: Container
          ApplyConditions:
          - null
          - null
          Conditions:
          - null
          - null
        UserId: UserId
        MaxIconWidth: 1
        TimelineOffsetSeconds: 5
        MaxStaticMusicBitrate: 9
        DirectPlayProfiles:
        - Container: Container
          Type: Audio
          VideoCodec: VideoCodec
          AudioCodec: AudioCodec
        - Container: Container
          Type: Audio
          VideoCodec: VideoCodec
          AudioCodec: AudioCodec
        ContainerProfiles:
        - Type: null
          Container: Container
          Conditions:
          - Condition: Equals
            IsRequired: true
            Value: Value
            Property: AudioChannels
          - Condition: Equals
            IsRequired: true
            Value: Value
            Property: AudioChannels
        - Type: null
          Container: Container
          Conditions:
          - Condition: Equals
            IsRequired: true
            Value: Value
            Property: AudioChannels
          - Condition: Equals
            IsRequired: true
            Value: Value
            Property: AudioChannels
        Id: Id
        ProtocolInfoDetection:
          EnabledForVideo: true
          EnabledForAudio: true
          EnabledForPhotos: true
      x-internal-ref-name: Emby.Dlna.Profiles.DlnaProfile
    Dlna.Profiles.DeviceProfileType:
      type: string
      enum:
      - System
      - User
      x-internal-ref-name: Emby.Dlna.Profiles.DeviceProfileType
    Dlna.Profiles.DeviceIdentification:
      type: object
      properties:
        FriendlyName:
          type: string
        ModelNumber:
          type: string
        SerialNumber:
          type: string
        ModelName:
          type: string
        ModelDescription:
          type: string
        DeviceDescription:
          type: string
        ModelUrl:
          type: string
        Manufacturer:
          type: string
        ManufacturerUrl:
          type: string
        Headers:
          type: array
          items:
            $ref: '#/components/schemas/Dlna.Profiles.HttpHeaderInfo'
      example:
        ModelNumber: ModelNumber
        ManufacturerUrl: ManufacturerUrl
        DeviceDescription: DeviceDescription
        ModelUrl: ModelUrl
        ModelName: ModelName
        SerialNumber: SerialNumber
        FriendlyName: FriendlyName
        Headers:
        - Value: Value
          Name: Name
          Match: Equals
        - Value: Value
          Name: Name
          Match: Equals
        Manufacturer: Manufacturer
        ModelDescription: ModelDescription
      x-internal-ref-name: Emby.Dlna.Profiles.DeviceIdentification
    Dlna.Profiles.HttpHeaderInfo:
      type: object
      properties:
        Name:
          type: string
        Value:
          type: string
        Match:
          $ref: '#/components/schemas/Dlna.Profiles.HeaderMatchType'
      example:
        Value: Value
        Name: Name
        Match: Equals
      x-internal-ref-name: Emby.Dlna.Profiles.HttpHeaderInfo
    Dlna.Profiles.HeaderMatchType:
      type: string
      enum:
      - Equals
      - Regex
      - Substring
      x-internal-ref-name: Emby.Dlna.Profiles.HeaderMatchType
    Dlna.Profiles.ProtocolInfoDetection:
      type: object
      properties:
        EnabledForVideo:
          type: boolean
        EnabledForAudio:
          type: boolean
        EnabledForPhotos:
          type: boolean
      example:
        EnabledForVideo: true
        EnabledForAudio: true
        EnabledForPhotos: true
      x-internal-ref-name: Emby.Dlna.Profiles.ProtocolInfoDetection
    DirectPlayProfile:
      type: object
      properties:
        Container:
          type: string
        AudioCodec:
          type: string
        VideoCodec:
          type: string
        Type:
          $ref: '#/components/schemas/DlnaProfileType'
      example:
        Container: Container
        Type: Audio
        VideoCodec: VideoCodec
        AudioCodec: AudioCodec
      x-internal-ref-name: MediaBrowser.Model.Dlna.DirectPlayProfile
    DlnaProfileType:
      type: string
      enum:
      - Audio
      - Video
      - Photo
      x-internal-ref-name: MediaBrowser.Model.Dlna.DlnaProfileType
    TranscodingProfile:
      type: object
      properties:
        Container:
          type: string
        Type:
          $ref: '#/components/schemas/DlnaProfileType'
        VideoCodec:
          type: string
        AudioCodec:
          type: string
        Protocol:
          type: string
        EstimateContentLength:
          type: boolean
        EnableMpegtsM2TsMode:
          type: boolean
        TranscodeSeekInfo:
          $ref: '#/components/schemas/TranscodeSeekInfo'
        CopyTimestamps:
          type: boolean
        Context:
          $ref: '#/components/schemas/EncodingContext'
        MaxAudioChannels:
          type: string
        MinSegments:
          type: integer
          format: int32
        SegmentLength:
          type: integer
          format: int32
        BreakOnNonKeyFrames:
          type: boolean
        AllowInterlacedVideoStreamCopy:
          type: boolean
        ManifestSubtitles:
          type: string
        MaxManifestSubtitles:
          type: integer
          format: int32
        MaxWidth:
          type: integer
          format: int32
        MaxHeight:
          type: integer
          format: int32
        FillEmptySubtitleSegments:
          type: boolean
      example:
        Context: Streaming
        BreakOnNonKeyFrames: true
        CopyTimestamps: true
        MinSegments: 3
        EnableMpegtsM2TsMode: true
        MaxAudioChannels: MaxAudioChannels
        VideoCodec: VideoCodec
        Container: Container
        Type: null
        MaxWidth: 7
        EstimateContentLength: true
        AllowInterlacedVideoStreamCopy: true
        SegmentLength: 2
        ManifestSubtitles: ManifestSubtitles
        TranscodeSeekInfo: Auto
        MaxHeight: 1
        Protocol: Protocol
        MaxManifestSubtitles: 4
        AudioCodec: AudioCodec
        FillEmptySubtitleSegments: true
      x-internal-ref-name: MediaBrowser.Model.Dlna.TranscodingProfile
    TranscodeSeekInfo:
      type: string
      enum:
      - Auto
      - Bytes
      x-internal-ref-name: MediaBrowser.Model.Dlna.TranscodeSeekInfo
    EncodingContext:
      type: string
      enum:
      - Streaming
      - Static
      x-internal-ref-name: MediaBrowser.Model.Dlna.EncodingContext
    ContainerProfile:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/DlnaProfileType'
        Conditions:
          type: array
          items:
            $ref: '#/components/schemas/ProfileCondition'
        Container:
          type: string
      example:
        Type: null
        Container: Container
        Conditions:
        - Condition: Equals
          IsRequired: true
          Value: Value
          Property: AudioChannels
        - Condition: Equals
          IsRequired: true
          Value: Value
          Property: AudioChannels
      x-internal-ref-name: MediaBrowser.Model.Dlna.ContainerProfile
    ProfileCondition:
      type: object
      properties:
        Condition:
          $ref: '#/components/schemas/ProfileConditionType'
        Property:
          $ref: '#/components/schemas/ProfileConditionValue'
        Value:
          type: string
        IsRequired:
          type: boolean
      example:
        Condition: Equals
        IsRequired: true
        Value: Value
        Property: AudioChannels
      x-internal-ref-name: MediaBrowser.Model.Dlna.ProfileCondition
    ProfileConditionType:
      type: string
      enum:
      - Equals
      - NotEquals
      - LessThanEqual
      - GreaterThanEqual
      - EqualsAny
      x-internal-ref-name: MediaBrowser.Model.Dlna.ProfileConditionType
    ProfileConditionValue:
      type: string
      enum:
      - AudioChannels
      - AudioBitrate
      - AudioProfile
      - Width
      - Height
      - Has64BitOffsets
      - PacketLength
      - VideoBitDepth
      - VideoBitrate
      - VideoFramerate
      - VideoLevel
      - VideoProfile
      - VideoTimestamp
      - IsAnamorphic
      - RefFrames
      - NumAudioStreams
      - NumVideoStreams
      - IsSecondaryAudio
      - VideoCodecTag
      - IsAvc
      - IsInterlaced
      - AudioSampleRate
      - AudioBitDepth
      - VideoRange
      - VideoRotation
      x-internal-ref-name: MediaBrowser.Model.Dlna.ProfileConditionValue
    CodecProfile:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/CodecType'
        Conditions:
          type: array
          items:
            $ref: '#/components/schemas/ProfileCondition'
        ApplyConditions:
          type: array
          items:
            $ref: '#/components/schemas/ProfileCondition'
        Codec:
          type: string
        Container:
          type: string
      example:
        Type: Video
        Codec: Codec
        Container: Container
        ApplyConditions:
        - null
        - null
        Conditions:
        - null
        - null
      x-internal-ref-name: MediaBrowser.Model.Dlna.CodecProfile
    CodecType:
      type: string
      enum:
      - Video
      - VideoAudio
      - Audio
      x-internal-ref-name: MediaBrowser.Model.Dlna.CodecType
    ResponseProfile:
      type: object
      properties:
        Container:
          type: string
        AudioCodec:
          type: string
        VideoCodec:
          type: string
        Type:
          $ref: '#/components/schemas/DlnaProfileType'
        OrgPn:
          type: string
        MimeType:
          type: string
        Conditions:
          type: array
          items:
            $ref: '#/components/schemas/ProfileCondition'
      example:
        Container: Container
        Type: null
        OrgPn: OrgPn
        VideoCodec: VideoCodec
        AudioCodec: AudioCodec
        MimeType: MimeType
        Conditions:
        - null
        - null
      x-internal-ref-name: MediaBrowser.Model.Dlna.ResponseProfile
    SubtitleProfile:
      type: object
      properties:
        Format:
          type: string
        Method:
          $ref: '#/components/schemas/SubtitleDeliveryMethod'
        DidlMode:
          type: string
        Language:
          type: string
        Container:
          type: string
        Protocol:
          type: string
      example:
        Container: Container
        Format: Format
        Language: Language
        DidlMode: DidlMode
        Method: Encode
        Protocol: Protocol
      x-internal-ref-name: MediaBrowser.Model.Dlna.SubtitleProfile
    Configuration.ToneMapping.ToneMapOptionsVisibility:
      type: object
      properties:
        ShowAdvanced:
          type: boolean
        IsSoftwareToneMappingAvailable:
          type: boolean
        IsAnyHardwareToneMappingAvailable:
          type: boolean
        ShowNvidiaOptions:
          type: boolean
        ShowQuickSyncOptions:
          type: boolean
        ShowVaapiOptions:
          type: boolean
        IsOpenClAvailable:
          type: boolean
        IsOpenClSuperTAvailable:
          type: boolean
        IsVaapiNativeAvailable:
          type: boolean
        IsQuickSyncNativeAvailable:
          type: boolean
        OperatingSystem:
          $ref: '#/components/schemas/OperatingSystem'
      example:
        OperatingSystem: Windows
        IsSoftwareToneMappingAvailable: true
        ShowQuickSyncOptions: true
        ShowAdvanced: true
        IsVaapiNativeAvailable: true
        IsAnyHardwareToneMappingAvailable: true
        ShowVaapiOptions: true
        ShowNvidiaOptions: true
        IsOpenClAvailable: true
        IsQuickSyncNativeAvailable: true
        IsOpenClSuperTAvailable: true
      x-internal-ref-name: Emby.Server.MediaEncoding.Configuration.ToneMapping.ToneMapOptionsVisibility
    OperatingSystem:
      type: string
      enum:
      - Windows
      - Linux
      - OSX
      - BSD
      - Android
      x-internal-ref-name: MediaBrowser.Model.System.OperatingSystem
    EditObjectContainer:
      type: object
      properties:
        Object:
          type: object
        DefaultObject:
          type: object
        TypeName:
          type: string
        EditorRoot:
          $ref: '#/components/schemas/Editors.EditorRoot'
      example:
        TypeName: TypeName
        EditorRoot:
          ParentId: ParentId
          AllowEmpty: true
          Description: Description
          EditorType: null
          PropertyConditions:
          - AffectedPropertyId: AffectedPropertyId
            TargetPropertyId: TargetPropertyId
            SimpleCondition: IsTrue
            Value: {}
            ValueCondition: IsEqual
            ConditionType: Visible
          - AffectedPropertyId: AffectedPropertyId
            TargetPropertyId: TargetPropertyId
            SimpleCondition: IsTrue
            Value: {}
            ValueCondition: IsEqual
            ConditionType: Visible
          TitleButton:
            ParentId: ParentId
            AllowEmpty: true
            Description: Description
            DisplayName: DisplayName
            EditorType: Group
            Id: Id
            IsAdvanced: true
            IsReadOnly: true
            Name: Name
          Name: Name
          PostbackActions:
          - CommandParameterPropertyId: CommandParameterPropertyId
            TargetEditorId: TargetEditorId
            PostbackCommandId: PostbackCommandId
          - CommandParameterPropertyId: CommandParameterPropertyId
            TargetEditorId: TargetEditorId
            PostbackCommandId: PostbackCommandId
          EditorItems:
          - ParentId: ParentId
            AllowEmpty: true
            Description: Description
            DisplayName: DisplayName
            EditorType: null
            Id: Id
            IsAdvanced: true
            IsReadOnly: true
            Name: Name
          - ParentId: ParentId
            AllowEmpty: true
            Description: Description
            DisplayName: DisplayName
            EditorType: null
            Id: Id
            IsAdvanced: true
            IsReadOnly: true
            Name: Name
          DisplayName: DisplayName
          Id: Id
          IsAdvanced: true
          IsReadOnly: true
        DefaultObject: {}
        Object: {}
      x-internal-ref-name: Emby.Web.GenericEdit.EditObjectContainer
    Editors.EditorRoot:
      type: object
      properties:
        PropertyConditions:
          type: array
          items:
            $ref: '#/components/schemas/Conditions.PropertyCondition'
        PostbackActions:
          type: array
          items:
            $ref: '#/components/schemas/Actions.PostbackAction'
        TitleButton:
          $ref: '#/components/schemas/Editors.EditorButtonItem'
        EditorItems:
          type: array
          items:
            $ref: '#/components/schemas/Editors.EditorBase'
        EditorType:
          $ref: '#/components/schemas/Common.EditorTypes'
        Name:
          type: string
        Id:
          type: string
        AllowEmpty:
          type: boolean
        IsReadOnly:
          type: boolean
        IsAdvanced:
          type: boolean
        DisplayName:
          type: string
        Description:
          type: string
        ParentId:
          type: string
      example:
        ParentId: ParentId
        AllowEmpty: true
        Description: Description
        EditorType: null
        PropertyConditions:
        - AffectedPropertyId: AffectedPropertyId
          TargetPropertyId: TargetPropertyId
          SimpleCondition: IsTrue
          Value: {}
          ValueCondition: IsEqual
          ConditionType: Visible
        - AffectedPropertyId: AffectedPropertyId
          TargetPropertyId: TargetPropertyId
          SimpleCondition: IsTrue
          Value: {}
          ValueCondition: IsEqual
          ConditionType: Visible
        TitleButton:
          ParentId: ParentId
          AllowEmpty: true
          Description: Description
          DisplayName: DisplayName
          EditorType: Group
          Id: Id
          IsAdvanced: true
          IsReadOnly: true
          Name: Name
        Name: Name
        PostbackActions:
        - CommandParameterPropertyId: CommandParameterPropertyId
          TargetEditorId: TargetEditorId
          PostbackCommandId: PostbackCommandId
        - CommandParameterPropertyId: CommandParameterPropertyId
          TargetEditorId: TargetEditorId
          PostbackCommandId: PostbackCommandId
        EditorItems:
        - ParentId: ParentId
          AllowEmpty: true
          Description: Description
          DisplayName: DisplayName
          EditorType: null
          Id: Id
          IsAdvanced: true
          IsReadOnly: true
          Name: Name
        - ParentId: ParentId
          AllowEmpty: true
          Description: Description
          DisplayName: DisplayName
          EditorType: null
          Id: Id
          IsAdvanced: true
          IsReadOnly: true
          Name: Name
        DisplayName: DisplayName
        Id: Id
        IsAdvanced: true
        IsReadOnly: true
      x-internal-ref-name: Emby.Web.GenericEdit.Editors.EditorRoot
    Conditions.PropertyCondition:
      type: object
      properties:
        AffectedPropertyId:
          type: string
        ConditionType:
          $ref: '#/components/schemas/Conditions.PropertyConditionType'
        TargetPropertyId:
          type: string
          description: The target property name or path.
        SimpleCondition:
          $ref: '#/components/schemas/Attributes.SimpleCondition'
        ValueCondition:
          $ref: '#/components/schemas/Attributes.ValueCondition'
        Value:
          type: object
          description: The value.
      example:
        AffectedPropertyId: AffectedPropertyId
        TargetPropertyId: TargetPropertyId
        SimpleCondition: IsTrue
        Value: {}
        ValueCondition: IsEqual
        ConditionType: Visible
      x-internal-ref-name: Emby.Web.GenericEdit.Conditions.PropertyCondition
    Conditions.PropertyConditionType:
      type: string
      enum:
      - Visible
      - Enabled
      x-internal-ref-name: Emby.Web.GenericEdit.Conditions.PropertyConditionType
    Attributes.SimpleCondition:
      type: string
      description: "Conditions on the source value.\r\n"
      enum:
      - IsTrue
      - IsFalse
      - IsNull
      - IsNotNullOrEmpty
      x-internal-ref-name: MediaBrowser.Model.Attributes.SimpleCondition
    Attributes.ValueCondition:
      type: string
      description: "Conditions for comparing with a target value.\r\n"
      enum:
      - IsEqual
      - IsNotEqual
      - IsGreater
      - IsGreaterOrEqual
      - IsLess
      - IsLessOrEqual
      x-internal-ref-name: MediaBrowser.Model.Attributes.ValueCondition
    Actions.PostbackAction:
      type: object
      properties:
        TargetEditorId:
          type: string
        PostbackCommandId:
          type: string
        CommandParameterPropertyId:
          type: string
      example:
        CommandParameterPropertyId: CommandParameterPropertyId
        TargetEditorId: TargetEditorId
        PostbackCommandId: PostbackCommandId
      x-internal-ref-name: Emby.Web.GenericEdit.Actions.PostbackAction
    Editors.EditorButtonItem:
      type: object
      properties:
        EditorType:
          $ref: '#/components/schemas/Common.EditorTypes'
        Name:
          type: string
        Id:
          type: string
        AllowEmpty:
          type: boolean
        IsReadOnly:
          type: boolean
        IsAdvanced:
          type: boolean
        DisplayName:
          type: string
        Description:
          type: string
        ParentId:
          type: string
      example:
        ParentId: ParentId
        AllowEmpty: true
        Description: Description
        DisplayName: DisplayName
        EditorType: Group
        Id: Id
        IsAdvanced: true
        IsReadOnly: true
        Name: Name
      x-internal-ref-name: Emby.Web.GenericEdit.Editors.EditorButtonItem
    Common.EditorTypes:
      type: string
      enum:
      - Group
      - Text
      - Numeric
      - Boolean
      - SelectSingle
      - SelectMultiple
      - Date
      - FilePath
      - FolderPath
      - StatusItem
      - ProgressItem
      - ButtonItem
      - ButtonGroup
      - CaptionItem
      - LabelItem
      - ItemList
      - RadioGroup
      - DxDataGrid
      - DxPivotGrid
      - SpacerItem
      x-internal-ref-name: Emby.Web.GenericEdit.Common.EditorTypes
    Editors.EditorBase:
      type: object
      properties:
        EditorType:
          $ref: '#/components/schemas/Common.EditorTypes'
        Name:
          type: string
        Id:
          type: string
        AllowEmpty:
          type: boolean
        IsReadOnly:
          type: boolean
        IsAdvanced:
          type: boolean
        DisplayName:
          type: string
        Description:
          type: string
        ParentId:
          type: string
      example:
        ParentId: ParentId
        AllowEmpty: true
        Description: Description
        DisplayName: DisplayName
        EditorType: null
        Id: Id
        IsAdvanced: true
        IsReadOnly: true
        Name: Name
      x-internal-ref-name: Emby.Web.GenericEdit.Editors.EditorBase
    MediaEncoding.CodecParameterContext:
      type: string
      enum:
      - Playback
      - Conversion
      x-internal-ref-name: MediaBrowser.Controller.MediaEncoding.CodecParameterContext
    ValidatePath:
      type: object
      properties:
        ValidateWriteable:
          type: boolean
        IsFile:
          type: boolean
          nullable: true
        Username:
          type: string
        Password:
          type: string
      x-internal-ref-name: Emby.Api.ValidatePath
    DefaultDirectoryBrowserInfo:
      type: object
      properties:
        Path:
          type: string
      example:
        Path: Path
      x-internal-ref-name: Emby.Api.DefaultDirectoryBrowserInfo
    IO.FileSystemEntryInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Path:
          type: string
          description: The path.
        Type:
          $ref: '#/components/schemas/IO.FileSystemEntryType'
      description: "Class FileSystemEntryInfo\r\n"
      example:
        Path: Path
        Type: File
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.IO.FileSystemEntryInfo
    IO.FileSystemEntryType:
      type: string
      description: "Enum FileSystemEntryType\r\n"
      enum:
      - File
      - Directory
      - NetworkComputer
      - NetworkShare
      x-internal-ref-name: MediaBrowser.Model.IO.FileSystemEntryType
    GetDirectoryContents:
      type: object
      properties:
        Username:
          type: string
        Password:
          type: string
      x-internal-ref-name: Emby.Api.GetDirectoryContents
    UserLibrary.UpdateUserItemAccess:
      type: object
      properties:
        ItemIds:
          type: array
          items:
            type: string
        UserIds:
          type: array
          items:
            type: string
        ItemAccess:
          $ref: '#/components/schemas/UserItemShareLevel'
      x-internal-ref-name: Emby.Api.UserLibrary.UpdateUserItemAccess
    UserItemShareLevel:
      type: string
      enum:
      - None
      - Read
      - Write
      - Manage
      - ManageDelete
      x-internal-ref-name: MediaBrowser.Model.Dto.UserItemShareLevel
    ItemCounts:
      type: object
      properties:
        MovieCount:
          type: integer
          description: The movie count.
          format: int32
        SeriesCount:
          type: integer
          description: The series count.
          format: int32
        EpisodeCount:
          type: integer
          description: The episode count.
          format: int32
        GameCount:
          type: integer
          description: The game count.
          format: int32
        ArtistCount:
          type: integer
          format: int32
        ProgramCount:
          type: integer
          format: int32
        GameSystemCount:
          type: integer
          description: The game system count.
          format: int32
        TrailerCount:
          type: integer
          description: The trailer count.
          format: int32
        SongCount:
          type: integer
          description: The song count.
          format: int32
        AlbumCount:
          type: integer
          description: The album count.
          format: int32
        MusicVideoCount:
          type: integer
          description: The music video count.
          format: int32
        BoxSetCount:
          type: integer
          description: The box set count.
          format: int32
        BookCount:
          type: integer
          description: The book count.
          format: int32
        ItemCount:
          type: integer
          format: int32
      description: "Class LibrarySummary\r\n"
      example:
        MusicVideoCount: 4
        MovieCount: 0
        EpisodeCount: 1
        ProgramCount: 2
        GameCount: 5
        ArtistCount: 5
        GameSystemCount: 7
        SeriesCount: 6
        BookCount: 1
        TrailerCount: 9
        AlbumCount: 2
        BoxSetCount: 7
        ItemCount: 1
        SongCount: 3
      x-internal-ref-name: MediaBrowser.Model.Dto.ItemCounts
    Persistence.IntroDebugInfo:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Path:
          type: string
        Start:
          type: integer
          format: int64
        End:
          type: integer
          format: int64
      example:
        Path: Path
        Start: 6
        End: 1
        Id: 0
      x-internal-ref-name: MediaBrowser.Controller.Persistence.IntroDebugInfo
    Library.LibraryOptionsResult:
      type: object
      properties:
        MetadataSavers:
          type: array
          items:
            $ref: '#/components/schemas/Library.LibraryOptionInfo'
        MetadataReaders:
          type: array
          items:
            $ref: '#/components/schemas/Library.LibraryOptionInfo'
        SubtitleFetchers:
          type: array
          items:
            $ref: '#/components/schemas/Library.LibraryOptionInfo'
        LyricsFetchers:
          type: array
          items:
            $ref: '#/components/schemas/Library.LibraryOptionInfo'
        TypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/Library.LibraryTypeOptions'
      example:
        LyricsFetchers:
        - null
        - null
        TypeOptions:
        - DefaultImageOptions:
          - Type: null
            Limit: 0
            MinWidth: 6
          - Type: null
            Limit: 0
            MinWidth: 6
          Type: Type
          SupportedImageTypes:
          - Primary
          - Primary
          ImageFetchers:
          - null
          - null
          MetadataFetchers:
          - null
          - null
        - DefaultImageOptions:
          - Type: null
            Limit: 0
            MinWidth: 6
          - Type: null
            Limit: 0
            MinWidth: 6
          Type: Type
          SupportedImageTypes:
          - Primary
          - Primary
          ImageFetchers:
          - null
          - null
          MetadataFetchers:
          - null
          - null
        MetadataReaders:
        - null
        - null
        SubtitleFetchers:
        - null
        - null
        MetadataSavers:
        - DefaultEnabled: true
          Features:
          - Collections
          - Collections
          SetupUrl: SetupUrl
          Name: Name
        - DefaultEnabled: true
          Features:
          - Collections
          - Collections
          SetupUrl: SetupUrl
          Name: Name
      x-internal-ref-name: Emby.Api.Library.LibraryOptionsResult
    Library.LibraryOptionInfo:
      type: object
      properties:
        Name:
          type: string
        SetupUrl:
          type: string
        DefaultEnabled:
          type: boolean
        Features:
          type: array
          items:
            $ref: '#/components/schemas/MetadataFeatures'
      example:
        DefaultEnabled: true
        Features:
        - Collections
        - Collections
        SetupUrl: SetupUrl
        Name: Name
      x-internal-ref-name: Emby.Api.Library.LibraryOptionInfo
    MetadataFeatures:
      type: string
      enum:
      - Collections
      - Adult
      - RequiredSetup
      x-internal-ref-name: MediaBrowser.Model.Configuration.MetadataFeatures
    Library.LibraryTypeOptions:
      type: object
      properties:
        Type:
          type: string
        MetadataFetchers:
          type: array
          items:
            $ref: '#/components/schemas/Library.LibraryOptionInfo'
        ImageFetchers:
          type: array
          items:
            $ref: '#/components/schemas/Library.LibraryOptionInfo'
        SupportedImageTypes:
          type: array
          items:
            $ref: '#/components/schemas/ImageType'
        DefaultImageOptions:
          type: array
          items:
            $ref: '#/components/schemas/ImageOption'
      example:
        DefaultImageOptions:
        - Type: null
          Limit: 0
          MinWidth: 6
        - Type: null
          Limit: 0
          MinWidth: 6
        Type: Type
        SupportedImageTypes:
        - Primary
        - Primary
        ImageFetchers:
        - null
        - null
        MetadataFetchers:
        - null
        - null
      x-internal-ref-name: Emby.Api.Library.LibraryTypeOptions
    ImageOption:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ImageType'
        Limit:
          type: integer
          description: The limit.
          format: int32
        MinWidth:
          type: integer
          description: The minimum width.
          format: int32
      example:
        Type: null
        Limit: 0
        MinWidth: 6
      x-internal-ref-name: MediaBrowser.Model.Configuration.ImageOption
    Library.MediaFolder:
      type: object
      properties:
        Name:
          type: string
        Id:
          type: string
        Guid:
          type: string
        SubFolders:
          type: array
          items:
            $ref: '#/components/schemas/Library.SubFolder'
        IsUserAccessConfigurable:
          type: boolean
      example:
        IsUserAccessConfigurable: true
        Id: Id
        Guid: Guid
        SubFolders:
        - Path: Path
          IsUserAccessConfigurable: true
          Id: Id
          Name: Name
        - Path: Path
          IsUserAccessConfigurable: true
          Id: Id
          Name: Name
        Name: Name
      x-internal-ref-name: Emby.Api.Library.MediaFolder
    Library.SubFolder:
      type: object
      properties:
        Name:
          type: string
        Id:
          type: string
        Path:
          type: string
        IsUserAccessConfigurable:
          type: boolean
      example:
        Path: Path
        IsUserAccessConfigurable: true
        Id: Id
        Name: Name
      x-internal-ref-name: Emby.Api.Library.SubFolder
    Library.AddVirtualFolder:
      type: object
      properties:
        Name:
          type: string
        CollectionType:
          type: string
        RefreshLibrary:
          type: boolean
        Paths:
          type: array
          items:
            type: string
        LibraryOptions:
          $ref: '#/components/schemas/LibraryOptions'
      x-internal-ref-name: Emby.Api.Library.AddVirtualFolder
    LibraryOptions:
      type: object
      properties:
        EnableArchiveMediaFiles:
          type: boolean
        EnablePhotos:
          type: boolean
        EnableRealtimeMonitor:
          type: boolean
        EnableMarkerDetection:
          type: boolean
        EnableMarkerDetectionDuringLibraryScan:
          type: boolean
        IntroDetectionFingerprintLength:
          type: integer
          format: int32
        EnableChapterImageExtraction:
          type: boolean
        ExtractChapterImagesDuringLibraryScan:
          type: boolean
        DownloadImagesInAdvance:
          type: boolean
        CacheImages:
          type: boolean
        PathInfos:
          type: array
          items:
            $ref: '#/components/schemas/MediaPathInfo'
        IgnoreHiddenFiles:
          type: boolean
        IgnoreFileExtensions:
          type: array
          items:
            type: string
        SaveLocalMetadata:
          type: boolean
        SaveMetadataHidden:
          type: boolean
        SaveLocalThumbnailSets:
          type: boolean
        ImportPlaylists:
          type: boolean
        EnableAutomaticSeriesGrouping:
          type: boolean
        ShareEmbeddedMusicAlbumImages:
          type: boolean
        EnableEmbeddedTitles:
          type: boolean
        EnableAudioResume:
          type: boolean
        AutoGenerateChapters:
          type: boolean
        AutomaticRefreshIntervalDays:
          type: integer
          format: int32
        PlaceholderMetadataRefreshIntervalDays:
          type: integer
          format: int32
        PreferredMetadataLanguage:
          type: string
          description: The preferred metadata language.
        PreferredImageLanguage:
          type: string
        ContentType:
          type: string
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataSavers:
          type: array
          items:
            type: string
        DisabledLocalMetadataReaders:
          type: array
          items:
            type: string
        LocalMetadataReaderOrder:
          type: array
          items:
            type: string
        DisabledLyricsFetchers:
          type: array
          items:
            type: string
        SaveLyricsWithMedia:
          type: boolean
        LyricsDownloadMaxAgeDays:
          type: integer
          format: int32
        LyricsFetcherOrder:
          type: array
          items:
            type: string
        LyricsDownloadLanguages:
          type: array
          items:
            type: string
        DisabledSubtitleFetchers:
          type: array
          items:
            type: string
        SubtitleFetcherOrder:
          type: array
          items:
            type: string
        SkipSubtitlesIfEmbeddedSubtitlesPresent:
          type: boolean
        SkipSubtitlesIfAudioTrackMatches:
          type: boolean
        SubtitleDownloadLanguages:
          type: array
          items:
            type: string
        SubtitleDownloadMaxAgeDays:
          type: integer
          format: int32
        RequirePerfectSubtitleMatch:
          type: boolean
        SaveSubtitlesWithMedia:
          type: boolean
        ForcedSubtitlesOnly:
          type: boolean
        HearingImpairedSubtitlesOnly:
          type: boolean
        TypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/TypeOptions'
        CollapseSingleItemFolders:
          type: boolean
        EnableAdultMetadata:
          type: boolean
        ImportCollections:
          type: boolean
        MinCollectionItems:
          type: integer
          format: int32
        MusicFolderStructure:
          type: string
        MinResumePct:
          type: integer
          description: The minimum percentage of an item that must be played in order
            for playstate to be updated.
          format: int32
        MaxResumePct:
          type: integer
          description: The maximum percentage of an item that can be played while
            still saving playstate. If this percentage is crossed playstate will be
            reset to the beginning and the item will be marked watched.
          format: int32
        MinResumeDurationSeconds:
          type: integer
          description: The minimum duration that an item must have in order to be
            eligible for playstate updates..
          format: int32
        ThumbnailImagesIntervalSeconds:
          type: integer
          format: int32
        SampleIgnoreSize:
          type: integer
          format: int32
      example:
        LyricsDownloadMaxAgeDays: 5
        SaveLyricsWithMedia: true
        EnableMarkerDetection: true
        ContentType: ContentType
        SaveSubtitlesWithMedia: true
        ForcedSubtitlesOnly: true
        MetadataCountryCode: MetadataCountryCode
        MetadataSavers:
        - MetadataSavers
        - MetadataSavers
        SaveMetadataHidden: true
        SaveLocalMetadata: true
        PreferredImageLanguage: PreferredImageLanguage
        DownloadImagesInAdvance: true
        ThumbnailImagesIntervalSeconds: 2
        MaxResumePct: 9
        MinResumeDurationSeconds: 3
        EnableAudioResume: true
        MusicFolderStructure: MusicFolderStructure
        IgnoreHiddenFiles: true
        ShareEmbeddedMusicAlbumImages: true
        TypeOptions:
        - Type: Type
          MetadataFetcherOrder:
          - MetadataFetcherOrder
          - MetadataFetcherOrder
          ImageFetchers:
          - ImageFetchers
          - ImageFetchers
          ImageOptions:
          - Type: null
            Limit: 0
            MinWidth: 6
          - Type: null
            Limit: 0
            MinWidth: 6
          ImageFetcherOrder:
          - ImageFetcherOrder
          - ImageFetcherOrder
          MetadataFetchers:
          - MetadataFetchers
          - MetadataFetchers
        - Type: Type
          MetadataFetcherOrder:
          - MetadataFetcherOrder
          - MetadataFetcherOrder
          ImageFetchers:
          - ImageFetchers
          - ImageFetchers
          ImageOptions:
          - Type: null
            Limit: 0
            MinWidth: 6
          - Type: null
            Limit: 0
            MinWidth: 6
          ImageFetcherOrder:
          - ImageFetcherOrder
          - ImageFetcherOrder
          MetadataFetchers:
          - MetadataFetchers
          - MetadataFetchers
        DisabledLyricsFetchers:
        - DisabledLyricsFetchers
        - DisabledLyricsFetchers
        LyricsDownloadLanguages:
        - LyricsDownloadLanguages
        - LyricsDownloadLanguages
        ImportPlaylists: true
        EnableRealtimeMonitor: true
        IntroDetectionFingerprintLength: 0
        EnableAutomaticSeriesGrouping: true
        ExtractChapterImagesDuringLibraryScan: true
        SubtitleDownloadLanguages:
        - SubtitleDownloadLanguages
        - SubtitleDownloadLanguages
        MinResumePct: 7
        SaveLocalThumbnailSets: true
        SubtitleDownloadMaxAgeDays: 5
        EnableAdultMetadata: true
        SkipSubtitlesIfAudioTrackMatches: true
        RequirePerfectSubtitleMatch: true
        DisabledSubtitleFetchers:
        - DisabledSubtitleFetchers
        - DisabledSubtitleFetchers
        LocalMetadataReaderOrder:
        - LocalMetadataReaderOrder
        - LocalMetadataReaderOrder
        LyricsFetcherOrder:
        - LyricsFetcherOrder
        - LyricsFetcherOrder
        HearingImpairedSubtitlesOnly: true
        CacheImages: true
        IgnoreFileExtensions:
        - IgnoreFileExtensions
        - IgnoreFileExtensions
        CollapseSingleItemFolders: true
        EnableMarkerDetectionDuringLibraryScan: true
        EnableEmbeddedTitles: true
        PlaceholderMetadataRefreshIntervalDays: 1
        EnableChapterImageExtraction: true
        AutomaticRefreshIntervalDays: 6
        SubtitleFetcherOrder:
        - SubtitleFetcherOrder
        - SubtitleFetcherOrder
        ImportCollections: true
        AutoGenerateChapters: true
        EnableArchiveMediaFiles: true
        DisabledLocalMetadataReaders:
        - DisabledLocalMetadataReaders
        - DisabledLocalMetadataReaders
        PreferredMetadataLanguage: PreferredMetadataLanguage
        EnablePhotos: true
        SkipSubtitlesIfEmbeddedSubtitlesPresent: true
        PathInfos:
        - Path: Path
          Username: Username
          NetworkPath: NetworkPath
          Password: Password
        - Path: Path
          Username: Username
          NetworkPath: NetworkPath
          Password: Password
        SampleIgnoreSize: 4
        MinCollectionItems: 2
      x-internal-ref-name: MediaBrowser.Model.Configuration.LibraryOptions
    MediaPathInfo:
      type: object
      properties:
        Path:
          type: string
        NetworkPath:
          type: string
        Username:
          type: string
        Password:
          type: string
      example:
        Path: Path
        Username: Username
        NetworkPath: NetworkPath
        Password: Password
      x-internal-ref-name: MediaBrowser.Model.Configuration.MediaPathInfo
    TypeOptions:
      type: object
      properties:
        Type:
          type: string
        MetadataFetchers:
          type: array
          items:
            type: string
        MetadataFetcherOrder:
          type: array
          items:
            type: string
        ImageFetchers:
          type: array
          items:
            type: string
        ImageFetcherOrder:
          type: array
          items:
            type: string
        ImageOptions:
          type: array
          items:
            $ref: '#/components/schemas/ImageOption'
      example:
        Type: Type
        MetadataFetcherOrder:
        - MetadataFetcherOrder
        - MetadataFetcherOrder
        ImageFetchers:
        - ImageFetchers
        - ImageFetchers
        ImageOptions:
        - Type: null
          Limit: 0
          MinWidth: 6
        - Type: null
          Limit: 0
          MinWidth: 6
        ImageFetcherOrder:
        - ImageFetcherOrder
        - ImageFetcherOrder
        MetadataFetchers:
        - MetadataFetchers
        - MetadataFetchers
      x-internal-ref-name: MediaBrowser.Model.Configuration.TypeOptions
    LiveStreamRequest:
      type: object
      properties:
        OpenToken:
          type: string
        UserId:
          type: string
        PlaySessionId:
          type: string
        MaxStreamingBitrate:
          type: integer
          format: int64
          nullable: true
        StartTimeTicks:
          type: integer
          format: int64
          nullable: true
        AudioStreamIndex:
          type: integer
          format: int32
          nullable: true
        SubtitleStreamIndex:
          type: integer
          format: int32
          nullable: true
        MaxAudioChannels:
          type: integer
          format: int32
          nullable: true
        ItemId:
          type: integer
          format: int64
        DeviceProfile:
          $ref: '#/components/schemas/DeviceProfile'
        EnableDirectPlay:
          type: boolean
        EnableDirectStream:
          type: boolean
        EnableTranscoding:
          type: boolean
        AllowVideoStreamCopy:
          type: boolean
        AllowInterlacedVideoStreamCopy:
          type: boolean
        AllowAudioStreamCopy:
          type: boolean
        DirectPlayProtocols:
          type: array
          items:
            $ref: '#/components/schemas/MediaProtocol'
      x-internal-ref-name: MediaBrowser.Model.MediaInfo.LiveStreamRequest
    DeviceProfile:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Id:
          type: string
        SupportedMediaTypes:
          type: string
        MaxStreamingBitrate:
          type: integer
          format: int64
          nullable: true
        MusicStreamingTranscodingBitrate:
          type: integer
          format: int32
          nullable: true
        MaxStaticMusicBitrate:
          type: integer
          format: int32
          nullable: true
        DirectPlayProfiles:
          type: array
          description: The direct play profiles.
          items:
            $ref: '#/components/schemas/DirectPlayProfile'
        TranscodingProfiles:
          type: array
          description: The transcoding profiles.
          items:
            $ref: '#/components/schemas/TranscodingProfile'
        ContainerProfiles:
          type: array
          items:
            $ref: '#/components/schemas/ContainerProfile'
        CodecProfiles:
          type: array
          items:
            $ref: '#/components/schemas/CodecProfile'
        ResponseProfiles:
          type: array
          items:
            $ref: '#/components/schemas/ResponseProfile'
        SubtitleProfiles:
          type: array
          items:
            $ref: '#/components/schemas/SubtitleProfile'
      x-internal-ref-name: MediaBrowser.Model.Dlna.DeviceProfile
    LiveStreamResponse:
      type: object
      properties:
        MediaSource:
          $ref: '#/components/schemas/MediaSourceInfo'
      example:
        MediaSource:
          EncoderPath: EncoderPath
          RequiredHttpHeaders:
            key: RequiredHttpHeaders
          RunTimeTicks: 5
          HasMixedProtocols: true
          MediaStreams:
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          Size: 1
          Video3DFormat: null
          BufferMs: 7
          ContainerStartTimeTicks: 5
          SortName: SortName
          Timestamp: None
          ItemId: ItemId
          Name: Name
          RequiresOpening: true
          DirectStreamUrl: DirectStreamUrl
          SupportsDirectStream: true
          RequiresClosing: true
          Container: Container
          ServerId: ServerId
          LiveStreamId: LiveStreamId
          RequiresLooping: true
          Protocol: File
          AddApiKeyToDirectStreamUrl: true
          DefaultSubtitleStreamIndex: 9
          TrancodeLiveStartIndex: 2
          IsInfiniteStream: true
          Path: Path
          IsRemote: true
          EncoderProtocol: null
          SupportsDirectPlay: true
          TranscodingSubProtocol: TranscodingSubProtocol
          Formats:
          - Formats
          - Formats
          AnalyzeDurationMs: 6
          WallClockStart: 2000-01-23T04:56:07.000+00:00
          Bitrate: 9
          OpenToken: OpenToken
          ProbeProtocol: null
          SupportsProbing: true
          Type: Default
          ReadAtNativeFramerate: true
          TranscodingContainer: TranscodingContainer
          ProbePath: ProbePath
          TranscodingUrl: TranscodingUrl
          Id: Id
          SupportsTranscoding: true
          DefaultAudioStreamIndex: 8
      x-internal-ref-name: MediaBrowser.Model.MediaInfo.LiveStreamResponse
    Api.SetChannelMapping:
      type: object
      properties:
        TunerChannelId:
          type: string
        ProviderChannelId:
          type: string
      x-internal-ref-name: Emby.LiveTV.Api.SetChannelMapping
    LiveTv.ListingsProviderInfo:
      type: object
      properties:
        Name:
          type: string
        SetupUrl:
          type: string
        Id:
          type: string
        Type:
          type: string
        Username:
          type: string
        Password:
          type: string
        ListingsId:
          type: string
        ZipCode:
          type: string
        Country:
          type: string
        Path:
          type: string
        EnabledTuners:
          type: array
          items:
            type: string
        EnableAllTuners:
          type: boolean
        NewsCategories:
          type: array
          items:
            type: string
        SportsCategories:
          type: array
          items:
            type: string
        KidsCategories:
          type: array
          items:
            type: string
        MovieCategories:
          type: array
          items:
            type: string
        ChannelMappings:
          type: array
          items:
            $ref: '#/components/schemas/NameValuePair'
        MoviePrefix:
          type: string
        PreferredLanguage:
          type: string
        UserAgent:
          type: string
        DataVersion:
          type: string
      example:
        Path: Path
        NewsCategories:
        - NewsCategories
        - NewsCategories
        ZipCode: ZipCode
        ChannelMappings:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        ListingsId: ListingsId
        Name: Name
        EnabledTuners:
        - EnabledTuners
        - EnabledTuners
        EnableAllTuners: true
        Type: Type
        MovieCategories:
        - MovieCategories
        - MovieCategories
        Username: Username
        MoviePrefix: MoviePrefix
        KidsCategories:
        - KidsCategories
        - KidsCategories
        UserAgent: UserAgent
        Country: Country
        PreferredLanguage: PreferredLanguage
        SportsCategories:
        - SportsCategories
        - SportsCategories
        Id: Id
        DataVersion: DataVersion
        SetupUrl: SetupUrl
        Password: Password
      x-internal-ref-name: MediaBrowser.Model.LiveTv.ListingsProviderInfo
    LiveTv.TunerHostInfo:
      type: object
      properties:
        Id:
          type: string
        Url:
          type: string
        Type:
          type: string
        DeviceId:
          type: string
        FriendlyName:
          type: string
        SetupUrl:
          type: string
        ImportFavoritesOnly:
          type: boolean
        PreferEpgChannelImages:
          type: boolean
        PreferEpgChannelNumbers:
          type: boolean
        AllowHWTranscoding:
          type: boolean
        AllowMappingByNumber:
          type: boolean
        ImportGuideData:
          type: boolean
        Source:
          type: string
        TunerCount:
          type: integer
          format: int32
        UserAgent:
          type: string
        Referrer:
          type: string
        ProviderOptions:
          type: string
        DataVersion:
          type: integer
          format: int32
      example:
        PreferEpgChannelImages: true
        ProviderOptions: ProviderOptions
        FriendlyName: FriendlyName
        DeviceId: DeviceId
        PreferEpgChannelNumbers: true
        ImportFavoritesOnly: true
        AllowMappingByNumber: true
        Url: Url
        Source: Source
        Type: Type
        AllowHWTranscoding: true
        TunerCount: 0
        Referrer: Referrer
        UserAgent: UserAgent
        Id: Id
        DataVersion: 6
        SetupUrl: SetupUrl
        ImportGuideData: true
      x-internal-ref-name: MediaBrowser.Model.LiveTv.TunerHostInfo
    LiveTv.LiveTvInfo:
      type: object
      properties:
        IsEnabled:
          type: boolean
          description: A value indicating whether this instance is enabled.
        EnabledUsers:
          type: array
          description: The enabled users.
          items:
            type: string
      example:
        IsEnabled: true
        EnabledUsers:
        - EnabledUsers
        - EnabledUsers
      x-internal-ref-name: MediaBrowser.Model.LiveTv.LiveTvInfo
    LiveTv.ChannelType:
      type: string
      description: "Enum ChannelType\r\n"
      enum:
      - TV
      - Radio
      x-internal-ref-name: MediaBrowser.Model.LiveTv.ChannelType
    QueryResult_Api.EpgRow:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/Api.EpgRow'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 0
        Items:
        - Programs:
          - null
          - null
          Channel:
            SeasonName: SeasonName
            PremiereDate: 2000-01-23T04:56:07.000+00:00
            Size: 2
            CriticRating: 6.4384236
            GameSystemId: 3
            Studios:
            - Id: 3
              Name: Name
            - Id: 3
              Name: Name
            CameraMake: CameraMake
            Aperture: 1.041444916118296
            ChannelPrimaryImageTag: ChannelPrimaryImageTag
            ExtraType: ExtraType
            ParentBackdropItemId: ParentBackdropItemId
            Etag: Etag
            ParentLogoImageTag: ParentLogoImageTag
            ExposureTime: 6.628464275087742
            MediaType: MediaType
            ManagementId: ManagementId
            Tags:
            - Tags
            - Tags
            Status: Status
            IndexNumberEnd: 6
            ArtistItems:
            - Id: Id
              Name: Name
            - Id: Id
              Name: Name
            MediaSources:
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            GenreItems:
            - null
            - null
            OfficialRating: OfficialRating
            Longitude: 9.132027271330688
            Composers:
            - null
            - null
            LockData: true
            FocalLength: 4.258773108174356
            IsNews: true
            ShutterSpeed: 4.678947989005849
            Id: Id
            SortIndexNumber: 0
            IsFolder: true
            CanMakePublic: true
            SeriesTimerId: SeriesTimerId
            SeriesId: SeriesId
            ListingsPath: ListingsPath
            MediaStreams:
            - null
            - null
            FileName: FileName
            PrimaryImageTag: PrimaryImageTag
            Prefix: Prefix
            CanDownload: true
            IsMovie: true
            SeriesCount: 5
            PrimaryImageItemId: PrimaryImageItemId
            ListingsChannelId: ListingsChannelId
            SeriesStudio: SeriesStudio
            IsLive: true
            Width: 4
            ExternalUrls:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            RecursiveItemCount: 8
            Path: Path
            ParentId: ParentId
            TimerType: Program
            GameSystem: GameSystem
            MusicVideoCount: 8
            IsSeries: true
            ProductionLocations:
            - ProductionLocations
            - ProductionLocations
            Subviews:
            - Subviews
            - Subviews
            Bitrate: 6
            EndDate: 2000-01-23T04:56:07.000+00:00
            SeriesPrimaryImageTag: SeriesPrimaryImageTag
            ParentThumbItemId: ParentThumbItemId
            PreferredMetadataLanguage: PreferredMetadataLanguage
            CanLeaveContent: true
            Type: Type
            BackdropImageTags:
            - BackdropImageTags
            - BackdropImageTags
            ParentBackdropImageTags:
            - ParentBackdropImageTags
            - ParentBackdropImageTags
            ChildCount: 7
            TagItems:
            - null
            - null
            Artists:
            - Artists
            - Artists
            ListingsChannelName: ListingsChannelName
            RunTimeTicks: 1
            AlbumPrimaryImageTag: AlbumPrimaryImageTag
            Video3DFormat: HalfSideBySide
            CanDelete: true
            PlaylistItemId: PlaylistItemId
            SortParentIndexNumber: 6
            DisplayPreferencesId: DisplayPreferencesId
            Album: Album
            Latitude: 7.260521264802104
            Guid: Guid
            SortName: SortName
            Name: Name
            StartDate: 2000-01-23T04:56:07.000+00:00
            Container: Container
            ProductionYear: 6
            SeriesName: SeriesName
            AsSeries: true
            AlbumId: AlbumId
            SupportsSync: true
            LocalTrailerCount: 7
            IndexNumber: 5
            CompletionPercentage: 0.5199002018724985
            Genres:
            - Genres
            - Genres
            SeasonId: SeasonId
            LockedFields:
            - Cast
            - Cast
            Disabled: true
            ProviderIds:
              key: ProviderIds
            RemoteTrailers:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            PresentationUniqueKey: PresentationUniqueKey
            CustomRating: CustomRating
            ListingsChannelNumber: ListingsChannelNumber
            SyncStatus: Queued
            CanManageAccess: true
            AirDays:
            - Sunday
            - Sunday
            ParentLogoItemId: ParentLogoItemId
            PartCount: 7
            ListingsProviderId: ListingsProviderId
            CanEditItems: true
            ChannelName: ChannelName
            EpisodeTitle: EpisodeTitle
            IsoSpeedRating: 9
            CommunityRating: 6.965118
            Software: Software
            Chapters:
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            SongCount: 6
            Taglines:
            - Taglines
            - Taglines
            PreferredMetadataCountryCode: PreferredMetadataCountryCode
            CameraModel: CameraModel
            ChannelNumber: ChannelNumber
            UserData:
              UnplayedItemCount: 6
              Played: true
              ServerId: ServerId
              PlayedPercentage: 7.058770351582356
              Rating: 0.8851374739011653
              PlayCount: 4
              PlaybackPositionTicks: 0
              LastPlayedDate: 2000-01-23T04:56:07.000+00:00
              IsFavorite: true
              ItemId: ItemId
              Key: Key
            TimerId: TimerId
            DateCreated: 2000-01-23T04:56:07.000+00:00
            ParentThumbImageTag: ParentThumbImageTag
            IsSports: true
            ChannelId: ChannelId
            ParentIndexNumber: 3
            IsNew: true
            AffiliateCallSign: AffiliateCallSign
            ListingsId: ListingsId
            AlbumArtists:
            - null
            - null
            ServerId: ServerId
            Number: Number
            AlbumCount: 4
            IsRepeat: true
            CollectionType: CollectionType
            PrimaryImageAspectRatio: 3.0576100241049344
            Height: 0
            IsKids: true
            DisplayOrder: DisplayOrder
            MovieCount: 7
            People:
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            Overview: Overview
            SpecialFeatureCount: 3
            ImageOrientation: TopLeft
            AlbumArtist: AlbumArtist
            ImageTags:
              key: ImageTags
            OriginalTitle: OriginalTitle
            ForcedSortName: ForcedSortName
            CurrentProgram: null
            SupportsResume: true
            LocationType: FileSystem
            IsPremiere: true
            Altitude: 0.8774076871421566
        - Programs:
          - null
          - null
          Channel:
            SeasonName: SeasonName
            PremiereDate: 2000-01-23T04:56:07.000+00:00
            Size: 2
            CriticRating: 6.4384236
            GameSystemId: 3
            Studios:
            - Id: 3
              Name: Name
            - Id: 3
              Name: Name
            CameraMake: CameraMake
            Aperture: 1.041444916118296
            ChannelPrimaryImageTag: ChannelPrimaryImageTag
            ExtraType: ExtraType
            ParentBackdropItemId: ParentBackdropItemId
            Etag: Etag
            ParentLogoImageTag: ParentLogoImageTag
            ExposureTime: 6.628464275087742
            MediaType: MediaType
            ManagementId: ManagementId
            Tags:
            - Tags
            - Tags
            Status: Status
            IndexNumberEnd: 6
            ArtistItems:
            - Id: Id
              Name: Name
            - Id: Id
              Name: Name
            MediaSources:
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            GenreItems:
            - null
            - null
            OfficialRating: OfficialRating
            Longitude: 9.132027271330688
            Composers:
            - null
            - null
            LockData: true
            FocalLength: 4.258773108174356
            IsNews: true
            ShutterSpeed: 4.678947989005849
            Id: Id
            SortIndexNumber: 0
            IsFolder: true
            CanMakePublic: true
            SeriesTimerId: SeriesTimerId
            SeriesId: SeriesId
            ListingsPath: ListingsPath
            MediaStreams:
            - null
            - null
            FileName: FileName
            PrimaryImageTag: PrimaryImageTag
            Prefix: Prefix
            CanDownload: true
            IsMovie: true
            SeriesCount: 5
            PrimaryImageItemId: PrimaryImageItemId
            ListingsChannelId: ListingsChannelId
            SeriesStudio: SeriesStudio
            IsLive: true
            Width: 4
            ExternalUrls:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            RecursiveItemCount: 8
            Path: Path
            ParentId: ParentId
            TimerType: Program
            GameSystem: GameSystem
            MusicVideoCount: 8
            IsSeries: true
            ProductionLocations:
            - ProductionLocations
            - ProductionLocations
            Subviews:
            - Subviews
            - Subviews
            Bitrate: 6
            EndDate: 2000-01-23T04:56:07.000+00:00
            SeriesPrimaryImageTag: SeriesPrimaryImageTag
            ParentThumbItemId: ParentThumbItemId
            PreferredMetadataLanguage: PreferredMetadataLanguage
            CanLeaveContent: true
            Type: Type
            BackdropImageTags:
            - BackdropImageTags
            - BackdropImageTags
            ParentBackdropImageTags:
            - ParentBackdropImageTags
            - ParentBackdropImageTags
            ChildCount: 7
            TagItems:
            - null
            - null
            Artists:
            - Artists
            - Artists
            ListingsChannelName: ListingsChannelName
            RunTimeTicks: 1
            AlbumPrimaryImageTag: AlbumPrimaryImageTag
            Video3DFormat: HalfSideBySide
            CanDelete: true
            PlaylistItemId: PlaylistItemId
            SortParentIndexNumber: 6
            DisplayPreferencesId: DisplayPreferencesId
            Album: Album
            Latitude: 7.260521264802104
            Guid: Guid
            SortName: SortName
            Name: Name
            StartDate: 2000-01-23T04:56:07.000+00:00
            Container: Container
            ProductionYear: 6
            SeriesName: SeriesName
            AsSeries: true
            AlbumId: AlbumId
            SupportsSync: true
            LocalTrailerCount: 7
            IndexNumber: 5
            CompletionPercentage: 0.5199002018724985
            Genres:
            - Genres
            - Genres
            SeasonId: SeasonId
            LockedFields:
            - Cast
            - Cast
            Disabled: true
            ProviderIds:
              key: ProviderIds
            RemoteTrailers:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            PresentationUniqueKey: PresentationUniqueKey
            CustomRating: CustomRating
            ListingsChannelNumber: ListingsChannelNumber
            SyncStatus: Queued
            CanManageAccess: true
            AirDays:
            - Sunday
            - Sunday
            ParentLogoItemId: ParentLogoItemId
            PartCount: 7
            ListingsProviderId: ListingsProviderId
            CanEditItems: true
            ChannelName: ChannelName
            EpisodeTitle: EpisodeTitle
            IsoSpeedRating: 9
            CommunityRating: 6.965118
            Software: Software
            Chapters:
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            SongCount: 6
            Taglines:
            - Taglines
            - Taglines
            PreferredMetadataCountryCode: PreferredMetadataCountryCode
            CameraModel: CameraModel
            ChannelNumber: ChannelNumber
            UserData:
              UnplayedItemCount: 6
              Played: true
              ServerId: ServerId
              PlayedPercentage: 7.058770351582356
              Rating: 0.8851374739011653
              PlayCount: 4
              PlaybackPositionTicks: 0
              LastPlayedDate: 2000-01-23T04:56:07.000+00:00
              IsFavorite: true
              ItemId: ItemId
              Key: Key
            TimerId: TimerId
            DateCreated: 2000-01-23T04:56:07.000+00:00
            ParentThumbImageTag: ParentThumbImageTag
            IsSports: true
            ChannelId: ChannelId
            ParentIndexNumber: 3
            IsNew: true
            AffiliateCallSign: AffiliateCallSign
            ListingsId: ListingsId
            AlbumArtists:
            - null
            - null
            ServerId: ServerId
            Number: Number
            AlbumCount: 4
            IsRepeat: true
            CollectionType: CollectionType
            PrimaryImageAspectRatio: 3.0576100241049344
            Height: 0
            IsKids: true
            DisplayOrder: DisplayOrder
            MovieCount: 7
            People:
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            Overview: Overview
            SpecialFeatureCount: 3
            ImageOrientation: TopLeft
            AlbumArtist: AlbumArtist
            ImageTags:
              key: ImageTags
            OriginalTitle: OriginalTitle
            ForcedSortName: ForcedSortName
            CurrentProgram: null
            SupportsResume: true
            LocationType: FileSystem
            IsPremiere: true
            Altitude: 0.8774076871421566
    Api.EpgRow:
      type: object
      properties:
        Channel:
          $ref: '#/components/schemas/BaseItemDto'
        Programs:
          type: array
          items:
            $ref: '#/components/schemas/BaseItemDto'
      example:
        Programs:
        - null
        - null
        Channel:
          SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          Size: 2
          CriticRating: 6.4384236
          GameSystemId: 3
          Studios:
          - Id: 3
            Name: Name
          - Id: 3
            Name: Name
          CameraMake: CameraMake
          Aperture: 1.041444916118296
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: ExtraType
          ParentBackdropItemId: ParentBackdropItemId
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 6.628464275087742
          MediaType: MediaType
          ManagementId: ManagementId
          Tags:
          - Tags
          - Tags
          Status: Status
          IndexNumberEnd: 6
          ArtistItems:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          GenreItems:
          - null
          - null
          OfficialRating: OfficialRating
          Longitude: 9.132027271330688
          Composers:
          - null
          - null
          LockData: true
          FocalLength: 4.258773108174356
          IsNews: true
          ShutterSpeed: 4.678947989005849
          Id: Id
          SortIndexNumber: 0
          IsFolder: true
          CanMakePublic: true
          SeriesTimerId: SeriesTimerId
          SeriesId: SeriesId
          ListingsPath: ListingsPath
          MediaStreams:
          - null
          - null
          FileName: FileName
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          CanDownload: true
          IsMovie: true
          SeriesCount: 5
          PrimaryImageItemId: PrimaryImageItemId
          ListingsChannelId: ListingsChannelId
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 4
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 8
          Path: Path
          ParentId: ParentId
          TimerType: Program
          GameSystem: GameSystem
          MusicVideoCount: 8
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          Subviews:
          - Subviews
          - Subviews
          Bitrate: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: ParentThumbItemId
          PreferredMetadataLanguage: PreferredMetadataLanguage
          CanLeaveContent: true
          Type: Type
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ChildCount: 7
          TagItems:
          - null
          - null
          Artists:
          - Artists
          - Artists
          ListingsChannelName: ListingsChannelName
          RunTimeTicks: 1
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          SortParentIndexNumber: 6
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 7.260521264802104
          Guid: Guid
          SortName: SortName
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          AsSeries: true
          AlbumId: AlbumId
          SupportsSync: true
          LocalTrailerCount: 7
          IndexNumber: 5
          CompletionPercentage: 0.5199002018724985
          Genres:
          - Genres
          - Genres
          SeasonId: SeasonId
          LockedFields:
          - Cast
          - Cast
          Disabled: true
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          PresentationUniqueKey: PresentationUniqueKey
          CustomRating: CustomRating
          ListingsChannelNumber: ListingsChannelNumber
          SyncStatus: Queued
          CanManageAccess: true
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: ParentLogoItemId
          PartCount: 7
          ListingsProviderId: ListingsProviderId
          CanEditItems: true
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 9
          CommunityRating: 6.965118
          Software: Software
          Chapters:
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData:
            UnplayedItemCount: 6
            Played: true
            ServerId: ServerId
            PlayedPercentage: 7.058770351582356
            Rating: 0.8851374739011653
            PlayCount: 4
            PlaybackPositionTicks: 0
            LastPlayedDate: 2000-01-23T04:56:07.000+00:00
            IsFavorite: true
            ItemId: ItemId
            Key: Key
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: ChannelId
          ParentIndexNumber: 3
          IsNew: true
          AffiliateCallSign: AffiliateCallSign
          ListingsId: ListingsId
          AlbumArtists:
          - null
          - null
          ServerId: ServerId
          Number: Number
          AlbumCount: 4
          IsRepeat: true
          CollectionType: CollectionType
          PrimaryImageAspectRatio: 3.0576100241049344
          Height: 0
          IsKids: true
          DisplayOrder: DisplayOrder
          MovieCount: 7
          People:
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          Overview: Overview
          SpecialFeatureCount: 3
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: null
          SupportsResume: true
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 0.8774076871421566
      x-internal-ref-name: Emby.LiveTV.Api.EpgRow
    Api.BaseItemsRequest:
      type: object
      properties:
        Is4K:
          type: boolean
          nullable: true
        EnableTotalRecordCount:
          type: boolean
        RecordingKeyword:
          type: string
        RecordingKeywordType:
          $ref: '#/components/schemas/LiveTv.KeywordType'
        RandomSeed:
          type: integer
          format: int32
        GenreIds:
          type: string
        CollectionIds:
          type: string
        TagIds:
          type: string
        ExcludeTagIds:
          type: string
        ExcludeArtistIds:
          type: string
        AlbumArtistIds:
          type: string
        ContributingArtistIds:
          type: string
        AlbumIds:
          type: string
        OuterIds:
          type: string
        ListItemIds:
          type: string
        AudioLanguages:
          type: string
        SubtitleLanguages:
          type: string
        CanEditItems:
          type: boolean
          nullable: true
        GroupItemsInto:
          $ref: '#/components/schemas/Library.ItemLinkType'
        MinWidth:
          type: integer
          format: int32
          nullable: true
        MinHeight:
          type: integer
          format: int32
          nullable: true
        MaxWidth:
          type: integer
          format: int32
          nullable: true
        MaxHeight:
          type: integer
          format: int32
          nullable: true
        GroupProgramsBySeries:
          type: boolean
        AirDays:
          type: array
          items:
            $ref: '#/components/schemas/DayOfWeek'
        IsAiring:
          type: boolean
          nullable: true
        HasAired:
          type: boolean
          nullable: true
      x-internal-ref-name: MediaBrowser.Controller.Api.BaseItemsRequest
    LiveTv.KeywordType:
      type: string
      enum:
      - Name
      - EpisodeTitle
      - Overview
      - Actor
      - Director
      x-internal-ref-name: MediaBrowser.Model.LiveTv.KeywordType
    Library.ItemLinkType:
      type: string
      enum:
      - Artists
      - AlbumArtists
      - Genres
      - Studios
      - Tags
      - Composers
      - Collections
      - Albums
      - CollectionFolders
      x-internal-ref-name: MediaBrowser.Controller.Library.ItemLinkType
    LiveTv.RecordingStatus:
      type: string
      enum:
      - New
      - InProgress
      - Completed
      - Cancelled
      - ConflictedOk
      - ConflictedNotOk
      - Error
      x-internal-ref-name: MediaBrowser.Model.LiveTv.RecordingStatus
    QueryResult_LiveTv.TimerInfoDto:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/LiveTv.TimerInfoDto'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 5
        Items:
        - PrePaddingSeconds: 1
          KeepUntil: UntilDeleted
          RunTimeTicks: 0
          ChannelNumber: ChannelNumber
          ChannelId: ChannelId
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          IsPostPaddingRequired: true
          ProgramInfo:
            SeasonName: SeasonName
            PremiereDate: 2000-01-23T04:56:07.000+00:00
            Size: 2
            CriticRating: 6.4384236
            GameSystemId: 3
            Studios:
            - Id: 3
              Name: Name
            - Id: 3
              Name: Name
            CameraMake: CameraMake
            Aperture: 1.041444916118296
            ChannelPrimaryImageTag: ChannelPrimaryImageTag
            ExtraType: ExtraType
            ParentBackdropItemId: ParentBackdropItemId
            Etag: Etag
            ParentLogoImageTag: ParentLogoImageTag
            ExposureTime: 6.628464275087742
            MediaType: MediaType
            ManagementId: ManagementId
            Tags:
            - Tags
            - Tags
            Status: Status
            IndexNumberEnd: 6
            ArtistItems:
            - Id: Id
              Name: Name
            - Id: Id
              Name: Name
            MediaSources:
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            GenreItems:
            - null
            - null
            OfficialRating: OfficialRating
            Longitude: 9.132027271330688
            Composers:
            - null
            - null
            LockData: true
            FocalLength: 4.258773108174356
            IsNews: true
            ShutterSpeed: 4.678947989005849
            Id: Id
            SortIndexNumber: 0
            IsFolder: true
            CanMakePublic: true
            SeriesTimerId: SeriesTimerId
            SeriesId: SeriesId
            ListingsPath: ListingsPath
            MediaStreams:
            - null
            - null
            FileName: FileName
            PrimaryImageTag: PrimaryImageTag
            Prefix: Prefix
            CanDownload: true
            IsMovie: true
            SeriesCount: 5
            PrimaryImageItemId: PrimaryImageItemId
            ListingsChannelId: ListingsChannelId
            SeriesStudio: SeriesStudio
            IsLive: true
            Width: 4
            ExternalUrls:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            RecursiveItemCount: 8
            Path: Path
            ParentId: ParentId
            TimerType: Program
            GameSystem: GameSystem
            MusicVideoCount: 8
            IsSeries: true
            ProductionLocations:
            - ProductionLocations
            - ProductionLocations
            Subviews:
            - Subviews
            - Subviews
            Bitrate: 6
            EndDate: 2000-01-23T04:56:07.000+00:00
            SeriesPrimaryImageTag: SeriesPrimaryImageTag
            ParentThumbItemId: ParentThumbItemId
            PreferredMetadataLanguage: PreferredMetadataLanguage
            CanLeaveContent: true
            Type: Type
            BackdropImageTags:
            - BackdropImageTags
            - BackdropImageTags
            ParentBackdropImageTags:
            - ParentBackdropImageTags
            - ParentBackdropImageTags
            ChildCount: 7
            TagItems:
            - null
            - null
            Artists:
            - Artists
            - Artists
            ListingsChannelName: ListingsChannelName
            RunTimeTicks: 1
            AlbumPrimaryImageTag: AlbumPrimaryImageTag
            Video3DFormat: HalfSideBySide
            CanDelete: true
            PlaylistItemId: PlaylistItemId
            SortParentIndexNumber: 6
            DisplayPreferencesId: DisplayPreferencesId
            Album: Album
            Latitude: 7.260521264802104
            Guid: Guid
            SortName: SortName
            Name: Name
            StartDate: 2000-01-23T04:56:07.000+00:00
            Container: Container
            ProductionYear: 6
            SeriesName: SeriesName
            AsSeries: true
            AlbumId: AlbumId
            SupportsSync: true
            LocalTrailerCount: 7
            IndexNumber: 5
            CompletionPercentage: 0.5199002018724985
            Genres:
            - Genres
            - Genres
            SeasonId: SeasonId
            LockedFields:
            - Cast
            - Cast
            Disabled: true
            ProviderIds:
              key: ProviderIds
            RemoteTrailers:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            PresentationUniqueKey: PresentationUniqueKey
            CustomRating: CustomRating
            ListingsChannelNumber: ListingsChannelNumber
            SyncStatus: Queued
            CanManageAccess: true
            AirDays:
            - Sunday
            - Sunday
            ParentLogoItemId: ParentLogoItemId
            PartCount: 7
            ListingsProviderId: ListingsProviderId
            CanEditItems: true
            ChannelName: ChannelName
            EpisodeTitle: EpisodeTitle
            IsoSpeedRating: 9
            CommunityRating: 6.965118
            Software: Software
            Chapters:
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            SongCount: 6
            Taglines:
            - Taglines
            - Taglines
            PreferredMetadataCountryCode: PreferredMetadataCountryCode
            CameraModel: CameraModel
            ChannelNumber: ChannelNumber
            UserData:
              UnplayedItemCount: 6
              Played: true
              ServerId: ServerId
              PlayedPercentage: 7.058770351582356
              Rating: 0.8851374739011653
              PlayCount: 4
              PlaybackPositionTicks: 0
              LastPlayedDate: 2000-01-23T04:56:07.000+00:00
              IsFavorite: true
              ItemId: ItemId
              Key: Key
            TimerId: TimerId
            DateCreated: 2000-01-23T04:56:07.000+00:00
            ParentThumbImageTag: ParentThumbImageTag
            IsSports: true
            ChannelId: ChannelId
            ParentIndexNumber: 3
            IsNew: true
            AffiliateCallSign: AffiliateCallSign
            ListingsId: ListingsId
            AlbumArtists:
            - null
            - null
            ServerId: ServerId
            Number: Number
            AlbumCount: 4
            IsRepeat: true
            CollectionType: CollectionType
            PrimaryImageAspectRatio: 3.0576100241049344
            Height: 0
            IsKids: true
            DisplayOrder: DisplayOrder
            MovieCount: 7
            People:
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            Overview: Overview
            SpecialFeatureCount: 3
            ImageOrientation: TopLeft
            AlbumArtist: AlbumArtist
            ImageTags:
              key: ImageTags
            OriginalTitle: OriginalTitle
            ForcedSortName: ForcedSortName
            CurrentProgram: null
            SupportsResume: true
            LocationType: FileSystem
            IsPremiere: true
            Altitude: 0.8774076871421566
          ServerId: ServerId
          ParentBackdropItemId: ParentBackdropItemId
          Status: New
          TimerType: Program
          IsPrePaddingRequired: true
          Priority: 6
          Overview: Overview
          PostPaddingSeconds: 5
          ProgramId: ProgramId
          EndDate: 2000-01-23T04:56:07.000+00:00
          ParentFolderId: ParentFolderId
          Type: Type
          ChannelName: ChannelName
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          Id: Id
          SeriesTimerId: SeriesTimerId
        - PrePaddingSeconds: 1
          KeepUntil: UntilDeleted
          RunTimeTicks: 0
          ChannelNumber: ChannelNumber
          ChannelId: ChannelId
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          IsPostPaddingRequired: true
          ProgramInfo:
            SeasonName: SeasonName
            PremiereDate: 2000-01-23T04:56:07.000+00:00
            Size: 2
            CriticRating: 6.4384236
            GameSystemId: 3
            Studios:
            - Id: 3
              Name: Name
            - Id: 3
              Name: Name
            CameraMake: CameraMake
            Aperture: 1.041444916118296
            ChannelPrimaryImageTag: ChannelPrimaryImageTag
            ExtraType: ExtraType
            ParentBackdropItemId: ParentBackdropItemId
            Etag: Etag
            ParentLogoImageTag: ParentLogoImageTag
            ExposureTime: 6.628464275087742
            MediaType: MediaType
            ManagementId: ManagementId
            Tags:
            - Tags
            - Tags
            Status: Status
            IndexNumberEnd: 6
            ArtistItems:
            - Id: Id
              Name: Name
            - Id: Id
              Name: Name
            MediaSources:
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            GenreItems:
            - null
            - null
            OfficialRating: OfficialRating
            Longitude: 9.132027271330688
            Composers:
            - null
            - null
            LockData: true
            FocalLength: 4.258773108174356
            IsNews: true
            ShutterSpeed: 4.678947989005849
            Id: Id
            SortIndexNumber: 0
            IsFolder: true
            CanMakePublic: true
            SeriesTimerId: SeriesTimerId
            SeriesId: SeriesId
            ListingsPath: ListingsPath
            MediaStreams:
            - null
            - null
            FileName: FileName
            PrimaryImageTag: PrimaryImageTag
            Prefix: Prefix
            CanDownload: true
            IsMovie: true
            SeriesCount: 5
            PrimaryImageItemId: PrimaryImageItemId
            ListingsChannelId: ListingsChannelId
            SeriesStudio: SeriesStudio
            IsLive: true
            Width: 4
            ExternalUrls:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            RecursiveItemCount: 8
            Path: Path
            ParentId: ParentId
            TimerType: Program
            GameSystem: GameSystem
            MusicVideoCount: 8
            IsSeries: true
            ProductionLocations:
            - ProductionLocations
            - ProductionLocations
            Subviews:
            - Subviews
            - Subviews
            Bitrate: 6
            EndDate: 2000-01-23T04:56:07.000+00:00
            SeriesPrimaryImageTag: SeriesPrimaryImageTag
            ParentThumbItemId: ParentThumbItemId
            PreferredMetadataLanguage: PreferredMetadataLanguage
            CanLeaveContent: true
            Type: Type
            BackdropImageTags:
            - BackdropImageTags
            - BackdropImageTags
            ParentBackdropImageTags:
            - ParentBackdropImageTags
            - ParentBackdropImageTags
            ChildCount: 7
            TagItems:
            - null
            - null
            Artists:
            - Artists
            - Artists
            ListingsChannelName: ListingsChannelName
            RunTimeTicks: 1
            AlbumPrimaryImageTag: AlbumPrimaryImageTag
            Video3DFormat: HalfSideBySide
            CanDelete: true
            PlaylistItemId: PlaylistItemId
            SortParentIndexNumber: 6
            DisplayPreferencesId: DisplayPreferencesId
            Album: Album
            Latitude: 7.260521264802104
            Guid: Guid
            SortName: SortName
            Name: Name
            StartDate: 2000-01-23T04:56:07.000+00:00
            Container: Container
            ProductionYear: 6
            SeriesName: SeriesName
            AsSeries: true
            AlbumId: AlbumId
            SupportsSync: true
            LocalTrailerCount: 7
            IndexNumber: 5
            CompletionPercentage: 0.5199002018724985
            Genres:
            - Genres
            - Genres
            SeasonId: SeasonId
            LockedFields:
            - Cast
            - Cast
            Disabled: true
            ProviderIds:
              key: ProviderIds
            RemoteTrailers:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            PresentationUniqueKey: PresentationUniqueKey
            CustomRating: CustomRating
            ListingsChannelNumber: ListingsChannelNumber
            SyncStatus: Queued
            CanManageAccess: true
            AirDays:
            - Sunday
            - Sunday
            ParentLogoItemId: ParentLogoItemId
            PartCount: 7
            ListingsProviderId: ListingsProviderId
            CanEditItems: true
            ChannelName: ChannelName
            EpisodeTitle: EpisodeTitle
            IsoSpeedRating: 9
            CommunityRating: 6.965118
            Software: Software
            Chapters:
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            SongCount: 6
            Taglines:
            - Taglines
            - Taglines
            PreferredMetadataCountryCode: PreferredMetadataCountryCode
            CameraModel: CameraModel
            ChannelNumber: ChannelNumber
            UserData:
              UnplayedItemCount: 6
              Played: true
              ServerId: ServerId
              PlayedPercentage: 7.058770351582356
              Rating: 0.8851374739011653
              PlayCount: 4
              PlaybackPositionTicks: 0
              LastPlayedDate: 2000-01-23T04:56:07.000+00:00
              IsFavorite: true
              ItemId: ItemId
              Key: Key
            TimerId: TimerId
            DateCreated: 2000-01-23T04:56:07.000+00:00
            ParentThumbImageTag: ParentThumbImageTag
            IsSports: true
            ChannelId: ChannelId
            ParentIndexNumber: 3
            IsNew: true
            AffiliateCallSign: AffiliateCallSign
            ListingsId: ListingsId
            AlbumArtists:
            - null
            - null
            ServerId: ServerId
            Number: Number
            AlbumCount: 4
            IsRepeat: true
            CollectionType: CollectionType
            PrimaryImageAspectRatio: 3.0576100241049344
            Height: 0
            IsKids: true
            DisplayOrder: DisplayOrder
            MovieCount: 7
            People:
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            Overview: Overview
            SpecialFeatureCount: 3
            ImageOrientation: TopLeft
            AlbumArtist: AlbumArtist
            ImageTags:
              key: ImageTags
            OriginalTitle: OriginalTitle
            ForcedSortName: ForcedSortName
            CurrentProgram: null
            SupportsResume: true
            LocationType: FileSystem
            IsPremiere: true
            Altitude: 0.8774076871421566
          ServerId: ServerId
          ParentBackdropItemId: ParentBackdropItemId
          Status: New
          TimerType: Program
          IsPrePaddingRequired: true
          Priority: 6
          Overview: Overview
          PostPaddingSeconds: 5
          ProgramId: ProgramId
          EndDate: 2000-01-23T04:56:07.000+00:00
          ParentFolderId: ParentFolderId
          Type: Type
          ChannelName: ChannelName
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          Id: Id
          SeriesTimerId: SeriesTimerId
    LiveTv.TimerInfoDto:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/LiveTv.RecordingStatus'
        SeriesTimerId:
          type: string
          description: The series timer identifier.
        RunTimeTicks:
          type: integer
          description: The run time ticks.
          format: int64
          nullable: true
        ProgramInfo:
          $ref: '#/components/schemas/BaseItemDto'
        TimerType:
          $ref: '#/components/schemas/LiveTv.TimerType'
        Id:
          type: string
          description: Id of the recording.
        Type:
          type: string
        ServerId:
          type: string
          description: The server identifier.
        ChannelId:
          type: string
          description: ChannelId of the recording.
        ChannelName:
          type: string
          description: ChannelName of the recording.
        ChannelNumber:
          type: string
        ChannelPrimaryImageTag:
          type: string
        ProgramId:
          type: string
          description: The program identifier.
        Name:
          type: string
          description: Name of the recording.
        Overview:
          type: string
          description: Description of the recording.
        ParentFolderId:
          type: string
        StartDate:
          type: string
          description: "The start date of the recording, in UTC."
          format: date-time
        EndDate:
          type: string
          description: "The end date of the recording, in UTC."
          format: date-time
        Priority:
          type: integer
          description: The priority.
          format: int32
        PrePaddingSeconds:
          type: integer
          description: The pre padding seconds.
          format: int32
        PostPaddingSeconds:
          type: integer
          description: The post padding seconds.
          format: int32
        IsPrePaddingRequired:
          type: boolean
          description: A value indicating whether this instance is pre padding required.
        ParentBackdropItemId:
          type: string
          description: "If the item does not have any backdrops, this will hold the\
            \ Id of the Parent that has one."
        ParentBackdropImageTags:
          type: array
          description: The parent backdrop image tags.
          items:
            type: string
        IsPostPaddingRequired:
          type: boolean
          description: A value indicating whether this instance is post padding required.
        KeepUntil:
          $ref: '#/components/schemas/LiveTv.KeepUntil'
      example:
        PrePaddingSeconds: 1
        KeepUntil: UntilDeleted
        RunTimeTicks: 0
        ChannelNumber: ChannelNumber
        ChannelId: ChannelId
        ChannelPrimaryImageTag: ChannelPrimaryImageTag
        Name: Name
        StartDate: 2000-01-23T04:56:07.000+00:00
        IsPostPaddingRequired: true
        ProgramInfo:
          SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          Size: 2
          CriticRating: 6.4384236
          GameSystemId: 3
          Studios:
          - Id: 3
            Name: Name
          - Id: 3
            Name: Name
          CameraMake: CameraMake
          Aperture: 1.041444916118296
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: ExtraType
          ParentBackdropItemId: ParentBackdropItemId
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 6.628464275087742
          MediaType: MediaType
          ManagementId: ManagementId
          Tags:
          - Tags
          - Tags
          Status: Status
          IndexNumberEnd: 6
          ArtistItems:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          GenreItems:
          - null
          - null
          OfficialRating: OfficialRating
          Longitude: 9.132027271330688
          Composers:
          - null
          - null
          LockData: true
          FocalLength: 4.258773108174356
          IsNews: true
          ShutterSpeed: 4.678947989005849
          Id: Id
          SortIndexNumber: 0
          IsFolder: true
          CanMakePublic: true
          SeriesTimerId: SeriesTimerId
          SeriesId: SeriesId
          ListingsPath: ListingsPath
          MediaStreams:
          - null
          - null
          FileName: FileName
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          CanDownload: true
          IsMovie: true
          SeriesCount: 5
          PrimaryImageItemId: PrimaryImageItemId
          ListingsChannelId: ListingsChannelId
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 4
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 8
          Path: Path
          ParentId: ParentId
          TimerType: Program
          GameSystem: GameSystem
          MusicVideoCount: 8
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          Subviews:
          - Subviews
          - Subviews
          Bitrate: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: ParentThumbItemId
          PreferredMetadataLanguage: PreferredMetadataLanguage
          CanLeaveContent: true
          Type: Type
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ChildCount: 7
          TagItems:
          - null
          - null
          Artists:
          - Artists
          - Artists
          ListingsChannelName: ListingsChannelName
          RunTimeTicks: 1
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          SortParentIndexNumber: 6
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 7.260521264802104
          Guid: Guid
          SortName: SortName
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          AsSeries: true
          AlbumId: AlbumId
          SupportsSync: true
          LocalTrailerCount: 7
          IndexNumber: 5
          CompletionPercentage: 0.5199002018724985
          Genres:
          - Genres
          - Genres
          SeasonId: SeasonId
          LockedFields:
          - Cast
          - Cast
          Disabled: true
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          PresentationUniqueKey: PresentationUniqueKey
          CustomRating: CustomRating
          ListingsChannelNumber: ListingsChannelNumber
          SyncStatus: Queued
          CanManageAccess: true
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: ParentLogoItemId
          PartCount: 7
          ListingsProviderId: ListingsProviderId
          CanEditItems: true
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 9
          CommunityRating: 6.965118
          Software: Software
          Chapters:
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData:
            UnplayedItemCount: 6
            Played: true
            ServerId: ServerId
            PlayedPercentage: 7.058770351582356
            Rating: 0.8851374739011653
            PlayCount: 4
            PlaybackPositionTicks: 0
            LastPlayedDate: 2000-01-23T04:56:07.000+00:00
            IsFavorite: true
            ItemId: ItemId
            Key: Key
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: ChannelId
          ParentIndexNumber: 3
          IsNew: true
          AffiliateCallSign: AffiliateCallSign
          ListingsId: ListingsId
          AlbumArtists:
          - null
          - null
          ServerId: ServerId
          Number: Number
          AlbumCount: 4
          IsRepeat: true
          CollectionType: CollectionType
          PrimaryImageAspectRatio: 3.0576100241049344
          Height: 0
          IsKids: true
          DisplayOrder: DisplayOrder
          MovieCount: 7
          People:
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          Overview: Overview
          SpecialFeatureCount: 3
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: null
          SupportsResume: true
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 0.8774076871421566
        ServerId: ServerId
        ParentBackdropItemId: ParentBackdropItemId
        Status: New
        TimerType: Program
        IsPrePaddingRequired: true
        Priority: 6
        Overview: Overview
        PostPaddingSeconds: 5
        ProgramId: ProgramId
        EndDate: 2000-01-23T04:56:07.000+00:00
        ParentFolderId: ParentFolderId
        Type: Type
        ChannelName: ChannelName
        ParentBackdropImageTags:
        - ParentBackdropImageTags
        - ParentBackdropImageTags
        Id: Id
        SeriesTimerId: SeriesTimerId
      x-internal-ref-name: MediaBrowser.Model.LiveTv.TimerInfoDto
    LiveTv.KeepUntil:
      type: string
      enum:
      - UntilDeleted
      - UntilSpaceNeeded
      - UntilWatched
      - UntilDate
      x-internal-ref-name: MediaBrowser.Model.LiveTv.KeepUntil
    QueryResult_LiveTv.SeriesTimerInfoDto:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/LiveTv.SeriesTimerInfoDto'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 2
        Items:
        - PrePaddingSeconds: 5
          KeepUntil: UntilDeleted
          SkipEpisodesInLibrary: true
          KeepUpTo: 0
          RecordNewOnly: true
          Keywords:
          - KeywordType: Name
            Keyword: Keyword
          - KeywordType: Name
            Keyword: Keyword
          SeriesId: SeriesId
          ChannelNumber: ChannelNumber
          RecordAnyChannel: true
          ParentThumbImageTag: ParentThumbImageTag
          ChannelId: ChannelId
          MaxRecordingSeconds: 6
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          IsPostPaddingRequired: true
          ServerId: ServerId
          ParentBackdropItemId: ParentBackdropItemId
          Days:
          - Sunday
          - Sunday
          ParentPrimaryImageTag: ParentPrimaryImageTag
          TimerType: Program
          IsPrePaddingRequired: true
          Priority: 1
          RecordAnyTime: true
          Overview: Overview
          PostPaddingSeconds: 5
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          ProgramId: ProgramId
          EndDate: 2000-01-23T04:56:07.000+00:00
          ChannelIds:
          - ChannelIds
          - ChannelIds
          ImageTags:
            key: ImageTags
          ParentFolderId: ParentFolderId
          ParentThumbItemId: ParentThumbItemId
          Type: Type
          ChannelName: ChannelName
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          Id: Id
        - PrePaddingSeconds: 5
          KeepUntil: UntilDeleted
          SkipEpisodesInLibrary: true
          KeepUpTo: 0
          RecordNewOnly: true
          Keywords:
          - KeywordType: Name
            Keyword: Keyword
          - KeywordType: Name
            Keyword: Keyword
          SeriesId: SeriesId
          ChannelNumber: ChannelNumber
          RecordAnyChannel: true
          ParentThumbImageTag: ParentThumbImageTag
          ChannelId: ChannelId
          MaxRecordingSeconds: 6
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          IsPostPaddingRequired: true
          ServerId: ServerId
          ParentBackdropItemId: ParentBackdropItemId
          Days:
          - Sunday
          - Sunday
          ParentPrimaryImageTag: ParentPrimaryImageTag
          TimerType: Program
          IsPrePaddingRequired: true
          Priority: 1
          RecordAnyTime: true
          Overview: Overview
          PostPaddingSeconds: 5
          ParentPrimaryImageItemId: ParentPrimaryImageItemId
          ProgramId: ProgramId
          EndDate: 2000-01-23T04:56:07.000+00:00
          ChannelIds:
          - ChannelIds
          - ChannelIds
          ImageTags:
            key: ImageTags
          ParentFolderId: ParentFolderId
          ParentThumbItemId: ParentThumbItemId
          Type: Type
          ChannelName: ChannelName
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          Id: Id
    LiveTv.SeriesTimerInfoDto:
      type: object
      properties:
        RecordAnyTime:
          type: boolean
          description: "A value indicating whether \\[record any time\\]."
        SkipEpisodesInLibrary:
          type: boolean
        RecordAnyChannel:
          type: boolean
          description: "A value indicating whether \\[record any channel\\]."
        KeepUpTo:
          type: integer
          format: int32
        MaxRecordingSeconds:
          type: integer
          format: int32
        RecordNewOnly:
          type: boolean
          description: "A value indicating whether \\[record new only\\]."
        ChannelIds:
          type: array
          items:
            type: string
        Days:
          type: array
          description: The days.
          items:
            $ref: '#/components/schemas/DayOfWeek'
        ImageTags:
          type: object
          additionalProperties:
            type: string
          description: The image tags.
        ParentThumbItemId:
          type: string
          description: The parent thumb item id.
        ParentThumbImageTag:
          type: string
          description: The parent thumb image tag.
        ParentPrimaryImageItemId:
          type: string
          description: The parent primary image item identifier.
        ParentPrimaryImageTag:
          type: string
          description: The parent primary image tag.
        SeriesId:
          type: string
        Keywords:
          type: array
          items:
            $ref: '#/components/schemas/LiveTv.KeywordInfo'
        TimerType:
          $ref: '#/components/schemas/LiveTv.TimerType'
        Id:
          type: string
          description: Id of the recording.
        Type:
          type: string
        ServerId:
          type: string
          description: The server identifier.
        ChannelId:
          type: string
          description: ChannelId of the recording.
        ChannelName:
          type: string
          description: ChannelName of the recording.
        ChannelNumber:
          type: string
        ChannelPrimaryImageTag:
          type: string
        ProgramId:
          type: string
          description: The program identifier.
        Name:
          type: string
          description: Name of the recording.
        Overview:
          type: string
          description: Description of the recording.
        ParentFolderId:
          type: string
        StartDate:
          type: string
          description: "The start date of the recording, in UTC."
          format: date-time
        EndDate:
          type: string
          description: "The end date of the recording, in UTC."
          format: date-time
        Priority:
          type: integer
          description: The priority.
          format: int32
        PrePaddingSeconds:
          type: integer
          description: The pre padding seconds.
          format: int32
        PostPaddingSeconds:
          type: integer
          description: The post padding seconds.
          format: int32
        IsPrePaddingRequired:
          type: boolean
          description: A value indicating whether this instance is pre padding required.
        ParentBackdropItemId:
          type: string
          description: "If the item does not have any backdrops, this will hold the\
            \ Id of the Parent that has one."
        ParentBackdropImageTags:
          type: array
          description: The parent backdrop image tags.
          items:
            type: string
        IsPostPaddingRequired:
          type: boolean
          description: A value indicating whether this instance is post padding required.
        KeepUntil:
          $ref: '#/components/schemas/LiveTv.KeepUntil'
      description: "Class SeriesTimerInfoDto.\r\n"
      example:
        PrePaddingSeconds: 5
        KeepUntil: UntilDeleted
        SkipEpisodesInLibrary: true
        KeepUpTo: 0
        RecordNewOnly: true
        Keywords:
        - KeywordType: Name
          Keyword: Keyword
        - KeywordType: Name
          Keyword: Keyword
        SeriesId: SeriesId
        ChannelNumber: ChannelNumber
        RecordAnyChannel: true
        ParentThumbImageTag: ParentThumbImageTag
        ChannelId: ChannelId
        MaxRecordingSeconds: 6
        ChannelPrimaryImageTag: ChannelPrimaryImageTag
        Name: Name
        StartDate: 2000-01-23T04:56:07.000+00:00
        IsPostPaddingRequired: true
        ServerId: ServerId
        ParentBackdropItemId: ParentBackdropItemId
        Days:
        - Sunday
        - Sunday
        ParentPrimaryImageTag: ParentPrimaryImageTag
        TimerType: Program
        IsPrePaddingRequired: true
        Priority: 1
        RecordAnyTime: true
        Overview: Overview
        PostPaddingSeconds: 5
        ParentPrimaryImageItemId: ParentPrimaryImageItemId
        ProgramId: ProgramId
        EndDate: 2000-01-23T04:56:07.000+00:00
        ChannelIds:
        - ChannelIds
        - ChannelIds
        ImageTags:
          key: ImageTags
        ParentFolderId: ParentFolderId
        ParentThumbItemId: ParentThumbItemId
        Type: Type
        ChannelName: ChannelName
        ParentBackdropImageTags:
        - ParentBackdropImageTags
        - ParentBackdropImageTags
        Id: Id
      x-internal-ref-name: MediaBrowser.Model.LiveTv.SeriesTimerInfoDto
    LiveTv.KeywordInfo:
      type: object
      properties:
        KeywordType:
          $ref: '#/components/schemas/LiveTv.KeywordType'
        Keyword:
          type: string
      example:
        KeywordType: Name
        Keyword: Keyword
      x-internal-ref-name: MediaBrowser.Model.LiveTv.KeywordInfo
    LiveTv.SeriesTimerInfo:
      type: object
      properties:
        Id:
          type: string
          description: Id of the recording.
        ChannelId:
          type: string
          description: ChannelId of the recording.
        ChannelIds:
          type: array
          items:
            type: string
        ParentFolderId:
          type: integer
          format: int64
        ProgramId:
          type: string
          description: The program identifier.
        Name:
          type: string
          description: Name of the recording.
        ServiceName:
          type: string
        Overview:
          type: string
          description: Description of the recording.
        StartDate:
          type: string
          description: "The start date of the recording, in UTC."
          format: date-time
        EndDate:
          type: string
          description: "The end date of the recording, in UTC."
          format: date-time
        RecordAnyTime:
          type: boolean
          description: "A value indicating whether \\[record any time\\]."
        KeepUpTo:
          type: integer
          format: int32
        KeepUntil:
          $ref: '#/components/schemas/LiveTv.KeepUntil'
        SkipEpisodesInLibrary:
          type: boolean
        RecordNewOnly:
          type: boolean
          description: "A value indicating whether \\[record new only\\]."
        Days:
          type: array
          description: The days.
          items:
            $ref: '#/components/schemas/DayOfWeek'
        Priority:
          type: integer
          description: The priority.
          format: int32
        PrePaddingSeconds:
          type: integer
          description: The pre padding seconds.
          format: int32
        PostPaddingSeconds:
          type: integer
          description: The post padding seconds.
          format: int32
        IsPrePaddingRequired:
          type: boolean
          description: A value indicating whether this instance is pre padding required.
        IsPostPaddingRequired:
          type: boolean
          description: A value indicating whether this instance is post padding required.
        SeriesId:
          type: string
          description: The series identifier.
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        MaxRecordingSeconds:
          type: integer
          format: int32
        Keywords:
          type: array
          items:
            $ref: '#/components/schemas/LiveTv.KeywordInfo'
        TimerType:
          $ref: '#/components/schemas/LiveTv.TimerType'
      x-internal-ref-name: MediaBrowser.Controller.LiveTv.SeriesTimerInfo
    LiveTv.GuideInfo:
      type: object
      properties:
        StartDate:
          type: string
          description: The start date.
          format: date-time
        EndDate:
          type: string
          description: The end date.
          format: date-time
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        EndDate: 2000-01-23T04:56:07.000+00:00
      x-internal-ref-name: MediaBrowser.Model.LiveTv.GuideInfo
    Api.AvailableRecordingOptions:
      type: object
      properties:
        RecordingFolders:
          type: array
          items:
            $ref: '#/components/schemas/Api.NameIdDescriptionPair'
        MovieRecordingFolders:
          type: array
          items:
            $ref: '#/components/schemas/Api.NameIdDescriptionPair'
        SeriesRecordingFolders:
          type: array
          items:
            $ref: '#/components/schemas/Api.NameIdDescriptionPair'
      example:
        MovieRecordingFolders:
        - null
        - null
        RecordingFolders:
        - Id: Id
          ShortOverview: ShortOverview
          Name: Name
        - Id: Id
          ShortOverview: ShortOverview
          Name: Name
        SeriesRecordingFolders:
        - null
        - null
      x-internal-ref-name: Emby.LiveTV.Api.AvailableRecordingOptions
    Api.NameIdDescriptionPair:
      type: object
      properties:
        ShortOverview:
          type: string
        Name:
          type: string
          description: The name.
        Id:
          type: string
          description: The identifier.
      example:
        Id: Id
        ShortOverview: ShortOverview
        Name: Name
      x-internal-ref-name: Emby.LiveTV.Api.NameIdDescriptionPair
    ParentalRating:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Value:
          type: integer
          description: The value.
          format: int32
      description: "Class ParentalRating\r\n"
      example:
        Value: 0
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Entities.ParentalRating
    Globalization.LocalizatonOption:
      type: object
      properties:
        Name:
          type: string
        Value:
          type: string
      example:
        Value: Value
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Globalization.LocalizatonOption
    Globalization.CountryInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        DisplayName:
          type: string
          description: The display name.
        EnglishName:
          type: string
          description: The English name.
        TwoLetterISORegionName:
          type: string
          description: The name of the two letter ISO region.
        ThreeLetterISORegionName:
          type: string
          description: The name of the three letter ISO region.
      description: "Class CountryInfo\r\n"
      example:
        TwoLetterISORegionName: TwoLetterISORegionName
        ThreeLetterISORegionName: ThreeLetterISORegionName
        DisplayName: DisplayName
        Name: Name
        EnglishName: EnglishName
      x-internal-ref-name: MediaBrowser.Model.Globalization.CountryInfo
    Globalization.CultureDto:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        DisplayName:
          type: string
          description: The display name.
        TwoLetterISOLanguageName:
          type: string
          description: The name of the two letter ISO language.
        ThreeLetterISOLanguageName:
          type: string
          description: The name of the three letter ISO language.
        ThreeLetterISOLanguageNames:
          type: array
          items:
            type: string
        TwoLetterISOLanguageNames:
          type: array
          items:
            type: string
      description: "Class CultureDto\r\n"
      example:
        TwoLetterISOLanguageNames:
        - TwoLetterISOLanguageNames
        - TwoLetterISOLanguageNames
        ThreeLetterISOLanguageNames:
        - ThreeLetterISOLanguageNames
        - ThreeLetterISOLanguageNames
        ThreeLetterISOLanguageName: ThreeLetterISOLanguageName
        DisplayName: DisplayName
        Name: Name
        TwoLetterISOLanguageName: TwoLetterISOLanguageName
      x-internal-ref-name: MediaBrowser.Model.Globalization.CultureDto
    RecommendationDto:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/BaseItemDto'
        RecommendationType:
          $ref: '#/components/schemas/RecommendationType'
        BaselineItemName:
          type: string
        CategoryId:
          type: integer
          format: int64
      example:
        RecommendationType: SimilarToRecentlyPlayed
        CategoryId: 0
        BaselineItemName: BaselineItemName
        Items:
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          Size: 2
          CriticRating: 6.4384236
          GameSystemId: 3
          Studios:
          - Id: 3
            Name: Name
          - Id: 3
            Name: Name
          CameraMake: CameraMake
          Aperture: 1.041444916118296
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: ExtraType
          ParentBackdropItemId: ParentBackdropItemId
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 6.628464275087742
          MediaType: MediaType
          ManagementId: ManagementId
          Tags:
          - Tags
          - Tags
          Status: Status
          IndexNumberEnd: 6
          ArtistItems:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          GenreItems:
          - null
          - null
          OfficialRating: OfficialRating
          Longitude: 9.132027271330688
          Composers:
          - null
          - null
          LockData: true
          FocalLength: 4.258773108174356
          IsNews: true
          ShutterSpeed: 4.678947989005849
          Id: Id
          SortIndexNumber: 0
          IsFolder: true
          CanMakePublic: true
          SeriesTimerId: SeriesTimerId
          SeriesId: SeriesId
          ListingsPath: ListingsPath
          MediaStreams:
          - null
          - null
          FileName: FileName
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          CanDownload: true
          IsMovie: true
          SeriesCount: 5
          PrimaryImageItemId: PrimaryImageItemId
          ListingsChannelId: ListingsChannelId
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 4
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 8
          Path: Path
          ParentId: ParentId
          TimerType: Program
          GameSystem: GameSystem
          MusicVideoCount: 8
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          Subviews:
          - Subviews
          - Subviews
          Bitrate: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: ParentThumbItemId
          PreferredMetadataLanguage: PreferredMetadataLanguage
          CanLeaveContent: true
          Type: Type
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ChildCount: 7
          TagItems:
          - null
          - null
          Artists:
          - Artists
          - Artists
          ListingsChannelName: ListingsChannelName
          RunTimeTicks: 1
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          SortParentIndexNumber: 6
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 7.260521264802104
          Guid: Guid
          SortName: SortName
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          AsSeries: true
          AlbumId: AlbumId
          SupportsSync: true
          LocalTrailerCount: 7
          IndexNumber: 5
          CompletionPercentage: 0.5199002018724985
          Genres:
          - Genres
          - Genres
          SeasonId: SeasonId
          LockedFields:
          - Cast
          - Cast
          Disabled: true
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          PresentationUniqueKey: PresentationUniqueKey
          CustomRating: CustomRating
          ListingsChannelNumber: ListingsChannelNumber
          SyncStatus: Queued
          CanManageAccess: true
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: ParentLogoItemId
          PartCount: 7
          ListingsProviderId: ListingsProviderId
          CanEditItems: true
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 9
          CommunityRating: 6.965118
          Software: Software
          Chapters:
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData:
            UnplayedItemCount: 6
            Played: true
            ServerId: ServerId
            PlayedPercentage: 7.058770351582356
            Rating: 0.8851374739011653
            PlayCount: 4
            PlaybackPositionTicks: 0
            LastPlayedDate: 2000-01-23T04:56:07.000+00:00
            IsFavorite: true
            ItemId: ItemId
            Key: Key
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: ChannelId
          ParentIndexNumber: 3
          IsNew: true
          AffiliateCallSign: AffiliateCallSign
          ListingsId: ListingsId
          AlbumArtists:
          - null
          - null
          ServerId: ServerId
          Number: Number
          AlbumCount: 4
          IsRepeat: true
          CollectionType: CollectionType
          PrimaryImageAspectRatio: 3.0576100241049344
          Height: 0
          IsKids: true
          DisplayOrder: DisplayOrder
          MovieCount: 7
          People:
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          Overview: Overview
          SpecialFeatureCount: 3
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: null
          SupportsResume: true
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 0.8774076871421566
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          Size: 2
          CriticRating: 6.4384236
          GameSystemId: 3
          Studios:
          - Id: 3
            Name: Name
          - Id: 3
            Name: Name
          CameraMake: CameraMake
          Aperture: 1.041444916118296
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: ExtraType
          ParentBackdropItemId: ParentBackdropItemId
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 6.628464275087742
          MediaType: MediaType
          ManagementId: ManagementId
          Tags:
          - Tags
          - Tags
          Status: Status
          IndexNumberEnd: 6
          ArtistItems:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          GenreItems:
          - null
          - null
          OfficialRating: OfficialRating
          Longitude: 9.132027271330688
          Composers:
          - null
          - null
          LockData: true
          FocalLength: 4.258773108174356
          IsNews: true
          ShutterSpeed: 4.678947989005849
          Id: Id
          SortIndexNumber: 0
          IsFolder: true
          CanMakePublic: true
          SeriesTimerId: SeriesTimerId
          SeriesId: SeriesId
          ListingsPath: ListingsPath
          MediaStreams:
          - null
          - null
          FileName: FileName
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          CanDownload: true
          IsMovie: true
          SeriesCount: 5
          PrimaryImageItemId: PrimaryImageItemId
          ListingsChannelId: ListingsChannelId
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 4
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 8
          Path: Path
          ParentId: ParentId
          TimerType: Program
          GameSystem: GameSystem
          MusicVideoCount: 8
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          Subviews:
          - Subviews
          - Subviews
          Bitrate: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: ParentThumbItemId
          PreferredMetadataLanguage: PreferredMetadataLanguage
          CanLeaveContent: true
          Type: Type
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ChildCount: 7
          TagItems:
          - null
          - null
          Artists:
          - Artists
          - Artists
          ListingsChannelName: ListingsChannelName
          RunTimeTicks: 1
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          SortParentIndexNumber: 6
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 7.260521264802104
          Guid: Guid
          SortName: SortName
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          AsSeries: true
          AlbumId: AlbumId
          SupportsSync: true
          LocalTrailerCount: 7
          IndexNumber: 5
          CompletionPercentage: 0.5199002018724985
          Genres:
          - Genres
          - Genres
          SeasonId: SeasonId
          LockedFields:
          - Cast
          - Cast
          Disabled: true
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          PresentationUniqueKey: PresentationUniqueKey
          CustomRating: CustomRating
          ListingsChannelNumber: ListingsChannelNumber
          SyncStatus: Queued
          CanManageAccess: true
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: ParentLogoItemId
          PartCount: 7
          ListingsProviderId: ListingsProviderId
          CanEditItems: true
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 9
          CommunityRating: 6.965118
          Software: Software
          Chapters:
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData:
            UnplayedItemCount: 6
            Played: true
            ServerId: ServerId
            PlayedPercentage: 7.058770351582356
            Rating: 0.8851374739011653
            PlayCount: 4
            PlaybackPositionTicks: 0
            LastPlayedDate: 2000-01-23T04:56:07.000+00:00
            IsFavorite: true
            ItemId: ItemId
            Key: Key
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: ChannelId
          ParentIndexNumber: 3
          IsNew: true
          AffiliateCallSign: AffiliateCallSign
          ListingsId: ListingsId
          AlbumArtists:
          - null
          - null
          ServerId: ServerId
          Number: Number
          AlbumCount: 4
          IsRepeat: true
          CollectionType: CollectionType
          PrimaryImageAspectRatio: 3.0576100241049344
          Height: 0
          IsKids: true
          DisplayOrder: DisplayOrder
          MovieCount: 7
          People:
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          Overview: Overview
          SpecialFeatureCount: 3
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: null
          SupportsResume: true
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 0.8774076871421566
      x-internal-ref-name: MediaBrowser.Model.Dto.RecommendationDto
    RecommendationType:
      type: string
      enum:
      - SimilarToRecentlyPlayed
      - SimilarToLikedItem
      - HasDirectorFromRecentlyPlayed
      - HasActorFromRecentlyPlayed
      - HasLikedDirector
      - HasLikedActor
      x-internal-ref-name: MediaBrowser.Model.Dto.RecommendationType
    NotificationCategoryInfo:
      type: object
      properties:
        Name:
          type: string
        Id:
          type: string
        Events:
          type: array
          items:
            $ref: '#/components/schemas/NotificationTypeInfo'
      example:
        Events:
        - CategoryId: CategoryId
          CategoryName: CategoryName
          Id: Id
          Name: Name
        - CategoryId: CategoryId
          CategoryName: CategoryName
          Id: Id
          Name: Name
        Id: Id
        Name: Name
      x-internal-ref-name: Emby.Notifications.NotificationCategoryInfo
    NotificationTypeInfo:
      type: object
      properties:
        Name:
          type: string
        Id:
          type: string
        CategoryName:
          type: string
        CategoryId:
          type: string
      example:
        CategoryId: CategoryId
        CategoryName: CategoryName
        Id: Id
        Name: Name
      x-internal-ref-name: Emby.Notifications.NotificationTypeInfo
    PlaybackStartInfo:
      type: object
      properties:
        CanSeek:
          type: boolean
          description: A value indicating whether this instance can seek.
        Item:
          $ref: '#/components/schemas/BaseItemDto'
        NowPlayingQueue:
          type: array
          items:
            $ref: '#/components/schemas/QueueItem'
        PlaylistItemId:
          type: string
        ItemId:
          type: string
          description: The item identifier.
        SessionId:
          type: string
          description: The session id.
        MediaSourceId:
          type: string
          description: The media version identifier.
        AudioStreamIndex:
          type: integer
          description: The index of the audio stream.
          format: int32
          nullable: true
        SubtitleStreamIndex:
          type: integer
          description: The index of the subtitle stream.
          format: int32
          nullable: true
        IsPaused:
          type: boolean
          description: A value indicating whether this instance is paused.
        PlaylistIndex:
          type: integer
          format: int32
        PlaylistLength:
          type: integer
          format: int32
        IsMuted:
          type: boolean
          description: A value indicating whether this instance is muted.
        PositionTicks:
          type: integer
          description: The position ticks.
          format: int64
          nullable: true
        RunTimeTicks:
          type: integer
          format: int64
          nullable: true
        PlaybackStartTimeTicks:
          type: integer
          format: int64
          nullable: true
        VolumeLevel:
          type: integer
          description: The volume level.
          format: int32
          nullable: true
        Brightness:
          type: integer
          format: int32
          nullable: true
        AspectRatio:
          type: string
        EventName:
          $ref: '#/components/schemas/ProgressEvent'
        PlayMethod:
          $ref: '#/components/schemas/PlayMethod'
        LiveStreamId:
          type: string
          description: The live stream identifier.
        PlaySessionId:
          type: string
          description: The play session identifier.
        RepeatMode:
          $ref: '#/components/schemas/RepeatMode'
        SubtitleOffset:
          type: integer
          format: int32
        PlaybackRate:
          type: number
          format: double
        PlaylistItemIds:
          type: array
          items:
            type: string
      description: "Class PlaybackStartInfo.\r\n"
      x-internal-ref-name: MediaBrowser.Model.Session.PlaybackStartInfo
    QueueItem:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        PlaylistItemId:
          type: string
      x-internal-ref-name: MediaBrowser.Model.Session.QueueItem
    ProgressEvent:
      type: string
      enum:
      - TimeUpdate
      - Pause
      - Unpause
      - VolumeChange
      - RepeatModeChange
      - AudioTrackChange
      - SubtitleTrackChange
      - PlaylistItemMove
      - PlaylistItemRemove
      - PlaylistItemAdd
      - QualityChange
      - StateChange
      - SubtitleOffsetChange
      - PlaybackRateChange
      x-internal-ref-name: MediaBrowser.Model.Session.ProgressEvent
    SyncTarget:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Id:
          type: string
          description: The identifier.
      example:
        Id: Id
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Sync.SyncTarget
    QueryResult_SyncJob:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/SyncJob'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 4
        Items:
        - Category: Latest
          ItemLimit: 7
          DateCreated: 2000-01-23T04:56:07.000+00:00
          PrimaryImageTag: PrimaryImageTag
          RequestedItemIds:
          - 9
          - 9
          TargetName: TargetName
          SyncNewContent: true
          ParentName: ParentName
          ItemId: 3
          Profile: Profile
          Name: Name
          DateLastModified: 2000-01-23T04:56:07.000+00:00
          Container: Container
          Quality: Quality
          PrimaryImageItemId: PrimaryImageItemId
          ItemCount: 2
          AudioCodec: AudioCodec
          ParentId: 5
          Status: Queued
          Progress: 5.637376656633329
          Bitrate: 1
          VideoCodec: VideoCodec
          TargetId: TargetId
          InternalTargetId: 6
          UserId: 2
          UnwatchedOnly: true
          Id: 0
        - Category: Latest
          ItemLimit: 7
          DateCreated: 2000-01-23T04:56:07.000+00:00
          PrimaryImageTag: PrimaryImageTag
          RequestedItemIds:
          - 9
          - 9
          TargetName: TargetName
          SyncNewContent: true
          ParentName: ParentName
          ItemId: 3
          Profile: Profile
          Name: Name
          DateLastModified: 2000-01-23T04:56:07.000+00:00
          Container: Container
          Quality: Quality
          PrimaryImageItemId: PrimaryImageItemId
          ItemCount: 2
          AudioCodec: AudioCodec
          ParentId: 5
          Status: Queued
          Progress: 5.637376656633329
          Bitrate: 1
          VideoCodec: VideoCodec
          TargetId: TargetId
          InternalTargetId: 6
          UserId: 2
          UnwatchedOnly: true
          Id: 0
    SyncJob:
      type: object
      properties:
        Id:
          type: integer
          description: The identifier.
          format: int64
        TargetId:
          type: string
          description: The device identifier.
        InternalTargetId:
          type: integer
          format: int64
        TargetName:
          type: string
          description: The name of the target.
        Quality:
          type: string
          description: The quality.
        Bitrate:
          type: integer
          description: The bitrate.
          format: int32
          nullable: true
        Container:
          type: string
        VideoCodec:
          type: string
        AudioCodec:
          type: string
        Profile:
          type: string
          description: The profile.
        Category:
          $ref: '#/components/schemas/SyncCategory'
        ParentId:
          type: integer
          description: The parent identifier.
          format: int64
        Progress:
          type: number
          description: The current progress.
          format: double
        Name:
          type: string
          description: The name.
        Status:
          $ref: '#/components/schemas/SyncJobStatus'
        UserId:
          type: integer
          description: The user identifier.
          format: int64
        UnwatchedOnly:
          type: boolean
          description: "A value indicating whether \\[unwatched only\\]."
        SyncNewContent:
          type: boolean
          description: "A value indicating whether \\[synchronize new content\\]."
        ItemLimit:
          type: integer
          description: The item limit.
          format: int32
          nullable: true
        RequestedItemIds:
          type: array
          description: The requested item ids.
          items:
            type: integer
            format: int64
        ItemId:
          type: integer
          format: int64
        DateCreated:
          type: string
          description: The date created.
          format: date-time
        DateLastModified:
          type: string
          description: The date last modified.
          format: date-time
        ItemCount:
          type: integer
          description: The item count.
          format: int32
        ParentName:
          type: string
        PrimaryImageItemId:
          type: string
        PrimaryImageTag:
          type: string
      example:
        Category: Latest
        ItemLimit: 7
        DateCreated: 2000-01-23T04:56:07.000+00:00
        PrimaryImageTag: PrimaryImageTag
        RequestedItemIds:
        - 9
        - 9
        TargetName: TargetName
        SyncNewContent: true
        ParentName: ParentName
        ItemId: 3
        Profile: Profile
        Name: Name
        DateLastModified: 2000-01-23T04:56:07.000+00:00
        Container: Container
        Quality: Quality
        PrimaryImageItemId: PrimaryImageItemId
        ItemCount: 2
        AudioCodec: AudioCodec
        ParentId: 5
        Status: Queued
        Progress: 5.637376656633329
        Bitrate: 1
        VideoCodec: VideoCodec
        TargetId: TargetId
        InternalTargetId: 6
        UserId: 2
        UnwatchedOnly: true
        Id: 0
      x-internal-ref-name: MediaBrowser.Model.Sync.SyncJob
    SyncCategory:
      type: string
      enum:
      - Latest
      - NextUp
      - Resume
      x-internal-ref-name: MediaBrowser.Model.Sync.SyncCategory
    SyncJobStatus:
      type: string
      enum:
      - Queued
      - Converting
      - ReadyToTransfer
      - Transferring
      - Completed
      - CompletedWithError
      - Failed
      x-internal-ref-name: MediaBrowser.Model.Sync.SyncJobStatus
    QueryResult_SyncJobItem:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/SyncJobItem'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 0
        Items:
        - Status: Queued
          Progress: 5.637376656633329
          OutputPath: OutputPath
          MediaSourceId: MediaSourceId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          PrimaryImageTag: PrimaryImageTag
          ItemId: 1
          TemporaryPath: TemporaryPath
          TargetId: TargetId
          InternalTargetId: 5
          MediaSource:
            EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          AdditionalFiles:
          - Path: Path
            Type: Media
            Index: 2
            Name: Name
            ImageType: Primary
          - Path: Path
            Type: Media
            Index: 2
            Name: Name
            ImageType: Primary
          PrimaryImageItemId: PrimaryImageItemId
          ItemName: ItemName
          Id: 0
          JobId: 6
        - Status: Queued
          Progress: 5.637376656633329
          OutputPath: OutputPath
          MediaSourceId: MediaSourceId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          PrimaryImageTag: PrimaryImageTag
          ItemId: 1
          TemporaryPath: TemporaryPath
          TargetId: TargetId
          InternalTargetId: 5
          MediaSource:
            EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          AdditionalFiles:
          - Path: Path
            Type: Media
            Index: 2
            Name: Name
            ImageType: Primary
          - Path: Path
            Type: Media
            Index: 2
            Name: Name
            ImageType: Primary
          PrimaryImageItemId: PrimaryImageItemId
          ItemName: ItemName
          Id: 0
          JobId: 6
    SyncJobItem:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        JobId:
          type: integer
          format: int64
        ItemId:
          type: integer
          format: int64
        ItemName:
          type: string
        MediaSourceId:
          type: string
        MediaSource:
          $ref: '#/components/schemas/MediaSourceInfo'
        TargetId:
          type: string
        InternalTargetId:
          type: integer
          format: int64
        OutputPath:
          type: string
        Status:
          $ref: '#/components/schemas/SyncJobItemStatus'
        Progress:
          type: number
          format: double
          nullable: true
        DateCreated:
          type: string
          format: date-time
        PrimaryImageItemId:
          type: string
        PrimaryImageTag:
          type: string
        TemporaryPath:
          type: string
        AdditionalFiles:
          type: array
          items:
            $ref: '#/components/schemas/ItemFileInfo'
      example:
        Status: Queued
        Progress: 5.637376656633329
        OutputPath: OutputPath
        MediaSourceId: MediaSourceId
        DateCreated: 2000-01-23T04:56:07.000+00:00
        PrimaryImageTag: PrimaryImageTag
        ItemId: 1
        TemporaryPath: TemporaryPath
        TargetId: TargetId
        InternalTargetId: 5
        MediaSource:
          EncoderPath: EncoderPath
          RequiredHttpHeaders:
            key: RequiredHttpHeaders
          RunTimeTicks: 5
          HasMixedProtocols: true
          MediaStreams:
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          Size: 1
          Video3DFormat: null
          BufferMs: 7
          ContainerStartTimeTicks: 5
          SortName: SortName
          Timestamp: None
          ItemId: ItemId
          Name: Name
          RequiresOpening: true
          DirectStreamUrl: DirectStreamUrl
          SupportsDirectStream: true
          RequiresClosing: true
          Container: Container
          ServerId: ServerId
          LiveStreamId: LiveStreamId
          RequiresLooping: true
          Protocol: File
          AddApiKeyToDirectStreamUrl: true
          DefaultSubtitleStreamIndex: 9
          TrancodeLiveStartIndex: 2
          IsInfiniteStream: true
          Path: Path
          IsRemote: true
          EncoderProtocol: null
          SupportsDirectPlay: true
          TranscodingSubProtocol: TranscodingSubProtocol
          Formats:
          - Formats
          - Formats
          AnalyzeDurationMs: 6
          WallClockStart: 2000-01-23T04:56:07.000+00:00
          Bitrate: 9
          OpenToken: OpenToken
          ProbeProtocol: null
          SupportsProbing: true
          Type: Default
          ReadAtNativeFramerate: true
          TranscodingContainer: TranscodingContainer
          ProbePath: ProbePath
          TranscodingUrl: TranscodingUrl
          Id: Id
          SupportsTranscoding: true
          DefaultAudioStreamIndex: 8
        AdditionalFiles:
        - Path: Path
          Type: Media
          Index: 2
          Name: Name
          ImageType: Primary
        - Path: Path
          Type: Media
          Index: 2
          Name: Name
          ImageType: Primary
        PrimaryImageItemId: PrimaryImageItemId
        ItemName: ItemName
        Id: 0
        JobId: 6
      x-internal-ref-name: Emby.Server.Sync.Model.SyncJobItem
    ItemFileInfo:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ItemFileType'
        Name:
          type: string
        Path:
          type: string
        ImageType:
          $ref: '#/components/schemas/ImageType'
        Index:
          type: integer
          format: int32
      example:
        Path: Path
        Type: Media
        Index: 2
        Name: Name
        ImageType: Primary
      x-internal-ref-name: Emby.Server.Sync.Model.ItemFileInfo
    ItemFileType:
      type: string
      enum:
      - Media
      - Image
      - Subtitles
      x-internal-ref-name: Emby.Server.Sync.Model.ItemFileType
    SyncJobRequest:
      type: object
      properties:
        TargetId:
          type: string
        ItemIds:
          type: array
          items:
            type: string
        Category:
          $ref: '#/components/schemas/SyncCategory'
        ParentId:
          type: string
        Quality:
          type: string
        Profile:
          type: string
        Container:
          type: string
        VideoCodec:
          type: string
        AudioCodec:
          type: string
        Name:
          type: string
        UserId:
          type: string
        UnwatchedOnly:
          type: boolean
        SyncNewContent:
          type: boolean
        ItemLimit:
          type: integer
          format: int32
          nullable: true
        Bitrate:
          type: integer
          format: int32
          nullable: true
        Downloaded:
          type: boolean
      x-internal-ref-name: Emby.Server.Sync.Model.SyncJobRequest
    SyncJobCreationResult:
      type: object
      properties:
        Job:
          $ref: '#/components/schemas/SyncJob'
        JobItems:
          type: array
          items:
            $ref: '#/components/schemas/SyncJobItem'
      example:
        JobItems:
        - Status: Queued
          Progress: 5.637376656633329
          OutputPath: OutputPath
          MediaSourceId: MediaSourceId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          PrimaryImageTag: PrimaryImageTag
          ItemId: 1
          TemporaryPath: TemporaryPath
          TargetId: TargetId
          InternalTargetId: 5
          MediaSource:
            EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          AdditionalFiles:
          - Path: Path
            Type: Media
            Index: 2
            Name: Name
            ImageType: Primary
          - Path: Path
            Type: Media
            Index: 2
            Name: Name
            ImageType: Primary
          PrimaryImageItemId: PrimaryImageItemId
          ItemName: ItemName
          Id: 0
          JobId: 6
        - Status: Queued
          Progress: 5.637376656633329
          OutputPath: OutputPath
          MediaSourceId: MediaSourceId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          PrimaryImageTag: PrimaryImageTag
          ItemId: 1
          TemporaryPath: TemporaryPath
          TargetId: TargetId
          InternalTargetId: 5
          MediaSource:
            EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          AdditionalFiles:
          - Path: Path
            Type: Media
            Index: 2
            Name: Name
            ImageType: Primary
          - Path: Path
            Type: Media
            Index: 2
            Name: Name
            ImageType: Primary
          PrimaryImageItemId: PrimaryImageItemId
          ItemName: ItemName
          Id: 0
          JobId: 6
        Job:
          Category: Latest
          ItemLimit: 7
          DateCreated: 2000-01-23T04:56:07.000+00:00
          PrimaryImageTag: PrimaryImageTag
          RequestedItemIds:
          - 9
          - 9
          TargetName: TargetName
          SyncNewContent: true
          ParentName: ParentName
          ItemId: 3
          Profile: Profile
          Name: Name
          DateLastModified: 2000-01-23T04:56:07.000+00:00
          Container: Container
          Quality: Quality
          PrimaryImageItemId: PrimaryImageItemId
          ItemCount: 2
          AudioCodec: AudioCodec
          ParentId: 5
          Status: Queued
          Progress: 5.637376656633329
          Bitrate: 1
          VideoCodec: VideoCodec
          TargetId: TargetId
          InternalTargetId: 6
          UserId: 2
          UnwatchedOnly: true
          Id: 0
      x-internal-ref-name: Emby.Server.Sync.Model.SyncJobCreationResult
    SyncDialogOptions:
      type: object
      properties:
        Targets:
          type: array
          items:
            $ref: '#/components/schemas/SyncTarget'
        Options:
          type: array
          items:
            $ref: '#/components/schemas/SyncJobOption'
        QualityOptions:
          type: array
          items:
            $ref: '#/components/schemas/SyncQualityOption'
        ProfileOptions:
          type: array
          items:
            $ref: '#/components/schemas/SyncProfileOption'
      example:
        Options:
        - Name
        - Name
        ProfileOptions:
        - IsDefault: true
          Description: Description
          EnableQualityOptions: true
          Id: Id
          Name: Name
        - IsDefault: true
          Description: Description
          EnableQualityOptions: true
          Id: Id
          Name: Name
        QualityOptions:
        - IsDefault: true
          Description: Description
          Id: Id
          IsOriginalQuality: true
          Name: Name
        - IsDefault: true
          Description: Description
          Id: Id
          IsOriginalQuality: true
          Name: Name
        Targets:
        - Id: Id
          Name: Name
        - Id: Id
          Name: Name
      x-internal-ref-name: Emby.Server.Sync.Model.SyncDialogOptions
    SyncJobOption:
      type: string
      enum:
      - Name
      - Quality
      - UnwatchedOnly
      - SyncNewContent
      - ItemLimit
      - Profile
      x-internal-ref-name: Emby.Server.Sync.Model.SyncJobOption
    SyncQualityOption:
      type: object
      properties:
        Name:
          type: string
        Description:
          type: string
        Id:
          type: string
        IsDefault:
          type: boolean
        IsOriginalQuality:
          type: boolean
      example:
        IsDefault: true
        Description: Description
        Id: Id
        IsOriginalQuality: true
        Name: Name
      x-internal-ref-name: Emby.Server.Sync.Model.SyncQualityOption
    SyncProfileOption:
      type: object
      properties:
        Name:
          type: string
        Description:
          type: string
        Id:
          type: string
        IsDefault:
          type: boolean
        EnableQualityOptions:
          type: boolean
      example:
        IsDefault: true
        Description: Description
        EnableQualityOptions: true
        Id: Id
        Name: Name
      x-internal-ref-name: Emby.Server.Sync.Model.SyncProfileOption
    UserAction:
      type: object
      properties:
        Id:
          type: string
        ServerId:
          type: string
        UserId:
          type: string
        ItemId:
          type: string
        Type:
          $ref: '#/components/schemas/UserActionType'
        Date:
          type: string
          format: date-time
        PositionTicks:
          type: integer
          format: int64
          nullable: true
        Played:
          type: boolean
          nullable: true
        IsFavorite:
          type: boolean
          nullable: true
      x-internal-ref-name: MediaBrowser.Model.Users.UserAction
    UserActionType:
      type: string
      enum:
      - PlayedItem
      - MarkPlayed
      - MarkFavorite
      x-internal-ref-name: MediaBrowser.Model.Users.UserActionType
    SyncDataRequest:
      type: object
      properties:
        LocalItemIds:
          type: array
          items:
            type: string
        InternalTargetIds:
          type: array
          items:
            type: integer
            format: int64
      x-internal-ref-name: Emby.Server.Sync.Model.SyncDataRequest
    SyncDataResponse:
      type: object
      properties:
        ItemIdsToRemove:
          type: array
          items:
            type: string
      example:
        ItemIdsToRemove:
        - ItemIdsToRemove
        - ItemIdsToRemove
      x-internal-ref-name: Emby.Server.Sync.Model.SyncDataResponse
    ServerConfiguration:
      type: object
      properties:
        EnableUPnP:
          type: boolean
          description: "A value indicating whether \\[enable u pn p\\]."
        PublicPort:
          type: integer
          description: The public mapped port.
          format: int32
        PublicHttpsPort:
          type: integer
          description: The public HTTPS port.
          format: int32
        HttpServerPortNumber:
          type: integer
          description: The HTTP server port number.
          format: int32
        HttpsPortNumber:
          type: integer
          description: The HTTPS server port number.
          format: int32
        EnableHttps:
          type: boolean
          description: "A value indicating whether \\[use HTTPS\\]."
        CertificatePath:
          type: string
          description: The value pointing to the file system where the ssl certiifcate
            is located..
        CertificatePassword:
          type: string
        IsPortAuthorized:
          type: boolean
          description: A value indicating whether this instance is port authorized.
        AutoRunWebApp:
          type: boolean
        EnableRemoteAccess:
          type: boolean
        LogAllQueryTimes:
          type: boolean
        EnableCaseSensitiveItemIds:
          type: boolean
          description: "A value indicating whether \\[enable case sensitive item ids\\\
            ]."
        MetadataPath:
          type: string
          description: The metadata path.
        MetadataNetworkPath:
          type: string
        PreferredMetadataLanguage:
          type: string
          description: The preferred metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        SortRemoveWords:
          type: array
          description: Words to be removed from strings to create a sort name
          items:
            type: string
        LibraryMonitorDelay:
          type: integer
          description: The delay in seconds that we will wait after a file system
            change to try and discover what has been added\/removed Some delay is
            necessary with some items because their creation is not atomic.  It involves
            the creation of several different directories and files.
          format: int32
        EnableDashboardResponseCaching:
          type: boolean
          description: "A value indicating whether \\[enable dashboard response caching\\\
            ]. Allows potential contributors without visual studio to modify production\
            \ dashboard code and test changes."
        DashboardSourcePath:
          type: string
          description: Allows the dashboard to be served from a custom path.
        ImageSavingConvention:
          $ref: '#/components/schemas/ImageSavingConvention'
        EnableAutomaticRestart:
          type: boolean
        ServerName:
          type: string
        PreferredDetectedRemoteAddressFamily:
          $ref: '#/components/schemas/Net.Sockets.AddressFamily'
        WanDdns:
          type: string
        UICulture:
          type: string
        RemoteClientBitrateLimit:
          type: integer
          format: int32
        LocalNetworkSubnets:
          type: array
          items:
            type: string
        LocalNetworkAddresses:
          type: array
          items:
            type: string
        EnableExternalContentInSuggestions:
          type: boolean
        RequireHttps:
          type: boolean
        IsBehindProxy:
          type: boolean
        RemoteIPFilter:
          type: array
          items:
            type: string
        IsRemoteIPFilterBlacklist:
          type: boolean
        ImageExtractionTimeoutMs:
          type: integer
          format: int32
        PathSubstitutions:
          type: array
          items:
            $ref: '#/components/schemas/PathSubstitution'
        UninstalledPlugins:
          type: array
          items:
            type: string
        CollapseVideoFolders:
          type: boolean
        EnableOriginalTrackTitles:
          type: boolean
        VacuumDatabaseOnStartup:
          type: boolean
        SimultaneousStreamLimit:
          type: integer
          format: int32
        DatabaseCacheSizeMB:
          type: integer
          format: int32
        EnableSqLiteMmio:
          type: boolean
        PlaylistsUpgradedToM3U:
          type: boolean
        ImageExtractorUpgraded1:
          type: boolean
        EnablePeopleLetterSubFolders:
          type: boolean
        OptimizeDatabaseOnShutdown:
          type: boolean
        DatabaseAnalysisLimit:
          type: integer
          format: int32
        DisableAsyncIO:
          type: boolean
        MigratedToUserItemShares6:
          type: boolean
        MigratedLibraryOptionsToDb:
          type: boolean
        AllowLegacyLocalNetworkPassword:
          type: boolean
        EnableSavedMetadataForPeople:
          type: boolean
        TvChannelsRefreshed:
          type: boolean
        ProxyHeaderMode:
          $ref: '#/components/schemas/ProxyHeaderMode'
        EnableDebugLevelLogging:
          type: boolean
          description: "A value indicating whether \\[enable debug level logging\\\
            ]."
        RevertDebugLogging:
          type: string
        EnableAutoUpdate:
          type: boolean
          description: Enable automatically and silently updating of the application
        LogFileRetentionDays:
          type: integer
          description: The number of days we should retain log files
          format: int32
        RunAtStartup:
          type: boolean
          description: "A value indicating whether \\[run at startup\\]."
        IsStartupWizardCompleted:
          type: boolean
          description: A value indicating whether this instance is first run.
        CachePath:
          type: string
          description: The cache path.
      description: "Represents the server configuration.\r\n"
      example:
        RemoteIPFilter:
        - RemoteIPFilter
        - RemoteIPFilter
        IsPortAuthorized: true
        UICulture: UICulture
        DatabaseCacheSizeMB: 3
        RevertDebugLogging: RevertDebugLogging
        IsStartupWizardCompleted: true
        ImageSavingConvention: Legacy
        EnableSavedMetadataForPeople: true
        LocalNetworkAddresses:
        - LocalNetworkAddresses
        - LocalNetworkAddresses
        EnableUPnP: true
        OptimizeDatabaseOnShutdown: true
        MetadataCountryCode: MetadataCountryCode
        ProxyHeaderMode: None
        MetadataNetworkPath: MetadataNetworkPath
        LocalNetworkSubnets:
        - LocalNetworkSubnets
        - LocalNetworkSubnets
        EnableDebugLevelLogging: true
        LogAllQueryTimes: true
        PlaylistsUpgradedToM3U: true
        AllowLegacyLocalNetworkPassword: true
        RunAtStartup: true
        HttpServerPortNumber: 1
        RequireHttps: true
        DashboardSourcePath: DashboardSourcePath
        LogFileRetentionDays: 4
        HttpsPortNumber: 5
        CertificatePassword: CertificatePassword
        EnableOriginalTrackTitles: true
        RemoteClientBitrateLimit: 2
        TvChannelsRefreshed: true
        ImageExtractionTimeoutMs: 7
        EnableExternalContentInSuggestions: true
        LibraryMonitorDelay: 5
        EnableCaseSensitiveItemIds: true
        EnablePeopleLetterSubFolders: true
        DisableAsyncIO: true
        PreferredDetectedRemoteAddressFamily: Unspecified
        MigratedToUserItemShares6: true
        MigratedLibraryOptionsToDb: true
        SimultaneousStreamLimit: 9
        PathSubstitutions:
        - From: From
          To: To
        - From: From
          To: To
        CachePath: CachePath
        WanDdns: WanDdns
        IsBehindProxy: true
        UninstalledPlugins:
        - UninstalledPlugins
        - UninstalledPlugins
        EnableDashboardResponseCaching: true
        ImageExtractorUpgraded1: true
        EnableRemoteAccess: true
        CertificatePath: CertificatePath
        CollapseVideoFolders: true
        AutoRunWebApp: true
        MetadataPath: MetadataPath
        IsRemoteIPFilterBlacklist: true
        DatabaseAnalysisLimit: 2
        PreferredMetadataLanguage: PreferredMetadataLanguage
        PublicHttpsPort: 6
        EnableHttps: true
        VacuumDatabaseOnStartup: true
        ServerName: ServerName
        SortRemoveWords:
        - SortRemoveWords
        - SortRemoveWords
        EnableAutomaticRestart: true
        EnableSqLiteMmio: true
        PublicPort: 0
        EnableAutoUpdate: true
      x-internal-ref-name: MediaBrowser.Model.Configuration.ServerConfiguration
    ImageSavingConvention:
      type: string
      enum:
      - Legacy
      - Compatible
      x-internal-ref-name: MediaBrowser.Model.Configuration.ImageSavingConvention
    Net.Sockets.AddressFamily:
      type: string
      enum:
      - Unspecified
      - Unix
      - InterNetwork
      - ImpLink
      - Pup
      - Chaos
      - NS
      - Ipx
      - Osi
      - Iso
      - Ecma
      - DataKit
      - Ccitt
      - Sna
      - DecNet
      - DataLink
      - Lat
      - HyperChannel
      - AppleTalk
      - NetBios
      - VoiceView
      - FireFox
      - Banyan
      - Atm
      - InterNetworkV6
      - Cluster
      - Ieee12844
      - Irda
      - NetworkDesigners
      - Max
      - Packet
      - ControllerAreaNetwork
      - Unknown
      x-internal-ref-name: System.Net.Sockets.AddressFamily
    PathSubstitution:
      type: object
      properties:
        From:
          type: string
        To:
          type: string
      example:
        From: From
        To: To
      x-internal-ref-name: MediaBrowser.Model.Configuration.PathSubstitution
    ProxyHeaderMode:
      type: string
      enum:
      - None
      - LanAddressesOnly
      - RemoteAddressesOnly
      - AllAddresses
      x-internal-ref-name: MediaBrowser.Model.Configuration.ProxyHeaderMode
    WakeOnLanInfo:
      type: object
      properties:
        MacAddress:
          type: string
        BroadcastAddress:
          type: string
        Port:
          type: integer
          format: int32
      example:
        BroadcastAddress: BroadcastAddress
        Port: 0
        MacAddress: MacAddress
      x-internal-ref-name: MediaBrowser.Model.System.WakeOnLanInfo
    SystemInfo:
      type: object
      properties:
        SystemUpdateLevel:
          $ref: '#/components/schemas/PackageVersionClass'
        OperatingSystemDisplayName:
          type: string
          description: The display name of the operating system.
        PackageName:
          type: string
        HasPendingRestart:
          type: boolean
          description: A value indicating whether this instance has pending restart.
        IsShuttingDown:
          type: boolean
        HasImageEnhancers:
          type: boolean
        OperatingSystem:
          type: string
          description: The operating sytem.
        SupportsLibraryMonitor:
          type: boolean
          description: "A value indicating whether \\[supports library monitor\\]."
        SupportsLocalPortConfiguration:
          type: boolean
        SupportsWakeServer:
          type: boolean
        WebSocketPortNumber:
          type: integer
          description: The web socket port number.
          format: int32
        CompletedInstallations:
          type: array
          description: The completed installations.
          items:
            $ref: '#/components/schemas/InstallationInfo'
        CanSelfRestart:
          type: boolean
          description: A value indicating whether this instance can self restart.
        CanSelfUpdate:
          type: boolean
          description: A value indicating whether this instance can self update.
        CanLaunchWebBrowser:
          type: boolean
        ProgramDataPath:
          type: string
          description: The program data path.
        ItemsByNamePath:
          type: string
          description: The items by name path.
        CachePath:
          type: string
          description: The cache path.
        LogPath:
          type: string
          description: The log path.
        InternalMetadataPath:
          type: string
          description: The internal metadata path.
        TranscodingTempPath:
          type: string
          description: The transcoding temporary path.
        HttpServerPortNumber:
          type: integer
          description: The HTTP server port number.
          format: int32
        SupportsHttps:
          type: boolean
          description: "A value indicating whether \\[enable HTTPS\\]."
        HttpsPortNumber:
          type: integer
          description: The HTTPS server port number.
          format: int32
        HasUpdateAvailable:
          type: boolean
          description: A value indicating whether this instance has update available.
        SupportsAutoRunAtStartup:
          type: boolean
          description: "A value indicating whether \\[supports automatic run at startup\\\
            ]."
        HardwareAccelerationRequiresPremiere:
          type: boolean
        WakeOnLanInfo:
          type: array
          items:
            $ref: '#/components/schemas/WakeOnLanInfo'
        LocalAddress:
          type: string
          description: The local address.
        LocalAddresses:
          type: array
          items:
            type: string
        WanAddress:
          type: string
          description: The wan address.
        RemoteAddresses:
          type: array
          items:
            type: string
        ServerName:
          type: string
          description: The name of the server.
        Version:
          type: string
          description: The version.
        Id:
          type: string
          description: The id.
      description: "Class SystemInfo\r\n"
      example:
        OperatingSystem: OperatingSystem
        HasImageEnhancers: true
        PackageName: PackageName
        LocalAddresses:
        - LocalAddresses
        - LocalAddresses
        CanSelfUpdate: true
        TranscodingTempPath: TranscodingTempPath
        CanSelfRestart: true
        HardwareAccelerationRequiresPremiere: true
        Version: Version
        CachePath: CachePath
        HasPendingRestart: true
        HttpServerPortNumber: 1
        RemoteAddresses:
        - RemoteAddresses
        - RemoteAddresses
        ProgramDataPath: ProgramDataPath
        SupportsLibraryMonitor: true
        LocalAddress: LocalAddress
        WanAddress: WanAddress
        CanLaunchWebBrowser: true
        SupportsAutoRunAtStartup: true
        IsShuttingDown: true
        HttpsPortNumber: 5
        SupportsHttps: true
        ItemsByNamePath: ItemsByNamePath
        SupportsWakeServer: true
        WebSocketPortNumber: 0
        CompletedInstallations:
        - AssemblyGuid: AssemblyGuid
          UpdateClass: null
          Version: Version
          PercentComplete: 6.027456183070403
          Id: Id
          Name: Name
        - AssemblyGuid: AssemblyGuid
          UpdateClass: null
          Version: Version
          PercentComplete: 6.027456183070403
          Id: Id
          Name: Name
        WakeOnLanInfo:
        - BroadcastAddress: BroadcastAddress
          Port: 0
          MacAddress: MacAddress
        - BroadcastAddress: BroadcastAddress
          Port: 0
          MacAddress: MacAddress
        OperatingSystemDisplayName: OperatingSystemDisplayName
        InternalMetadataPath: InternalMetadataPath
        ServerName: ServerName
        SupportsLocalPortConfiguration: true
        Id: Id
        HasUpdateAvailable: true
        LogPath: LogPath
        SystemUpdateLevel: Release
      x-internal-ref-name: MediaBrowser.Model.System.SystemInfo
    InstallationInfo:
      type: object
      properties:
        Id:
          type: string
          description: The id.
          format: guid
        Name:
          type: string
          description: The name.
        AssemblyGuid:
          type: string
          description: The assembly guid.
        Version:
          type: string
          description: The version.
        UpdateClass:
          $ref: '#/components/schemas/PackageVersionClass'
        PercentComplete:
          type: number
          description: The percent complete.
          format: double
          nullable: true
      description: "Class InstallationInfo\r\n"
      example:
        AssemblyGuid: AssemblyGuid
        UpdateClass: null
        Version: Version
        PercentComplete: 6.027456183070403
        Id: Id
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Updates.InstallationInfo
    Net.EndPointInfo:
      type: object
      properties:
        IsLocal:
          type: boolean
        IsInNetwork:
          type: boolean
      example:
        IsLocal: true
        IsInNetwork: true
      x-internal-ref-name: MediaBrowser.Model.Net.EndPointInfo
    UIViewInfo:
      type: object
      properties:
        ViewId:
          type: string
        PageId:
          type: string
        Caption:
          type: string
        SubCaption:
          type: string
        PluginId:
          type: string
        ViewType:
          $ref: '#/components/schemas/Enums.UIViewType'
        ShowDialogFullScreen:
          type: boolean
        IsInSequence:
          type: boolean
        RedirectViewUrl:
          type: string
        EditObjectContainer:
          $ref: '#/components/schemas/GenericEdit.IEditObjectContainer'
        Commands:
          type: array
          items:
            $ref: '#/components/schemas/UICommand'
        TabPageInfos:
          type: array
          items:
            $ref: '#/components/schemas/UITabPageInfo'
        IsPageChangeInfo:
          type: boolean
      example:
        PageId: PageId
        RedirectViewUrl: RedirectViewUrl
        ShowDialogFullScreen: true
        PluginId: PluginId
        Caption: Caption
        EditObjectContainer:
          TypeName: TypeName
          DefaultObject: {}
          Object: {}
        TabPageInfos:
        - PageId: PageId
          DisplayName: DisplayName
          Href: Href
          Index: 0
          NavKey: NavKey
          PluginId: PluginId
        - PageId: PageId
          DisplayName: DisplayName
          Href: Href
          Index: 0
          NavKey: NavKey
          PluginId: PluginId
        SubCaption: SubCaption
        ViewId: ViewId
        IsInSequence: true
        Commands:
        - SetFocus: true
          CommandType: Custom
          IsEnabled: true
          ConfirmationPrompt: ConfirmationPrompt
          CommandId: CommandId
          IsVisible: true
          Caption: Caption
        - SetFocus: true
          CommandType: Custom
          IsEnabled: true
          ConfirmationPrompt: ConfirmationPrompt
          CommandId: CommandId
          IsVisible: true
          Caption: Caption
        IsPageChangeInfo: true
        ViewType: RegularPage
      x-internal-ref-name: Emby.Web.GenericUI.Model.UIViewInfo
    Enums.UIViewType:
      type: string
      enum:
      - RegularPage
      - Dialog
      - Wizard
      x-internal-ref-name: Emby.Web.GenericUI.Model.Enums.UIViewType
    GenericEdit.IEditObjectContainer:
      type: object
      properties:
        Object:
          type: object
        DefaultObject:
          type: object
        TypeName:
          type: string
      example:
        TypeName: TypeName
        DefaultObject: {}
        Object: {}
      x-internal-ref-name: MediaBrowser.Model.GenericEdit.IEditObjectContainer
    UICommand:
      type: object
      properties:
        CommandType:
          $ref: '#/components/schemas/Enums.UICommandType'
        CommandId:
          type: string
        IsVisible:
          type: boolean
        IsEnabled:
          type: boolean
        Caption:
          type: string
        SetFocus:
          type: boolean
        ConfirmationPrompt:
          type: string
      example:
        SetFocus: true
        CommandType: Custom
        IsEnabled: true
        ConfirmationPrompt: ConfirmationPrompt
        CommandId: CommandId
        IsVisible: true
        Caption: Caption
      x-internal-ref-name: Emby.Web.GenericUI.Model.UICommand
    Enums.UICommandType:
      type: string
      enum:
      - Custom
      - WizardCancel
      - WizardBack
      - WizardNext
      - WizardFinish
      - DialogCancel
      - DialogOk
      - PageSave
      - PageBack
      - WizardButton1
      - WizardButton2
      - WizardButton3
      x-internal-ref-name: Emby.Web.GenericUI.Model.Enums.UICommandType
    UITabPageInfo:
      type: object
      properties:
        PageId:
          type: string
        DisplayName:
          type: string
        PluginId:
          type: string
        Href:
          type: string
        NavKey:
          type: string
        Index:
          type: integer
          format: int32
      example:
        PageId: PageId
        DisplayName: DisplayName
        Href: Href
        Index: 0
        NavKey: NavKey
        PluginId: PluginId
      x-internal-ref-name: Emby.Web.GenericUI.Model.UITabPageInfo
    RunUICommand:
      type: object
      properties:
        PageId:
          type: string
        CommandId:
          type: string
        Data:
          type: string
        ItemId:
          type: string
        ClientLocale:
          type: string
      x-internal-ref-name: Emby.Web.GenericUI.Api.Endpoints.RunUICommand
    UserDto:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        ServerId:
          type: string
          description: The server identifier.
        ServerName:
          type: string
          description: The name of the server. This is not used by the server and
            is for client\-side usage only.
        Prefix:
          type: string
        ConnectUserName:
          type: string
          description: The name of the connect user.
        DateCreated:
          type: string
          format: date-time
          nullable: true
        ConnectLinkType:
          $ref: '#/components/schemas/Connect.UserLinkType'
        Id:
          type: string
          description: The id.
        PrimaryImageTag:
          type: string
          description: The primary image tag.
        HasPassword:
          type: boolean
          description: A value indicating whether this instance has password.
        HasConfiguredPassword:
          type: boolean
          description: A value indicating whether this instance has configured password.
        EnableAutoLogin:
          type: boolean
          nullable: true
        LastLoginDate:
          type: string
          description: The last login date.
          format: date-time
          nullable: true
        LastActivityDate:
          type: string
          description: The last activity date.
          format: date-time
          nullable: true
        Configuration:
          $ref: '#/components/schemas/UserConfiguration'
        Policy:
          $ref: '#/components/schemas/UserPolicy'
        PrimaryImageAspectRatio:
          type: number
          description: The primary image aspect ratio.
          format: double
          nullable: true
        HasConfiguredEasyPassword:
          type: boolean
          deprecated: true
        UserItemShareLevel:
          $ref: '#/components/schemas/UserItemShareLevel'
      description: "Class UserDto\r\n"
      example:
        Policy:
          AllowTagOrRating: true
          EnableContentDeletion: true
          AllowSharingPersonalItems: true
          EnableContentDeletionFromFolders:
          - EnableContentDeletionFromFolders
          - EnableContentDeletionFromFolders
          ExcludedSubFolders:
          - ExcludedSubFolders
          - ExcludedSubFolders
          EnablePlaybackRemuxing: true
          EnabledFolders:
          - EnabledFolders
          - EnabledFolders
          BlockedMediaFolders:
          - BlockedMediaFolders
          - BlockedMediaFolders
          IsDisabled: true
          MaxParentalRating: 1
          EnablePublicSharing: true
          AccessSchedules:
          - DayOfWeek: Sunday
            StartHour: 5.962133916683182
            EndHour: 5.637376656633329
          - DayOfWeek: Sunday
            StartHour: 5.962133916683182
            EndHour: 5.637376656633329
          EnableContentDownloading: true
          EnableSubtitleManagement: true
          SimultaneousStreamLimit: 9
          IncludeTags:
          - IncludeTags
          - IncludeTags
          IsAdministrator: true
          EnableSubtitleDownloading: true
          EnabledChannels:
          - EnabledChannels
          - EnabledChannels
          EnableAllDevices: true
          EnableMediaConversion: true
          InvalidLoginAttemptCount: 2
          IsTagBlockingModeInclusive: true
          RestrictedFeatures:
          - RestrictedFeatures
          - RestrictedFeatures
          EnableLiveTvAccess: true
          EnableAllFolders: true
          EnableSharedDeviceControl: true
          EnableRemoteAccess: true
          IsHidden: true
          EnableLiveTvManagement: true
          BlockUnratedItems:
          - Movie
          - Movie
          EnableMediaPlayback: true
          EnableVideoPlaybackTranscoding: true
          EnableAllChannels: true
          EnableUserPreferenceAccess: true
          AuthenticationProviderId: AuthenticationProviderId
          LockedOutDate: 6
          BlockedTags:
          - BlockedTags
          - BlockedTags
          AllowCameraUpload: true
          IsHiddenRemotely: true
          EnabledDevices:
          - EnabledDevices
          - EnabledDevices
          EnableRemoteControlOfOtherUsers: true
          EnableAudioPlaybackTranscoding: true
          IsHiddenFromUnusedDevices: true
          EnableSyncTranscoding: true
          RemoteClientBitrateLimit: 7
        HasConfiguredEasyPassword: true
        EnableAutoLogin: true
        UserItemShareLevel: None
        Configuration:
          EnableNextEpisodeAutoPlay: true
          SubtitleLanguagePreference: SubtitleLanguagePreference
          DisplayMissingEpisodes: true
          IntroSkipMode: ShowButton
          OrderedViews:
          - OrderedViews
          - OrderedViews
          LatestItemsExcludes:
          - LatestItemsExcludes
          - LatestItemsExcludes
          SubtitleMode: Default
          ResumeRewindSeconds: 0
          HidePlayedInLatest: true
          ProfilePin: ProfilePin
          HidePlayedInMoreLikeThis: true
          HidePlayedInSuggestions: true
          RememberSubtitleSelections: true
          EnableLocalPassword: true
          AudioLanguagePreference: AudioLanguagePreference
          PlayDefaultAudioTrack: true
          MyMediaExcludes:
          - MyMediaExcludes
          - MyMediaExcludes
          RememberAudioSelections: true
        LastLoginDate: 2000-01-23T04:56:07.000+00:00
        DateCreated: 2000-01-23T04:56:07.000+00:00
        PrimaryImageTag: PrimaryImageTag
        Prefix: Prefix
        Name: Name
        ConnectUserName: ConnectUserName
        ServerId: ServerId
        HasConfiguredPassword: true
        ServerName: ServerName
        LastActivityDate: 2000-01-23T04:56:07.000+00:00
        PrimaryImageAspectRatio: 3.616076749251911
        ConnectLinkType: LinkedUser
        Id: Id
        HasPassword: true
      x-internal-ref-name: MediaBrowser.Model.Dto.UserDto
    Connect.UserLinkType:
      type: string
      enum:
      - LinkedUser
      - Guest
      x-internal-ref-name: MediaBrowser.Model.Connect.UserLinkType
    UserConfiguration:
      type: object
      properties:
        AudioLanguagePreference:
          type: string
          description: The audio language preference.
        PlayDefaultAudioTrack:
          type: boolean
          description: "A value indicating whether \\[play default audio track\\]."
        SubtitleLanguagePreference:
          type: string
          description: The subtitle language preference.
        ProfilePin:
          type: string
        DisplayMissingEpisodes:
          type: boolean
        SubtitleMode:
          $ref: '#/components/schemas/SubtitlePlaybackMode'
        OrderedViews:
          type: array
          items:
            type: string
        LatestItemsExcludes:
          type: array
          items:
            type: string
        MyMediaExcludes:
          type: array
          items:
            type: string
        HidePlayedInLatest:
          type: boolean
        HidePlayedInMoreLikeThis:
          type: boolean
        HidePlayedInSuggestions:
          type: boolean
        RememberAudioSelections:
          type: boolean
        RememberSubtitleSelections:
          type: boolean
        EnableNextEpisodeAutoPlay:
          type: boolean
        ResumeRewindSeconds:
          type: integer
          format: int32
        IntroSkipMode:
          $ref: '#/components/schemas/SegmentSkipMode'
        EnableLocalPassword:
          type: boolean
          deprecated: true
      description: "Class UserConfiguration\r\n"
      example:
        EnableNextEpisodeAutoPlay: true
        SubtitleLanguagePreference: SubtitleLanguagePreference
        DisplayMissingEpisodes: true
        IntroSkipMode: ShowButton
        OrderedViews:
        - OrderedViews
        - OrderedViews
        LatestItemsExcludes:
        - LatestItemsExcludes
        - LatestItemsExcludes
        SubtitleMode: Default
        ResumeRewindSeconds: 0
        HidePlayedInLatest: true
        ProfilePin: ProfilePin
        HidePlayedInMoreLikeThis: true
        HidePlayedInSuggestions: true
        RememberSubtitleSelections: true
        EnableLocalPassword: true
        AudioLanguagePreference: AudioLanguagePreference
        PlayDefaultAudioTrack: true
        MyMediaExcludes:
        - MyMediaExcludes
        - MyMediaExcludes
        RememberAudioSelections: true
      x-internal-ref-name: MediaBrowser.Model.Configuration.UserConfiguration
    SubtitlePlaybackMode:
      type: string
      enum:
      - Default
      - Always
      - OnlyForced
      - None
      - Smart
      - HearingImpaired
      x-internal-ref-name: MediaBrowser.Model.Configuration.SubtitlePlaybackMode
    SegmentSkipMode:
      type: string
      enum:
      - ShowButton
      - AutoSkip
      - None
      x-internal-ref-name: MediaBrowser.Model.Configuration.SegmentSkipMode
    UserPolicy:
      type: object
      properties:
        IsAdministrator:
          type: boolean
          description: A value indicating whether this instance is administrator.
        IsHidden:
          type: boolean
          description: A value indicating whether this instance is hidden.
        IsHiddenRemotely:
          type: boolean
        IsHiddenFromUnusedDevices:
          type: boolean
        IsDisabled:
          type: boolean
          description: A value indicating whether this instance is disabled.
        LockedOutDate:
          type: integer
          format: int64
        MaxParentalRating:
          type: integer
          description: The max parental rating.
          format: int32
          nullable: true
        AllowTagOrRating:
          type: boolean
        BlockedTags:
          type: array
          items:
            type: string
        IsTagBlockingModeInclusive:
          type: boolean
        IncludeTags:
          type: array
          items:
            type: string
        EnableUserPreferenceAccess:
          type: boolean
        AccessSchedules:
          type: array
          items:
            $ref: '#/components/schemas/AccessSchedule'
        BlockUnratedItems:
          type: array
          items:
            $ref: '#/components/schemas/UnratedItem'
        EnableRemoteControlOfOtherUsers:
          type: boolean
        EnableSharedDeviceControl:
          type: boolean
        EnableRemoteAccess:
          type: boolean
        EnableLiveTvManagement:
          type: boolean
        EnableLiveTvAccess:
          type: boolean
        EnableMediaPlayback:
          type: boolean
        EnableAudioPlaybackTranscoding:
          type: boolean
        EnableVideoPlaybackTranscoding:
          type: boolean
        EnablePlaybackRemuxing:
          type: boolean
        EnableContentDeletion:
          type: boolean
        RestrictedFeatures:
          type: array
          items:
            type: string
        EnableContentDeletionFromFolders:
          type: array
          items:
            type: string
        EnableContentDownloading:
          type: boolean
        EnableSubtitleDownloading:
          type: boolean
        EnableSubtitleManagement:
          type: boolean
        EnableSyncTranscoding:
          type: boolean
          description: "A value indicating whether \\[enable synchronize\\]."
        EnableMediaConversion:
          type: boolean
        EnabledChannels:
          type: array
          items:
            type: string
        EnableAllChannels:
          type: boolean
        EnabledFolders:
          type: array
          items:
            type: string
        EnableAllFolders:
          type: boolean
        InvalidLoginAttemptCount:
          type: integer
          format: int32
        EnablePublicSharing:
          type: boolean
        BlockedMediaFolders:
          type: array
          items:
            type: string
        RemoteClientBitrateLimit:
          type: integer
          format: int32
        AuthenticationProviderId:
          type: string
        ExcludedSubFolders:
          type: array
          items:
            type: string
        SimultaneousStreamLimit:
          type: integer
          format: int32
        EnabledDevices:
          type: array
          items:
            type: string
        EnableAllDevices:
          type: boolean
        AllowCameraUpload:
          type: boolean
        AllowSharingPersonalItems:
          type: boolean
      example:
        AllowTagOrRating: true
        EnableContentDeletion: true
        AllowSharingPersonalItems: true
        EnableContentDeletionFromFolders:
        - EnableContentDeletionFromFolders
        - EnableContentDeletionFromFolders
        ExcludedSubFolders:
        - ExcludedSubFolders
        - ExcludedSubFolders
        EnablePlaybackRemuxing: true
        EnabledFolders:
        - EnabledFolders
        - EnabledFolders
        BlockedMediaFolders:
        - BlockedMediaFolders
        - BlockedMediaFolders
        IsDisabled: true
        MaxParentalRating: 1
        EnablePublicSharing: true
        AccessSchedules:
        - DayOfWeek: Sunday
          StartHour: 5.962133916683182
          EndHour: 5.637376656633329
        - DayOfWeek: Sunday
          StartHour: 5.962133916683182
          EndHour: 5.637376656633329
        EnableContentDownloading: true
        EnableSubtitleManagement: true
        SimultaneousStreamLimit: 9
        IncludeTags:
        - IncludeTags
        - IncludeTags
        IsAdministrator: true
        EnableSubtitleDownloading: true
        EnabledChannels:
        - EnabledChannels
        - EnabledChannels
        EnableAllDevices: true
        EnableMediaConversion: true
        InvalidLoginAttemptCount: 2
        IsTagBlockingModeInclusive: true
        RestrictedFeatures:
        - RestrictedFeatures
        - RestrictedFeatures
        EnableLiveTvAccess: true
        EnableAllFolders: true
        EnableSharedDeviceControl: true
        EnableRemoteAccess: true
        IsHidden: true
        EnableLiveTvManagement: true
        BlockUnratedItems:
        - Movie
        - Movie
        EnableMediaPlayback: true
        EnableVideoPlaybackTranscoding: true
        EnableAllChannels: true
        EnableUserPreferenceAccess: true
        AuthenticationProviderId: AuthenticationProviderId
        LockedOutDate: 6
        BlockedTags:
        - BlockedTags
        - BlockedTags
        AllowCameraUpload: true
        IsHiddenRemotely: true
        EnabledDevices:
        - EnabledDevices
        - EnabledDevices
        EnableRemoteControlOfOtherUsers: true
        EnableAudioPlaybackTranscoding: true
        IsHiddenFromUnusedDevices: true
        EnableSyncTranscoding: true
        RemoteClientBitrateLimit: 7
      x-internal-ref-name: MediaBrowser.Model.Users.UserPolicy
    AccessSchedule:
      type: object
      properties:
        DayOfWeek:
          $ref: '#/components/schemas/DynamicDayOfWeek'
        StartHour:
          type: number
          description: The start hour.
          format: double
        EndHour:
          type: number
          description: The end hour.
          format: double
      example:
        DayOfWeek: Sunday
        StartHour: 5.962133916683182
        EndHour: 5.637376656633329
      x-internal-ref-name: MediaBrowser.Model.Configuration.AccessSchedule
    DynamicDayOfWeek:
      type: string
      enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Everyday
      - Weekday
      - Weekend
      x-internal-ref-name: MediaBrowser.Model.Configuration.DynamicDayOfWeek
    UnratedItem:
      type: string
      enum:
      - Movie
      - Trailer
      - Series
      - Music
      - Game
      - Book
      - LiveTvChannel
      - LiveTvProgram
      - ChannelContent
      - Other
      x-internal-ref-name: MediaBrowser.Model.Configuration.UnratedItem
    QueryResult_UserDto:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/UserDto'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 0
        Items:
        - Policy:
            AllowTagOrRating: true
            EnableContentDeletion: true
            AllowSharingPersonalItems: true
            EnableContentDeletionFromFolders:
            - EnableContentDeletionFromFolders
            - EnableContentDeletionFromFolders
            ExcludedSubFolders:
            - ExcludedSubFolders
            - ExcludedSubFolders
            EnablePlaybackRemuxing: true
            EnabledFolders:
            - EnabledFolders
            - EnabledFolders
            BlockedMediaFolders:
            - BlockedMediaFolders
            - BlockedMediaFolders
            IsDisabled: true
            MaxParentalRating: 1
            EnablePublicSharing: true
            AccessSchedules:
            - DayOfWeek: Sunday
              StartHour: 5.962133916683182
              EndHour: 5.637376656633329
            - DayOfWeek: Sunday
              StartHour: 5.962133916683182
              EndHour: 5.637376656633329
            EnableContentDownloading: true
            EnableSubtitleManagement: true
            SimultaneousStreamLimit: 9
            IncludeTags:
            - IncludeTags
            - IncludeTags
            IsAdministrator: true
            EnableSubtitleDownloading: true
            EnabledChannels:
            - EnabledChannels
            - EnabledChannels
            EnableAllDevices: true
            EnableMediaConversion: true
            InvalidLoginAttemptCount: 2
            IsTagBlockingModeInclusive: true
            RestrictedFeatures:
            - RestrictedFeatures
            - RestrictedFeatures
            EnableLiveTvAccess: true
            EnableAllFolders: true
            EnableSharedDeviceControl: true
            EnableRemoteAccess: true
            IsHidden: true
            EnableLiveTvManagement: true
            BlockUnratedItems:
            - Movie
            - Movie
            EnableMediaPlayback: true
            EnableVideoPlaybackTranscoding: true
            EnableAllChannels: true
            EnableUserPreferenceAccess: true
            AuthenticationProviderId: AuthenticationProviderId
            LockedOutDate: 6
            BlockedTags:
            - BlockedTags
            - BlockedTags
            AllowCameraUpload: true
            IsHiddenRemotely: true
            EnabledDevices:
            - EnabledDevices
            - EnabledDevices
            EnableRemoteControlOfOtherUsers: true
            EnableAudioPlaybackTranscoding: true
            IsHiddenFromUnusedDevices: true
            EnableSyncTranscoding: true
            RemoteClientBitrateLimit: 7
          HasConfiguredEasyPassword: true
          EnableAutoLogin: true
          UserItemShareLevel: None
          Configuration:
            EnableNextEpisodeAutoPlay: true
            SubtitleLanguagePreference: SubtitleLanguagePreference
            DisplayMissingEpisodes: true
            IntroSkipMode: ShowButton
            OrderedViews:
            - OrderedViews
            - OrderedViews
            LatestItemsExcludes:
            - LatestItemsExcludes
            - LatestItemsExcludes
            SubtitleMode: Default
            ResumeRewindSeconds: 0
            HidePlayedInLatest: true
            ProfilePin: ProfilePin
            HidePlayedInMoreLikeThis: true
            HidePlayedInSuggestions: true
            RememberSubtitleSelections: true
            EnableLocalPassword: true
            AudioLanguagePreference: AudioLanguagePreference
            PlayDefaultAudioTrack: true
            MyMediaExcludes:
            - MyMediaExcludes
            - MyMediaExcludes
            RememberAudioSelections: true
          LastLoginDate: 2000-01-23T04:56:07.000+00:00
          DateCreated: 2000-01-23T04:56:07.000+00:00
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          Name: Name
          ConnectUserName: ConnectUserName
          ServerId: ServerId
          HasConfiguredPassword: true
          ServerName: ServerName
          LastActivityDate: 2000-01-23T04:56:07.000+00:00
          PrimaryImageAspectRatio: 3.616076749251911
          ConnectLinkType: LinkedUser
          Id: Id
          HasPassword: true
        - Policy:
            AllowTagOrRating: true
            EnableContentDeletion: true
            AllowSharingPersonalItems: true
            EnableContentDeletionFromFolders:
            - EnableContentDeletionFromFolders
            - EnableContentDeletionFromFolders
            ExcludedSubFolders:
            - ExcludedSubFolders
            - ExcludedSubFolders
            EnablePlaybackRemuxing: true
            EnabledFolders:
            - EnabledFolders
            - EnabledFolders
            BlockedMediaFolders:
            - BlockedMediaFolders
            - BlockedMediaFolders
            IsDisabled: true
            MaxParentalRating: 1
            EnablePublicSharing: true
            AccessSchedules:
            - DayOfWeek: Sunday
              StartHour: 5.962133916683182
              EndHour: 5.637376656633329
            - DayOfWeek: Sunday
              StartHour: 5.962133916683182
              EndHour: 5.637376656633329
            EnableContentDownloading: true
            EnableSubtitleManagement: true
            SimultaneousStreamLimit: 9
            IncludeTags:
            - IncludeTags
            - IncludeTags
            IsAdministrator: true
            EnableSubtitleDownloading: true
            EnabledChannels:
            - EnabledChannels
            - EnabledChannels
            EnableAllDevices: true
            EnableMediaConversion: true
            InvalidLoginAttemptCount: 2
            IsTagBlockingModeInclusive: true
            RestrictedFeatures:
            - RestrictedFeatures
            - RestrictedFeatures
            EnableLiveTvAccess: true
            EnableAllFolders: true
            EnableSharedDeviceControl: true
            EnableRemoteAccess: true
            IsHidden: true
            EnableLiveTvManagement: true
            BlockUnratedItems:
            - Movie
            - Movie
            EnableMediaPlayback: true
            EnableVideoPlaybackTranscoding: true
            EnableAllChannels: true
            EnableUserPreferenceAccess: true
            AuthenticationProviderId: AuthenticationProviderId
            LockedOutDate: 6
            BlockedTags:
            - BlockedTags
            - BlockedTags
            AllowCameraUpload: true
            IsHiddenRemotely: true
            EnabledDevices:
            - EnabledDevices
            - EnabledDevices
            EnableRemoteControlOfOtherUsers: true
            EnableAudioPlaybackTranscoding: true
            IsHiddenFromUnusedDevices: true
            EnableSyncTranscoding: true
            RemoteClientBitrateLimit: 7
          HasConfiguredEasyPassword: true
          EnableAutoLogin: true
          UserItemShareLevel: None
          Configuration:
            EnableNextEpisodeAutoPlay: true
            SubtitleLanguagePreference: SubtitleLanguagePreference
            DisplayMissingEpisodes: true
            IntroSkipMode: ShowButton
            OrderedViews:
            - OrderedViews
            - OrderedViews
            LatestItemsExcludes:
            - LatestItemsExcludes
            - LatestItemsExcludes
            SubtitleMode: Default
            ResumeRewindSeconds: 0
            HidePlayedInLatest: true
            ProfilePin: ProfilePin
            HidePlayedInMoreLikeThis: true
            HidePlayedInSuggestions: true
            RememberSubtitleSelections: true
            EnableLocalPassword: true
            AudioLanguagePreference: AudioLanguagePreference
            PlayDefaultAudioTrack: true
            MyMediaExcludes:
            - MyMediaExcludes
            - MyMediaExcludes
            RememberAudioSelections: true
          LastLoginDate: 2000-01-23T04:56:07.000+00:00
          DateCreated: 2000-01-23T04:56:07.000+00:00
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          Name: Name
          ConnectUserName: ConnectUserName
          ServerId: ServerId
          HasConfiguredPassword: true
          ServerName: ServerName
          LastActivityDate: 2000-01-23T04:56:07.000+00:00
          PrimaryImageAspectRatio: 3.616076749251911
          ConnectLinkType: LinkedUser
          Id: Id
          HasPassword: true
    AuthenticateUserByName:
      type: object
      properties:
        Username:
          type: string
        Pw:
          type: string
      x-internal-ref-name: Emby.Api.AuthenticateUserByName
    Authentication.AuthenticationResult:
      type: object
      properties:
        User:
          $ref: '#/components/schemas/UserDto'
        SessionInfo:
          $ref: '#/components/schemas/Session.SessionInfo'
        AccessToken:
          type: string
          description: The authentication token.
        ServerId:
          type: string
          description: The server identifier.
      example:
        User:
          Policy:
            AllowTagOrRating: true
            EnableContentDeletion: true
            AllowSharingPersonalItems: true
            EnableContentDeletionFromFolders:
            - EnableContentDeletionFromFolders
            - EnableContentDeletionFromFolders
            ExcludedSubFolders:
            - ExcludedSubFolders
            - ExcludedSubFolders
            EnablePlaybackRemuxing: true
            EnabledFolders:
            - EnabledFolders
            - EnabledFolders
            BlockedMediaFolders:
            - BlockedMediaFolders
            - BlockedMediaFolders
            IsDisabled: true
            MaxParentalRating: 1
            EnablePublicSharing: true
            AccessSchedules:
            - DayOfWeek: Sunday
              StartHour: 5.962133916683182
              EndHour: 5.637376656633329
            - DayOfWeek: Sunday
              StartHour: 5.962133916683182
              EndHour: 5.637376656633329
            EnableContentDownloading: true
            EnableSubtitleManagement: true
            SimultaneousStreamLimit: 9
            IncludeTags:
            - IncludeTags
            - IncludeTags
            IsAdministrator: true
            EnableSubtitleDownloading: true
            EnabledChannels:
            - EnabledChannels
            - EnabledChannels
            EnableAllDevices: true
            EnableMediaConversion: true
            InvalidLoginAttemptCount: 2
            IsTagBlockingModeInclusive: true
            RestrictedFeatures:
            - RestrictedFeatures
            - RestrictedFeatures
            EnableLiveTvAccess: true
            EnableAllFolders: true
            EnableSharedDeviceControl: true
            EnableRemoteAccess: true
            IsHidden: true
            EnableLiveTvManagement: true
            BlockUnratedItems:
            - Movie
            - Movie
            EnableMediaPlayback: true
            EnableVideoPlaybackTranscoding: true
            EnableAllChannels: true
            EnableUserPreferenceAccess: true
            AuthenticationProviderId: AuthenticationProviderId
            LockedOutDate: 6
            BlockedTags:
            - BlockedTags
            - BlockedTags
            AllowCameraUpload: true
            IsHiddenRemotely: true
            EnabledDevices:
            - EnabledDevices
            - EnabledDevices
            EnableRemoteControlOfOtherUsers: true
            EnableAudioPlaybackTranscoding: true
            IsHiddenFromUnusedDevices: true
            EnableSyncTranscoding: true
            RemoteClientBitrateLimit: 7
          HasConfiguredEasyPassword: true
          EnableAutoLogin: true
          UserItemShareLevel: None
          Configuration:
            EnableNextEpisodeAutoPlay: true
            SubtitleLanguagePreference: SubtitleLanguagePreference
            DisplayMissingEpisodes: true
            IntroSkipMode: ShowButton
            OrderedViews:
            - OrderedViews
            - OrderedViews
            LatestItemsExcludes:
            - LatestItemsExcludes
            - LatestItemsExcludes
            SubtitleMode: Default
            ResumeRewindSeconds: 0
            HidePlayedInLatest: true
            ProfilePin: ProfilePin
            HidePlayedInMoreLikeThis: true
            HidePlayedInSuggestions: true
            RememberSubtitleSelections: true
            EnableLocalPassword: true
            AudioLanguagePreference: AudioLanguagePreference
            PlayDefaultAudioTrack: true
            MyMediaExcludes:
            - MyMediaExcludes
            - MyMediaExcludes
            RememberAudioSelections: true
          LastLoginDate: 2000-01-23T04:56:07.000+00:00
          DateCreated: 2000-01-23T04:56:07.000+00:00
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          Name: Name
          ConnectUserName: ConnectUserName
          ServerId: ServerId
          HasConfiguredPassword: true
          ServerName: ServerName
          LastActivityDate: 2000-01-23T04:56:07.000+00:00
          PrimaryImageAspectRatio: 3.616076749251911
          ConnectLinkType: LinkedUser
          Id: Id
          HasPassword: true
        ServerId: ServerId
        AccessToken: AccessToken
        SessionInfo:
          PlaylistLength: 3
          ApplicationVersion: ApplicationVersion
          SupportedCommands:
          - SupportedCommands
          - SupportedCommands
          DeviceId: DeviceId
          PlaylistItemId: PlaylistItemId
          PlaylistIndex: 9
          ServerId: ServerId
          RemoteEndPoint: RemoteEndPoint
          InternalDeviceId: 2
          SupportsRemoteControl: true
          Protocol: Protocol
          Client: Client
          UserName: UserName
          UserPrimaryImageTag: UserPrimaryImageTag
          DeviceType: DeviceType
          PlayableMediaTypes:
          - PlayableMediaTypes
          - PlayableMediaTypes
          NowPlayingItem:
            SeasonName: SeasonName
            PremiereDate: 2000-01-23T04:56:07.000+00:00
            Size: 2
            CriticRating: 6.4384236
            GameSystemId: 3
            Studios:
            - Id: 3
              Name: Name
            - Id: 3
              Name: Name
            CameraMake: CameraMake
            Aperture: 1.041444916118296
            ChannelPrimaryImageTag: ChannelPrimaryImageTag
            ExtraType: ExtraType
            ParentBackdropItemId: ParentBackdropItemId
            Etag: Etag
            ParentLogoImageTag: ParentLogoImageTag
            ExposureTime: 6.628464275087742
            MediaType: MediaType
            ManagementId: ManagementId
            Tags:
            - Tags
            - Tags
            Status: Status
            IndexNumberEnd: 6
            ArtistItems:
            - Id: Id
              Name: Name
            - Id: Id
              Name: Name
            MediaSources:
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            GenreItems:
            - null
            - null
            OfficialRating: OfficialRating
            Longitude: 9.132027271330688
            Composers:
            - null
            - null
            LockData: true
            FocalLength: 4.258773108174356
            IsNews: true
            ShutterSpeed: 4.678947989005849
            Id: Id
            SortIndexNumber: 0
            IsFolder: true
            CanMakePublic: true
            SeriesTimerId: SeriesTimerId
            SeriesId: SeriesId
            ListingsPath: ListingsPath
            MediaStreams:
            - null
            - null
            FileName: FileName
            PrimaryImageTag: PrimaryImageTag
            Prefix: Prefix
            CanDownload: true
            IsMovie: true
            SeriesCount: 5
            PrimaryImageItemId: PrimaryImageItemId
            ListingsChannelId: ListingsChannelId
            SeriesStudio: SeriesStudio
            IsLive: true
            Width: 4
            ExternalUrls:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            RecursiveItemCount: 8
            Path: Path
            ParentId: ParentId
            TimerType: Program
            GameSystem: GameSystem
            MusicVideoCount: 8
            IsSeries: true
            ProductionLocations:
            - ProductionLocations
            - ProductionLocations
            Subviews:
            - Subviews
            - Subviews
            Bitrate: 6
            EndDate: 2000-01-23T04:56:07.000+00:00
            SeriesPrimaryImageTag: SeriesPrimaryImageTag
            ParentThumbItemId: ParentThumbItemId
            PreferredMetadataLanguage: PreferredMetadataLanguage
            CanLeaveContent: true
            Type: Type
            BackdropImageTags:
            - BackdropImageTags
            - BackdropImageTags
            ParentBackdropImageTags:
            - ParentBackdropImageTags
            - ParentBackdropImageTags
            ChildCount: 7
            TagItems:
            - null
            - null
            Artists:
            - Artists
            - Artists
            ListingsChannelName: ListingsChannelName
            RunTimeTicks: 1
            AlbumPrimaryImageTag: AlbumPrimaryImageTag
            Video3DFormat: HalfSideBySide
            CanDelete: true
            PlaylistItemId: PlaylistItemId
            SortParentIndexNumber: 6
            DisplayPreferencesId: DisplayPreferencesId
            Album: Album
            Latitude: 7.260521264802104
            Guid: Guid
            SortName: SortName
            Name: Name
            StartDate: 2000-01-23T04:56:07.000+00:00
            Container: Container
            ProductionYear: 6
            SeriesName: SeriesName
            AsSeries: true
            AlbumId: AlbumId
            SupportsSync: true
            LocalTrailerCount: 7
            IndexNumber: 5
            CompletionPercentage: 0.5199002018724985
            Genres:
            - Genres
            - Genres
            SeasonId: SeasonId
            LockedFields:
            - Cast
            - Cast
            Disabled: true
            ProviderIds:
              key: ProviderIds
            RemoteTrailers:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            PresentationUniqueKey: PresentationUniqueKey
            CustomRating: CustomRating
            ListingsChannelNumber: ListingsChannelNumber
            SyncStatus: Queued
            CanManageAccess: true
            AirDays:
            - Sunday
            - Sunday
            ParentLogoItemId: ParentLogoItemId
            PartCount: 7
            ListingsProviderId: ListingsProviderId
            CanEditItems: true
            ChannelName: ChannelName
            EpisodeTitle: EpisodeTitle
            IsoSpeedRating: 9
            CommunityRating: 6.965118
            Software: Software
            Chapters:
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            SongCount: 6
            Taglines:
            - Taglines
            - Taglines
            PreferredMetadataCountryCode: PreferredMetadataCountryCode
            CameraModel: CameraModel
            ChannelNumber: ChannelNumber
            UserData:
              UnplayedItemCount: 6
              Played: true
              ServerId: ServerId
              PlayedPercentage: 7.058770351582356
              Rating: 0.8851374739011653
              PlayCount: 4
              PlaybackPositionTicks: 0
              LastPlayedDate: 2000-01-23T04:56:07.000+00:00
              IsFavorite: true
              ItemId: ItemId
              Key: Key
            TimerId: TimerId
            DateCreated: 2000-01-23T04:56:07.000+00:00
            ParentThumbImageTag: ParentThumbImageTag
            IsSports: true
            ChannelId: ChannelId
            ParentIndexNumber: 3
            IsNew: true
            AffiliateCallSign: AffiliateCallSign
            ListingsId: ListingsId
            AlbumArtists:
            - null
            - null
            ServerId: ServerId
            Number: Number
            AlbumCount: 4
            IsRepeat: true
            CollectionType: CollectionType
            PrimaryImageAspectRatio: 3.0576100241049344
            Height: 0
            IsKids: true
            DisplayOrder: DisplayOrder
            MovieCount: 7
            People:
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            Overview: Overview
            SpecialFeatureCount: 3
            ImageOrientation: TopLeft
            AlbumArtist: AlbumArtist
            ImageTags:
              key: ImageTags
            OriginalTitle: OriginalTitle
            ForcedSortName: ForcedSortName
            CurrentProgram: null
            SupportsResume: true
            LocationType: FileSystem
            IsPremiere: true
            Altitude: 0.8774076871421566
          TranscodingInfo:
            IsAudioDirect: true
            ProcessStatistics:
              Metrics:
              - Time: Time
                WorkingSet: 6.778324963048013
                VirtualMemory: 2.8841621266687802
                CpuPercent: 1.284659006116532
              - Time: Time
                WorkingSet: 6.778324963048013
                VirtualMemory: 2.8841621266687802
                CpuPercent: 1.284659006116532
              AverageCpu: 6.438423552598547
              CurrentCpu: 9.018348186070783
              CurrentWorkingSet: 6.965117697638846
              CurrentVirtualMemory: 3.5571952270680973
            TranscodeReasons:
            - ContainerNotSupported
            - ContainerNotSupported
            VideoEncoderHwAccel: VideoEncoderHwAccel
            Framerate: 1.0246457
            Container: Container
            TranscodingStartPositionTicks: 7.457744773683766
            IsVideoDirect: true
            AverageCpuUsage: 9.369310271410669
            VideoDecoderIsHardware: true
            VideoDecoderMediaType: VideoDecoderMediaType
            SubProtocol: SubProtocol
            CompletionPercentage: 1.4894159098541704
            Height: 4
            VideoPipelineInfo:
            - StepType: Decoder
              FfmpegDescription: FfmpegDescription
              Param: Param
              ParamShort: ParamShort
              StepTypeName: StepTypeName
              IsHardwareContext: true
              FfmpegOptions: FfmpegOptions
              FfmpegName: FfmpegName
              Short: Short
              HardwareContextName: HardwareContextName
              Name: Name
            - StepType: Decoder
              FfmpegDescription: FfmpegDescription
              Param: Param
              ParamShort: ParamShort
              StepTypeName: StepTypeName
              IsHardwareContext: true
              FfmpegOptions: FfmpegOptions
              FfmpegName: FfmpegName
              Short: Short
              HardwareContextName: HardwareContextName
              Name: Name
            VideoDecoder: VideoDecoder
            Width: 1
            AudioCodec: AudioCodec
            VideoEncoderIsHardware: true
            SubtitlePipelineInfos:
            - - null
              - null
            - - null
              - null
            CpuHistory:
            - Item1: 6.683562403749608
              Item2: 8.762042012749001
            - Item1: 6.683562403749608
              Item2: 8.762042012749001
            CurrentThrottle: 6
            VideoCodec: VideoCodec
            Bitrate: 4
            VideoDecoderHwAccel: VideoDecoderHwAccel
            TranscodingPositionTicks: 6.84685269835264
            CurrentCpuUsage: 9.965781217890562
            AudioBitrate: 7
            AudioChannels: 5
            VideoEncoderMediaType: VideoEncoderMediaType
            VideoEncoder: VideoEncoder
            VideoBitrate: 1
          AppIconUrl: AppIconUrl
          UserId: UserId
          LastActivityDate: 2000-01-23T04:56:07.000+00:00
          Id: Id
          AdditionalUsers:
          - UserName: UserName
            UserId: UserId
            UserInternalId: 7
          - UserName: UserName
            UserId: UserId
            UserInternalId: 7
          PlayState:
            RepeatMode: RepeatNone
            CanSeek: true
            PlayMethod: Transcode
            SubtitleOffset: 5
            PositionTicks: 0
            AudioStreamIndex: 1
            IsMuted: true
            VolumeLevel: 6
            MediaSourceId: MediaSourceId
            IsPaused: true
            SubtitleStreamIndex: 5
            PlaybackRate: 2.3021358869347655
          DeviceName: DeviceName
      x-internal-ref-name: MediaBrowser.Controller.Authentication.AuthenticationResult
    CreateUserByName:
      type: object
      properties:
        Name:
          type: string
        CopyFromUserId:
          type: string
        UserCopyOptions:
          type: array
          items:
            $ref: '#/components/schemas/Library.UserCopyOptions'
      x-internal-ref-name: Emby.Api.CreateUserByName
    Library.UserCopyOptions:
      type: string
      enum:
      - UserPolicy
      - UserConfiguration
      x-internal-ref-name: MediaBrowser.Controller.Library.UserCopyOptions
    ForgotPassword:
      type: object
      properties:
        EnteredUsername:
          type: string
      x-internal-ref-name: Emby.Api.ForgotPassword
    ForgotPasswordResult:
      type: object
      properties:
        Action:
          $ref: '#/components/schemas/ForgotPasswordAction'
        PinFile:
          type: string
          description: The pin file.
        PinExpirationDate:
          type: string
          description: The pin expiration date.
          format: date-time
          nullable: true
      example:
        Action: ContactAdmin
        PinExpirationDate: 2000-01-23T04:56:07.000+00:00
        PinFile: PinFile
      x-internal-ref-name: MediaBrowser.Model.Users.ForgotPasswordResult
    ForgotPasswordAction:
      type: string
      enum:
      - ContactAdmin
      - PinCode
      x-internal-ref-name: MediaBrowser.Model.Users.ForgotPasswordAction
    Api.ConfigurationPageInfo:
      type: object
      properties:
        Name:
          type: string
        EnableInMainMenu:
          type: boolean
        EnableInUserMenu:
          type: boolean
        FeatureId:
          type: string
        MenuSection:
          type: string
        MenuIcon:
          type: string
        DisplayName:
          type: string
        ConfigurationPageType:
          $ref: '#/components/schemas/Plugins.ConfigurationPageType'
        PluginId:
          type: string
        Href:
          type: string
        NavMenuId:
          type: string
        Plugin:
          $ref: '#/components/schemas/Common.Plugins.IPlugin'
        Translations:
          type: array
          items:
            type: string
      example:
        MenuIcon: MenuIcon
        EnableInMainMenu: true
        ConfigurationPageType: PluginConfiguration
        Href: Href
        PluginId: PluginId
        NavMenuId: NavMenuId
        Name: Name
        FeatureId: FeatureId
        EnableInUserMenu: true
        DisplayName: DisplayName
        MenuSection: MenuSection
        Translations:
        - Translations
        - Translations
        Plugin:
          Description: Description
          Version:
            Major: 0
            Revision: 5
            Build: 1
            Minor: 6
            MinorRevision: 2
            MajorRevision: 5
          AssemblyFilePath: AssemblyFilePath
          DataFolderPath: DataFolderPath
          Id: Id
          Name: Name
      x-internal-ref-name: Emby.Web.Api.ConfigurationPageInfo
    Plugins.ConfigurationPageType:
      type: string
      description: "Enum ConfigurationPageType\r\n"
      enum:
      - PluginConfiguration
      - None
      x-internal-ref-name: MediaBrowser.Controller.Plugins.ConfigurationPageType
    Common.Plugins.IPlugin:
      type: object
      properties:
        Name:
          type: string
          description: The name of the plugin
        Description:
          type: string
          description: The description.
        Id:
          type: string
          description: The unique id.
          format: guid
        Version:
          $ref: '#/components/schemas/Version'
        AssemblyFilePath:
          type: string
          description: The path to the assembly file
        DataFolderPath:
          type: string
          description: "The full path to the data folder, where the plugin can store\
            \ any miscellaneous files needed"
      description: "Interface IPlugin\r\n"
      example:
        Description: Description
        Version:
          Major: 0
          Revision: 5
          Build: 1
          Minor: 6
          MinorRevision: 2
          MajorRevision: 5
        AssemblyFilePath: AssemblyFilePath
        DataFolderPath: DataFolderPath
        Id: Id
        Name: Name
      x-internal-ref-name: MediaBrowser.Common.Plugins.IPlugin
    Version:
      type: object
      properties:
        Major:
          type: integer
          format: int32
        Minor:
          type: integer
          format: int32
        Build:
          type: integer
          format: int32
        Revision:
          type: integer
          format: int32
        MajorRevision:
          type: integer
          format: int32
        MinorRevision:
          type: integer
          format: int32
      example:
        Major: 0
        Revision: 5
        Build: 1
        Minor: 6
        MinorRevision: 2
        MajorRevision: 5
      x-internal-ref-name: System.Version
    VideoCodecBase:
      type: object
      properties:
        CodecDeviceInfo:
          $ref: '#/components/schemas/Common.Interfaces.ICodecDeviceInfo'
        CodecKind:
          $ref: '#/components/schemas/CodecKinds'
        MediaTypeName:
          type: string
        VideoMediaType:
          $ref: '#/components/schemas/VideoMediaTypes'
        MinWidth:
          type: integer
          format: int32
          nullable: true
        MaxWidth:
          type: integer
          format: int32
          nullable: true
        MinHeight:
          type: integer
          format: int32
          nullable: true
        MaxHeight:
          type: integer
          format: int32
          nullable: true
        WidthAlignment:
          type: integer
          format: int32
          nullable: true
        HeightAlignment:
          type: integer
          format: int32
          nullable: true
        MaxBitRate:
          $ref: '#/components/schemas/BitRate'
        SupportedColorFormats:
          type: array
          items:
            $ref: '#/components/schemas/ColorFormats'
        SupportedColorFormatStrings:
          type: array
          items:
            type: string
        ProfileAndLevelInformation:
          type: array
          items:
            $ref: '#/components/schemas/ProfileLevelInformation'
        Id:
          type: string
        Direction:
          $ref: '#/components/schemas/CodecDirections'
        Name:
          type: string
        Description:
          type: string
        FrameworkCodec:
          type: string
        IsHardwareCodec:
          type: boolean
        SecondaryFramework:
          $ref: '#/components/schemas/SecondaryFrameworks'
        SecondaryFrameworkCodec:
          type: string
        MaxInstanceCount:
          type: integer
          format: int32
          nullable: true
        IsEnabledByDefault:
          type: boolean
        DefaultPriority:
          type: integer
          format: int32
      example:
        CodecKind: Audio
        MinHeight: 2
        FrameworkCodec: FrameworkCodec
        Description: Description
        MaxBitRate:
          bps: 2
          kbps: 4.145608029883936
          Mbps: 7.386281948385884
        Direction: Encoder
        Name: Name
        SecondaryFrameworkCodec: SecondaryFrameworkCodec
        CodecDeviceInfo:
          ApiVersion: null
          VendorName: VendorName
          DeviceId: 1
          Desription: Desription
          VendorId: 6
          Driver: Driver
          Adapter: 0
          HardwareContextFramework: Unknown
          Name: Name
          DeviceIdentifier: DeviceIdentifier
          DriverVersion:
            Major: 0
            Revision: 5
            Build: 1
            Minor: 6
            MinorRevision: 2
            MajorRevision: 5
          DrmNode: DrmNode
          Capabilities:
            SupportsHwUpload: true
            SupportsNativeToneMapping: true
            SupportsHwDownload: true
            Supports10BitProcessing: true
            SupportsStandaloneDeviceInit: true
          DevPath: DevPath
          DeviceName: DeviceName
        MaxWidth: 5
        ProfileAndLevelInformation:
        - Level:
            ResolutionRatesDisplay: ResolutionRatesDisplay
            Description: Description
            MaxBitRateDisplay: MaxBitRateDisplay
            Ordinal: 1
            ResolutionRates:
            - FrameRate: 7.457744773683766
              Height: 6
              Width: 1
              Resolution:
                Height: 4
                Width: 1
            - FrameRate: 7.457744773683766
              Height: 6
              Width: 1
              Resolution:
                Height: 4
                Width: 1
            ShortName: ShortName
            MaxBitRate: null
            Id: Id
            ResolutionRateStrings:
            - ResolutionRateStrings
            - ResolutionRateStrings
          Profile:
            Description: Description
            Details: Details
            ShortName: ShortName
            Id: Id
            BitDepths:
            - 1
            - 1
        - Level:
            ResolutionRatesDisplay: ResolutionRatesDisplay
            Description: Description
            MaxBitRateDisplay: MaxBitRateDisplay
            Ordinal: 1
            ResolutionRates:
            - FrameRate: 7.457744773683766
              Height: 6
              Width: 1
              Resolution:
                Height: 4
                Width: 1
            - FrameRate: 7.457744773683766
              Height: 6
              Width: 1
              Resolution:
                Height: 4
                Width: 1
            ShortName: ShortName
            MaxBitRate: null
            Id: Id
            ResolutionRateStrings:
            - ResolutionRateStrings
            - ResolutionRateStrings
          Profile:
            Description: Description
            Details: Details
            ShortName: ShortName
            Id: Id
            BitDepths:
            - 1
            - 1
        DefaultPriority: 9
        WidthAlignment: 9
        VideoMediaType: Unknown
        MediaTypeName: MediaTypeName
        SupportedColorFormatStrings:
        - SupportedColorFormatStrings
        - SupportedColorFormatStrings
        MinWidth: 5
        IsHardwareCodec: true
        HeightAlignment: 3
        MaxInstanceCount: 5
        SupportedColorFormats:
        - Unknown
        - Unknown
        MaxHeight: 7
        Id: Id
        IsEnabledByDefault: true
        SecondaryFramework: null
      x-internal-ref-name: Emby.Server.MediaEncoding.Codecs.VideoCodecs.VideoCodecBase
    Common.Interfaces.ICodecDeviceInfo:
      type: object
      properties:
        Capabilities:
          $ref: '#/components/schemas/Common.Interfaces.ICodecDeviceCapabilities'
        Adapter:
          type: integer
          format: int32
        Name:
          type: string
        Desription:
          type: string
        Driver:
          type: string
        DriverVersion:
          $ref: '#/components/schemas/Version'
        ApiVersion:
          $ref: '#/components/schemas/Version'
        VendorId:
          type: integer
          format: int32
        DeviceId:
          type: integer
          format: int32
        DeviceIdentifier:
          type: string
        HardwareContextFramework:
          $ref: '#/components/schemas/SecondaryFrameworks'
        DevPath:
          type: string
        DrmNode:
          type: string
        VendorName:
          type: string
        DeviceName:
          type: string
      example:
        ApiVersion: null
        VendorName: VendorName
        DeviceId: 1
        Desription: Desription
        VendorId: 6
        Driver: Driver
        Adapter: 0
        HardwareContextFramework: Unknown
        Name: Name
        DeviceIdentifier: DeviceIdentifier
        DriverVersion:
          Major: 0
          Revision: 5
          Build: 1
          Minor: 6
          MinorRevision: 2
          MajorRevision: 5
        DrmNode: DrmNode
        Capabilities:
          SupportsHwUpload: true
          SupportsNativeToneMapping: true
          SupportsHwDownload: true
          Supports10BitProcessing: true
          SupportsStandaloneDeviceInit: true
        DevPath: DevPath
        DeviceName: DeviceName
      x-internal-ref-name: Emby.Server.MediaEncoding.Codecs.Common.Interfaces.ICodecDeviceInfo
    Common.Interfaces.ICodecDeviceCapabilities:
      type: object
      properties:
        SupportsHwUpload:
          type: boolean
        SupportsHwDownload:
          type: boolean
        SupportsStandaloneDeviceInit:
          type: boolean
        Supports10BitProcessing:
          type: boolean
        SupportsNativeToneMapping:
          type: boolean
      example:
        SupportsHwUpload: true
        SupportsNativeToneMapping: true
        SupportsHwDownload: true
        Supports10BitProcessing: true
        SupportsStandaloneDeviceInit: true
      x-internal-ref-name: Emby.Server.MediaEncoding.Codecs.Common.Interfaces.ICodecDeviceCapabilities
    SecondaryFrameworks:
      type: string
      description: "Enum defining secondary frameworks for encoding and decoding.\r\
        \n\r\n\r\nWhile most of these are hardware acceleration frameworks, this is\
        \ not a necessity             (e.g. Android MediaCodec offers software codecs\
        \ as well).\r\n"
      enum:
      - Unknown
      - None
      - AmdAmf
      - MediaCodec
      - NvEncDec
      - OpenMax
      - QuickSync
      - VaApi
      - V4L2
      - DxVa
      - D3d11va
      - VideoToolbox
      - Mmal
      x-internal-ref-name: Emby.Media.Model.Enums.SecondaryFrameworks
    CodecKinds:
      type: string
      description: "Enum defining the kind of media a codec is processing.\r\n"
      enum:
      - Audio
      - Video
      - SubTitles
      x-internal-ref-name: Emby.Media.Model.Enums.CodecKinds
    VideoMediaTypes:
      type: string
      description: "Enum listing video media types.\r\n\r\n\r\nThe enum member names\
        \ are matching exactly those that are used by ffmpeg. Exception: Items that\
        \ are starting with a number are prefixed with an underscore here.\r\n"
      enum:
      - Unknown
      - copy
      - flv1
      - h263
      - h263p
      - h264
      - hevc
      - mjpeg
      - mpeg1video
      - mpeg2video
      - mpeg4
      - msvideo1
      - theora
      - vc1image
      - vc1
      - vp8
      - vp9
      - wmv1
      - wmv2
      - wmv3
      - _012v
      - _4xm
      - _8bps
      - a64_multi
      - a64_multi5
      - aasc
      - aic
      - alias_pix
      - amv
      - anm
      - ansi
      - apng
      - asv1
      - asv2
      - aura
      - aura2
      - av1
      - avrn
      - avrp
      - avs
      - avui
      - ayuv
      - bethsoftvid
      - bfi
      - binkvideo
      - bintext
      - bitpacked
      - bmp
      - bmv_video
      - brender_pix
      - c93
      - cavs
      - cdgraphics
      - cdxl
      - cfhd
      - cinepak
      - clearvideo
      - cljr
      - cllc
      - cmv
      - cpia
      - cscd
      - cyuv
      - daala
      - dds
      - dfa
      - dirac
      - dnxhd
      - dpx
      - dsicinvideo
      - dvvideo
      - dxa
      - dxtory
      - dxv
      - escape124
      - escape130
      - exr
      - ffv1
      - ffvhuff
      - fic
      - fits
      - flashsv
      - flashsv2
      - flic
      - fmvc
      - fraps
      - frwu
      - g2m
      - gdv
      - gif
      - h261
      - h263i
      - hap
      - hnm4video
      - hq_hqa
      - hqx
      - huffyuv
      - idcin
      - idf
      - iff_ilbm
      - indeo2
      - indeo3
      - indeo4
      - indeo5
      - interplayvideo
      - jpeg2000
      - jpegls
      - jv
      - kgv1
      - kmvc
      - lagarith
      - ljpeg
      - loco
      - m101
      - mad
      - magicyuv
      - mdec
      - mimic
      - mjpegb
      - mmvideo
      - motionpixels
      - msa1
      - mscc
      - msmpeg4v1
      - msmpeg4v2
      - msmpeg4v3
      - msrle
      - mss1
      - mss2
      - mszh
      - mts2
      - mvc1
      - mvc2
      - mxpeg
      - nuv
      - paf_video
      - pam
      - pbm
      - pcx
      - pgm
      - pgmyuv
      - pictor
      - pixlet
      - png
      - ppm
      - prores
      - psd
      - ptx
      - qdraw
      - qpeg
      - qtrle
      - r10k
      - r210
      - rawvideo
      - rl2
      - roq
      - rpza
      - rscc
      - rv10
      - rv20
      - rv30
      - rv40
      - sanm
      - scpr
      - screenpresso
      - sgi
      - sgirle
      - sheervideo
      - smackvideo
      - smc
      - smvjpeg
      - snow
      - sp5x
      - speedhq
      - srgc
      - sunrast
      - svg
      - svq1
      - svq3
      - targa
      - targa_y216
      - tdsc
      - tgq
      - tgv
      - thp
      - tiertexseqvideo
      - tiff
      - tmv
      - tqi
      - truemotion1
      - truemotion2
      - truemotion2rt
      - tscc
      - tscc2
      - txd
      - ulti
      - utvideo
      - v210
      - v210x
      - v308
      - v408
      - v410
      - vb
      - vble
      - vcr1
      - vixl
      - vmdvideo
      - vmnc
      - vp3
      - vp5
      - vp6
      - vp6a
      - vp6f
      - vp7
      - webp
      - wmv3image
      - wnv1
      - wrapped_avframe
      - ws_vqa
      - xan_wc3
      - xan_wc4
      - xbin
      - xbm
      - xface
      - xpm
      - xwd
      - y41p
      - ylc
      - yop
      - yuv4
      - zerocodec
      - zlib
      - zmbv
      x-internal-ref-name: Emby.Media.Model.Enums.VideoMediaTypes
    BitRate:
      type: object
      properties:
        bps:
          type: integer
          format: int64
        kbps:
          type: number
          format: double
        Mbps:
          type: number
          format: double
      description: "A type for handling bit rates.\r\n\r\n\r\nThe purpose of this\
        \ type is to avoid manual calculations and conversions in code,          \
        \   unified handling and conversion as well as presentation through its various\
        \ To\\*\\*\\*String methods.\r\n\r\n\r\n`System.IComparable`\r\n\r\n\r\n`System.IEquatable`1`\r\
        \n"
      example:
        bps: 2
        kbps: 4.145608029883936
        Mbps: 7.386281948385884
      x-internal-ref-name: Emby.Media.Model.Types.BitRate
    ColorFormats:
      type: string
      description: "Enum listing color formats.\r\n\r\n\r\nThe enum member names are\
        \ matching those that are used by ffmpeg. (execute 'ffmpeg \\-pix\\_fmts'\
        \ to list them) Exception: Items that are starting with a number are prefixed\
        \ with an underscore here. In ffmpeg code these are prefixed with 'AV\\_PIX\\\
        _FMT\\_' and all\\-caps.\r\n"
      enum:
      - Unknown
      - yuv420p
      - yuyv422
      - rgb24
      - bgr24
      - yuv422p
      - yuv444p
      - yuv410p
      - yuv411p
      - gray
      - monow
      - monob
      - pal8
      - yuvj420p
      - yuvj422p
      - yuvj444p
      - uyvy422
      - uyyvyy411
      - bgr8
      - bgr4
      - bgr4_byte
      - rgb8
      - rgb4
      - rgb4_byte
      - nv12
      - nv21
      - argb
      - rgba
      - abgr
      - bgra
      - gray16
      - yuv440p
      - yuvj440p
      - yuva420p
      - rgb48
      - rgb565
      - rgb555
      - bgr565
      - bgr555
      - vaapi_moco
      - vaapi_idct
      - vaapi_vld
      - yuv420p16
      - yuv422p16
      - yuv444p16
      - dxva2_vld
      - rgb444
      - bgr444
      - ya8
      - bgr48
      - yuv420p9
      - yuv420p10
      - yuv422p10
      - yuv444p9
      - yuv444p10
      - yuv422p9
      - gbrp
      - gbrp9
      - gbrp10
      - gbrp16
      - yuva422p
      - yuva444p
      - yuva420p9
      - yuva422p9
      - yuva444p9
      - yuva420p10
      - yuva422p10
      - yuva444p10
      - yuva420p16
      - yuva422p16
      - yuva444p16
      - vdpau
      - xyz12
      - nv16
      - nv20
      - rgba64
      - bgra64
      - yvyu422
      - ya16
      - gbrap
      - gbrap16
      - qsv
      - mmal
      - d3d11va_vld
      - cuda
      - _0rgb
      - rgb0
      - _0bgr
      - bgr0
      - yuv420p12
      - yuv420p14
      - yuv422p12
      - yuv422p14
      - yuv444p12
      - yuv444p14
      - gbrp12
      - gbrp14
      - yuvj411p
      - bayer_bggr8
      - bayer_rggb8
      - bayer_gbrg8
      - bayer_grbg8
      - bayer_bggr16
      - bayer_rggb16
      - bayer_gbrg16
      - bayer_grbg16
      - xvmc
      - yuv440p10
      - yuv440p12
      - ayuv64
      - videotoolbox_vld
      - p010
      - gbrap12
      - gbrap10
      - mediacodec
      - gray12
      - gray10
      - gray14
      - p016
      - d3d11
      - gray9
      - gbrpf32
      - gbrapf32
      - drm_prime
      - opencl
      - grayf32
      - yuva422p12
      - yuva444p12
      - nv24
      - nv42
      x-internal-ref-name: Emby.Media.Model.Enums.ColorFormats
    ProfileLevelInformation:
      type: object
      properties:
        Profile:
          $ref: '#/components/schemas/ProfileInformation'
        Level:
          $ref: '#/components/schemas/LevelInformation'
      description: "A class combining both `Emby.Media.Model.Types.ProfileInformation`\
        \ and `Emby.Media.Model.Types.LevelInformation`.\r\n"
      example:
        Level:
          ResolutionRatesDisplay: ResolutionRatesDisplay
          Description: Description
          MaxBitRateDisplay: MaxBitRateDisplay
          Ordinal: 1
          ResolutionRates:
          - FrameRate: 7.457744773683766
            Height: 6
            Width: 1
            Resolution:
              Height: 4
              Width: 1
          - FrameRate: 7.457744773683766
            Height: 6
            Width: 1
            Resolution:
              Height: 4
              Width: 1
          ShortName: ShortName
          MaxBitRate: null
          Id: Id
          ResolutionRateStrings:
          - ResolutionRateStrings
          - ResolutionRateStrings
        Profile:
          Description: Description
          Details: Details
          ShortName: ShortName
          Id: Id
          BitDepths:
          - 1
          - 1
      x-internal-ref-name: Emby.Media.Model.Types.ProfileLevelInformation
    ProfileInformation:
      type: object
      properties:
        ShortName:
          type: string
          description: The enum member name of the profile.
        Description:
          type: string
          description: The common name of the profile.
        Details:
          type: string
          description: Detail information about the profile.
        Id:
          type: string
          description: A unique identifier.
        BitDepths:
          type: array
          description: The bit depths.
          items:
            type: integer
            format: int32
      description: "Class for unified presentation of all information associated with\
        \ a specific codec profile.\r\n"
      example:
        Description: Description
        Details: Details
        ShortName: ShortName
        Id: Id
        BitDepths:
        - 1
        - 1
      x-internal-ref-name: Emby.Media.Model.Types.ProfileInformation
    LevelInformation:
      type: object
      properties:
        ShortName:
          type: string
          description: The enum member name of the level.
        Description:
          type: string
          description: The common name of the level.
        Ordinal:
          type: integer
          description: A value indicating the level's ranking relative to other levels.
          format: int32
          nullable: true
        MaxBitRate:
          $ref: '#/components/schemas/BitRate'
        MaxBitRateDisplay:
          type: string
          description: A display value of the `Emby.Media.Model.Types.LevelInformation.MaxBitRate`
            property.
        Id:
          type: string
          description: A unique identifier.
        ResolutionRates:
          type: array
          description: Examples for the maximum supported combinations of resolution
            and rate for this level.
          items:
            $ref: '#/components/schemas/ResolutionWithRate'
        ResolutionRateStrings:
          type: array
          description: Examples for the maximum supported combinations of resolution
            and rate for this level as string values.
          items:
            type: string
        ResolutionRatesDisplay:
          type: string
          description: A single string from the `Emby.Media.Model.Types.LevelInformation.ResolutionRateStrings`
            list.
      description: "Class for unified presentation of all information associated with\
        \ a specific codec level.\r\n"
      example:
        ResolutionRatesDisplay: ResolutionRatesDisplay
        Description: Description
        MaxBitRateDisplay: MaxBitRateDisplay
        Ordinal: 1
        ResolutionRates:
        - FrameRate: 7.457744773683766
          Height: 6
          Width: 1
          Resolution:
            Height: 4
            Width: 1
        - FrameRate: 7.457744773683766
          Height: 6
          Width: 1
          Resolution:
            Height: 4
            Width: 1
        ShortName: ShortName
        MaxBitRate: null
        Id: Id
        ResolutionRateStrings:
        - ResolutionRateStrings
        - ResolutionRateStrings
      x-internal-ref-name: Emby.Media.Model.Types.LevelInformation
    ResolutionWithRate:
      type: object
      properties:
        Width:
          type: integer
          description: The resolution width.
          format: int32
        Height:
          type: integer
          description: The resolution height.
          format: int32
        FrameRate:
          type: number
          description: The frame rate in frames\/second (fps).
          format: double
        Resolution:
          $ref: '#/components/schemas/Resolution'
      description: "Struct representing a combination of video resolution and frame\
        \ rate.\r\n\r\n\r\n`System.IEquatable`1`\r\n"
      example:
        FrameRate: 7.457744773683766
        Height: 6
        Width: 1
        Resolution:
          Height: 4
          Width: 1
      x-internal-ref-name: Emby.Media.Model.Types.ResolutionWithRate
    Resolution:
      type: object
      properties:
        Width:
          type: integer
          description: The resolution width.
          format: int32
        Height:
          type: integer
          description: The resolution height.
          format: int32
      description: "Struct representing a video resolution specified in X and Y dimension.\r\
        \n\r\n\r\n`System.IComparable`\r\n\r\n\r\n`System.IEquatable`1`\r\n"
      example:
        Height: 4
        Width: 1
      x-internal-ref-name: Emby.Media.Model.Types.Resolution
    CodecDirections:
      type: string
      description: "Enum for indicating the processing direction of a codec.\r\n"
      enum:
      - Encoder
      - Decoder
      x-internal-ref-name: Emby.Media.Model.Enums.CodecDirections
    CodecConfiguration:
      type: object
      properties:
        IsEnabled:
          type: boolean
          description: A value indicating whether the codec is enabled.
        Priority:
          type: integer
          description: "The selection priority for the codec.\r\n\r\nHigher values\
            \ mean higher priority."
          format: int32
        CodecId:
          type: string
          description: The codec identifier.
      example:
        IsEnabled: true
        Priority: 0
        CodecId: CodecId
      x-internal-ref-name: MediaBrowser.Model.Configuration.CodecConfiguration
    ExternalIdInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Key:
          type: string
          description: The key.
        Website:
          type: string
        UrlFormatString:
          type: string
          description: The URL format string.
        IsSupportedAsIdentifier:
          type: boolean
      example:
        IsSupportedAsIdentifier: true
        Website: Website
        Key: Key
        Name: Name
        UrlFormatString: UrlFormatString
      x-internal-ref-name: MediaBrowser.Model.Providers.ExternalIdInfo
    RemoteSearchQuery_TrailerInfo:
      type: object
      properties:
        SearchInfo:
          $ref: '#/components/schemas/TrailerInfo'
        ItemId:
          type: integer
          format: int64
        SearchProviderName:
          type: string
        Providers:
          type: array
          items:
            type: string
        IncludeDisabledProviders:
          type: boolean
    TrailerInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        MetadataLanguage:
          type: string
          description: The metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataLanguages:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        Year:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        IsAutomated:
          type: boolean
        EnableAdultMetadata:
          type: boolean
      x-internal-ref-name: MediaBrowser.Controller.Providers.TrailerInfo
    RemoteSearchResult:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        ProductionYear:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        IndexNumberEnd:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        SortIndexNumber:
          type: integer
          format: int32
          nullable: true
        SortParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        ImageUrl:
          type: string
        SearchProviderName:
          type: string
        GameSystem:
          type: string
        Overview:
          type: string
        DisambiguationComment:
          type: string
        AlbumArtist:
          $ref: '#/components/schemas/RemoteSearchResult'
        Artists:
          type: array
          items:
            $ref: '#/components/schemas/RemoteSearchResult'
      example:
        IndexNumberEnd: 1
        GameSystem: GameSystem
        PremiereDate: 2000-01-23T04:56:07.000+00:00
        SortParentIndexNumber: 2
        ImageUrl: ImageUrl
        Overview: Overview
        ParentIndexNumber: 5
        DisambiguationComment: DisambiguationComment
        AlbumArtist: null
        Name: Name
        ProductionYear: 0
        IndexNumber: 6
        SortIndexNumber: 5
        SearchProviderName: SearchProviderName
        ProviderIds:
          key: ProviderIds
        Artists:
        - null
        - null
      x-internal-ref-name: MediaBrowser.Model.Providers.RemoteSearchResult
    RemoteSearchQuery_BookInfo:
      type: object
      properties:
        SearchInfo:
          $ref: '#/components/schemas/BookInfo'
        ItemId:
          type: integer
          format: int64
        SearchProviderName:
          type: string
        Providers:
          type: array
          items:
            type: string
        IncludeDisabledProviders:
          type: boolean
    BookInfo:
      type: object
      properties:
        SeriesName:
          type: string
        Name:
          type: string
          description: The name.
        MetadataLanguage:
          type: string
          description: The metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataLanguages:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        Year:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        IsAutomated:
          type: boolean
        EnableAdultMetadata:
          type: boolean
      x-internal-ref-name: MediaBrowser.Controller.Providers.BookInfo
    RemoteSearchQuery_MovieInfo:
      type: object
      properties:
        SearchInfo:
          $ref: '#/components/schemas/MovieInfo'
        ItemId:
          type: integer
          format: int64
        SearchProviderName:
          type: string
        Providers:
          type: array
          items:
            type: string
        IncludeDisabledProviders:
          type: boolean
    MovieInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        MetadataLanguage:
          type: string
          description: The metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataLanguages:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        Year:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        IsAutomated:
          type: boolean
        EnableAdultMetadata:
          type: boolean
      x-internal-ref-name: MediaBrowser.Controller.Providers.MovieInfo
    RemoteSearchQuery_SeriesInfo:
      type: object
      properties:
        SearchInfo:
          $ref: '#/components/schemas/SeriesInfo'
        ItemId:
          type: integer
          format: int64
        SearchProviderName:
          type: string
        Providers:
          type: array
          items:
            type: string
        IncludeDisabledProviders:
          type: boolean
    SeriesInfo:
      type: object
      properties:
        EpisodeAirDate:
          type: string
          format: date-time
          nullable: true
        DisplayOrder:
          $ref: '#/components/schemas/SeriesDisplayOrder'
        Name:
          type: string
          description: The name.
        MetadataLanguage:
          type: string
          description: The metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataLanguages:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        Year:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        IsAutomated:
          type: boolean
        EnableAdultMetadata:
          type: boolean
      x-internal-ref-name: MediaBrowser.Controller.Providers.SeriesInfo
    SeriesDisplayOrder:
      type: string
      enum:
      - Aired
      - Dvd
      - Absolute
      x-internal-ref-name: MediaBrowser.Model.Entities.SeriesDisplayOrder
    RemoteSearchQuery_GameInfo:
      type: object
      properties:
        SearchInfo:
          $ref: '#/components/schemas/GameInfo'
        ItemId:
          type: integer
          format: int64
        SearchProviderName:
          type: string
        Providers:
          type: array
          items:
            type: string
        IncludeDisabledProviders:
          type: boolean
    GameInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        MetadataLanguage:
          type: string
          description: The metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataLanguages:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        Year:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        IsAutomated:
          type: boolean
        EnableAdultMetadata:
          type: boolean
      x-internal-ref-name: MediaBrowser.Controller.Providers.GameInfo
    RemoteSearchQuery_ItemLookupInfo:
      type: object
      properties:
        SearchInfo:
          $ref: '#/components/schemas/ItemLookupInfo'
        ItemId:
          type: integer
          format: int64
        SearchProviderName:
          type: string
        Providers:
          type: array
          items:
            type: string
        IncludeDisabledProviders:
          type: boolean
    ItemLookupInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        MetadataLanguage:
          type: string
          description: The metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataLanguages:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        Year:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        IsAutomated:
          type: boolean
        EnableAdultMetadata:
          type: boolean
      x-internal-ref-name: MediaBrowser.Controller.Providers.ItemLookupInfo
    RemoteSearchQuery_MusicVideoInfo:
      type: object
      properties:
        SearchInfo:
          $ref: '#/components/schemas/MusicVideoInfo'
        ItemId:
          type: integer
          format: int64
        SearchProviderName:
          type: string
        Providers:
          type: array
          items:
            type: string
        IncludeDisabledProviders:
          type: boolean
    MusicVideoInfo:
      type: object
      properties:
        Artists:
          type: array
          items:
            type: string
        Name:
          type: string
          description: The name.
        MetadataLanguage:
          type: string
          description: The metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataLanguages:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        Year:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        IsAutomated:
          type: boolean
        EnableAdultMetadata:
          type: boolean
      x-internal-ref-name: MediaBrowser.Controller.Providers.MusicVideoInfo
    RemoteSearchQuery_PersonLookupInfo:
      type: object
      properties:
        SearchInfo:
          $ref: '#/components/schemas/PersonLookupInfo'
        ItemId:
          type: integer
          format: int64
        SearchProviderName:
          type: string
        Providers:
          type: array
          items:
            type: string
        IncludeDisabledProviders:
          type: boolean
    PersonLookupInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        MetadataLanguage:
          type: string
          description: The metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataLanguages:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        Year:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        IsAutomated:
          type: boolean
        EnableAdultMetadata:
          type: boolean
      x-internal-ref-name: MediaBrowser.Controller.Providers.PersonLookupInfo
    RemoteSearchQuery_AlbumInfo:
      type: object
      properties:
        SearchInfo:
          $ref: '#/components/schemas/AlbumInfo'
        ItemId:
          type: integer
          format: int64
        SearchProviderName:
          type: string
        Providers:
          type: array
          items:
            type: string
        IncludeDisabledProviders:
          type: boolean
    AlbumInfo:
      type: object
      properties:
        AlbumArtists:
          type: array
          description: The album artist.
          items:
            type: string
        SongInfos:
          type: array
          items:
            $ref: '#/components/schemas/SongInfo'
        Name:
          type: string
          description: The name.
        MetadataLanguage:
          type: string
          description: The metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataLanguages:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        Year:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        IsAutomated:
          type: boolean
        EnableAdultMetadata:
          type: boolean
      x-internal-ref-name: MediaBrowser.Controller.Providers.AlbumInfo
    SongInfo:
      type: object
      properties:
        AlbumArtists:
          type: array
          items:
            type: string
        Album:
          type: string
        Artists:
          type: array
          items:
            type: string
        Composers:
          type: array
          items:
            type: string
        Name:
          type: string
          description: The name.
        MetadataLanguage:
          type: string
          description: The metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataLanguages:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        Year:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        IsAutomated:
          type: boolean
        EnableAdultMetadata:
          type: boolean
      x-internal-ref-name: MediaBrowser.Controller.Providers.SongInfo
    RemoteSearchQuery_ArtistInfo:
      type: object
      properties:
        SearchInfo:
          $ref: '#/components/schemas/ArtistInfo'
        ItemId:
          type: integer
          format: int64
        SearchProviderName:
          type: string
        Providers:
          type: array
          items:
            type: string
        IncludeDisabledProviders:
          type: boolean
    ArtistInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        MetadataLanguage:
          type: string
          description: The metadata language.
        MetadataCountryCode:
          type: string
          description: The metadata country code.
        MetadataLanguages:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ProviderIds:
          $ref: '#/components/schemas/ProviderIdDictionary'
        Year:
          type: integer
          description: The year.
          format: int32
          nullable: true
        IndexNumber:
          type: integer
          format: int32
          nullable: true
        ParentIndexNumber:
          type: integer
          format: int32
          nullable: true
        PremiereDate:
          type: string
          format: date-time
          nullable: true
        IsAutomated:
          type: boolean
        EnableAdultMetadata:
          type: boolean
      x-internal-ref-name: MediaBrowser.Controller.Providers.ArtistInfo
    MetadataRefreshMode:
      type: string
      enum:
      - ValidationOnly
      - Default
      - FullRefresh
      x-internal-ref-name: MediaBrowser.Controller.Providers.MetadataRefreshMode
    MetadataEditorInfo:
      type: object
      properties:
        ParentalRatingOptions:
          type: array
          items:
            $ref: '#/components/schemas/ParentalRating'
        Countries:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CountryInfo'
        Cultures:
          type: array
          items:
            $ref: '#/components/schemas/Globalization.CultureDto'
        ExternalIdInfos:
          type: array
          items:
            $ref: '#/components/schemas/ExternalIdInfo'
      example:
        ParentalRatingOptions:
        - Value: 0
          Name: Name
        - Value: 0
          Name: Name
        Countries:
        - TwoLetterISORegionName: TwoLetterISORegionName
          ThreeLetterISORegionName: ThreeLetterISORegionName
          DisplayName: DisplayName
          Name: Name
          EnglishName: EnglishName
        - TwoLetterISORegionName: TwoLetterISORegionName
          ThreeLetterISORegionName: ThreeLetterISORegionName
          DisplayName: DisplayName
          Name: Name
          EnglishName: EnglishName
        Cultures:
        - TwoLetterISOLanguageNames:
          - TwoLetterISOLanguageNames
          - TwoLetterISOLanguageNames
          ThreeLetterISOLanguageNames:
          - ThreeLetterISOLanguageNames
          - ThreeLetterISOLanguageNames
          ThreeLetterISOLanguageName: ThreeLetterISOLanguageName
          DisplayName: DisplayName
          Name: Name
          TwoLetterISOLanguageName: TwoLetterISOLanguageName
        - TwoLetterISOLanguageNames:
          - TwoLetterISOLanguageNames
          - TwoLetterISOLanguageNames
          ThreeLetterISOLanguageNames:
          - ThreeLetterISOLanguageNames
          - ThreeLetterISOLanguageNames
          ThreeLetterISOLanguageName: ThreeLetterISOLanguageName
          DisplayName: DisplayName
          Name: Name
          TwoLetterISOLanguageName: TwoLetterISOLanguageName
        ExternalIdInfos:
        - IsSupportedAsIdentifier: true
          Website: Website
          Key: Key
          Name: Name
          UrlFormatString: UrlFormatString
        - IsSupportedAsIdentifier: true
          Website: Website
          Key: Key
          Name: Name
          UrlFormatString: UrlFormatString
      x-internal-ref-name: MediaBrowser.Model.Dto.MetadataEditorInfo
    UserLibrary.LeaveSharedItems:
      type: object
      properties:
        ItemIds:
          type: array
          items:
            type: string
        UserId:
          type: string
      x-internal-ref-name: Emby.Api.UserLibrary.LeaveSharedItems
    Library.DeleteInfo:
      type: object
      properties:
        Paths:
          type: array
          items:
            type: string
      example:
        Paths:
        - Paths
        - Paths
      x-internal-ref-name: Emby.Api.Library.DeleteInfo
    AllThemeMediaResult:
      type: object
      properties:
        ThemeVideosResult:
          $ref: '#/components/schemas/ThemeMediaResult'
        ThemeSongsResult:
          $ref: '#/components/schemas/ThemeMediaResult'
        SoundtrackSongsResult:
          $ref: '#/components/schemas/ThemeMediaResult'
      example:
        ThemeVideosResult:
          TotalRecordCount: 6
          OwnerId: 0
          Items:
          - SeasonName: SeasonName
            PremiereDate: 2000-01-23T04:56:07.000+00:00
            Size: 2
            CriticRating: 6.4384236
            GameSystemId: 3
            Studios:
            - Id: 3
              Name: Name
            - Id: 3
              Name: Name
            CameraMake: CameraMake
            Aperture: 1.041444916118296
            ChannelPrimaryImageTag: ChannelPrimaryImageTag
            ExtraType: ExtraType
            ParentBackdropItemId: ParentBackdropItemId
            Etag: Etag
            ParentLogoImageTag: ParentLogoImageTag
            ExposureTime: 6.628464275087742
            MediaType: MediaType
            ManagementId: ManagementId
            Tags:
            - Tags
            - Tags
            Status: Status
            IndexNumberEnd: 6
            ArtistItems:
            - Id: Id
              Name: Name
            - Id: Id
              Name: Name
            MediaSources:
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            GenreItems:
            - null
            - null
            OfficialRating: OfficialRating
            Longitude: 9.132027271330688
            Composers:
            - null
            - null
            LockData: true
            FocalLength: 4.258773108174356
            IsNews: true
            ShutterSpeed: 4.678947989005849
            Id: Id
            SortIndexNumber: 0
            IsFolder: true
            CanMakePublic: true
            SeriesTimerId: SeriesTimerId
            SeriesId: SeriesId
            ListingsPath: ListingsPath
            MediaStreams:
            - null
            - null
            FileName: FileName
            PrimaryImageTag: PrimaryImageTag
            Prefix: Prefix
            CanDownload: true
            IsMovie: true
            SeriesCount: 5
            PrimaryImageItemId: PrimaryImageItemId
            ListingsChannelId: ListingsChannelId
            SeriesStudio: SeriesStudio
            IsLive: true
            Width: 4
            ExternalUrls:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            RecursiveItemCount: 8
            Path: Path
            ParentId: ParentId
            TimerType: Program
            GameSystem: GameSystem
            MusicVideoCount: 8
            IsSeries: true
            ProductionLocations:
            - ProductionLocations
            - ProductionLocations
            Subviews:
            - Subviews
            - Subviews
            Bitrate: 6
            EndDate: 2000-01-23T04:56:07.000+00:00
            SeriesPrimaryImageTag: SeriesPrimaryImageTag
            ParentThumbItemId: ParentThumbItemId
            PreferredMetadataLanguage: PreferredMetadataLanguage
            CanLeaveContent: true
            Type: Type
            BackdropImageTags:
            - BackdropImageTags
            - BackdropImageTags
            ParentBackdropImageTags:
            - ParentBackdropImageTags
            - ParentBackdropImageTags
            ChildCount: 7
            TagItems:
            - null
            - null
            Artists:
            - Artists
            - Artists
            ListingsChannelName: ListingsChannelName
            RunTimeTicks: 1
            AlbumPrimaryImageTag: AlbumPrimaryImageTag
            Video3DFormat: HalfSideBySide
            CanDelete: true
            PlaylistItemId: PlaylistItemId
            SortParentIndexNumber: 6
            DisplayPreferencesId: DisplayPreferencesId
            Album: Album
            Latitude: 7.260521264802104
            Guid: Guid
            SortName: SortName
            Name: Name
            StartDate: 2000-01-23T04:56:07.000+00:00
            Container: Container
            ProductionYear: 6
            SeriesName: SeriesName
            AsSeries: true
            AlbumId: AlbumId
            SupportsSync: true
            LocalTrailerCount: 7
            IndexNumber: 5
            CompletionPercentage: 0.5199002018724985
            Genres:
            - Genres
            - Genres
            SeasonId: SeasonId
            LockedFields:
            - Cast
            - Cast
            Disabled: true
            ProviderIds:
              key: ProviderIds
            RemoteTrailers:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            PresentationUniqueKey: PresentationUniqueKey
            CustomRating: CustomRating
            ListingsChannelNumber: ListingsChannelNumber
            SyncStatus: Queued
            CanManageAccess: true
            AirDays:
            - Sunday
            - Sunday
            ParentLogoItemId: ParentLogoItemId
            PartCount: 7
            ListingsProviderId: ListingsProviderId
            CanEditItems: true
            ChannelName: ChannelName
            EpisodeTitle: EpisodeTitle
            IsoSpeedRating: 9
            CommunityRating: 6.965118
            Software: Software
            Chapters:
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            SongCount: 6
            Taglines:
            - Taglines
            - Taglines
            PreferredMetadataCountryCode: PreferredMetadataCountryCode
            CameraModel: CameraModel
            ChannelNumber: ChannelNumber
            UserData:
              UnplayedItemCount: 6
              Played: true
              ServerId: ServerId
              PlayedPercentage: 7.058770351582356
              Rating: 0.8851374739011653
              PlayCount: 4
              PlaybackPositionTicks: 0
              LastPlayedDate: 2000-01-23T04:56:07.000+00:00
              IsFavorite: true
              ItemId: ItemId
              Key: Key
            TimerId: TimerId
            DateCreated: 2000-01-23T04:56:07.000+00:00
            ParentThumbImageTag: ParentThumbImageTag
            IsSports: true
            ChannelId: ChannelId
            ParentIndexNumber: 3
            IsNew: true
            AffiliateCallSign: AffiliateCallSign
            ListingsId: ListingsId
            AlbumArtists:
            - null
            - null
            ServerId: ServerId
            Number: Number
            AlbumCount: 4
            IsRepeat: true
            CollectionType: CollectionType
            PrimaryImageAspectRatio: 3.0576100241049344
            Height: 0
            IsKids: true
            DisplayOrder: DisplayOrder
            MovieCount: 7
            People:
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            Overview: Overview
            SpecialFeatureCount: 3
            ImageOrientation: TopLeft
            AlbumArtist: AlbumArtist
            ImageTags:
              key: ImageTags
            OriginalTitle: OriginalTitle
            ForcedSortName: ForcedSortName
            CurrentProgram: null
            SupportsResume: true
            LocationType: FileSystem
            IsPremiere: true
            Altitude: 0.8774076871421566
          - SeasonName: SeasonName
            PremiereDate: 2000-01-23T04:56:07.000+00:00
            Size: 2
            CriticRating: 6.4384236
            GameSystemId: 3
            Studios:
            - Id: 3
              Name: Name
            - Id: 3
              Name: Name
            CameraMake: CameraMake
            Aperture: 1.041444916118296
            ChannelPrimaryImageTag: ChannelPrimaryImageTag
            ExtraType: ExtraType
            ParentBackdropItemId: ParentBackdropItemId
            Etag: Etag
            ParentLogoImageTag: ParentLogoImageTag
            ExposureTime: 6.628464275087742
            MediaType: MediaType
            ManagementId: ManagementId
            Tags:
            - Tags
            - Tags
            Status: Status
            IndexNumberEnd: 6
            ArtistItems:
            - Id: Id
              Name: Name
            - Id: Id
              Name: Name
            MediaSources:
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            - EncoderPath: EncoderPath
              RequiredHttpHeaders:
                key: RequiredHttpHeaders
              RunTimeTicks: 5
              HasMixedProtocols: true
              MediaStreams:
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              - VideoRange: VideoRange
                ColorSpace: ColorSpace
                Index: 4
                BitDepth: 2
                ItemId: ItemId
                SupportsExternalStream: true
                Codec: Codec
                SampleRate: 1
                IsAnamorphic: true
                PixelFormat: PixelFormat
                AttachmentSize: 9
                SubtitleLocationType: InternalStream
                RefFrames: 4
                IsAVC: true
                ColorTransfer: ColorTransfer
                ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
                IsExternalUrl: true
                DisplayTitle: DisplayTitle
                IsForced: true
                ChannelLayout: ChannelLayout
                DisplayLanguage: DisplayLanguage
                AverageFrameRate: 7.4577446
                StreamStartTimeTicks: 9
                IsExternal: true
                Level: 5.025004791520295
                ExtendedVideoSubType: None
                Channels: 1
                Profile: Profile
                MimeType: MimeType
                DeliveryUrl: DeliveryUrl
                ColorPrimaries: ColorPrimaries
                ServerId: ServerId
                Language: Language
                IsTextSubtitleStream: true
                NalLengthSize: NalLengthSize
                Height: 1
                Protocol: null
                Width: 6
                TimeBase: TimeBase
                CodecTag: CodecTag
                IsDefault: true
                Path: Path
                Comment: Comment
                DeliveryMethod: Encode
                Title: Title
                ExtendedVideoType: None
                Rotation: 7
                RealFrameRate: 1.1730742
                IsHearingImpaired: true
                AspectRatio: AspectRatio
                Type: Unknown
                IsInterlaced: true
                Extradata: Extradata
                BitRate: 3
              Size: 1
              Video3DFormat: null
              BufferMs: 7
              ContainerStartTimeTicks: 5
              SortName: SortName
              Timestamp: None
              ItemId: ItemId
              Name: Name
              RequiresOpening: true
              DirectStreamUrl: DirectStreamUrl
              SupportsDirectStream: true
              RequiresClosing: true
              Container: Container
              ServerId: ServerId
              LiveStreamId: LiveStreamId
              RequiresLooping: true
              Protocol: File
              AddApiKeyToDirectStreamUrl: true
              DefaultSubtitleStreamIndex: 9
              TrancodeLiveStartIndex: 2
              IsInfiniteStream: true
              Path: Path
              IsRemote: true
              EncoderProtocol: null
              SupportsDirectPlay: true
              TranscodingSubProtocol: TranscodingSubProtocol
              Formats:
              - Formats
              - Formats
              AnalyzeDurationMs: 6
              WallClockStart: 2000-01-23T04:56:07.000+00:00
              Bitrate: 9
              OpenToken: OpenToken
              ProbeProtocol: null
              SupportsProbing: true
              Type: Default
              ReadAtNativeFramerate: true
              TranscodingContainer: TranscodingContainer
              ProbePath: ProbePath
              TranscodingUrl: TranscodingUrl
              Id: Id
              SupportsTranscoding: true
              DefaultAudioStreamIndex: 8
            GenreItems:
            - null
            - null
            OfficialRating: OfficialRating
            Longitude: 9.132027271330688
            Composers:
            - null
            - null
            LockData: true
            FocalLength: 4.258773108174356
            IsNews: true
            ShutterSpeed: 4.678947989005849
            Id: Id
            SortIndexNumber: 0
            IsFolder: true
            CanMakePublic: true
            SeriesTimerId: SeriesTimerId
            SeriesId: SeriesId
            ListingsPath: ListingsPath
            MediaStreams:
            - null
            - null
            FileName: FileName
            PrimaryImageTag: PrimaryImageTag
            Prefix: Prefix
            CanDownload: true
            IsMovie: true
            SeriesCount: 5
            PrimaryImageItemId: PrimaryImageItemId
            ListingsChannelId: ListingsChannelId
            SeriesStudio: SeriesStudio
            IsLive: true
            Width: 4
            ExternalUrls:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            RecursiveItemCount: 8
            Path: Path
            ParentId: ParentId
            TimerType: Program
            GameSystem: GameSystem
            MusicVideoCount: 8
            IsSeries: true
            ProductionLocations:
            - ProductionLocations
            - ProductionLocations
            Subviews:
            - Subviews
            - Subviews
            Bitrate: 6
            EndDate: 2000-01-23T04:56:07.000+00:00
            SeriesPrimaryImageTag: SeriesPrimaryImageTag
            ParentThumbItemId: ParentThumbItemId
            PreferredMetadataLanguage: PreferredMetadataLanguage
            CanLeaveContent: true
            Type: Type
            BackdropImageTags:
            - BackdropImageTags
            - BackdropImageTags
            ParentBackdropImageTags:
            - ParentBackdropImageTags
            - ParentBackdropImageTags
            ChildCount: 7
            TagItems:
            - null
            - null
            Artists:
            - Artists
            - Artists
            ListingsChannelName: ListingsChannelName
            RunTimeTicks: 1
            AlbumPrimaryImageTag: AlbumPrimaryImageTag
            Video3DFormat: HalfSideBySide
            CanDelete: true
            PlaylistItemId: PlaylistItemId
            SortParentIndexNumber: 6
            DisplayPreferencesId: DisplayPreferencesId
            Album: Album
            Latitude: 7.260521264802104
            Guid: Guid
            SortName: SortName
            Name: Name
            StartDate: 2000-01-23T04:56:07.000+00:00
            Container: Container
            ProductionYear: 6
            SeriesName: SeriesName
            AsSeries: true
            AlbumId: AlbumId
            SupportsSync: true
            LocalTrailerCount: 7
            IndexNumber: 5
            CompletionPercentage: 0.5199002018724985
            Genres:
            - Genres
            - Genres
            SeasonId: SeasonId
            LockedFields:
            - Cast
            - Cast
            Disabled: true
            ProviderIds:
              key: ProviderIds
            RemoteTrailers:
            - Url: Url
              Name: Name
            - Url: Url
              Name: Name
            PresentationUniqueKey: PresentationUniqueKey
            CustomRating: CustomRating
            ListingsChannelNumber: ListingsChannelNumber
            SyncStatus: Queued
            CanManageAccess: true
            AirDays:
            - Sunday
            - Sunday
            ParentLogoItemId: ParentLogoItemId
            PartCount: 7
            ListingsProviderId: ListingsProviderId
            CanEditItems: true
            ChannelName: ChannelName
            EpisodeTitle: EpisodeTitle
            IsoSpeedRating: 9
            CommunityRating: 6.965118
            Software: Software
            Chapters:
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            - StartPositionTicks: 5
              ImageTag: ImageTag
              MarkerType: Chapter
              ChapterIndex: 3
              Name: Name
            SongCount: 6
            Taglines:
            - Taglines
            - Taglines
            PreferredMetadataCountryCode: PreferredMetadataCountryCode
            CameraModel: CameraModel
            ChannelNumber: ChannelNumber
            UserData:
              UnplayedItemCount: 6
              Played: true
              ServerId: ServerId
              PlayedPercentage: 7.058770351582356
              Rating: 0.8851374739011653
              PlayCount: 4
              PlaybackPositionTicks: 0
              LastPlayedDate: 2000-01-23T04:56:07.000+00:00
              IsFavorite: true
              ItemId: ItemId
              Key: Key
            TimerId: TimerId
            DateCreated: 2000-01-23T04:56:07.000+00:00
            ParentThumbImageTag: ParentThumbImageTag
            IsSports: true
            ChannelId: ChannelId
            ParentIndexNumber: 3
            IsNew: true
            AffiliateCallSign: AffiliateCallSign
            ListingsId: ListingsId
            AlbumArtists:
            - null
            - null
            ServerId: ServerId
            Number: Number
            AlbumCount: 4
            IsRepeat: true
            CollectionType: CollectionType
            PrimaryImageAspectRatio: 3.0576100241049344
            Height: 0
            IsKids: true
            DisplayOrder: DisplayOrder
            MovieCount: 7
            People:
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            - Role: Role
              Type: Actor
              PrimaryImageTag: PrimaryImageTag
              Id: Id
              Name: Name
            Overview: Overview
            SpecialFeatureCount: 3
            ImageOrientation: TopLeft
            AlbumArtist: AlbumArtist
            ImageTags:
              key: ImageTags
            OriginalTitle: OriginalTitle
            ForcedSortName: ForcedSortName
            CurrentProgram: null
            SupportsResume: true
            LocationType: FileSystem
            IsPremiere: true
            Altitude: 0.8774076871421566
        SoundtrackSongsResult: null
        ThemeSongsResult: null
      x-internal-ref-name: MediaBrowser.Model.Querying.AllThemeMediaResult
    ThemeMediaResult:
      type: object
      properties:
        OwnerId:
          type: integer
          description: The owner id.
          format: int64
        Items:
          type: array
          items:
            $ref: '#/components/schemas/BaseItemDto'
        TotalRecordCount:
          type: integer
          format: int32
      description: "Class ThemeMediaResult\r\n"
      example:
        TotalRecordCount: 6
        OwnerId: 0
        Items:
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          Size: 2
          CriticRating: 6.4384236
          GameSystemId: 3
          Studios:
          - Id: 3
            Name: Name
          - Id: 3
            Name: Name
          CameraMake: CameraMake
          Aperture: 1.041444916118296
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: ExtraType
          ParentBackdropItemId: ParentBackdropItemId
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 6.628464275087742
          MediaType: MediaType
          ManagementId: ManagementId
          Tags:
          - Tags
          - Tags
          Status: Status
          IndexNumberEnd: 6
          ArtistItems:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          GenreItems:
          - null
          - null
          OfficialRating: OfficialRating
          Longitude: 9.132027271330688
          Composers:
          - null
          - null
          LockData: true
          FocalLength: 4.258773108174356
          IsNews: true
          ShutterSpeed: 4.678947989005849
          Id: Id
          SortIndexNumber: 0
          IsFolder: true
          CanMakePublic: true
          SeriesTimerId: SeriesTimerId
          SeriesId: SeriesId
          ListingsPath: ListingsPath
          MediaStreams:
          - null
          - null
          FileName: FileName
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          CanDownload: true
          IsMovie: true
          SeriesCount: 5
          PrimaryImageItemId: PrimaryImageItemId
          ListingsChannelId: ListingsChannelId
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 4
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 8
          Path: Path
          ParentId: ParentId
          TimerType: Program
          GameSystem: GameSystem
          MusicVideoCount: 8
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          Subviews:
          - Subviews
          - Subviews
          Bitrate: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: ParentThumbItemId
          PreferredMetadataLanguage: PreferredMetadataLanguage
          CanLeaveContent: true
          Type: Type
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ChildCount: 7
          TagItems:
          - null
          - null
          Artists:
          - Artists
          - Artists
          ListingsChannelName: ListingsChannelName
          RunTimeTicks: 1
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          SortParentIndexNumber: 6
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 7.260521264802104
          Guid: Guid
          SortName: SortName
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          AsSeries: true
          AlbumId: AlbumId
          SupportsSync: true
          LocalTrailerCount: 7
          IndexNumber: 5
          CompletionPercentage: 0.5199002018724985
          Genres:
          - Genres
          - Genres
          SeasonId: SeasonId
          LockedFields:
          - Cast
          - Cast
          Disabled: true
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          PresentationUniqueKey: PresentationUniqueKey
          CustomRating: CustomRating
          ListingsChannelNumber: ListingsChannelNumber
          SyncStatus: Queued
          CanManageAccess: true
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: ParentLogoItemId
          PartCount: 7
          ListingsProviderId: ListingsProviderId
          CanEditItems: true
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 9
          CommunityRating: 6.965118
          Software: Software
          Chapters:
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData:
            UnplayedItemCount: 6
            Played: true
            ServerId: ServerId
            PlayedPercentage: 7.058770351582356
            Rating: 0.8851374739011653
            PlayCount: 4
            PlaybackPositionTicks: 0
            LastPlayedDate: 2000-01-23T04:56:07.000+00:00
            IsFavorite: true
            ItemId: ItemId
            Key: Key
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: ChannelId
          ParentIndexNumber: 3
          IsNew: true
          AffiliateCallSign: AffiliateCallSign
          ListingsId: ListingsId
          AlbumArtists:
          - null
          - null
          ServerId: ServerId
          Number: Number
          AlbumCount: 4
          IsRepeat: true
          CollectionType: CollectionType
          PrimaryImageAspectRatio: 3.0576100241049344
          Height: 0
          IsKids: true
          DisplayOrder: DisplayOrder
          MovieCount: 7
          People:
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          Overview: Overview
          SpecialFeatureCount: 3
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: null
          SupportsResume: true
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 0.8774076871421566
        - SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          Size: 2
          CriticRating: 6.4384236
          GameSystemId: 3
          Studios:
          - Id: 3
            Name: Name
          - Id: 3
            Name: Name
          CameraMake: CameraMake
          Aperture: 1.041444916118296
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: ExtraType
          ParentBackdropItemId: ParentBackdropItemId
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 6.628464275087742
          MediaType: MediaType
          ManagementId: ManagementId
          Tags:
          - Tags
          - Tags
          Status: Status
          IndexNumberEnd: 6
          ArtistItems:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          GenreItems:
          - null
          - null
          OfficialRating: OfficialRating
          Longitude: 9.132027271330688
          Composers:
          - null
          - null
          LockData: true
          FocalLength: 4.258773108174356
          IsNews: true
          ShutterSpeed: 4.678947989005849
          Id: Id
          SortIndexNumber: 0
          IsFolder: true
          CanMakePublic: true
          SeriesTimerId: SeriesTimerId
          SeriesId: SeriesId
          ListingsPath: ListingsPath
          MediaStreams:
          - null
          - null
          FileName: FileName
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          CanDownload: true
          IsMovie: true
          SeriesCount: 5
          PrimaryImageItemId: PrimaryImageItemId
          ListingsChannelId: ListingsChannelId
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 4
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 8
          Path: Path
          ParentId: ParentId
          TimerType: Program
          GameSystem: GameSystem
          MusicVideoCount: 8
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          Subviews:
          - Subviews
          - Subviews
          Bitrate: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: ParentThumbItemId
          PreferredMetadataLanguage: PreferredMetadataLanguage
          CanLeaveContent: true
          Type: Type
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ChildCount: 7
          TagItems:
          - null
          - null
          Artists:
          - Artists
          - Artists
          ListingsChannelName: ListingsChannelName
          RunTimeTicks: 1
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          SortParentIndexNumber: 6
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 7.260521264802104
          Guid: Guid
          SortName: SortName
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          AsSeries: true
          AlbumId: AlbumId
          SupportsSync: true
          LocalTrailerCount: 7
          IndexNumber: 5
          CompletionPercentage: 0.5199002018724985
          Genres:
          - Genres
          - Genres
          SeasonId: SeasonId
          LockedFields:
          - Cast
          - Cast
          Disabled: true
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          PresentationUniqueKey: PresentationUniqueKey
          CustomRating: CustomRating
          ListingsChannelNumber: ListingsChannelNumber
          SyncStatus: Queued
          CanManageAccess: true
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: ParentLogoItemId
          PartCount: 7
          ListingsProviderId: ListingsProviderId
          CanEditItems: true
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 9
          CommunityRating: 6.965118
          Software: Software
          Chapters:
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData:
            UnplayedItemCount: 6
            Played: true
            ServerId: ServerId
            PlayedPercentage: 7.058770351582356
            Rating: 0.8851374739011653
            PlayCount: 4
            PlaybackPositionTicks: 0
            LastPlayedDate: 2000-01-23T04:56:07.000+00:00
            IsFavorite: true
            ItemId: ItemId
            Key: Key
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: ChannelId
          ParentIndexNumber: 3
          IsNew: true
          AffiliateCallSign: AffiliateCallSign
          ListingsId: ListingsId
          AlbumArtists:
          - null
          - null
          ServerId: ServerId
          Number: Number
          AlbumCount: 4
          IsRepeat: true
          CollectionType: CollectionType
          PrimaryImageAspectRatio: 3.0576100241049344
          Height: 0
          IsKids: true
          DisplayOrder: DisplayOrder
          MovieCount: 7
          People:
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          Overview: Overview
          SpecialFeatureCount: 3
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: null
          SupportsResume: true
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 0.8774076871421566
      x-internal-ref-name: MediaBrowser.Model.Querying.ThemeMediaResult
    ImageInfo:
      type: object
      properties:
        ImageType:
          $ref: '#/components/schemas/ImageType'
        ImageIndex:
          type: integer
          description: The index of the image.
          format: int32
          nullable: true
        Path:
          type: string
          description: The path.
        Filename:
          type: string
        Height:
          type: integer
          description: The height.
          format: int32
          nullable: true
        Width:
          type: integer
          description: The width.
          format: int32
          nullable: true
        Size:
          type: integer
          description: The size.
          format: int64
      description: "Class ImageInfo\r\n"
      example:
        Path: Path
        Size: 5
        Filename: Filename
        Height: 6
        ImageIndex: 0
        Width: 1
        ImageType: Primary
      x-internal-ref-name: MediaBrowser.Model.Dto.ImageInfo
    RemoteImageResult:
      type: object
      properties:
        Images:
          type: array
          description: The images.
          items:
            $ref: '#/components/schemas/RemoteImageInfo'
        TotalRecordCount:
          type: integer
          description: The total record count.
          format: int32
        Providers:
          type: array
          description: The providers.
          items:
            type: string
      description: "Class RemoteImageResult.\r\n"
      example:
        TotalRecordCount: 5
        Images:
        - ProviderName: ProviderName
          DisplayLanguage: DisplayLanguage
          Type: Primary
          ThumbnailUrl: ThumbnailUrl
          Language: Language
          RatingType: Score
          VoteCount: 5
          CommunityRating: 1.4658129805029452
          Height: 0
          Width: 6
          Url: Url
        - ProviderName: ProviderName
          DisplayLanguage: DisplayLanguage
          Type: Primary
          ThumbnailUrl: ThumbnailUrl
          Language: Language
          RatingType: Score
          VoteCount: 5
          CommunityRating: 1.4658129805029452
          Height: 0
          Width: 6
          Url: Url
        Providers:
        - Providers
        - Providers
      x-internal-ref-name: MediaBrowser.Model.Providers.RemoteImageResult
    RemoteImageInfo:
      type: object
      properties:
        ProviderName:
          type: string
          description: The name of the provider.
        Url:
          type: string
          description: The URL.
        ThumbnailUrl:
          type: string
          description: A url used for previewing a smaller version
        Height:
          type: integer
          description: The height.
          format: int32
          nullable: true
        Width:
          type: integer
          description: The width.
          format: int32
          nullable: true
        CommunityRating:
          type: number
          description: The community rating.
          format: double
          nullable: true
        VoteCount:
          type: integer
          description: The vote count.
          format: int32
          nullable: true
        Language:
          type: string
          description: The language.
        DisplayLanguage:
          type: string
        Type:
          $ref: '#/components/schemas/ImageType'
        RatingType:
          $ref: '#/components/schemas/RatingType'
      description: "Class RemoteImageInfo\r\n"
      example:
        ProviderName: ProviderName
        DisplayLanguage: DisplayLanguage
        Type: Primary
        ThumbnailUrl: ThumbnailUrl
        Language: Language
        RatingType: Score
        VoteCount: 5
        CommunityRating: 1.4658129805029452
        Height: 0
        Width: 6
        Url: Url
      x-internal-ref-name: MediaBrowser.Model.Providers.RemoteImageInfo
    RatingType:
      type: string
      enum:
      - Score
      - Likes
      x-internal-ref-name: MediaBrowser.Model.Dto.RatingType
    RokuMetadata.Api.ThumbnailSetInfo:
      type: object
      properties:
        AspectRatio:
          type: number
          format: double
          nullable: true
        Thumbnails:
          type: array
          items:
            $ref: '#/components/schemas/RokuMetadata.Api.ThumbnailInfo'
      example:
        AspectRatio: 0.8008281904610115
        Thumbnails:
        - ImageTag: ImageTag
          PositionTicks: 6
        - ImageTag: ImageTag
          PositionTicks: 6
      x-internal-ref-name: RokuMetadata.Api.ThumbnailSetInfo
    RokuMetadata.Api.ThumbnailInfo:
      type: object
      properties:
        PositionTicks:
          type: integer
          format: int64
        ImageTag:
          type: string
      example:
        ImageTag: ImageTag
        PositionTicks: 6
      x-internal-ref-name: RokuMetadata.Api.ThumbnailInfo
    PlaybackInfoResponse:
      type: object
      properties:
        MediaSources:
          type: array
          description: The media sources.
          items:
            $ref: '#/components/schemas/MediaSourceInfo'
        PlaySessionId:
          type: string
          description: The play session identifier.
        ErrorCode:
          $ref: '#/components/schemas/PlaybackErrorCode'
      example:
        PlaySessionId: PlaySessionId
        MediaSources:
        - EncoderPath: EncoderPath
          RequiredHttpHeaders:
            key: RequiredHttpHeaders
          RunTimeTicks: 5
          HasMixedProtocols: true
          MediaStreams:
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          Size: 1
          Video3DFormat: null
          BufferMs: 7
          ContainerStartTimeTicks: 5
          SortName: SortName
          Timestamp: None
          ItemId: ItemId
          Name: Name
          RequiresOpening: true
          DirectStreamUrl: DirectStreamUrl
          SupportsDirectStream: true
          RequiresClosing: true
          Container: Container
          ServerId: ServerId
          LiveStreamId: LiveStreamId
          RequiresLooping: true
          Protocol: File
          AddApiKeyToDirectStreamUrl: true
          DefaultSubtitleStreamIndex: 9
          TrancodeLiveStartIndex: 2
          IsInfiniteStream: true
          Path: Path
          IsRemote: true
          EncoderProtocol: null
          SupportsDirectPlay: true
          TranscodingSubProtocol: TranscodingSubProtocol
          Formats:
          - Formats
          - Formats
          AnalyzeDurationMs: 6
          WallClockStart: 2000-01-23T04:56:07.000+00:00
          Bitrate: 9
          OpenToken: OpenToken
          ProbeProtocol: null
          SupportsProbing: true
          Type: Default
          ReadAtNativeFramerate: true
          TranscodingContainer: TranscodingContainer
          ProbePath: ProbePath
          TranscodingUrl: TranscodingUrl
          Id: Id
          SupportsTranscoding: true
          DefaultAudioStreamIndex: 8
        - EncoderPath: EncoderPath
          RequiredHttpHeaders:
            key: RequiredHttpHeaders
          RunTimeTicks: 5
          HasMixedProtocols: true
          MediaStreams:
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          - VideoRange: VideoRange
            ColorSpace: ColorSpace
            Index: 4
            BitDepth: 2
            ItemId: ItemId
            SupportsExternalStream: true
            Codec: Codec
            SampleRate: 1
            IsAnamorphic: true
            PixelFormat: PixelFormat
            AttachmentSize: 9
            SubtitleLocationType: InternalStream
            RefFrames: 4
            IsAVC: true
            ColorTransfer: ColorTransfer
            ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
            IsExternalUrl: true
            DisplayTitle: DisplayTitle
            IsForced: true
            ChannelLayout: ChannelLayout
            DisplayLanguage: DisplayLanguage
            AverageFrameRate: 7.4577446
            StreamStartTimeTicks: 9
            IsExternal: true
            Level: 5.025004791520295
            ExtendedVideoSubType: None
            Channels: 1
            Profile: Profile
            MimeType: MimeType
            DeliveryUrl: DeliveryUrl
            ColorPrimaries: ColorPrimaries
            ServerId: ServerId
            Language: Language
            IsTextSubtitleStream: true
            NalLengthSize: NalLengthSize
            Height: 1
            Protocol: null
            Width: 6
            TimeBase: TimeBase
            CodecTag: CodecTag
            IsDefault: true
            Path: Path
            Comment: Comment
            DeliveryMethod: Encode
            Title: Title
            ExtendedVideoType: None
            Rotation: 7
            RealFrameRate: 1.1730742
            IsHearingImpaired: true
            AspectRatio: AspectRatio
            Type: Unknown
            IsInterlaced: true
            Extradata: Extradata
            BitRate: 3
          Size: 1
          Video3DFormat: null
          BufferMs: 7
          ContainerStartTimeTicks: 5
          SortName: SortName
          Timestamp: None
          ItemId: ItemId
          Name: Name
          RequiresOpening: true
          DirectStreamUrl: DirectStreamUrl
          SupportsDirectStream: true
          RequiresClosing: true
          Container: Container
          ServerId: ServerId
          LiveStreamId: LiveStreamId
          RequiresLooping: true
          Protocol: File
          AddApiKeyToDirectStreamUrl: true
          DefaultSubtitleStreamIndex: 9
          TrancodeLiveStartIndex: 2
          IsInfiniteStream: true
          Path: Path
          IsRemote: true
          EncoderProtocol: null
          SupportsDirectPlay: true
          TranscodingSubProtocol: TranscodingSubProtocol
          Formats:
          - Formats
          - Formats
          AnalyzeDurationMs: 6
          WallClockStart: 2000-01-23T04:56:07.000+00:00
          Bitrate: 9
          OpenToken: OpenToken
          ProbeProtocol: null
          SupportsProbing: true
          Type: Default
          ReadAtNativeFramerate: true
          TranscodingContainer: TranscodingContainer
          ProbePath: ProbePath
          TranscodingUrl: TranscodingUrl
          Id: Id
          SupportsTranscoding: true
          DefaultAudioStreamIndex: 8
        ErrorCode: NotAllowed
      x-internal-ref-name: MediaBrowser.Model.MediaInfo.PlaybackInfoResponse
    PlaybackErrorCode:
      type: string
      enum:
      - NotAllowed
      - NoCompatibleStream
      - RateLimitExceeded
      x-internal-ref-name: MediaBrowser.Model.Dlna.PlaybackErrorCode
    PlaybackInfoRequest:
      type: object
      properties:
        Id:
          type: string
        UserId:
          type: string
        MaxStreamingBitrate:
          type: integer
          format: int64
          nullable: true
        StartTimeTicks:
          type: integer
          format: int64
          nullable: true
        AudioStreamIndex:
          type: integer
          format: int32
          nullable: true
        SubtitleStreamIndex:
          type: integer
          format: int32
          nullable: true
        MaxAudioChannels:
          type: integer
          format: int32
          nullable: true
        MediaSourceId:
          type: string
        LiveStreamId:
          type: string
        DeviceProfile:
          $ref: '#/components/schemas/DeviceProfile'
        EnableDirectPlay:
          type: boolean
        EnableDirectStream:
          type: boolean
        EnableTranscoding:
          type: boolean
        AllowInterlacedVideoStreamCopy:
          type: boolean
        AllowVideoStreamCopy:
          type: boolean
        AllowAudioStreamCopy:
          type: boolean
        IsPlayback:
          type: boolean
        AutoOpenLiveStream:
          type: boolean
        DirectPlayProtocols:
          type: array
          items:
            $ref: '#/components/schemas/MediaProtocol'
        CurrentPlaySessionId:
          type: string
      x-internal-ref-name: MediaBrowser.Model.MediaInfo.PlaybackInfoRequest
    Library.PostUpdatedMedia:
      type: object
      properties:
        Updates:
          type: array
          items:
            $ref: '#/components/schemas/Library.MediaUpdateInfo'
      x-internal-ref-name: Emby.Api.Library.PostUpdatedMedia
    Library.MediaUpdateInfo:
      type: object
      properties:
        Path:
          type: string
        UpdateType:
          type: string
      x-internal-ref-name: Emby.Api.Library.MediaUpdateInfo
    QueryResult_VirtualFolderInfo:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/VirtualFolderInfo'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 1
        Items:
        - RefreshProgress: 7.386281948385884
          PrimaryImageItemId: PrimaryImageItemId
          CollectionType: CollectionType
          Locations:
          - Locations
          - Locations
          LibraryOptions:
            LyricsDownloadMaxAgeDays: 5
            SaveLyricsWithMedia: true
            EnableMarkerDetection: true
            ContentType: ContentType
            SaveSubtitlesWithMedia: true
            ForcedSubtitlesOnly: true
            MetadataCountryCode: MetadataCountryCode
            MetadataSavers:
            - MetadataSavers
            - MetadataSavers
            SaveMetadataHidden: true
            SaveLocalMetadata: true
            PreferredImageLanguage: PreferredImageLanguage
            DownloadImagesInAdvance: true
            ThumbnailImagesIntervalSeconds: 2
            MaxResumePct: 9
            MinResumeDurationSeconds: 3
            EnableAudioResume: true
            MusicFolderStructure: MusicFolderStructure
            IgnoreHiddenFiles: true
            ShareEmbeddedMusicAlbumImages: true
            TypeOptions:
            - Type: Type
              MetadataFetcherOrder:
              - MetadataFetcherOrder
              - MetadataFetcherOrder
              ImageFetchers:
              - ImageFetchers
              - ImageFetchers
              ImageOptions:
              - Type: null
                Limit: 0
                MinWidth: 6
              - Type: null
                Limit: 0
                MinWidth: 6
              ImageFetcherOrder:
              - ImageFetcherOrder
              - ImageFetcherOrder
              MetadataFetchers:
              - MetadataFetchers
              - MetadataFetchers
            - Type: Type
              MetadataFetcherOrder:
              - MetadataFetcherOrder
              - MetadataFetcherOrder
              ImageFetchers:
              - ImageFetchers
              - ImageFetchers
              ImageOptions:
              - Type: null
                Limit: 0
                MinWidth: 6
              - Type: null
                Limit: 0
                MinWidth: 6
              ImageFetcherOrder:
              - ImageFetcherOrder
              - ImageFetcherOrder
              MetadataFetchers:
              - MetadataFetchers
              - MetadataFetchers
            DisabledLyricsFetchers:
            - DisabledLyricsFetchers
            - DisabledLyricsFetchers
            LyricsDownloadLanguages:
            - LyricsDownloadLanguages
            - LyricsDownloadLanguages
            ImportPlaylists: true
            EnableRealtimeMonitor: true
            IntroDetectionFingerprintLength: 0
            EnableAutomaticSeriesGrouping: true
            ExtractChapterImagesDuringLibraryScan: true
            SubtitleDownloadLanguages:
            - SubtitleDownloadLanguages
            - SubtitleDownloadLanguages
            MinResumePct: 7
            SaveLocalThumbnailSets: true
            SubtitleDownloadMaxAgeDays: 5
            EnableAdultMetadata: true
            SkipSubtitlesIfAudioTrackMatches: true
            RequirePerfectSubtitleMatch: true
            DisabledSubtitleFetchers:
            - DisabledSubtitleFetchers
            - DisabledSubtitleFetchers
            LocalMetadataReaderOrder:
            - LocalMetadataReaderOrder
            - LocalMetadataReaderOrder
            LyricsFetcherOrder:
            - LyricsFetcherOrder
            - LyricsFetcherOrder
            HearingImpairedSubtitlesOnly: true
            CacheImages: true
            IgnoreFileExtensions:
            - IgnoreFileExtensions
            - IgnoreFileExtensions
            CollapseSingleItemFolders: true
            EnableMarkerDetectionDuringLibraryScan: true
            EnableEmbeddedTitles: true
            PlaceholderMetadataRefreshIntervalDays: 1
            EnableChapterImageExtraction: true
            AutomaticRefreshIntervalDays: 6
            SubtitleFetcherOrder:
            - SubtitleFetcherOrder
            - SubtitleFetcherOrder
            ImportCollections: true
            AutoGenerateChapters: true
            EnableArchiveMediaFiles: true
            DisabledLocalMetadataReaders:
            - DisabledLocalMetadataReaders
            - DisabledLocalMetadataReaders
            PreferredMetadataLanguage: PreferredMetadataLanguage
            EnablePhotos: true
            SkipSubtitlesIfEmbeddedSubtitlesPresent: true
            PathInfos:
            - Path: Path
              Username: Username
              NetworkPath: NetworkPath
              Password: Password
            - Path: Path
              Username: Username
              NetworkPath: NetworkPath
              Password: Password
            SampleIgnoreSize: 4
            MinCollectionItems: 2
          Id: Id
          Guid: Guid
          ItemId: ItemId
          RefreshStatus: RefreshStatus
          Name: Name
        - RefreshProgress: 7.386281948385884
          PrimaryImageItemId: PrimaryImageItemId
          CollectionType: CollectionType
          Locations:
          - Locations
          - Locations
          LibraryOptions:
            LyricsDownloadMaxAgeDays: 5
            SaveLyricsWithMedia: true
            EnableMarkerDetection: true
            ContentType: ContentType
            SaveSubtitlesWithMedia: true
            ForcedSubtitlesOnly: true
            MetadataCountryCode: MetadataCountryCode
            MetadataSavers:
            - MetadataSavers
            - MetadataSavers
            SaveMetadataHidden: true
            SaveLocalMetadata: true
            PreferredImageLanguage: PreferredImageLanguage
            DownloadImagesInAdvance: true
            ThumbnailImagesIntervalSeconds: 2
            MaxResumePct: 9
            MinResumeDurationSeconds: 3
            EnableAudioResume: true
            MusicFolderStructure: MusicFolderStructure
            IgnoreHiddenFiles: true
            ShareEmbeddedMusicAlbumImages: true
            TypeOptions:
            - Type: Type
              MetadataFetcherOrder:
              - MetadataFetcherOrder
              - MetadataFetcherOrder
              ImageFetchers:
              - ImageFetchers
              - ImageFetchers
              ImageOptions:
              - Type: null
                Limit: 0
                MinWidth: 6
              - Type: null
                Limit: 0
                MinWidth: 6
              ImageFetcherOrder:
              - ImageFetcherOrder
              - ImageFetcherOrder
              MetadataFetchers:
              - MetadataFetchers
              - MetadataFetchers
            - Type: Type
              MetadataFetcherOrder:
              - MetadataFetcherOrder
              - MetadataFetcherOrder
              ImageFetchers:
              - ImageFetchers
              - ImageFetchers
              ImageOptions:
              - Type: null
                Limit: 0
                MinWidth: 6
              - Type: null
                Limit: 0
                MinWidth: 6
              ImageFetcherOrder:
              - ImageFetcherOrder
              - ImageFetcherOrder
              MetadataFetchers:
              - MetadataFetchers
              - MetadataFetchers
            DisabledLyricsFetchers:
            - DisabledLyricsFetchers
            - DisabledLyricsFetchers
            LyricsDownloadLanguages:
            - LyricsDownloadLanguages
            - LyricsDownloadLanguages
            ImportPlaylists: true
            EnableRealtimeMonitor: true
            IntroDetectionFingerprintLength: 0
            EnableAutomaticSeriesGrouping: true
            ExtractChapterImagesDuringLibraryScan: true
            SubtitleDownloadLanguages:
            - SubtitleDownloadLanguages
            - SubtitleDownloadLanguages
            MinResumePct: 7
            SaveLocalThumbnailSets: true
            SubtitleDownloadMaxAgeDays: 5
            EnableAdultMetadata: true
            SkipSubtitlesIfAudioTrackMatches: true
            RequirePerfectSubtitleMatch: true
            DisabledSubtitleFetchers:
            - DisabledSubtitleFetchers
            - DisabledSubtitleFetchers
            LocalMetadataReaderOrder:
            - LocalMetadataReaderOrder
            - LocalMetadataReaderOrder
            LyricsFetcherOrder:
            - LyricsFetcherOrder
            - LyricsFetcherOrder
            HearingImpairedSubtitlesOnly: true
            CacheImages: true
            IgnoreFileExtensions:
            - IgnoreFileExtensions
            - IgnoreFileExtensions
            CollapseSingleItemFolders: true
            EnableMarkerDetectionDuringLibraryScan: true
            EnableEmbeddedTitles: true
            PlaceholderMetadataRefreshIntervalDays: 1
            EnableChapterImageExtraction: true
            AutomaticRefreshIntervalDays: 6
            SubtitleFetcherOrder:
            - SubtitleFetcherOrder
            - SubtitleFetcherOrder
            ImportCollections: true
            AutoGenerateChapters: true
            EnableArchiveMediaFiles: true
            DisabledLocalMetadataReaders:
            - DisabledLocalMetadataReaders
            - DisabledLocalMetadataReaders
            PreferredMetadataLanguage: PreferredMetadataLanguage
            EnablePhotos: true
            SkipSubtitlesIfEmbeddedSubtitlesPresent: true
            PathInfos:
            - Path: Path
              Username: Username
              NetworkPath: NetworkPath
              Password: Password
            - Path: Path
              Username: Username
              NetworkPath: NetworkPath
              Password: Password
            SampleIgnoreSize: 4
            MinCollectionItems: 2
          Id: Id
          Guid: Guid
          ItemId: ItemId
          RefreshStatus: RefreshStatus
          Name: Name
    VirtualFolderInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        Locations:
          type: array
          description: The locations.
          items:
            type: string
        CollectionType:
          type: string
          description: The type of the collection.
        LibraryOptions:
          $ref: '#/components/schemas/LibraryOptions'
        ItemId:
          type: string
          description: The item identifier.
        Id:
          type: string
          description: "ItemId came first, so that is left for compatability purposes"
        Guid:
          type: string
        PrimaryImageItemId:
          type: string
          description: The primary image item identifier.
        RefreshProgress:
          type: number
          format: double
          nullable: true
        RefreshStatus:
          type: string
      description: "Used to hold information about a user's list of configured virtual\
        \ folders\r\n"
      example:
        RefreshProgress: 7.386281948385884
        PrimaryImageItemId: PrimaryImageItemId
        CollectionType: CollectionType
        Locations:
        - Locations
        - Locations
        LibraryOptions:
          LyricsDownloadMaxAgeDays: 5
          SaveLyricsWithMedia: true
          EnableMarkerDetection: true
          ContentType: ContentType
          SaveSubtitlesWithMedia: true
          ForcedSubtitlesOnly: true
          MetadataCountryCode: MetadataCountryCode
          MetadataSavers:
          - MetadataSavers
          - MetadataSavers
          SaveMetadataHidden: true
          SaveLocalMetadata: true
          PreferredImageLanguage: PreferredImageLanguage
          DownloadImagesInAdvance: true
          ThumbnailImagesIntervalSeconds: 2
          MaxResumePct: 9
          MinResumeDurationSeconds: 3
          EnableAudioResume: true
          MusicFolderStructure: MusicFolderStructure
          IgnoreHiddenFiles: true
          ShareEmbeddedMusicAlbumImages: true
          TypeOptions:
          - Type: Type
            MetadataFetcherOrder:
            - MetadataFetcherOrder
            - MetadataFetcherOrder
            ImageFetchers:
            - ImageFetchers
            - ImageFetchers
            ImageOptions:
            - Type: null
              Limit: 0
              MinWidth: 6
            - Type: null
              Limit: 0
              MinWidth: 6
            ImageFetcherOrder:
            - ImageFetcherOrder
            - ImageFetcherOrder
            MetadataFetchers:
            - MetadataFetchers
            - MetadataFetchers
          - Type: Type
            MetadataFetcherOrder:
            - MetadataFetcherOrder
            - MetadataFetcherOrder
            ImageFetchers:
            - ImageFetchers
            - ImageFetchers
            ImageOptions:
            - Type: null
              Limit: 0
              MinWidth: 6
            - Type: null
              Limit: 0
              MinWidth: 6
            ImageFetcherOrder:
            - ImageFetcherOrder
            - ImageFetcherOrder
            MetadataFetchers:
            - MetadataFetchers
            - MetadataFetchers
          DisabledLyricsFetchers:
          - DisabledLyricsFetchers
          - DisabledLyricsFetchers
          LyricsDownloadLanguages:
          - LyricsDownloadLanguages
          - LyricsDownloadLanguages
          ImportPlaylists: true
          EnableRealtimeMonitor: true
          IntroDetectionFingerprintLength: 0
          EnableAutomaticSeriesGrouping: true
          ExtractChapterImagesDuringLibraryScan: true
          SubtitleDownloadLanguages:
          - SubtitleDownloadLanguages
          - SubtitleDownloadLanguages
          MinResumePct: 7
          SaveLocalThumbnailSets: true
          SubtitleDownloadMaxAgeDays: 5
          EnableAdultMetadata: true
          SkipSubtitlesIfAudioTrackMatches: true
          RequirePerfectSubtitleMatch: true
          DisabledSubtitleFetchers:
          - DisabledSubtitleFetchers
          - DisabledSubtitleFetchers
          LocalMetadataReaderOrder:
          - LocalMetadataReaderOrder
          - LocalMetadataReaderOrder
          LyricsFetcherOrder:
          - LyricsFetcherOrder
          - LyricsFetcherOrder
          HearingImpairedSubtitlesOnly: true
          CacheImages: true
          IgnoreFileExtensions:
          - IgnoreFileExtensions
          - IgnoreFileExtensions
          CollapseSingleItemFolders: true
          EnableMarkerDetectionDuringLibraryScan: true
          EnableEmbeddedTitles: true
          PlaceholderMetadataRefreshIntervalDays: 1
          EnableChapterImageExtraction: true
          AutomaticRefreshIntervalDays: 6
          SubtitleFetcherOrder:
          - SubtitleFetcherOrder
          - SubtitleFetcherOrder
          ImportCollections: true
          AutoGenerateChapters: true
          EnableArchiveMediaFiles: true
          DisabledLocalMetadataReaders:
          - DisabledLocalMetadataReaders
          - DisabledLocalMetadataReaders
          PreferredMetadataLanguage: PreferredMetadataLanguage
          EnablePhotos: true
          SkipSubtitlesIfEmbeddedSubtitlesPresent: true
          PathInfos:
          - Path: Path
            Username: Username
            NetworkPath: NetworkPath
            Password: Password
          - Path: Path
            Username: Username
            NetworkPath: NetworkPath
            Password: Password
          SampleIgnoreSize: 4
          MinCollectionItems: 2
        Id: Id
        Guid: Guid
        ItemId: ItemId
        RefreshStatus: RefreshStatus
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Entities.VirtualFolderInfo
    Library.UpdateLibraryOptions:
      type: object
      properties:
        Id:
          type: string
        LibraryOptions:
          $ref: '#/components/schemas/LibraryOptions'
      x-internal-ref-name: Emby.Api.Library.UpdateLibraryOptions
    Library.RenameVirtualFolder:
      type: object
      properties:
        Id:
          type: string
        NewName:
          type: string
      x-internal-ref-name: Emby.Api.Library.RenameVirtualFolder
    Library.RemoveVirtualFolder:
      type: object
      properties:
        Id:
          type: string
        RefreshLibrary:
          type: boolean
      x-internal-ref-name: Emby.Api.Library.RemoveVirtualFolder
    Library.AddMediaPath:
      type: object
      properties:
        Id:
          type: string
        Path:
          type: string
        PathInfo:
          $ref: '#/components/schemas/MediaPathInfo'
        RefreshLibrary:
          type: boolean
      x-internal-ref-name: Emby.Api.Library.AddMediaPath
    QueryResult_ChannelManagementInfo:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ChannelManagementInfo'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 0
        Items:
        - Id: Id
          Name: Name
        - Id: Id
          Name: Name
    ChannelManagementInfo:
      type: object
      properties:
        Id:
          type: string
        Name:
          type: string
      example:
        Id: Id
        Name: Name
      x-internal-ref-name: Emby.LiveTV.ChannelManagementInfo
    Api.TagItem:
      type: object
      properties:
        Name:
          type: string
        Id:
          type: string
      example:
        Id: Id
        Name: Name
      x-internal-ref-name: Emby.LiveTV.Api.TagItem
    Api.ListingProviderTypeInfo:
      type: object
      properties:
        Name:
          type: string
        Id:
          type: string
        SetupUrl:
          type: string
      example:
        Id: Id
        SetupUrl: SetupUrl
        Name: Name
      x-internal-ref-name: Emby.LiveTV.Api.ListingProviderTypeInfo
    UserNotificationInfo:
      type: object
      properties:
        NotifierKey:
          type: string
        SetupModuleUrl:
          type: string
        ServiceName:
          type: string
        PluginId:
          type: string
        FriendlyName:
          type: string
        Id:
          type: string
        Enabled:
          type: boolean
        UserIds:
          type: array
          description: "Limit events based on user ids, for admin notifications"
          items:
            type: string
        DeviceIds:
          type: array
          items:
            type: string
        LibraryIds:
          type: array
          items:
            type: string
        EventIds:
          type: array
          items:
            type: string
        UserId:
          type: string
          description: Notification intended for a specific user
        IsSelfNotification:
          type: boolean
        Options:
          type: object
          additionalProperties:
            type: string
          description: This is for webhooks since this will cause xml serialization
            to fail
      example:
        LibraryIds:
        - LibraryIds
        - LibraryIds
        Options:
          key: Options
        FriendlyName: FriendlyName
        NotifierKey: NotifierKey
        SetupModuleUrl: SetupModuleUrl
        Enabled: true
        PluginId: PluginId
        IsSelfNotification: true
        DeviceIds:
        - DeviceIds
        - DeviceIds
        EventIds:
        - EventIds
        - EventIds
        ServiceName: ServiceName
        UserId: UserId
        Id: Id
        UserIds:
        - UserIds
        - UserIds
      x-internal-ref-name: Emby.Notifications.UserNotificationInfo
    Playlists.AddToPlaylistResult:
      type: object
      properties:
        Id:
          type: string
        ItemAddedCount:
          type: integer
          format: int32
      example:
        ItemAddedCount: 0
        Id: Id
      x-internal-ref-name: MediaBrowser.Controller.Playlists.AddToPlaylistResult
    PlayCommand:
      type: string
      description: "Enum PlayCommand\r\n"
      enum:
      - PlayNow
      - PlayNext
      - PlayLast
      - PlayInstantMix
      - PlayShuffle
      x-internal-ref-name: MediaBrowser.Model.Session.PlayCommand
    PlayRequest:
      type: object
      properties:
        ControllingUserId:
          type: string
          description: The controlling user identifier.
        SubtitleStreamIndex:
          type: integer
          format: int32
          nullable: true
        AudioStreamIndex:
          type: integer
          format: int32
          nullable: true
        MediaSourceId:
          type: string
        StartIndex:
          type: integer
          format: int32
          nullable: true
      description: "Class PlayRequest\r\n"
      x-internal-ref-name: MediaBrowser.Model.Session.PlayRequest
    GeneralCommand:
      type: object
      properties:
        Name:
          type: string
        ControllingUserId:
          type: string
        Arguments:
          type: object
          additionalProperties:
            type: string
      x-internal-ref-name: MediaBrowser.Model.Session.GeneralCommand
    ClientCapabilities:
      type: object
      properties:
        PlayableMediaTypes:
          type: array
          items:
            type: string
        SupportedCommands:
          type: array
          items:
            type: string
        SupportsMediaControl:
          type: boolean
        PushToken:
          type: string
        PushTokenType:
          type: string
        SupportsSync:
          type: boolean
        DeviceProfile:
          $ref: '#/components/schemas/DeviceProfile'
        IconUrl:
          type: string
        AppId:
          type: string
      x-internal-ref-name: MediaBrowser.Model.Session.ClientCapabilities
    PlaybackProgressInfo:
      type: object
      properties:
        CanSeek:
          type: boolean
          description: A value indicating whether this instance can seek.
        Item:
          $ref: '#/components/schemas/BaseItemDto'
        NowPlayingQueue:
          type: array
          items:
            $ref: '#/components/schemas/QueueItem'
        PlaylistItemId:
          type: string
        ItemId:
          type: string
          description: The item identifier.
        SessionId:
          type: string
          description: The session id.
        MediaSourceId:
          type: string
          description: The media version identifier.
        AudioStreamIndex:
          type: integer
          description: The index of the audio stream.
          format: int32
          nullable: true
        SubtitleStreamIndex:
          type: integer
          description: The index of the subtitle stream.
          format: int32
          nullable: true
        IsPaused:
          type: boolean
          description: A value indicating whether this instance is paused.
        PlaylistIndex:
          type: integer
          format: int32
        PlaylistLength:
          type: integer
          format: int32
        IsMuted:
          type: boolean
          description: A value indicating whether this instance is muted.
        PositionTicks:
          type: integer
          description: The position ticks.
          format: int64
          nullable: true
        RunTimeTicks:
          type: integer
          format: int64
          nullable: true
        PlaybackStartTimeTicks:
          type: integer
          format: int64
          nullable: true
        VolumeLevel:
          type: integer
          description: The volume level.
          format: int32
          nullable: true
        Brightness:
          type: integer
          format: int32
          nullable: true
        AspectRatio:
          type: string
        EventName:
          $ref: '#/components/schemas/ProgressEvent'
        PlayMethod:
          $ref: '#/components/schemas/PlayMethod'
        LiveStreamId:
          type: string
          description: The live stream identifier.
        PlaySessionId:
          type: string
          description: The play session identifier.
        RepeatMode:
          $ref: '#/components/schemas/RepeatMode'
        SubtitleOffset:
          type: integer
          format: int32
        PlaybackRate:
          type: number
          format: double
        PlaylistItemIds:
          type: array
          items:
            type: string
      description: "Class PlaybackProgressInfo.\r\n"
      x-internal-ref-name: MediaBrowser.Model.Session.PlaybackProgressInfo
    PlaybackStopInfo:
      type: object
      properties:
        NowPlayingQueue:
          type: array
          items:
            $ref: '#/components/schemas/QueueItem'
        PlaylistItemId:
          type: string
        PlaylistIndex:
          type: integer
          format: int32
        PlaylistLength:
          type: integer
          format: int32
        Item:
          $ref: '#/components/schemas/BaseItemDto'
        ItemId:
          type: string
          description: The item identifier.
        SessionId:
          type: string
          description: The session id.
        MediaSourceId:
          type: string
          description: The media version identifier.
        PositionTicks:
          type: integer
          description: The position ticks.
          format: int64
          nullable: true
        LiveStreamId:
          type: string
          description: The live stream identifier.
        PlaySessionId:
          type: string
          description: The play session identifier.
        Failed:
          type: boolean
          description: A value indicating whether this `MediaBrowser.Model.Session.PlaybackStopInfo`
            is failed.
        IsAutomated:
          type: boolean
        NextMediaType:
          type: string
      description: "Class PlaybackStopInfo.\r\n"
      x-internal-ref-name: MediaBrowser.Model.Session.PlaybackStopInfo
    SyncedItemProgress:
      type: object
      properties:
        Progress:
          type: number
          format: double
          nullable: true
        Status:
          $ref: '#/components/schemas/SyncJobItemStatus'
      x-internal-ref-name: Emby.Server.Sync.Model.SyncedItemProgress
    SyncedItem:
      type: object
      properties:
        ServerId:
          type: string
        SyncJobId:
          type: integer
          format: int64
        SyncJobName:
          type: string
        SyncJobDateCreated:
          type: string
          format: date-time
        SyncJobItemId:
          type: integer
          format: int64
        OriginalFileName:
          type: string
        Item:
          $ref: '#/components/schemas/BaseItemDto'
        UserId:
          type: string
        AdditionalFiles:
          type: array
          items:
            $ref: '#/components/schemas/ItemFileInfo'
      example:
        Item:
          SeasonName: SeasonName
          PremiereDate: 2000-01-23T04:56:07.000+00:00
          Size: 2
          CriticRating: 6.4384236
          GameSystemId: 3
          Studios:
          - Id: 3
            Name: Name
          - Id: 3
            Name: Name
          CameraMake: CameraMake
          Aperture: 1.041444916118296
          ChannelPrimaryImageTag: ChannelPrimaryImageTag
          ExtraType: ExtraType
          ParentBackdropItemId: ParentBackdropItemId
          Etag: Etag
          ParentLogoImageTag: ParentLogoImageTag
          ExposureTime: 6.628464275087742
          MediaType: MediaType
          ManagementId: ManagementId
          Tags:
          - Tags
          - Tags
          Status: Status
          IndexNumberEnd: 6
          ArtistItems:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
          MediaSources:
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          - EncoderPath: EncoderPath
            RequiredHttpHeaders:
              key: RequiredHttpHeaders
            RunTimeTicks: 5
            HasMixedProtocols: true
            MediaStreams:
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            - VideoRange: VideoRange
              ColorSpace: ColorSpace
              Index: 4
              BitDepth: 2
              ItemId: ItemId
              SupportsExternalStream: true
              Codec: Codec
              SampleRate: 1
              IsAnamorphic: true
              PixelFormat: PixelFormat
              AttachmentSize: 9
              SubtitleLocationType: InternalStream
              RefFrames: 4
              IsAVC: true
              ColorTransfer: ColorTransfer
              ExtendedVideoSubTypeDescription: ExtendedVideoSubTypeDescription
              IsExternalUrl: true
              DisplayTitle: DisplayTitle
              IsForced: true
              ChannelLayout: ChannelLayout
              DisplayLanguage: DisplayLanguage
              AverageFrameRate: 7.4577446
              StreamStartTimeTicks: 9
              IsExternal: true
              Level: 5.025004791520295
              ExtendedVideoSubType: None
              Channels: 1
              Profile: Profile
              MimeType: MimeType
              DeliveryUrl: DeliveryUrl
              ColorPrimaries: ColorPrimaries
              ServerId: ServerId
              Language: Language
              IsTextSubtitleStream: true
              NalLengthSize: NalLengthSize
              Height: 1
              Protocol: null
              Width: 6
              TimeBase: TimeBase
              CodecTag: CodecTag
              IsDefault: true
              Path: Path
              Comment: Comment
              DeliveryMethod: Encode
              Title: Title
              ExtendedVideoType: None
              Rotation: 7
              RealFrameRate: 1.1730742
              IsHearingImpaired: true
              AspectRatio: AspectRatio
              Type: Unknown
              IsInterlaced: true
              Extradata: Extradata
              BitRate: 3
            Size: 1
            Video3DFormat: null
            BufferMs: 7
            ContainerStartTimeTicks: 5
            SortName: SortName
            Timestamp: None
            ItemId: ItemId
            Name: Name
            RequiresOpening: true
            DirectStreamUrl: DirectStreamUrl
            SupportsDirectStream: true
            RequiresClosing: true
            Container: Container
            ServerId: ServerId
            LiveStreamId: LiveStreamId
            RequiresLooping: true
            Protocol: File
            AddApiKeyToDirectStreamUrl: true
            DefaultSubtitleStreamIndex: 9
            TrancodeLiveStartIndex: 2
            IsInfiniteStream: true
            Path: Path
            IsRemote: true
            EncoderProtocol: null
            SupportsDirectPlay: true
            TranscodingSubProtocol: TranscodingSubProtocol
            Formats:
            - Formats
            - Formats
            AnalyzeDurationMs: 6
            WallClockStart: 2000-01-23T04:56:07.000+00:00
            Bitrate: 9
            OpenToken: OpenToken
            ProbeProtocol: null
            SupportsProbing: true
            Type: Default
            ReadAtNativeFramerate: true
            TranscodingContainer: TranscodingContainer
            ProbePath: ProbePath
            TranscodingUrl: TranscodingUrl
            Id: Id
            SupportsTranscoding: true
            DefaultAudioStreamIndex: 8
          GenreItems:
          - null
          - null
          OfficialRating: OfficialRating
          Longitude: 9.132027271330688
          Composers:
          - null
          - null
          LockData: true
          FocalLength: 4.258773108174356
          IsNews: true
          ShutterSpeed: 4.678947989005849
          Id: Id
          SortIndexNumber: 0
          IsFolder: true
          CanMakePublic: true
          SeriesTimerId: SeriesTimerId
          SeriesId: SeriesId
          ListingsPath: ListingsPath
          MediaStreams:
          - null
          - null
          FileName: FileName
          PrimaryImageTag: PrimaryImageTag
          Prefix: Prefix
          CanDownload: true
          IsMovie: true
          SeriesCount: 5
          PrimaryImageItemId: PrimaryImageItemId
          ListingsChannelId: ListingsChannelId
          SeriesStudio: SeriesStudio
          IsLive: true
          Width: 4
          ExternalUrls:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          RecursiveItemCount: 8
          Path: Path
          ParentId: ParentId
          TimerType: Program
          GameSystem: GameSystem
          MusicVideoCount: 8
          IsSeries: true
          ProductionLocations:
          - ProductionLocations
          - ProductionLocations
          Subviews:
          - Subviews
          - Subviews
          Bitrate: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesPrimaryImageTag: SeriesPrimaryImageTag
          ParentThumbItemId: ParentThumbItemId
          PreferredMetadataLanguage: PreferredMetadataLanguage
          CanLeaveContent: true
          Type: Type
          BackdropImageTags:
          - BackdropImageTags
          - BackdropImageTags
          ParentBackdropImageTags:
          - ParentBackdropImageTags
          - ParentBackdropImageTags
          ChildCount: 7
          TagItems:
          - null
          - null
          Artists:
          - Artists
          - Artists
          ListingsChannelName: ListingsChannelName
          RunTimeTicks: 1
          AlbumPrimaryImageTag: AlbumPrimaryImageTag
          Video3DFormat: HalfSideBySide
          CanDelete: true
          PlaylistItemId: PlaylistItemId
          SortParentIndexNumber: 6
          DisplayPreferencesId: DisplayPreferencesId
          Album: Album
          Latitude: 7.260521264802104
          Guid: Guid
          SortName: SortName
          Name: Name
          StartDate: 2000-01-23T04:56:07.000+00:00
          Container: Container
          ProductionYear: 6
          SeriesName: SeriesName
          AsSeries: true
          AlbumId: AlbumId
          SupportsSync: true
          LocalTrailerCount: 7
          IndexNumber: 5
          CompletionPercentage: 0.5199002018724985
          Genres:
          - Genres
          - Genres
          SeasonId: SeasonId
          LockedFields:
          - Cast
          - Cast
          Disabled: true
          ProviderIds:
            key: ProviderIds
          RemoteTrailers:
          - Url: Url
            Name: Name
          - Url: Url
            Name: Name
          PresentationUniqueKey: PresentationUniqueKey
          CustomRating: CustomRating
          ListingsChannelNumber: ListingsChannelNumber
          SyncStatus: Queued
          CanManageAccess: true
          AirDays:
          - Sunday
          - Sunday
          ParentLogoItemId: ParentLogoItemId
          PartCount: 7
          ListingsProviderId: ListingsProviderId
          CanEditItems: true
          ChannelName: ChannelName
          EpisodeTitle: EpisodeTitle
          IsoSpeedRating: 9
          CommunityRating: 6.965118
          Software: Software
          Chapters:
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          - StartPositionTicks: 5
            ImageTag: ImageTag
            MarkerType: Chapter
            ChapterIndex: 3
            Name: Name
          SongCount: 6
          Taglines:
          - Taglines
          - Taglines
          PreferredMetadataCountryCode: PreferredMetadataCountryCode
          CameraModel: CameraModel
          ChannelNumber: ChannelNumber
          UserData:
            UnplayedItemCount: 6
            Played: true
            ServerId: ServerId
            PlayedPercentage: 7.058770351582356
            Rating: 0.8851374739011653
            PlayCount: 4
            PlaybackPositionTicks: 0
            LastPlayedDate: 2000-01-23T04:56:07.000+00:00
            IsFavorite: true
            ItemId: ItemId
            Key: Key
          TimerId: TimerId
          DateCreated: 2000-01-23T04:56:07.000+00:00
          ParentThumbImageTag: ParentThumbImageTag
          IsSports: true
          ChannelId: ChannelId
          ParentIndexNumber: 3
          IsNew: true
          AffiliateCallSign: AffiliateCallSign
          ListingsId: ListingsId
          AlbumArtists:
          - null
          - null
          ServerId: ServerId
          Number: Number
          AlbumCount: 4
          IsRepeat: true
          CollectionType: CollectionType
          PrimaryImageAspectRatio: 3.0576100241049344
          Height: 0
          IsKids: true
          DisplayOrder: DisplayOrder
          MovieCount: 7
          People:
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          - Role: Role
            Type: Actor
            PrimaryImageTag: PrimaryImageTag
            Id: Id
            Name: Name
          Overview: Overview
          SpecialFeatureCount: 3
          ImageOrientation: TopLeft
          AlbumArtist: AlbumArtist
          ImageTags:
            key: ImageTags
          OriginalTitle: OriginalTitle
          ForcedSortName: ForcedSortName
          CurrentProgram: null
          SupportsResume: true
          LocationType: FileSystem
          IsPremiere: true
          Altitude: 0.8774076871421566
        ServerId: ServerId
        SyncJobName: SyncJobName
        OriginalFileName: OriginalFileName
        AdditionalFiles:
        - Path: Path
          Type: Media
          Index: 2
          Name: Name
          ImageType: Primary
        - Path: Path
          Type: Media
          Index: 2
          Name: Name
          ImageType: Primary
        SyncJobDateCreated: 2000-01-23T04:56:07.000+00:00
        UserId: UserId
        SyncJobId: 0
        SyncJobItemId: 6
      x-internal-ref-name: Emby.Server.Sync.Model.SyncedItem
    QueryResult_LogFile:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/LogFile'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 6
        Items:
        - Size: 0
          DateCreated: 2000-01-23T04:56:07.000+00:00
          DateModified: 2000-01-23T04:56:07.000+00:00
          Name: Name
        - Size: 0
          DateCreated: 2000-01-23T04:56:07.000+00:00
          DateModified: 2000-01-23T04:56:07.000+00:00
          Name: Name
    LogFile:
      type: object
      properties:
        DateCreated:
          type: string
          description: The date created.
          format: date-time
        DateModified:
          type: string
          description: The date modified.
          format: date-time
        Size:
          type: integer
          description: The size.
          format: int64
        Name:
          type: string
          description: The name.
      example:
        Size: 0
        DateCreated: 2000-01-23T04:56:07.000+00:00
        DateModified: 2000-01-23T04:56:07.000+00:00
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.System.LogFile
    PublicSystemInfo:
      type: object
      properties:
        LocalAddress:
          type: string
          description: The local address.
        LocalAddresses:
          type: array
          items:
            type: string
        WanAddress:
          type: string
          description: The wan address.
        RemoteAddresses:
          type: array
          items:
            type: string
        ServerName:
          type: string
          description: The name of the server.
        Version:
          type: string
          description: The version.
        Id:
          type: string
          description: The id.
      example:
        LocalAddress: LocalAddress
        WanAddress: WanAddress
        Version: Version
        LocalAddresses:
        - LocalAddresses
        - LocalAddresses
        ServerName: ServerName
        RemoteAddresses:
        - RemoteAddresses
        - RemoteAddresses
        Id: Id
      x-internal-ref-name: MediaBrowser.Model.System.PublicSystemInfo
    QueryResult_ActivityLogEntry:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ActivityLogEntry'
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 6
        Items:
        - Type: Type
          UserId: UserId
          Overview: Overview
          UserPrimaryImageTag: UserPrimaryImageTag
          Severity: Info
          Id: 0
          ShortOverview: ShortOverview
          ItemId: ItemId
          Date: 2000-01-23T04:56:07.000+00:00
          Name: Name
        - Type: Type
          UserId: UserId
          Overview: Overview
          UserPrimaryImageTag: UserPrimaryImageTag
          Severity: Info
          Id: 0
          ShortOverview: ShortOverview
          ItemId: ItemId
          Date: 2000-01-23T04:56:07.000+00:00
          Name: Name
    ActivityLogEntry:
      type: object
      properties:
        Id:
          type: integer
          description: The identifier.
          format: int64
        Name:
          type: string
          description: The name.
        Overview:
          type: string
          description: The overview.
        ShortOverview:
          type: string
          description: The short overview.
        Type:
          type: string
          description: The type.
        ItemId:
          type: string
          description: The item identifier.
        Date:
          type: string
          description: The date.
          format: date-time
        UserId:
          type: string
          description: The user identifier.
        UserPrimaryImageTag:
          type: string
          description: The user primary image tag.
        Severity:
          $ref: '#/components/schemas/Logging.LogSeverity'
      example:
        Type: Type
        UserId: UserId
        Overview: Overview
        UserPrimaryImageTag: UserPrimaryImageTag
        Severity: Info
        Id: 0
        ShortOverview: ShortOverview
        ItemId: ItemId
        Date: 2000-01-23T04:56:07.000+00:00
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Activity.ActivityLogEntry
    Logging.LogSeverity:
      type: string
      description: "Enum LogSeverity\r\n"
      enum:
      - Info
      - Debug
      - Warn
      - Error
      - Fatal
      x-internal-ref-name: MediaBrowser.Model.Logging.LogSeverity
    AuthenticateUser:
      type: object
      properties:
        Pw:
          type: string
      x-internal-ref-name: Emby.Api.AuthenticateUser
    UpdateUserPassword:
      type: object
      properties:
        Id:
          type: string
        NewPw:
          type: string
        ResetPassword:
          type: boolean
      x-internal-ref-name: Emby.Api.UpdateUserPassword
    ForgotPasswordPin:
      type: object
      properties:
        Pin:
          type: string
      x-internal-ref-name: Emby.Api.ForgotPasswordPin
    PinRedeemResult:
      type: object
      properties:
        Success:
          type: boolean
          description: A value indicating whether this `MediaBrowser.Model.Users.PinRedeemResult`
            is success.
        UsersReset:
          type: array
          description: The users reset.
          items:
            type: string
      example:
        UsersReset:
        - UsersReset
        - UsersReset
        Success: true
      x-internal-ref-name: MediaBrowser.Model.Users.PinRedeemResult
    UserLibrary.AddTags:
      type: object
      properties:
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/NameIdPair'
      x-internal-ref-name: Emby.Api.UserLibrary.AddTags
    UserLibrary.RemoveTags:
      type: object
      properties:
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/NameIdPair'
      x-internal-ref-name: Emby.Api.UserLibrary.RemoveTags
    ImageProviderInfo:
      type: object
      properties:
        Name:
          type: string
          description: The name.
        SupportedImages:
          type: array
          items:
            $ref: '#/components/schemas/ImageType'
      description: "Class ImageProviderInfo.\r\n"
      example:
        SupportedImages:
        - Primary
        - Primary
        Name: Name
      x-internal-ref-name: MediaBrowser.Model.Providers.ImageProviderInfo
    Library.UpdateMediaPath:
      type: object
      properties:
        Id:
          type: string
        PathInfo:
          $ref: '#/components/schemas/MediaPathInfo'
      x-internal-ref-name: Emby.Api.Library.UpdateMediaPath
    Library.RemoveMediaPath:
      type: object
      properties:
        Id:
          type: string
        Path:
          type: string
        RefreshLibrary:
          type: boolean
      x-internal-ref-name: Emby.Api.Library.RemoveMediaPath
    PlaystateCommand:
      type: string
      description: "Enum PlaystateCommand\r\n"
      enum:
      - Stop
      - Pause
      - Unpause
      - NextTrack
      - PreviousTrack
      - Seek
      - Rewind
      - FastForward
      - PlayPause
      - SeekRelative
      x-internal-ref-name: MediaBrowser.Model.Session.PlaystateCommand
    PlaystateRequest:
      type: object
      properties:
        Command:
          $ref: '#/components/schemas/PlaystateCommand'
        SeekPositionTicks:
          type: integer
          format: int64
          nullable: true
        ControllingUserId:
          type: string
          description: The controlling user identifier.
      x-internal-ref-name: MediaBrowser.Model.Session.PlaystateRequest
    QueryResult_String:
      type: object
      properties:
        Items:
          type: array
          items:
            type: string
        TotalRecordCount:
          type: integer
          format: int32
      example:
        TotalRecordCount: 0
        Items:
        - Items
        - Items
    Connect.UserLinkResult:
      type: object
      properties:
        IsPending:
          type: boolean
        IsNewUserInvitation:
          type: boolean
        GuestDisplayName:
          type: string
      example:
        IsNewUserInvitation: true
        GuestDisplayName: GuestDisplayName
        IsPending: true
      x-internal-ref-name: MediaBrowser.Controller.Connect.UserLinkResult
    RemoteSubtitleInfo:
      type: object
      properties:
        ThreeLetterISOLanguageName:
          type: string
          description: Use language instead to return the language specified by the
            subtitle provider
          deprecated: true
        Id:
          type: string
        ProviderName:
          type: string
        Name:
          type: string
        Format:
          type: string
        Author:
          type: string
        Comment:
          type: string
        DateCreated:
          type: string
          format: date-time
          nullable: true
        CommunityRating:
          type: number
          format: float
          nullable: true
        DownloadCount:
          type: integer
          format: int32
          nullable: true
        IsHashMatch:
          type: boolean
          nullable: true
        IsForced:
          type: boolean
          nullable: true
        IsHearingImpaired:
          type: boolean
          nullable: true
        Language:
          type: string
      example:
        Comment: Comment
        ThreeLetterISOLanguageName: ThreeLetterISOLanguageName
        IsForced: true
        DateCreated: 2000-01-23T04:56:07.000+00:00
        Name: Name
        IsHearingImpaired: true
        ProviderName: ProviderName
        Format: Format
        Language: Language
        IsHashMatch: true
        Author: Author
        CommunityRating: 0.8008282
        Id: Id
        DownloadCount: 6
      x-internal-ref-name: MediaBrowser.Model.Providers.RemoteSubtitleInfo
    Subtitles.SubtitleDownloadResult:
      type: object
      properties:
        NewIndex:
          type: integer
          format: int32
          nullable: true
      example:
        NewIndex: 0
      x-internal-ref-name: Emby.Api.Subtitles.SubtitleDownloadResult
    Api.SetChannelDisabled:
      type: object
      properties:
        Id:
          type: string
        ManagementId:
          type: string
        Disabled:
          type: boolean
      x-internal-ref-name: Emby.LiveTV.Api.SetChannelDisabled
    Api.SetChannelSortIndex:
      type: object
      properties:
        Id:
          type: string
        ManagementId:
          type: string
        NewIndex:
          type: integer
          format: int32
      x-internal-ref-name: Emby.LiveTV.Api.SetChannelSortIndex
    Api.OnPlaybackProgress:
      type: object
      properties:
        PlaylistIndex:
          type: integer
          format: int32
        PlaylistLength:
          type: integer
          format: int32
        EventName:
          $ref: '#/components/schemas/ProgressEvent'
      x-internal-ref-name: Emby.Server.MediaEncoding.Api.OnPlaybackProgress
  responses:
    "400":
      description: Bad Request. Server cannot process request.
    "401":
      description: Unauthorized. Client needs to authenticate.
    "403":
      description: Forbidden. No permission for the reqested operation.
    "404":
      description: Resource not found or unavailable.
    "500":
      description: Server error.
  securitySchemes:
    apikeyauth:
      type: apiKey
      description: "**ApiKey Authentication**  \nAPI keys are static access tokens\
        \ providing access to the Emby API for external applications.  \n  \nKeys\
        \ can be created from the Server Dashboard under **Advanced > Security** \
        \ \nThe api key can alternatively be specified in an http header named _X-Emby-Token_\
        \  \nFor details please see the [API Documentation: ApiKey Authentication](https://github.com/MediaBrowser/Emby/wiki/ApiKeyAuthentication)"
      name: api_key
      in: query
    embyauth:
      type: http
      description: "**Emby User Authentication**  \nAn access token must be acquired\
        \ via _/Users/AuthenticateByName_ and then sent in an http header with every\
        \ reuest.  \nFor details please see the [API Documentation: Authentication](https://github.com/MediaBrowser/Emby/wiki/User-Authentication)\
        \  \n**(not available for interative tryout)**"
      scheme: bearer
      bearerFormat: "Emby UserId=\"(guid)\", Client=\"(string)\", Device=\"(string)\"\
        , DeviceId=\"(string)\", Version=\"string\", Token=\"(string)\""
