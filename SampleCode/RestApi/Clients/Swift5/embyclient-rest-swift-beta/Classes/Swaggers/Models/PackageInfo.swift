//
// PackageInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Class PackageInfo   */

public struct PackageInfo: Codable {

    /** The internal id of this package. */
    public var _id: String?
    /** The name. */
    public var name: String?
    /** The short description. */
    public var shortDescription: String?
    /** The overview. */
    public var overview: String?
    /** A value indicating whether this instance is premium. */
    public var isPremium: Bool?
    /** A value indicating whether this instance is adult only content. */
    public var adult: Bool?
    /** The rich desc URL. */
    public var richDescUrl: String?
    /** The thumb image. */
    public var thumbImage: String?
    /** The preview image. */
    public var previewImage: String?
    /** The type. */
    public var type: String?
    /** The target filename. */
    public var targetFilename: String?
    /** The owner. */
    public var owner: String?
    /** The category. */
    public var category: String?
    /** The catalog tile color. */
    public var tileColor: String?
    /** The feature id of this package (if premium). */
    public var featureId: String?
    /** The price for this package (if premium). */
    public var price: Float?
    public var targetSystem: PackageTargetSystem?
    /** The guid of the assembly associated with this package (if a plug\\-in). This is used to identify the proper item for automatic updates. */
    public var guid: String?
    /** Whether or not this package is registered. */
    public var isRegistered: Bool?
    /** The expiration date for this package. */
    public var expDate: Date?
    /** The versions. */
    public var versions: [PackageVersionInfo]?
    /** A value indicating whether \\[enable in application store\\]. */
    public var enableInAppStore: Bool?
    /** The installs. */
    public var installs: Int?

    public init(_id: String? = nil, name: String? = nil, shortDescription: String? = nil, overview: String? = nil, isPremium: Bool? = nil, adult: Bool? = nil, richDescUrl: String? = nil, thumbImage: String? = nil, previewImage: String? = nil, type: String? = nil, targetFilename: String? = nil, owner: String? = nil, category: String? = nil, tileColor: String? = nil, featureId: String? = nil, price: Float? = nil, targetSystem: PackageTargetSystem? = nil, guid: String? = nil, isRegistered: Bool? = nil, expDate: Date? = nil, versions: [PackageVersionInfo]? = nil, enableInAppStore: Bool? = nil, installs: Int? = nil) {
        self._id = _id
        self.name = name
        self.shortDescription = shortDescription
        self.overview = overview
        self.isPremium = isPremium
        self.adult = adult
        self.richDescUrl = richDescUrl
        self.thumbImage = thumbImage
        self.previewImage = previewImage
        self.type = type
        self.targetFilename = targetFilename
        self.owner = owner
        self.category = category
        self.tileColor = tileColor
        self.featureId = featureId
        self.price = price
        self.targetSystem = targetSystem
        self.guid = guid
        self.isRegistered = isRegistered
        self.expDate = expDate
        self.versions = versions
        self.enableInAppStore = enableInAppStore
        self.installs = installs
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case name
        case shortDescription
        case overview
        case isPremium
        case adult
        case richDescUrl
        case thumbImage
        case previewImage
        case type
        case targetFilename
        case owner
        case category
        case tileColor
        case featureId
        case price
        case targetSystem
        case guid
        case isRegistered
        case expDate
        case versions
        case enableInAppStore
        case installs
    }

}
