//
// LiveTvTimerInfoDto.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct LiveTvTimerInfoDto: Codable {

    public var status: LiveTvRecordingStatus?
    public var seriesTimerId: String?
    public var runTimeTicks: Int64?
    public var programInfo: BaseItemDto?
    public var timerType: LiveTvTimerType?
    public var _id: String?
    public var type: String?
    public var serverId: String?
    public var channelId: String?
    public var channelName: String?
    public var channelNumber: String?
    public var channelPrimaryImageTag: String?
    public var programId: String?
    public var name: String?
    public var overview: String?
    public var startDate: Date?
    public var endDate: Date?
    public var priority: Int?
    public var prePaddingSeconds: Int?
    public var postPaddingSeconds: Int?
    public var isPrePaddingRequired: Bool?
    public var parentBackdropItemId: String?
    public var parentBackdropImageTags: [String]?
    public var isPostPaddingRequired: Bool?
    public var keepUntil: LiveTvKeepUntil?

    public init(status: LiveTvRecordingStatus? = nil, seriesTimerId: String? = nil, runTimeTicks: Int64? = nil, programInfo: BaseItemDto? = nil, timerType: LiveTvTimerType? = nil, _id: String? = nil, type: String? = nil, serverId: String? = nil, channelId: String? = nil, channelName: String? = nil, channelNumber: String? = nil, channelPrimaryImageTag: String? = nil, programId: String? = nil, name: String? = nil, overview: String? = nil, startDate: Date? = nil, endDate: Date? = nil, priority: Int? = nil, prePaddingSeconds: Int? = nil, postPaddingSeconds: Int? = nil, isPrePaddingRequired: Bool? = nil, parentBackdropItemId: String? = nil, parentBackdropImageTags: [String]? = nil, isPostPaddingRequired: Bool? = nil, keepUntil: LiveTvKeepUntil? = nil) {
        self.status = status
        self.seriesTimerId = seriesTimerId
        self.runTimeTicks = runTimeTicks
        self.programInfo = programInfo
        self.timerType = timerType
        self._id = _id
        self.type = type
        self.serverId = serverId
        self.channelId = channelId
        self.channelName = channelName
        self.channelNumber = channelNumber
        self.channelPrimaryImageTag = channelPrimaryImageTag
        self.programId = programId
        self.name = name
        self.overview = overview
        self.startDate = startDate
        self.endDate = endDate
        self.priority = priority
        self.prePaddingSeconds = prePaddingSeconds
        self.postPaddingSeconds = postPaddingSeconds
        self.isPrePaddingRequired = isPrePaddingRequired
        self.parentBackdropItemId = parentBackdropItemId
        self.parentBackdropImageTags = parentBackdropImageTags
        self.isPostPaddingRequired = isPostPaddingRequired
        self.keepUntil = keepUntil
    }

    public enum CodingKeys: String, CodingKey { 
        case status = "Status"
        case seriesTimerId = "SeriesTimerId"
        case runTimeTicks = "RunTimeTicks"
        case programInfo = "ProgramInfo"
        case timerType = "TimerType"
        case _id = "Id"
        case type = "Type"
        case serverId = "ServerId"
        case channelId = "ChannelId"
        case channelName = "ChannelName"
        case channelNumber = "ChannelNumber"
        case channelPrimaryImageTag = "ChannelPrimaryImageTag"
        case programId = "ProgramId"
        case name = "Name"
        case overview = "Overview"
        case startDate = "StartDate"
        case endDate = "EndDate"
        case priority = "Priority"
        case prePaddingSeconds = "PrePaddingSeconds"
        case postPaddingSeconds = "PostPaddingSeconds"
        case isPrePaddingRequired = "IsPrePaddingRequired"
        case parentBackdropItemId = "ParentBackdropItemId"
        case parentBackdropImageTags = "ParentBackdropImageTags"
        case isPostPaddingRequired = "IsPostPaddingRequired"
        case keepUntil = "KeepUntil"
    }

}
