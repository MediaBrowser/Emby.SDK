//
// SessionsServiceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SessionsServiceAPI {
    /**

     - parameter key: (path) Auth Key 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteAuthKeysByKey(key: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteAuthKeysByKeyWithRequestBuilder(key: key).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /Auth/Keys/{Key}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter key: (path) Auth Key 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteAuthKeysByKeyWithRequestBuilder(key: String) -> RequestBuilder<Void> {
        var path = "/Auth/Keys/{Key}"
        let keyPreEscape = "\(key)"
        let keyPostEscape = keyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Key}", with: keyPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Removes an additional user from a session

     - parameter _id: (path) Session Id 
     - parameter userId: (path) UserId Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteSessionsByIdUsersByUserid(_id: String, userId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteSessionsByIdUsersByUseridWithRequestBuilder(_id: _id, userId: userId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Removes an additional user from a session
     - DELETE /Sessions/{Id}/Users/{UserId}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (path) Session Id 
     - parameter userId: (path) UserId Id 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteSessionsByIdUsersByUseridWithRequestBuilder(_id: String, userId: String) -> RequestBuilder<Void> {
        var path = "/Sessions/{Id}/Users/{UserId}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{UserId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter startIndex: (query) Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional)
     - parameter limit: (query) Optional. The maximum number of records to return (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAuthKeys(startIndex: Int? = nil, limit: Int? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        getAuthKeysWithRequestBuilder(startIndex: startIndex, limit: limit).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - GET /Auth/Keys

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter startIndex: (query) Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional)
     - parameter limit: (query) Optional. The maximum number of records to return (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func getAuthKeysWithRequestBuilder(startIndex: Int? = nil, limit: Int? = nil) -> RequestBuilder<Void> {
        let path = "/Auth/Keys"
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "StartIndex": startIndex?.encodeToJSON(), 
                        "Limit": limit?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAuthProviders(completion: @escaping ((_ data: [NameIdPair]?,_ error: Error?) -> Void)) {
        getAuthProvidersWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /Auth/Providers

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "Id" : "Id",
  "Name" : "Name"
}, {
  "Id" : "Id",
  "Name" : "Name"
} ]}]

     - returns: RequestBuilder<[NameIdPair]> 
     */
    open class func getAuthProvidersWithRequestBuilder() -> RequestBuilder<[NameIdPair]> {
        let path = "/Auth/Providers"
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[NameIdPair]>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets a list of sessions

     - parameter controllableByUserId: (query) Optional. Filter by sessions that a given user is allowed to remote control. (optional)
     - parameter deviceId: (query) Optional. Filter by device id. (optional)
     - parameter _id: (query) Optional. Filter by session id. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSessions(controllableByUserId: String? = nil, deviceId: String? = nil, _id: String? = nil, completion: @escaping ((_ data: [SessionSessionInfo]?,_ error: Error?) -> Void)) {
        getSessionsWithRequestBuilder(controllableByUserId: controllableByUserId, deviceId: deviceId, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a list of sessions
     - GET /Sessions

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "PlaylistLength" : 3,
  "ApplicationVersion" : "ApplicationVersion",
  "SupportedCommands" : [ "SupportedCommands", "SupportedCommands" ],
  "DeviceId" : "DeviceId",
  "PlaylistItemId" : "PlaylistItemId",
  "PlaylistIndex" : 9,
  "ServerId" : "ServerId",
  "RemoteEndPoint" : "RemoteEndPoint",
  "InternalDeviceId" : 2,
  "SupportsRemoteControl" : true,
  "Protocol" : "Protocol",
  "Client" : "Client",
  "UserName" : "UserName",
  "UserPrimaryImageTag" : "UserPrimaryImageTag",
  "DeviceType" : "DeviceType",
  "PlayableMediaTypes" : [ "PlayableMediaTypes", "PlayableMediaTypes" ],
  "NowPlayingItem" : {
    "SeasonName" : "SeasonName",
    "PremiereDate" : "2000-01-23T04:56:07.000+00:00",
    "Size" : 1,
    "CriticRating" : 9.018348,
    "GameSystemId" : 6,
    "Studios" : [ {
      "Id" : 3,
      "Name" : "Name"
    }, {
      "Id" : 3,
      "Name" : "Name"
    } ],
    "CameraMake" : "CameraMake",
    "Aperture" : 4.258773108174356,
    "ChannelPrimaryImageTag" : "ChannelPrimaryImageTag",
    "ExtraType" : "ExtraType",
    "ParentBackdropItemId" : "ParentBackdropItemId",
    "Etag" : "Etag",
    "ParentLogoImageTag" : "ParentLogoImageTag",
    "ExposureTime" : 0.2025324113236393,
    "MediaType" : "MediaType",
    "ManagementId" : "ManagementId",
    "Tags" : [ "Tags", "Tags" ],
    "Status" : "Status",
    "IndexNumberEnd" : 5,
    "ArtistItems" : [ {
      "Id" : "Id",
      "Name" : "Name"
    }, {
      "Id" : "Id",
      "Name" : "Name"
    } ],
    "MediaSources" : [ {
      "EncoderPath" : "EncoderPath",
      "RequiredHttpHeaders" : {
        "key" : "RequiredHttpHeaders"
      },
      "RunTimeTicks" : 5,
      "MediaStreams" : [ {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      }, {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      } ],
      "Size" : 1,
      "BufferMs" : 2,
      "ContainerStartTimeTicks" : 5,
      "SortName" : "SortName",
      "Timestamp" : "None",
      "ItemId" : "ItemId",
      "Name" : "Name",
      "RequiresOpening" : true,
      "DirectStreamUrl" : "DirectStreamUrl",
      "SupportsDirectStream" : true,
      "RequiresClosing" : true,
      "Container" : "Container",
      "ServerId" : "ServerId",
      "LiveStreamId" : "LiveStreamId",
      "RequiresLooping" : true,
      "Protocol" : "File",
      "DefaultSubtitleStreamIndex" : 8,
      "IsInfiniteStream" : true,
      "Path" : "Path",
      "IsRemote" : true,
      "SupportsDirectPlay" : true,
      "TranscodingSubProtocol" : "TranscodingSubProtocol",
      "Formats" : [ "Formats", "Formats" ],
      "AnalyzeDurationMs" : 9,
      "Bitrate" : 9,
      "OpenToken" : "OpenToken",
      "SupportsProbing" : true,
      "Type" : "Default",
      "ReadAtNativeFramerate" : true,
      "TranscodingContainer" : "TranscodingContainer",
      "TranscodingUrl" : "TranscodingUrl",
      "Id" : "Id",
      "SupportsTranscoding" : true,
      "DefaultAudioStreamIndex" : 6
    }, {
      "EncoderPath" : "EncoderPath",
      "RequiredHttpHeaders" : {
        "key" : "RequiredHttpHeaders"
      },
      "RunTimeTicks" : 5,
      "MediaStreams" : [ {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      }, {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      } ],
      "Size" : 1,
      "BufferMs" : 2,
      "ContainerStartTimeTicks" : 5,
      "SortName" : "SortName",
      "Timestamp" : "None",
      "ItemId" : "ItemId",
      "Name" : "Name",
      "RequiresOpening" : true,
      "DirectStreamUrl" : "DirectStreamUrl",
      "SupportsDirectStream" : true,
      "RequiresClosing" : true,
      "Container" : "Container",
      "ServerId" : "ServerId",
      "LiveStreamId" : "LiveStreamId",
      "RequiresLooping" : true,
      "Protocol" : "File",
      "DefaultSubtitleStreamIndex" : 8,
      "IsInfiniteStream" : true,
      "Path" : "Path",
      "IsRemote" : true,
      "SupportsDirectPlay" : true,
      "TranscodingSubProtocol" : "TranscodingSubProtocol",
      "Formats" : [ "Formats", "Formats" ],
      "AnalyzeDurationMs" : 9,
      "Bitrate" : 9,
      "OpenToken" : "OpenToken",
      "SupportsProbing" : true,
      "Type" : "Default",
      "ReadAtNativeFramerate" : true,
      "TranscodingContainer" : "TranscodingContainer",
      "TranscodingUrl" : "TranscodingUrl",
      "Id" : "Id",
      "SupportsTranscoding" : true,
      "DefaultAudioStreamIndex" : 6
    } ],
    "GenreItems" : [ null, null ],
    "OfficialRating" : "OfficialRating",
    "Longitude" : 7.260521264802104,
    "Composers" : [ null, null ],
    "LockData" : true,
    "FocalLength" : 6.628464275087742,
    "IsNews" : true,
    "ShutterSpeed" : 1.041444916118296,
    "Id" : "Id",
    "SortIndexNumber" : 0,
    "IsFolder" : true,
    "CanMakePublic" : true,
    "SeriesTimerId" : "SeriesTimerId",
    "SeriesId" : "SeriesId",
    "ListingsPath" : "ListingsPath",
    "MediaStreams" : [ null, null ],
    "FileName" : "FileName",
    "PrimaryImageTag" : "PrimaryImageTag",
    "Prefix" : "Prefix",
    "CanDownload" : true,
    "IsMovie" : true,
    "SeriesCount" : 7,
    "PrimaryImageItemId" : "PrimaryImageItemId",
    "ListingsChannelId" : "ListingsChannelId",
    "SeriesStudio" : "SeriesStudio",
    "IsLive" : true,
    "Width" : 3,
    "ExternalUrls" : [ {
      "Url" : "Url",
      "Name" : "Name"
    }, {
      "Url" : "Url",
      "Name" : "Name"
    } ],
    "RecursiveItemCount" : 4,
    "Path" : "Path",
    "ParentId" : "ParentId",
    "TimerType" : "Program",
    "GameSystem" : "GameSystem",
    "MusicVideoCount" : 6,
    "IsSeries" : true,
    "CanMakePrivate" : true,
    "ProductionLocations" : [ "ProductionLocations", "ProductionLocations" ],
    "Subviews" : [ "Subviews", "Subviews" ],
    "Bitrate" : 2,
    "EndDate" : "2000-01-23T04:56:07.000+00:00",
    "SeriesPrimaryImageTag" : "SeriesPrimaryImageTag",
    "ParentThumbItemId" : "ParentThumbItemId",
    "PreferredMetadataLanguage" : "PreferredMetadataLanguage",
    "Type" : "Type",
    "BackdropImageTags" : [ "BackdropImageTags", "BackdropImageTags" ],
    "ParentBackdropImageTags" : [ "ParentBackdropImageTags", "ParentBackdropImageTags" ],
    "ChildCount" : 8,
    "TagItems" : [ null, null ],
    "Artists" : [ "Artists", "Artists" ],
    "ListingsChannelName" : "ListingsChannelName",
    "RunTimeTicks" : 6,
    "AlbumPrimaryImageTag" : "AlbumPrimaryImageTag",
    "Video3DFormat" : "HalfSideBySide",
    "CanDelete" : true,
    "PlaylistItemId" : "PlaylistItemId",
    "SortParentIndexNumber" : 6,
    "DisplayPreferencesId" : "DisplayPreferencesId",
    "Album" : "Album",
    "Latitude" : 4.678947989005849,
    "Guid" : "Guid",
    "SortName" : "SortName",
    "Name" : "Name",
    "StartDate" : "2000-01-23T04:56:07.000+00:00",
    "Container" : "Container",
    "ProductionYear" : 6,
    "SeriesName" : "SeriesName",
    "AsSeries" : true,
    "AlbumId" : "AlbumId",
    "SupportsSync" : true,
    "LocalTrailerCount" : 3,
    "IndexNumber" : 6,
    "CompletionPercentage" : 9.702963800023566,
    "Genres" : [ "Genres", "Genres" ],
    "SeasonId" : "SeasonId",
    "LockedFields" : [ "Cast", "Cast" ],
    "Disabled" : true,
    "ProviderIds" : {
      "key" : "ProviderIds"
    },
    "RemoteTrailers" : [ {
      "Url" : "Url",
      "Name" : "Name"
    }, {
      "Url" : "Url",
      "Name" : "Name"
    } ],
    "PresentationUniqueKey" : "PresentationUniqueKey",
    "CustomRating" : "CustomRating",
    "ListingsChannelNumber" : "ListingsChannelNumber",
    "CanManageAccess" : true,
    "AirDays" : [ "Sunday", "Sunday" ],
    "ParentLogoItemId" : "ParentLogoItemId",
    "PartCount" : 3,
    "ListingsProviderId" : "ListingsProviderId",
    "ChannelName" : "ChannelName",
    "EpisodeTitle" : "EpisodeTitle",
    "IsoSpeedRating" : 0,
    "CommunityRating" : 3.5571952,
    "Software" : "Software",
    "Chapters" : [ {
      "StartPositionTicks" : 7,
      "ImageTag" : "ImageTag",
      "MarkerType" : "Chapter",
      "ChapterIndex" : 5,
      "Name" : "Name"
    }, {
      "StartPositionTicks" : 7,
      "ImageTag" : "ImageTag",
      "MarkerType" : "Chapter",
      "ChapterIndex" : 5,
      "Name" : "Name"
    } ],
    "SongCount" : 4,
    "Taglines" : [ "Taglines", "Taglines" ],
    "PreferredMetadataCountryCode" : "PreferredMetadataCountryCode",
    "CameraModel" : "CameraModel",
    "ChannelNumber" : "ChannelNumber",
    "UserData" : {
      "UnplayedItemCount" : 7,
      "Played" : true,
      "ServerId" : "ServerId",
      "PlayedPercentage" : 0.8851374739011653,
      "Rating" : 7.143538047012306,
      "PlayCount" : 0,
      "PlaybackPositionTicks" : 6,
      "LastPlayedDate" : "2000-01-23T04:56:07.000+00:00",
      "IsFavorite" : true,
      "ItemId" : "ItemId",
      "Key" : "Key"
    },
    "TimerId" : "TimerId",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "ParentThumbImageTag" : "ParentThumbImageTag",
    "IsSports" : true,
    "ChannelId" : "ChannelId",
    "ParentIndexNumber" : 6,
    "IsNew" : true,
    "AffiliateCallSign" : "AffiliateCallSign",
    "ListingsId" : "ListingsId",
    "AlbumArtists" : [ null, null ],
    "ServerId" : "ServerId",
    "Number" : "Number",
    "AlbumCount" : 5,
    "IsRepeat" : true,
    "CollectionType" : "CollectionType",
    "PrimaryImageAspectRatio" : 3.0205796992916243,
    "Height" : 4,
    "IsKids" : true,
    "DisplayOrder" : "DisplayOrder",
    "MovieCount" : 0,
    "People" : [ {
      "Role" : "Role",
      "Type" : "Actor",
      "PrimaryImageTag" : "PrimaryImageTag",
      "Id" : "Id",
      "Name" : "Name"
    }, {
      "Role" : "Role",
      "Type" : "Actor",
      "PrimaryImageTag" : "PrimaryImageTag",
      "Id" : "Id",
      "Name" : "Name"
    } ],
    "Overview" : "Overview",
    "SpecialFeatureCount" : 7,
    "ImageOrientation" : "TopLeft",
    "AlbumArtist" : "AlbumArtist",
    "ImageTags" : {
      "key" : "ImageTags"
    },
    "OriginalTitle" : "OriginalTitle",
    "ForcedSortName" : "ForcedSortName",
    "SupportsResume" : true,
    "LocationType" : "FileSystem",
    "IsPremiere" : true,
    "Altitude" : 9.132027271330688
  },
  "TranscodingInfo" : {
    "IsAudioDirect" : true,
    "ProcessStatistics" : {
      "Metrics" : [ {
        "Time" : {
          "TotalMilliseconds" : 7.143538047012306,
          "TotalMinutes" : 0.8851374739011653,
          "Hours" : 6,
          "Ticks" : 1,
          "TotalSeconds" : 7.058770351582356,
          "Days" : 2,
          "TotalDays" : 3.353193347011243,
          "Seconds" : 6,
          "TotalHours" : 3.0937452626664474,
          "Milliseconds" : 6,
          "Minutes" : 5
        },
        "WorkingSet" : 4.652396432933246,
        "VirtualMemory" : 0.10263654006109402,
        "CpuPercent" : 6.519180951018382
      }, {
        "Time" : {
          "TotalMilliseconds" : 7.143538047012306,
          "TotalMinutes" : 0.8851374739011653,
          "Hours" : 6,
          "Ticks" : 1,
          "TotalSeconds" : 7.058770351582356,
          "Days" : 2,
          "TotalDays" : 3.353193347011243,
          "Seconds" : 6,
          "TotalHours" : 3.0937452626664474,
          "Milliseconds" : 6,
          "Minutes" : 5
        },
        "WorkingSet" : 4.652396432933246,
        "VirtualMemory" : 0.10263654006109402,
        "CpuPercent" : 6.519180951018382
      } ],
      "AverageCpu" : 6.438423552598547,
      "CurrentCpu" : 9.018348186070783,
      "CurrentWorkingSet" : 6.965117697638846,
      "CurrentVirtualMemory" : 3.5571952270680973
    },
    "TranscodeReasons" : [ "ContainerNotSupported", "ContainerNotSupported" ],
    "VideoEncoderHwAccel" : "VideoEncoderHwAccel",
    "Framerate" : 1.0246457,
    "Container" : "Container",
    "TranscodingStartPositionTicks" : 7.457744773683766,
    "IsVideoDirect" : true,
    "AverageCpuUsage" : 9.369310271410669,
    "VideoDecoderIsHardware" : true,
    "VideoDecoderMediaType" : "VideoDecoderMediaType",
    "SubProtocol" : "SubProtocol",
    "CompletionPercentage" : 1.4894159098541704,
    "Height" : 4,
    "VideoPipelineInfo" : [ {
      "StepType" : "Decoder",
      "FfmpegDescription" : "FfmpegDescription",
      "Param" : "Param",
      "ParamShort" : "ParamShort",
      "StepTypeName" : "StepTypeName",
      "IsHardwareContext" : true,
      "FfmpegOptions" : "FfmpegOptions",
      "FfmpegName" : "FfmpegName",
      "Short" : "Short",
      "HardwareContextName" : "HardwareContextName",
      "Name" : "Name"
    }, {
      "StepType" : "Decoder",
      "FfmpegDescription" : "FfmpegDescription",
      "Param" : "Param",
      "ParamShort" : "ParamShort",
      "StepTypeName" : "StepTypeName",
      "IsHardwareContext" : true,
      "FfmpegOptions" : "FfmpegOptions",
      "FfmpegName" : "FfmpegName",
      "Short" : "Short",
      "HardwareContextName" : "HardwareContextName",
      "Name" : "Name"
    } ],
    "VideoDecoder" : "VideoDecoder",
    "Width" : 1,
    "AudioCodec" : "AudioCodec",
    "VideoEncoderIsHardware" : true,
    "SubtitlePipelineInfos" : [ [ null, null ], [ null, null ] ],
    "CpuHistory" : [ {
      "Item1" : 6.683562403749608,
      "Item2" : 8.762042012749001
    }, {
      "Item1" : 6.683562403749608,
      "Item2" : 8.762042012749001
    } ],
    "CurrentThrottle" : 8,
    "VideoCodec" : "VideoCodec",
    "Bitrate" : 4,
    "VideoDecoderHwAccel" : "VideoDecoderHwAccel",
    "TranscodingPositionTicks" : 6.84685269835264,
    "CurrentCpuUsage" : 9.965781217890562,
    "AudioBitrate" : 7,
    "AudioChannels" : 5,
    "VideoEncoderMediaType" : "VideoEncoderMediaType",
    "VideoEncoder" : "VideoEncoder",
    "VideoBitrate" : 1
  },
  "AppIconUrl" : "AppIconUrl",
  "UserId" : "UserId",
  "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
  "Id" : "Id",
  "AdditionalUsers" : [ {
    "UserName" : "UserName",
    "UserId" : "UserId",
    "UserInternalId" : 7
  }, {
    "UserName" : "UserName",
    "UserId" : "UserId",
    "UserInternalId" : 7
  } ],
  "PlayState" : {
    "RepeatMode" : "RepeatNone",
    "CanSeek" : true,
    "PlayMethod" : "Transcode",
    "SubtitleOffset" : 5,
    "PositionTicks" : 0,
    "AudioStreamIndex" : 1,
    "IsMuted" : true,
    "VolumeLevel" : 6,
    "MediaSourceId" : "MediaSourceId",
    "IsPaused" : true,
    "SubtitleStreamIndex" : 5,
    "PlaybackRate" : 2.3021358869347655
  },
  "DeviceName" : "DeviceName"
}, {
  "PlaylistLength" : 3,
  "ApplicationVersion" : "ApplicationVersion",
  "SupportedCommands" : [ "SupportedCommands", "SupportedCommands" ],
  "DeviceId" : "DeviceId",
  "PlaylistItemId" : "PlaylistItemId",
  "PlaylistIndex" : 9,
  "ServerId" : "ServerId",
  "RemoteEndPoint" : "RemoteEndPoint",
  "InternalDeviceId" : 2,
  "SupportsRemoteControl" : true,
  "Protocol" : "Protocol",
  "Client" : "Client",
  "UserName" : "UserName",
  "UserPrimaryImageTag" : "UserPrimaryImageTag",
  "DeviceType" : "DeviceType",
  "PlayableMediaTypes" : [ "PlayableMediaTypes", "PlayableMediaTypes" ],
  "NowPlayingItem" : {
    "SeasonName" : "SeasonName",
    "PremiereDate" : "2000-01-23T04:56:07.000+00:00",
    "Size" : 1,
    "CriticRating" : 9.018348,
    "GameSystemId" : 6,
    "Studios" : [ {
      "Id" : 3,
      "Name" : "Name"
    }, {
      "Id" : 3,
      "Name" : "Name"
    } ],
    "CameraMake" : "CameraMake",
    "Aperture" : 4.258773108174356,
    "ChannelPrimaryImageTag" : "ChannelPrimaryImageTag",
    "ExtraType" : "ExtraType",
    "ParentBackdropItemId" : "ParentBackdropItemId",
    "Etag" : "Etag",
    "ParentLogoImageTag" : "ParentLogoImageTag",
    "ExposureTime" : 0.2025324113236393,
    "MediaType" : "MediaType",
    "ManagementId" : "ManagementId",
    "Tags" : [ "Tags", "Tags" ],
    "Status" : "Status",
    "IndexNumberEnd" : 5,
    "ArtistItems" : [ {
      "Id" : "Id",
      "Name" : "Name"
    }, {
      "Id" : "Id",
      "Name" : "Name"
    } ],
    "MediaSources" : [ {
      "EncoderPath" : "EncoderPath",
      "RequiredHttpHeaders" : {
        "key" : "RequiredHttpHeaders"
      },
      "RunTimeTicks" : 5,
      "MediaStreams" : [ {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      }, {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      } ],
      "Size" : 1,
      "BufferMs" : 2,
      "ContainerStartTimeTicks" : 5,
      "SortName" : "SortName",
      "Timestamp" : "None",
      "ItemId" : "ItemId",
      "Name" : "Name",
      "RequiresOpening" : true,
      "DirectStreamUrl" : "DirectStreamUrl",
      "SupportsDirectStream" : true,
      "RequiresClosing" : true,
      "Container" : "Container",
      "ServerId" : "ServerId",
      "LiveStreamId" : "LiveStreamId",
      "RequiresLooping" : true,
      "Protocol" : "File",
      "DefaultSubtitleStreamIndex" : 8,
      "IsInfiniteStream" : true,
      "Path" : "Path",
      "IsRemote" : true,
      "SupportsDirectPlay" : true,
      "TranscodingSubProtocol" : "TranscodingSubProtocol",
      "Formats" : [ "Formats", "Formats" ],
      "AnalyzeDurationMs" : 9,
      "Bitrate" : 9,
      "OpenToken" : "OpenToken",
      "SupportsProbing" : true,
      "Type" : "Default",
      "ReadAtNativeFramerate" : true,
      "TranscodingContainer" : "TranscodingContainer",
      "TranscodingUrl" : "TranscodingUrl",
      "Id" : "Id",
      "SupportsTranscoding" : true,
      "DefaultAudioStreamIndex" : 6
    }, {
      "EncoderPath" : "EncoderPath",
      "RequiredHttpHeaders" : {
        "key" : "RequiredHttpHeaders"
      },
      "RunTimeTicks" : 5,
      "MediaStreams" : [ {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      }, {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      } ],
      "Size" : 1,
      "BufferMs" : 2,
      "ContainerStartTimeTicks" : 5,
      "SortName" : "SortName",
      "Timestamp" : "None",
      "ItemId" : "ItemId",
      "Name" : "Name",
      "RequiresOpening" : true,
      "DirectStreamUrl" : "DirectStreamUrl",
      "SupportsDirectStream" : true,
      "RequiresClosing" : true,
      "Container" : "Container",
      "ServerId" : "ServerId",
      "LiveStreamId" : "LiveStreamId",
      "RequiresLooping" : true,
      "Protocol" : "File",
      "DefaultSubtitleStreamIndex" : 8,
      "IsInfiniteStream" : true,
      "Path" : "Path",
      "IsRemote" : true,
      "SupportsDirectPlay" : true,
      "TranscodingSubProtocol" : "TranscodingSubProtocol",
      "Formats" : [ "Formats", "Formats" ],
      "AnalyzeDurationMs" : 9,
      "Bitrate" : 9,
      "OpenToken" : "OpenToken",
      "SupportsProbing" : true,
      "Type" : "Default",
      "ReadAtNativeFramerate" : true,
      "TranscodingContainer" : "TranscodingContainer",
      "TranscodingUrl" : "TranscodingUrl",
      "Id" : "Id",
      "SupportsTranscoding" : true,
      "DefaultAudioStreamIndex" : 6
    } ],
    "GenreItems" : [ null, null ],
    "OfficialRating" : "OfficialRating",
    "Longitude" : 7.260521264802104,
    "Composers" : [ null, null ],
    "LockData" : true,
    "FocalLength" : 6.628464275087742,
    "IsNews" : true,
    "ShutterSpeed" : 1.041444916118296,
    "Id" : "Id",
    "SortIndexNumber" : 0,
    "IsFolder" : true,
    "CanMakePublic" : true,
    "SeriesTimerId" : "SeriesTimerId",
    "SeriesId" : "SeriesId",
    "ListingsPath" : "ListingsPath",
    "MediaStreams" : [ null, null ],
    "FileName" : "FileName",
    "PrimaryImageTag" : "PrimaryImageTag",
    "Prefix" : "Prefix",
    "CanDownload" : true,
    "IsMovie" : true,
    "SeriesCount" : 7,
    "PrimaryImageItemId" : "PrimaryImageItemId",
    "ListingsChannelId" : "ListingsChannelId",
    "SeriesStudio" : "SeriesStudio",
    "IsLive" : true,
    "Width" : 3,
    "ExternalUrls" : [ {
      "Url" : "Url",
      "Name" : "Name"
    }, {
      "Url" : "Url",
      "Name" : "Name"
    } ],
    "RecursiveItemCount" : 4,
    "Path" : "Path",
    "ParentId" : "ParentId",
    "TimerType" : "Program",
    "GameSystem" : "GameSystem",
    "MusicVideoCount" : 6,
    "IsSeries" : true,
    "CanMakePrivate" : true,
    "ProductionLocations" : [ "ProductionLocations", "ProductionLocations" ],
    "Subviews" : [ "Subviews", "Subviews" ],
    "Bitrate" : 2,
    "EndDate" : "2000-01-23T04:56:07.000+00:00",
    "SeriesPrimaryImageTag" : "SeriesPrimaryImageTag",
    "ParentThumbItemId" : "ParentThumbItemId",
    "PreferredMetadataLanguage" : "PreferredMetadataLanguage",
    "Type" : "Type",
    "BackdropImageTags" : [ "BackdropImageTags", "BackdropImageTags" ],
    "ParentBackdropImageTags" : [ "ParentBackdropImageTags", "ParentBackdropImageTags" ],
    "ChildCount" : 8,
    "TagItems" : [ null, null ],
    "Artists" : [ "Artists", "Artists" ],
    "ListingsChannelName" : "ListingsChannelName",
    "RunTimeTicks" : 6,
    "AlbumPrimaryImageTag" : "AlbumPrimaryImageTag",
    "Video3DFormat" : "HalfSideBySide",
    "CanDelete" : true,
    "PlaylistItemId" : "PlaylistItemId",
    "SortParentIndexNumber" : 6,
    "DisplayPreferencesId" : "DisplayPreferencesId",
    "Album" : "Album",
    "Latitude" : 4.678947989005849,
    "Guid" : "Guid",
    "SortName" : "SortName",
    "Name" : "Name",
    "StartDate" : "2000-01-23T04:56:07.000+00:00",
    "Container" : "Container",
    "ProductionYear" : 6,
    "SeriesName" : "SeriesName",
    "AsSeries" : true,
    "AlbumId" : "AlbumId",
    "SupportsSync" : true,
    "LocalTrailerCount" : 3,
    "IndexNumber" : 6,
    "CompletionPercentage" : 9.702963800023566,
    "Genres" : [ "Genres", "Genres" ],
    "SeasonId" : "SeasonId",
    "LockedFields" : [ "Cast", "Cast" ],
    "Disabled" : true,
    "ProviderIds" : {
      "key" : "ProviderIds"
    },
    "RemoteTrailers" : [ {
      "Url" : "Url",
      "Name" : "Name"
    }, {
      "Url" : "Url",
      "Name" : "Name"
    } ],
    "PresentationUniqueKey" : "PresentationUniqueKey",
    "CustomRating" : "CustomRating",
    "ListingsChannelNumber" : "ListingsChannelNumber",
    "CanManageAccess" : true,
    "AirDays" : [ "Sunday", "Sunday" ],
    "ParentLogoItemId" : "ParentLogoItemId",
    "PartCount" : 3,
    "ListingsProviderId" : "ListingsProviderId",
    "ChannelName" : "ChannelName",
    "EpisodeTitle" : "EpisodeTitle",
    "IsoSpeedRating" : 0,
    "CommunityRating" : 3.5571952,
    "Software" : "Software",
    "Chapters" : [ {
      "StartPositionTicks" : 7,
      "ImageTag" : "ImageTag",
      "MarkerType" : "Chapter",
      "ChapterIndex" : 5,
      "Name" : "Name"
    }, {
      "StartPositionTicks" : 7,
      "ImageTag" : "ImageTag",
      "MarkerType" : "Chapter",
      "ChapterIndex" : 5,
      "Name" : "Name"
    } ],
    "SongCount" : 4,
    "Taglines" : [ "Taglines", "Taglines" ],
    "PreferredMetadataCountryCode" : "PreferredMetadataCountryCode",
    "CameraModel" : "CameraModel",
    "ChannelNumber" : "ChannelNumber",
    "UserData" : {
      "UnplayedItemCount" : 7,
      "Played" : true,
      "ServerId" : "ServerId",
      "PlayedPercentage" : 0.8851374739011653,
      "Rating" : 7.143538047012306,
      "PlayCount" : 0,
      "PlaybackPositionTicks" : 6,
      "LastPlayedDate" : "2000-01-23T04:56:07.000+00:00",
      "IsFavorite" : true,
      "ItemId" : "ItemId",
      "Key" : "Key"
    },
    "TimerId" : "TimerId",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "ParentThumbImageTag" : "ParentThumbImageTag",
    "IsSports" : true,
    "ChannelId" : "ChannelId",
    "ParentIndexNumber" : 6,
    "IsNew" : true,
    "AffiliateCallSign" : "AffiliateCallSign",
    "ListingsId" : "ListingsId",
    "AlbumArtists" : [ null, null ],
    "ServerId" : "ServerId",
    "Number" : "Number",
    "AlbumCount" : 5,
    "IsRepeat" : true,
    "CollectionType" : "CollectionType",
    "PrimaryImageAspectRatio" : 3.0205796992916243,
    "Height" : 4,
    "IsKids" : true,
    "DisplayOrder" : "DisplayOrder",
    "MovieCount" : 0,
    "People" : [ {
      "Role" : "Role",
      "Type" : "Actor",
      "PrimaryImageTag" : "PrimaryImageTag",
      "Id" : "Id",
      "Name" : "Name"
    }, {
      "Role" : "Role",
      "Type" : "Actor",
      "PrimaryImageTag" : "PrimaryImageTag",
      "Id" : "Id",
      "Name" : "Name"
    } ],
    "Overview" : "Overview",
    "SpecialFeatureCount" : 7,
    "ImageOrientation" : "TopLeft",
    "AlbumArtist" : "AlbumArtist",
    "ImageTags" : {
      "key" : "ImageTags"
    },
    "OriginalTitle" : "OriginalTitle",
    "ForcedSortName" : "ForcedSortName",
    "SupportsResume" : true,
    "LocationType" : "FileSystem",
    "IsPremiere" : true,
    "Altitude" : 9.132027271330688
  },
  "TranscodingInfo" : {
    "IsAudioDirect" : true,
    "ProcessStatistics" : {
      "Metrics" : [ {
        "Time" : {
          "TotalMilliseconds" : 7.143538047012306,
          "TotalMinutes" : 0.8851374739011653,
          "Hours" : 6,
          "Ticks" : 1,
          "TotalSeconds" : 7.058770351582356,
          "Days" : 2,
          "TotalDays" : 3.353193347011243,
          "Seconds" : 6,
          "TotalHours" : 3.0937452626664474,
          "Milliseconds" : 6,
          "Minutes" : 5
        },
        "WorkingSet" : 4.652396432933246,
        "VirtualMemory" : 0.10263654006109402,
        "CpuPercent" : 6.519180951018382
      }, {
        "Time" : {
          "TotalMilliseconds" : 7.143538047012306,
          "TotalMinutes" : 0.8851374739011653,
          "Hours" : 6,
          "Ticks" : 1,
          "TotalSeconds" : 7.058770351582356,
          "Days" : 2,
          "TotalDays" : 3.353193347011243,
          "Seconds" : 6,
          "TotalHours" : 3.0937452626664474,
          "Milliseconds" : 6,
          "Minutes" : 5
        },
        "WorkingSet" : 4.652396432933246,
        "VirtualMemory" : 0.10263654006109402,
        "CpuPercent" : 6.519180951018382
      } ],
      "AverageCpu" : 6.438423552598547,
      "CurrentCpu" : 9.018348186070783,
      "CurrentWorkingSet" : 6.965117697638846,
      "CurrentVirtualMemory" : 3.5571952270680973
    },
    "TranscodeReasons" : [ "ContainerNotSupported", "ContainerNotSupported" ],
    "VideoEncoderHwAccel" : "VideoEncoderHwAccel",
    "Framerate" : 1.0246457,
    "Container" : "Container",
    "TranscodingStartPositionTicks" : 7.457744773683766,
    "IsVideoDirect" : true,
    "AverageCpuUsage" : 9.369310271410669,
    "VideoDecoderIsHardware" : true,
    "VideoDecoderMediaType" : "VideoDecoderMediaType",
    "SubProtocol" : "SubProtocol",
    "CompletionPercentage" : 1.4894159098541704,
    "Height" : 4,
    "VideoPipelineInfo" : [ {
      "StepType" : "Decoder",
      "FfmpegDescription" : "FfmpegDescription",
      "Param" : "Param",
      "ParamShort" : "ParamShort",
      "StepTypeName" : "StepTypeName",
      "IsHardwareContext" : true,
      "FfmpegOptions" : "FfmpegOptions",
      "FfmpegName" : "FfmpegName",
      "Short" : "Short",
      "HardwareContextName" : "HardwareContextName",
      "Name" : "Name"
    }, {
      "StepType" : "Decoder",
      "FfmpegDescription" : "FfmpegDescription",
      "Param" : "Param",
      "ParamShort" : "ParamShort",
      "StepTypeName" : "StepTypeName",
      "IsHardwareContext" : true,
      "FfmpegOptions" : "FfmpegOptions",
      "FfmpegName" : "FfmpegName",
      "Short" : "Short",
      "HardwareContextName" : "HardwareContextName",
      "Name" : "Name"
    } ],
    "VideoDecoder" : "VideoDecoder",
    "Width" : 1,
    "AudioCodec" : "AudioCodec",
    "VideoEncoderIsHardware" : true,
    "SubtitlePipelineInfos" : [ [ null, null ], [ null, null ] ],
    "CpuHistory" : [ {
      "Item1" : 6.683562403749608,
      "Item2" : 8.762042012749001
    }, {
      "Item1" : 6.683562403749608,
      "Item2" : 8.762042012749001
    } ],
    "CurrentThrottle" : 8,
    "VideoCodec" : "VideoCodec",
    "Bitrate" : 4,
    "VideoDecoderHwAccel" : "VideoDecoderHwAccel",
    "TranscodingPositionTicks" : 6.84685269835264,
    "CurrentCpuUsage" : 9.965781217890562,
    "AudioBitrate" : 7,
    "AudioChannels" : 5,
    "VideoEncoderMediaType" : "VideoEncoderMediaType",
    "VideoEncoder" : "VideoEncoder",
    "VideoBitrate" : 1
  },
  "AppIconUrl" : "AppIconUrl",
  "UserId" : "UserId",
  "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
  "Id" : "Id",
  "AdditionalUsers" : [ {
    "UserName" : "UserName",
    "UserId" : "UserId",
    "UserInternalId" : 7
  }, {
    "UserName" : "UserName",
    "UserId" : "UserId",
    "UserInternalId" : 7
  } ],
  "PlayState" : {
    "RepeatMode" : "RepeatNone",
    "CanSeek" : true,
    "PlayMethod" : "Transcode",
    "SubtitleOffset" : 5,
    "PositionTicks" : 0,
    "AudioStreamIndex" : 1,
    "IsMuted" : true,
    "VolumeLevel" : 6,
    "MediaSourceId" : "MediaSourceId",
    "IsPaused" : true,
    "SubtitleStreamIndex" : 5,
    "PlaybackRate" : 2.3021358869347655
  },
  "DeviceName" : "DeviceName"
} ]}]
     - parameter controllableByUserId: (query) Optional. Filter by sessions that a given user is allowed to remote control. (optional)
     - parameter deviceId: (query) Optional. Filter by device id. (optional)
     - parameter _id: (query) Optional. Filter by session id. (optional)

     - returns: RequestBuilder<[SessionSessionInfo]> 
     */
    open class func getSessionsWithRequestBuilder(controllableByUserId: String? = nil, deviceId: String? = nil, _id: String? = nil) -> RequestBuilder<[SessionSessionInfo]> {
        let path = "/Sessions"
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "ControllableByUserId": controllableByUserId, 
                        "DeviceId": deviceId, 
                        "Id": _id
        ])


        let requestBuilder: RequestBuilder<[SessionSessionInfo]>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets a the current play queue from a session

     - parameter _id: (query) Optional. Filter by session id. (optional)
     - parameter deviceId: (query) Optional. Filter by device id. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSessionsPlayqueue(_id: String? = nil, deviceId: String? = nil, completion: @escaping ((_ data: QueryResultBaseItemDto?,_ error: Error?) -> Void)) {
        getSessionsPlayqueueWithRequestBuilder(_id: _id, deviceId: deviceId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a the current play queue from a session
     - GET /Sessions/PlayQueue

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "TotalRecordCount" : 8,
  "Items" : [ {
    "SeasonName" : "SeasonName",
    "PremiereDate" : "2000-01-23T04:56:07.000+00:00",
    "Size" : 1,
    "CriticRating" : 9.018348,
    "GameSystemId" : 6,
    "Studios" : [ {
      "Id" : 3,
      "Name" : "Name"
    }, {
      "Id" : 3,
      "Name" : "Name"
    } ],
    "CameraMake" : "CameraMake",
    "Aperture" : 4.258773108174356,
    "ChannelPrimaryImageTag" : "ChannelPrimaryImageTag",
    "ExtraType" : "ExtraType",
    "ParentBackdropItemId" : "ParentBackdropItemId",
    "Etag" : "Etag",
    "ParentLogoImageTag" : "ParentLogoImageTag",
    "ExposureTime" : 0.2025324113236393,
    "MediaType" : "MediaType",
    "ManagementId" : "ManagementId",
    "Tags" : [ "Tags", "Tags" ],
    "Status" : "Status",
    "IndexNumberEnd" : 5,
    "ArtistItems" : [ {
      "Id" : "Id",
      "Name" : "Name"
    }, {
      "Id" : "Id",
      "Name" : "Name"
    } ],
    "MediaSources" : [ {
      "EncoderPath" : "EncoderPath",
      "RequiredHttpHeaders" : {
        "key" : "RequiredHttpHeaders"
      },
      "RunTimeTicks" : 5,
      "MediaStreams" : [ {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      }, {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      } ],
      "Size" : 1,
      "BufferMs" : 2,
      "ContainerStartTimeTicks" : 5,
      "SortName" : "SortName",
      "Timestamp" : "None",
      "ItemId" : "ItemId",
      "Name" : "Name",
      "RequiresOpening" : true,
      "DirectStreamUrl" : "DirectStreamUrl",
      "SupportsDirectStream" : true,
      "RequiresClosing" : true,
      "Container" : "Container",
      "ServerId" : "ServerId",
      "LiveStreamId" : "LiveStreamId",
      "RequiresLooping" : true,
      "Protocol" : "File",
      "DefaultSubtitleStreamIndex" : 8,
      "IsInfiniteStream" : true,
      "Path" : "Path",
      "IsRemote" : true,
      "SupportsDirectPlay" : true,
      "TranscodingSubProtocol" : "TranscodingSubProtocol",
      "Formats" : [ "Formats", "Formats" ],
      "AnalyzeDurationMs" : 9,
      "Bitrate" : 9,
      "OpenToken" : "OpenToken",
      "SupportsProbing" : true,
      "Type" : "Default",
      "ReadAtNativeFramerate" : true,
      "TranscodingContainer" : "TranscodingContainer",
      "TranscodingUrl" : "TranscodingUrl",
      "Id" : "Id",
      "SupportsTranscoding" : true,
      "DefaultAudioStreamIndex" : 6
    }, {
      "EncoderPath" : "EncoderPath",
      "RequiredHttpHeaders" : {
        "key" : "RequiredHttpHeaders"
      },
      "RunTimeTicks" : 5,
      "MediaStreams" : [ {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      }, {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      } ],
      "Size" : 1,
      "BufferMs" : 2,
      "ContainerStartTimeTicks" : 5,
      "SortName" : "SortName",
      "Timestamp" : "None",
      "ItemId" : "ItemId",
      "Name" : "Name",
      "RequiresOpening" : true,
      "DirectStreamUrl" : "DirectStreamUrl",
      "SupportsDirectStream" : true,
      "RequiresClosing" : true,
      "Container" : "Container",
      "ServerId" : "ServerId",
      "LiveStreamId" : "LiveStreamId",
      "RequiresLooping" : true,
      "Protocol" : "File",
      "DefaultSubtitleStreamIndex" : 8,
      "IsInfiniteStream" : true,
      "Path" : "Path",
      "IsRemote" : true,
      "SupportsDirectPlay" : true,
      "TranscodingSubProtocol" : "TranscodingSubProtocol",
      "Formats" : [ "Formats", "Formats" ],
      "AnalyzeDurationMs" : 9,
      "Bitrate" : 9,
      "OpenToken" : "OpenToken",
      "SupportsProbing" : true,
      "Type" : "Default",
      "ReadAtNativeFramerate" : true,
      "TranscodingContainer" : "TranscodingContainer",
      "TranscodingUrl" : "TranscodingUrl",
      "Id" : "Id",
      "SupportsTranscoding" : true,
      "DefaultAudioStreamIndex" : 6
    } ],
    "GenreItems" : [ null, null ],
    "OfficialRating" : "OfficialRating",
    "Longitude" : 7.260521264802104,
    "Composers" : [ null, null ],
    "LockData" : true,
    "FocalLength" : 6.628464275087742,
    "IsNews" : true,
    "ShutterSpeed" : 1.041444916118296,
    "Id" : "Id",
    "SortIndexNumber" : 0,
    "IsFolder" : true,
    "CanMakePublic" : true,
    "SeriesTimerId" : "SeriesTimerId",
    "SeriesId" : "SeriesId",
    "ListingsPath" : "ListingsPath",
    "MediaStreams" : [ null, null ],
    "FileName" : "FileName",
    "PrimaryImageTag" : "PrimaryImageTag",
    "Prefix" : "Prefix",
    "CanDownload" : true,
    "IsMovie" : true,
    "SeriesCount" : 7,
    "PrimaryImageItemId" : "PrimaryImageItemId",
    "ListingsChannelId" : "ListingsChannelId",
    "SeriesStudio" : "SeriesStudio",
    "IsLive" : true,
    "Width" : 3,
    "ExternalUrls" : [ {
      "Url" : "Url",
      "Name" : "Name"
    }, {
      "Url" : "Url",
      "Name" : "Name"
    } ],
    "RecursiveItemCount" : 4,
    "Path" : "Path",
    "ParentId" : "ParentId",
    "TimerType" : "Program",
    "GameSystem" : "GameSystem",
    "MusicVideoCount" : 6,
    "IsSeries" : true,
    "CanMakePrivate" : true,
    "ProductionLocations" : [ "ProductionLocations", "ProductionLocations" ],
    "Subviews" : [ "Subviews", "Subviews" ],
    "Bitrate" : 2,
    "EndDate" : "2000-01-23T04:56:07.000+00:00",
    "SeriesPrimaryImageTag" : "SeriesPrimaryImageTag",
    "ParentThumbItemId" : "ParentThumbItemId",
    "PreferredMetadataLanguage" : "PreferredMetadataLanguage",
    "Type" : "Type",
    "BackdropImageTags" : [ "BackdropImageTags", "BackdropImageTags" ],
    "ParentBackdropImageTags" : [ "ParentBackdropImageTags", "ParentBackdropImageTags" ],
    "ChildCount" : 8,
    "TagItems" : [ null, null ],
    "Artists" : [ "Artists", "Artists" ],
    "ListingsChannelName" : "ListingsChannelName",
    "RunTimeTicks" : 6,
    "AlbumPrimaryImageTag" : "AlbumPrimaryImageTag",
    "Video3DFormat" : "HalfSideBySide",
    "CanDelete" : true,
    "PlaylistItemId" : "PlaylistItemId",
    "SortParentIndexNumber" : 6,
    "DisplayPreferencesId" : "DisplayPreferencesId",
    "Album" : "Album",
    "Latitude" : 4.678947989005849,
    "Guid" : "Guid",
    "SortName" : "SortName",
    "Name" : "Name",
    "StartDate" : "2000-01-23T04:56:07.000+00:00",
    "Container" : "Container",
    "ProductionYear" : 6,
    "SeriesName" : "SeriesName",
    "AsSeries" : true,
    "AlbumId" : "AlbumId",
    "SupportsSync" : true,
    "LocalTrailerCount" : 3,
    "IndexNumber" : 6,
    "CompletionPercentage" : 9.702963800023566,
    "Genres" : [ "Genres", "Genres" ],
    "SeasonId" : "SeasonId",
    "LockedFields" : [ "Cast", "Cast" ],
    "Disabled" : true,
    "ProviderIds" : {
      "key" : "ProviderIds"
    },
    "RemoteTrailers" : [ {
      "Url" : "Url",
      "Name" : "Name"
    }, {
      "Url" : "Url",
      "Name" : "Name"
    } ],
    "PresentationUniqueKey" : "PresentationUniqueKey",
    "CustomRating" : "CustomRating",
    "ListingsChannelNumber" : "ListingsChannelNumber",
    "CanManageAccess" : true,
    "AirDays" : [ "Sunday", "Sunday" ],
    "ParentLogoItemId" : "ParentLogoItemId",
    "PartCount" : 3,
    "ListingsProviderId" : "ListingsProviderId",
    "ChannelName" : "ChannelName",
    "EpisodeTitle" : "EpisodeTitle",
    "IsoSpeedRating" : 0,
    "CommunityRating" : 3.5571952,
    "Software" : "Software",
    "Chapters" : [ {
      "StartPositionTicks" : 7,
      "ImageTag" : "ImageTag",
      "MarkerType" : "Chapter",
      "ChapterIndex" : 5,
      "Name" : "Name"
    }, {
      "StartPositionTicks" : 7,
      "ImageTag" : "ImageTag",
      "MarkerType" : "Chapter",
      "ChapterIndex" : 5,
      "Name" : "Name"
    } ],
    "SongCount" : 4,
    "Taglines" : [ "Taglines", "Taglines" ],
    "PreferredMetadataCountryCode" : "PreferredMetadataCountryCode",
    "CameraModel" : "CameraModel",
    "ChannelNumber" : "ChannelNumber",
    "UserData" : {
      "UnplayedItemCount" : 7,
      "Played" : true,
      "ServerId" : "ServerId",
      "PlayedPercentage" : 0.8851374739011653,
      "Rating" : 7.143538047012306,
      "PlayCount" : 0,
      "PlaybackPositionTicks" : 6,
      "LastPlayedDate" : "2000-01-23T04:56:07.000+00:00",
      "IsFavorite" : true,
      "ItemId" : "ItemId",
      "Key" : "Key"
    },
    "TimerId" : "TimerId",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "ParentThumbImageTag" : "ParentThumbImageTag",
    "IsSports" : true,
    "ChannelId" : "ChannelId",
    "ParentIndexNumber" : 6,
    "IsNew" : true,
    "AffiliateCallSign" : "AffiliateCallSign",
    "ListingsId" : "ListingsId",
    "AlbumArtists" : [ null, null ],
    "ServerId" : "ServerId",
    "Number" : "Number",
    "AlbumCount" : 5,
    "IsRepeat" : true,
    "CollectionType" : "CollectionType",
    "PrimaryImageAspectRatio" : 3.0205796992916243,
    "Height" : 4,
    "IsKids" : true,
    "DisplayOrder" : "DisplayOrder",
    "MovieCount" : 0,
    "People" : [ {
      "Role" : "Role",
      "Type" : "Actor",
      "PrimaryImageTag" : "PrimaryImageTag",
      "Id" : "Id",
      "Name" : "Name"
    }, {
      "Role" : "Role",
      "Type" : "Actor",
      "PrimaryImageTag" : "PrimaryImageTag",
      "Id" : "Id",
      "Name" : "Name"
    } ],
    "Overview" : "Overview",
    "SpecialFeatureCount" : 7,
    "ImageOrientation" : "TopLeft",
    "AlbumArtist" : "AlbumArtist",
    "ImageTags" : {
      "key" : "ImageTags"
    },
    "OriginalTitle" : "OriginalTitle",
    "ForcedSortName" : "ForcedSortName",
    "SupportsResume" : true,
    "LocationType" : "FileSystem",
    "IsPremiere" : true,
    "Altitude" : 9.132027271330688
  }, {
    "SeasonName" : "SeasonName",
    "PremiereDate" : "2000-01-23T04:56:07.000+00:00",
    "Size" : 1,
    "CriticRating" : 9.018348,
    "GameSystemId" : 6,
    "Studios" : [ {
      "Id" : 3,
      "Name" : "Name"
    }, {
      "Id" : 3,
      "Name" : "Name"
    } ],
    "CameraMake" : "CameraMake",
    "Aperture" : 4.258773108174356,
    "ChannelPrimaryImageTag" : "ChannelPrimaryImageTag",
    "ExtraType" : "ExtraType",
    "ParentBackdropItemId" : "ParentBackdropItemId",
    "Etag" : "Etag",
    "ParentLogoImageTag" : "ParentLogoImageTag",
    "ExposureTime" : 0.2025324113236393,
    "MediaType" : "MediaType",
    "ManagementId" : "ManagementId",
    "Tags" : [ "Tags", "Tags" ],
    "Status" : "Status",
    "IndexNumberEnd" : 5,
    "ArtistItems" : [ {
      "Id" : "Id",
      "Name" : "Name"
    }, {
      "Id" : "Id",
      "Name" : "Name"
    } ],
    "MediaSources" : [ {
      "EncoderPath" : "EncoderPath",
      "RequiredHttpHeaders" : {
        "key" : "RequiredHttpHeaders"
      },
      "RunTimeTicks" : 5,
      "MediaStreams" : [ {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      }, {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      } ],
      "Size" : 1,
      "BufferMs" : 2,
      "ContainerStartTimeTicks" : 5,
      "SortName" : "SortName",
      "Timestamp" : "None",
      "ItemId" : "ItemId",
      "Name" : "Name",
      "RequiresOpening" : true,
      "DirectStreamUrl" : "DirectStreamUrl",
      "SupportsDirectStream" : true,
      "RequiresClosing" : true,
      "Container" : "Container",
      "ServerId" : "ServerId",
      "LiveStreamId" : "LiveStreamId",
      "RequiresLooping" : true,
      "Protocol" : "File",
      "DefaultSubtitleStreamIndex" : 8,
      "IsInfiniteStream" : true,
      "Path" : "Path",
      "IsRemote" : true,
      "SupportsDirectPlay" : true,
      "TranscodingSubProtocol" : "TranscodingSubProtocol",
      "Formats" : [ "Formats", "Formats" ],
      "AnalyzeDurationMs" : 9,
      "Bitrate" : 9,
      "OpenToken" : "OpenToken",
      "SupportsProbing" : true,
      "Type" : "Default",
      "ReadAtNativeFramerate" : true,
      "TranscodingContainer" : "TranscodingContainer",
      "TranscodingUrl" : "TranscodingUrl",
      "Id" : "Id",
      "SupportsTranscoding" : true,
      "DefaultAudioStreamIndex" : 6
    }, {
      "EncoderPath" : "EncoderPath",
      "RequiredHttpHeaders" : {
        "key" : "RequiredHttpHeaders"
      },
      "RunTimeTicks" : 5,
      "MediaStreams" : [ {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      }, {
        "VideoRange" : "VideoRange",
        "ColorSpace" : "ColorSpace",
        "Index" : 1,
        "BitDepth" : 3,
        "ItemId" : "ItemId",
        "SupportsExternalStream" : true,
        "Codec" : "Codec",
        "SampleRate" : 1,
        "IsAnamorphic" : true,
        "PixelFormat" : "PixelFormat",
        "AttachmentSize" : 5,
        "SubtitleLocationType" : "InternalStream",
        "RefFrames" : 2,
        "IsAVC" : true,
        "ColorTransfer" : "ColorTransfer",
        "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
        "IsExternalUrl" : true,
        "DisplayTitle" : "DisplayTitle",
        "IsForced" : true,
        "ChannelLayout" : "ChannelLayout",
        "DisplayLanguage" : "DisplayLanguage",
        "AverageFrameRate" : 6.846853,
        "StreamStartTimeTicks" : 7,
        "IsExternal" : true,
        "Level" : 4.965218492984954,
        "ExtendedVideoSubType" : "None",
        "Channels" : 7,
        "Profile" : "Profile",
        "MimeType" : "MimeType",
        "DeliveryUrl" : "DeliveryUrl",
        "ColorPrimaries" : "ColorPrimaries",
        "ServerId" : "ServerId",
        "Language" : "Language",
        "IsTextSubtitleStream" : true,
        "NalLengthSize" : "NalLengthSize",
        "Height" : 1,
        "Width" : 1,
        "TimeBase" : "TimeBase",
        "CodecTag" : "CodecTag",
        "IsDefault" : true,
        "Path" : "Path",
        "Comment" : "Comment",
        "DeliveryMethod" : "Encode",
        "Title" : "Title",
        "ExtendedVideoType" : "None",
        "Rotation" : 4,
        "RealFrameRate" : 7.4577446,
        "IsHearingImpaired" : true,
        "AspectRatio" : "AspectRatio",
        "Type" : "Unknown",
        "IsInterlaced" : true,
        "Extradata" : "Extradata",
        "BitRate" : 9
      } ],
      "Size" : 1,
      "BufferMs" : 2,
      "ContainerStartTimeTicks" : 5,
      "SortName" : "SortName",
      "Timestamp" : "None",
      "ItemId" : "ItemId",
      "Name" : "Name",
      "RequiresOpening" : true,
      "DirectStreamUrl" : "DirectStreamUrl",
      "SupportsDirectStream" : true,
      "RequiresClosing" : true,
      "Container" : "Container",
      "ServerId" : "ServerId",
      "LiveStreamId" : "LiveStreamId",
      "RequiresLooping" : true,
      "Protocol" : "File",
      "DefaultSubtitleStreamIndex" : 8,
      "IsInfiniteStream" : true,
      "Path" : "Path",
      "IsRemote" : true,
      "SupportsDirectPlay" : true,
      "TranscodingSubProtocol" : "TranscodingSubProtocol",
      "Formats" : [ "Formats", "Formats" ],
      "AnalyzeDurationMs" : 9,
      "Bitrate" : 9,
      "OpenToken" : "OpenToken",
      "SupportsProbing" : true,
      "Type" : "Default",
      "ReadAtNativeFramerate" : true,
      "TranscodingContainer" : "TranscodingContainer",
      "TranscodingUrl" : "TranscodingUrl",
      "Id" : "Id",
      "SupportsTranscoding" : true,
      "DefaultAudioStreamIndex" : 6
    } ],
    "GenreItems" : [ null, null ],
    "OfficialRating" : "OfficialRating",
    "Longitude" : 7.260521264802104,
    "Composers" : [ null, null ],
    "LockData" : true,
    "FocalLength" : 6.628464275087742,
    "IsNews" : true,
    "ShutterSpeed" : 1.041444916118296,
    "Id" : "Id",
    "SortIndexNumber" : 0,
    "IsFolder" : true,
    "CanMakePublic" : true,
    "SeriesTimerId" : "SeriesTimerId",
    "SeriesId" : "SeriesId",
    "ListingsPath" : "ListingsPath",
    "MediaStreams" : [ null, null ],
    "FileName" : "FileName",
    "PrimaryImageTag" : "PrimaryImageTag",
    "Prefix" : "Prefix",
    "CanDownload" : true,
    "IsMovie" : true,
    "SeriesCount" : 7,
    "PrimaryImageItemId" : "PrimaryImageItemId",
    "ListingsChannelId" : "ListingsChannelId",
    "SeriesStudio" : "SeriesStudio",
    "IsLive" : true,
    "Width" : 3,
    "ExternalUrls" : [ {
      "Url" : "Url",
      "Name" : "Name"
    }, {
      "Url" : "Url",
      "Name" : "Name"
    } ],
    "RecursiveItemCount" : 4,
    "Path" : "Path",
    "ParentId" : "ParentId",
    "TimerType" : "Program",
    "GameSystem" : "GameSystem",
    "MusicVideoCount" : 6,
    "IsSeries" : true,
    "CanMakePrivate" : true,
    "ProductionLocations" : [ "ProductionLocations", "ProductionLocations" ],
    "Subviews" : [ "Subviews", "Subviews" ],
    "Bitrate" : 2,
    "EndDate" : "2000-01-23T04:56:07.000+00:00",
    "SeriesPrimaryImageTag" : "SeriesPrimaryImageTag",
    "ParentThumbItemId" : "ParentThumbItemId",
    "PreferredMetadataLanguage" : "PreferredMetadataLanguage",
    "Type" : "Type",
    "BackdropImageTags" : [ "BackdropImageTags", "BackdropImageTags" ],
    "ParentBackdropImageTags" : [ "ParentBackdropImageTags", "ParentBackdropImageTags" ],
    "ChildCount" : 8,
    "TagItems" : [ null, null ],
    "Artists" : [ "Artists", "Artists" ],
    "ListingsChannelName" : "ListingsChannelName",
    "RunTimeTicks" : 6,
    "AlbumPrimaryImageTag" : "AlbumPrimaryImageTag",
    "Video3DFormat" : "HalfSideBySide",
    "CanDelete" : true,
    "PlaylistItemId" : "PlaylistItemId",
    "SortParentIndexNumber" : 6,
    "DisplayPreferencesId" : "DisplayPreferencesId",
    "Album" : "Album",
    "Latitude" : 4.678947989005849,
    "Guid" : "Guid",
    "SortName" : "SortName",
    "Name" : "Name",
    "StartDate" : "2000-01-23T04:56:07.000+00:00",
    "Container" : "Container",
    "ProductionYear" : 6,
    "SeriesName" : "SeriesName",
    "AsSeries" : true,
    "AlbumId" : "AlbumId",
    "SupportsSync" : true,
    "LocalTrailerCount" : 3,
    "IndexNumber" : 6,
    "CompletionPercentage" : 9.702963800023566,
    "Genres" : [ "Genres", "Genres" ],
    "SeasonId" : "SeasonId",
    "LockedFields" : [ "Cast", "Cast" ],
    "Disabled" : true,
    "ProviderIds" : {
      "key" : "ProviderIds"
    },
    "RemoteTrailers" : [ {
      "Url" : "Url",
      "Name" : "Name"
    }, {
      "Url" : "Url",
      "Name" : "Name"
    } ],
    "PresentationUniqueKey" : "PresentationUniqueKey",
    "CustomRating" : "CustomRating",
    "ListingsChannelNumber" : "ListingsChannelNumber",
    "CanManageAccess" : true,
    "AirDays" : [ "Sunday", "Sunday" ],
    "ParentLogoItemId" : "ParentLogoItemId",
    "PartCount" : 3,
    "ListingsProviderId" : "ListingsProviderId",
    "ChannelName" : "ChannelName",
    "EpisodeTitle" : "EpisodeTitle",
    "IsoSpeedRating" : 0,
    "CommunityRating" : 3.5571952,
    "Software" : "Software",
    "Chapters" : [ {
      "StartPositionTicks" : 7,
      "ImageTag" : "ImageTag",
      "MarkerType" : "Chapter",
      "ChapterIndex" : 5,
      "Name" : "Name"
    }, {
      "StartPositionTicks" : 7,
      "ImageTag" : "ImageTag",
      "MarkerType" : "Chapter",
      "ChapterIndex" : 5,
      "Name" : "Name"
    } ],
    "SongCount" : 4,
    "Taglines" : [ "Taglines", "Taglines" ],
    "PreferredMetadataCountryCode" : "PreferredMetadataCountryCode",
    "CameraModel" : "CameraModel",
    "ChannelNumber" : "ChannelNumber",
    "UserData" : {
      "UnplayedItemCount" : 7,
      "Played" : true,
      "ServerId" : "ServerId",
      "PlayedPercentage" : 0.8851374739011653,
      "Rating" : 7.143538047012306,
      "PlayCount" : 0,
      "PlaybackPositionTicks" : 6,
      "LastPlayedDate" : "2000-01-23T04:56:07.000+00:00",
      "IsFavorite" : true,
      "ItemId" : "ItemId",
      "Key" : "Key"
    },
    "TimerId" : "TimerId",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "ParentThumbImageTag" : "ParentThumbImageTag",
    "IsSports" : true,
    "ChannelId" : "ChannelId",
    "ParentIndexNumber" : 6,
    "IsNew" : true,
    "AffiliateCallSign" : "AffiliateCallSign",
    "ListingsId" : "ListingsId",
    "AlbumArtists" : [ null, null ],
    "ServerId" : "ServerId",
    "Number" : "Number",
    "AlbumCount" : 5,
    "IsRepeat" : true,
    "CollectionType" : "CollectionType",
    "PrimaryImageAspectRatio" : 3.0205796992916243,
    "Height" : 4,
    "IsKids" : true,
    "DisplayOrder" : "DisplayOrder",
    "MovieCount" : 0,
    "People" : [ {
      "Role" : "Role",
      "Type" : "Actor",
      "PrimaryImageTag" : "PrimaryImageTag",
      "Id" : "Id",
      "Name" : "Name"
    }, {
      "Role" : "Role",
      "Type" : "Actor",
      "PrimaryImageTag" : "PrimaryImageTag",
      "Id" : "Id",
      "Name" : "Name"
    } ],
    "Overview" : "Overview",
    "SpecialFeatureCount" : 7,
    "ImageOrientation" : "TopLeft",
    "AlbumArtist" : "AlbumArtist",
    "ImageTags" : {
      "key" : "ImageTags"
    },
    "OriginalTitle" : "OriginalTitle",
    "ForcedSortName" : "ForcedSortName",
    "SupportsResume" : true,
    "LocationType" : "FileSystem",
    "IsPremiere" : true,
    "Altitude" : 9.132027271330688
  } ]
}}]
     - externalDocs: class ExternalDocumentation {
    description: API Documentation: Item Information
    url: https://github.com/MediaBrowser/Emby/wiki/Item-Information
}
     - parameter _id: (query) Optional. Filter by session id. (optional)
     - parameter deviceId: (query) Optional. Filter by device id. (optional)

     - returns: RequestBuilder<QueryResultBaseItemDto> 
     */
    open class func getSessionsPlayqueueWithRequestBuilder(_id: String? = nil, deviceId: String? = nil) -> RequestBuilder<QueryResultBaseItemDto> {
        let path = "/Sessions/PlayQueue"
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "Id": _id, 
                        "DeviceId": deviceId
        ])


        let requestBuilder: RequestBuilder<QueryResultBaseItemDto>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter app: (query) App 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postAuthKeys(app: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postAuthKeysWithRequestBuilder(app: app).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /Auth/Keys

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter app: (query) App 

     - returns: RequestBuilder<Void> 
     */
    open class func postAuthKeysWithRequestBuilder(app: String) -> RequestBuilder<Void> {
        let path = "/Auth/Keys"
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "App": app
        ])


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter key: (path) Auth Key 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postAuthKeysByKeyDelete(key: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postAuthKeysByKeyDeleteWithRequestBuilder(key: key).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /Auth/Keys/{Key}/Delete

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter key: (path) Auth Key 

     - returns: RequestBuilder<Void> 
     */
    open class func postAuthKeysByKeyDeleteWithRequestBuilder(key: String) -> RequestBuilder<Void> {
        var path = "/Auth/Keys/{Key}/Delete"
        let keyPreEscape = "\(key)"
        let keyPostEscape = keyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Key}", with: keyPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Issues a system command to a client

     - parameter body: (body) GeneralCommand:  
     - parameter _id: (path) Session Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsByIdCommand(body: GeneralCommand, _id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsByIdCommandWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Issues a system command to a client
     - POST /Sessions/{Id}/Command

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) GeneralCommand:  
     - parameter _id: (path) Session Id 

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsByIdCommandWithRequestBuilder(body: GeneralCommand, _id: String) -> RequestBuilder<Void> {
        var path = "/Sessions/{Id}/Command"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Issues a system command to a client

     - parameter _id: (path) Session Id 
     - parameter command: (path) The command to send. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsByIdCommandByCommand(_id: String, command: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsByIdCommandByCommandWithRequestBuilder(_id: _id, command: command).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Issues a system command to a client
     - POST /Sessions/{Id}/Command/{Command}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (path) Session Id 
     - parameter command: (path) The command to send. 

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsByIdCommandByCommandWithRequestBuilder(_id: String, command: String) -> RequestBuilder<Void> {
        var path = "/Sessions/{Id}/Command/{Command}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let commandPreEscape = "\(command)"
        let commandPostEscape = commandPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Command}", with: commandPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Issues a command to a client to display a message to the user

     - parameter _id: (path) Session Id 
     - parameter text: (query) The message text. 
     - parameter header: (query) The message header. 
     - parameter timeoutMs: (query) The message timeout. If omitted the user will have to confirm viewing the message. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsByIdMessage(_id: String, text: String, header: String, timeoutMs: Int64? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsByIdMessageWithRequestBuilder(_id: _id, text: text, header: header, timeoutMs: timeoutMs).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Issues a command to a client to display a message to the user
     - POST /Sessions/{Id}/Message

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (path) Session Id 
     - parameter text: (query) The message text. 
     - parameter header: (query) The message header. 
     - parameter timeoutMs: (query) The message timeout. If omitted the user will have to confirm viewing the message. (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsByIdMessageWithRequestBuilder(_id: String, text: String, header: String, timeoutMs: Int64? = nil) -> RequestBuilder<Void> {
        var path = "/Sessions/{Id}/Message"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "Text": text, 
                        "Header": header, 
                        "TimeoutMs": timeoutMs?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Instructs a session to play an item

     - parameter body: (body) PlayRequest:  
     - parameter itemIds: (query) The ids of the items to play, comma delimited 
     - parameter playCommand: (query) The type of play command to issue (PlayNow, PlayNext, PlayLast). Clients who have not yet implemented play next and play last may play now. 
     - parameter _id: (path) Session Id 
     - parameter startPositionTicks: (query) The starting position of the first item. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsByIdPlaying(body: PlayRequest, itemIds: [Int64], playCommand: PlayCommand, _id: String, startPositionTicks: Int64? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsByIdPlayingWithRequestBuilder(body: body, itemIds: itemIds, playCommand: playCommand, _id: _id, startPositionTicks: startPositionTicks).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Instructs a session to play an item
     - POST /Sessions/{Id}/Playing

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) PlayRequest:  
     - parameter itemIds: (query) The ids of the items to play, comma delimited 
     - parameter playCommand: (query) The type of play command to issue (PlayNow, PlayNext, PlayLast). Clients who have not yet implemented play next and play last may play now. 
     - parameter _id: (path) Session Id 
     - parameter startPositionTicks: (query) The starting position of the first item. (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsByIdPlayingWithRequestBuilder(body: PlayRequest, itemIds: [Int64], playCommand: PlayCommand, _id: String, startPositionTicks: Int64? = nil) -> RequestBuilder<Void> {
        var path = "/Sessions/{Id}/Playing"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "ItemIds": itemIds, 
                        "StartPositionTicks": startPositionTicks?.encodeToJSON(), 
                        "PlayCommand": playCommand
        ])


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Issues a playstate command to a client

     - parameter body: (body) PlaystateRequest:  
     - parameter _id: (path) Session Id 
     - parameter command: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsByIdPlayingByCommand(body: PlaystateRequest, _id: String, command: PlaystateCommand, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsByIdPlayingByCommandWithRequestBuilder(body: body, _id: _id, command: command).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Issues a playstate command to a client
     - POST /Sessions/{Id}/Playing/{Command}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) PlaystateRequest:  
     - parameter _id: (path) Session Id 
     - parameter command: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsByIdPlayingByCommandWithRequestBuilder(body: PlaystateRequest, _id: String, command: PlaystateCommand) -> RequestBuilder<Void> {
        var path = "/Sessions/{Id}/Playing/{Command}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let commandPreEscape = "\(command)"
        let commandPostEscape = commandPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Command}", with: commandPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Issues a system command to a client

     - parameter _id: (path) Session Id 
     - parameter command: (path) The command to send. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsByIdSystemByCommand(_id: String, command: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsByIdSystemByCommandWithRequestBuilder(_id: _id, command: command).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Issues a system command to a client
     - POST /Sessions/{Id}/System/{Command}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (path) Session Id 
     - parameter command: (path) The command to send. 

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsByIdSystemByCommandWithRequestBuilder(_id: String, command: String) -> RequestBuilder<Void> {
        var path = "/Sessions/{Id}/System/{Command}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let commandPreEscape = "\(command)"
        let commandPostEscape = commandPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Command}", with: commandPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Adds an additional user to a session

     - parameter _id: (path) Session Id 
     - parameter userId: (path) UserId Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsByIdUsersByUserid(_id: String, userId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsByIdUsersByUseridWithRequestBuilder(_id: _id, userId: userId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Adds an additional user to a session
     - POST /Sessions/{Id}/Users/{UserId}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (path) Session Id 
     - parameter userId: (path) UserId Id 

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsByIdUsersByUseridWithRequestBuilder(_id: String, userId: String) -> RequestBuilder<Void> {
        var path = "/Sessions/{Id}/Users/{UserId}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{UserId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Removes an additional user from a session

     - parameter _id: (path) Session Id 
     - parameter userId: (path) UserId Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsByIdUsersByUseridDelete(_id: String, userId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsByIdUsersByUseridDeleteWithRequestBuilder(_id: _id, userId: userId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Removes an additional user from a session
     - POST /Sessions/{Id}/Users/{UserId}/Delete

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (path) Session Id 
     - parameter userId: (path) UserId Id 

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsByIdUsersByUseridDeleteWithRequestBuilder(_id: String, userId: String) -> RequestBuilder<Void> {
        var path = "/Sessions/{Id}/Users/{UserId}/Delete"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{UserId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Instructs a session to browse to an item or view

     - parameter _id: (path) Session Id 
     - parameter itemType: (query) The type of item to browse to. 
     - parameter itemId: (query) The Id of the item. 
     - parameter itemName: (query) The name of the item. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsByIdViewing(_id: String, itemType: String, itemId: String, itemName: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsByIdViewingWithRequestBuilder(_id: _id, itemType: itemType, itemId: itemId, itemName: itemName).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Instructs a session to browse to an item or view
     - POST /Sessions/{Id}/Viewing

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (path) Session Id 
     - parameter itemType: (query) The type of item to browse to. 
     - parameter itemId: (query) The Id of the item. 
     - parameter itemName: (query) The name of the item. 

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsByIdViewingWithRequestBuilder(_id: String, itemType: String, itemId: String, itemName: String) -> RequestBuilder<Void> {
        var path = "/Sessions/{Id}/Viewing"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "ItemType": itemType, 
                        "ItemId": itemId, 
                        "ItemName": itemName
        ])


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Updates capabilities for a device

     - parameter _id: (query) Session Id 
     - parameter playableMediaTypes: (query) A list of playable media types, comma delimited. Audio, Video, Book, Game, Photo. (optional)
     - parameter supportedCommands: (query) A list of supported remote control commands, comma delimited (optional)
     - parameter supportsMediaControl: (query) Determines whether media can be played remotely. (optional)
     - parameter supportsSync: (query) Determines whether sync is supported. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsCapabilities(_id: String, playableMediaTypes: String? = nil, supportedCommands: String? = nil, supportsMediaControl: Bool? = nil, supportsSync: Bool? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsCapabilitiesWithRequestBuilder(_id: _id, playableMediaTypes: playableMediaTypes, supportedCommands: supportedCommands, supportsMediaControl: supportsMediaControl, supportsSync: supportsSync).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Updates capabilities for a device
     - POST /Sessions/Capabilities

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (query) Session Id 
     - parameter playableMediaTypes: (query) A list of playable media types, comma delimited. Audio, Video, Book, Game, Photo. (optional)
     - parameter supportedCommands: (query) A list of supported remote control commands, comma delimited (optional)
     - parameter supportsMediaControl: (query) Determines whether media can be played remotely. (optional)
     - parameter supportsSync: (query) Determines whether sync is supported. (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsCapabilitiesWithRequestBuilder(_id: String, playableMediaTypes: String? = nil, supportedCommands: String? = nil, supportsMediaControl: Bool? = nil, supportsSync: Bool? = nil) -> RequestBuilder<Void> {
        let path = "/Sessions/Capabilities"
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "Id": _id, 
                        "PlayableMediaTypes": playableMediaTypes, 
                        "SupportedCommands": supportedCommands, 
                        "SupportsMediaControl": supportsMediaControl, 
                        "SupportsSync": supportsSync
        ])


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Updates capabilities for a device

     - parameter body: (body) ClientCapabilities:  
     - parameter _id: (query) Session Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsCapabilitiesFull(body: ClientCapabilities, _id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsCapabilitiesFullWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Updates capabilities for a device
     - POST /Sessions/Capabilities/Full

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) ClientCapabilities:  
     - parameter _id: (query) Session Id 

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsCapabilitiesFullWithRequestBuilder(body: ClientCapabilities, _id: String) -> RequestBuilder<Void> {
        let path = "/Sessions/Capabilities/Full"
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "Id": _id
        ])


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Reports that a session has ended

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postSessionsLogout(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postSessionsLogoutWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Reports that a session has ended
     - POST /Sessions/Logout

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - externalDocs: class ExternalDocumentation {
    description: API Documentation: Authentication
    url: https://github.com/MediaBrowser/Emby/wiki/User-Authentication
}

     - returns: RequestBuilder<Void> 
     */
    open class func postSessionsLogoutWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/Sessions/Logout"
        let URLString = embyclient-rest-swift-betaAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swift-betaAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
