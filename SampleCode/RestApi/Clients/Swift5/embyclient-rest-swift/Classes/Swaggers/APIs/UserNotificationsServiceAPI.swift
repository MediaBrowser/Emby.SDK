//
// UserNotificationsServiceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class UserNotificationsServiceAPI {
    /**
     Gets default notification info

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getNotificationsServicesDefaults(completion: @escaping ((_ data: UserNotificationInfo?,_ error: Error?) -> Void)) {
        getNotificationsServicesDefaultsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets default notification info
     - GET /Notifications/Services/Defaults

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "LibraryIds" : [ "LibraryIds", "LibraryIds" ],
  "Options" : {
    "key" : "Options"
  },
  "FriendlyName" : "FriendlyName",
  "NotifierKey" : "NotifierKey",
  "SetupModuleUrl" : "SetupModuleUrl",
  "Enabled" : true,
  "PluginId" : "PluginId",
  "IsSelfNotification" : true,
  "DeviceIds" : [ "DeviceIds", "DeviceIds" ],
  "EventIds" : [ "EventIds", "EventIds" ],
  "ServiceName" : "ServiceName",
  "UserId" : "UserId",
  "Id" : "Id",
  "UserIds" : [ "UserIds", "UserIds" ]
}}]

     - returns: RequestBuilder<UserNotificationInfo> 
     */
    open class func getNotificationsServicesDefaultsWithRequestBuilder() -> RequestBuilder<UserNotificationInfo> {
        let path = "/Notifications/Services/Defaults"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<UserNotificationInfo>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Sends a test notification

     - parameter body: (body) UserNotificationInfo:  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postNotificationsServicesTest(body: UserNotificationInfo, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postNotificationsServicesTestWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Sends a test notification
     - POST /Notifications/Services/Test

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) UserNotificationInfo:  

     - returns: RequestBuilder<Void> 
     */
    open class func postNotificationsServicesTestWithRequestBuilder(body: UserNotificationInfo) -> RequestBuilder<Void> {
        let path = "/Notifications/Services/Test"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
