//
// LocalizationServiceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class LocalizationServiceAPI {
    /**
     Gets known countries

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getLocalizationCountries(completion: @escaping ((_ data: [GlobalizationCountryInfo]?,_ error: Error?) -> Void)) {
        getLocalizationCountriesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets known countries
     - GET /Localization/Countries

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "TwoLetterISORegionName" : "TwoLetterISORegionName",
  "ThreeLetterISORegionName" : "ThreeLetterISORegionName",
  "DisplayName" : "DisplayName",
  "Name" : "Name",
  "EnglishName" : "EnglishName"
}, {
  "TwoLetterISORegionName" : "TwoLetterISORegionName",
  "ThreeLetterISORegionName" : "ThreeLetterISORegionName",
  "DisplayName" : "DisplayName",
  "Name" : "Name",
  "EnglishName" : "EnglishName"
} ]}]

     - returns: RequestBuilder<[GlobalizationCountryInfo]> 
     */
    open class func getLocalizationCountriesWithRequestBuilder() -> RequestBuilder<[GlobalizationCountryInfo]> {
        let path = "/Localization/Countries"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[GlobalizationCountryInfo]>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets known cultures

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getLocalizationCultures(completion: @escaping ((_ data: [GlobalizationCultureDto]?,_ error: Error?) -> Void)) {
        getLocalizationCulturesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets known cultures
     - GET /Localization/Cultures

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "TwoLetterISOLanguageNames" : [ "TwoLetterISOLanguageNames", "TwoLetterISOLanguageNames" ],
  "ThreeLetterISOLanguageNames" : [ "ThreeLetterISOLanguageNames", "ThreeLetterISOLanguageNames" ],
  "ThreeLetterISOLanguageName" : "ThreeLetterISOLanguageName",
  "DisplayName" : "DisplayName",
  "Name" : "Name",
  "TwoLetterISOLanguageName" : "TwoLetterISOLanguageName"
}, {
  "TwoLetterISOLanguageNames" : [ "TwoLetterISOLanguageNames", "TwoLetterISOLanguageNames" ],
  "ThreeLetterISOLanguageNames" : [ "ThreeLetterISOLanguageNames", "ThreeLetterISOLanguageNames" ],
  "ThreeLetterISOLanguageName" : "ThreeLetterISOLanguageName",
  "DisplayName" : "DisplayName",
  "Name" : "Name",
  "TwoLetterISOLanguageName" : "TwoLetterISOLanguageName"
} ]}]

     - returns: RequestBuilder<[GlobalizationCultureDto]> 
     */
    open class func getLocalizationCulturesWithRequestBuilder() -> RequestBuilder<[GlobalizationCultureDto]> {
        let path = "/Localization/Cultures"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[GlobalizationCultureDto]>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets localization options

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getLocalizationOptions(completion: @escaping ((_ data: [GlobalizationLocalizatonOption]?,_ error: Error?) -> Void)) {
        getLocalizationOptionsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets localization options
     - GET /Localization/Options

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "Value" : "Value",
  "Name" : "Name"
}, {
  "Value" : "Value",
  "Name" : "Name"
} ]}]

     - returns: RequestBuilder<[GlobalizationLocalizatonOption]> 
     */
    open class func getLocalizationOptionsWithRequestBuilder() -> RequestBuilder<[GlobalizationLocalizatonOption]> {
        let path = "/Localization/Options"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[GlobalizationLocalizatonOption]>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets known parental ratings

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getLocalizationParentalratings(completion: @escaping ((_ data: [ParentalRating]?,_ error: Error?) -> Void)) {
        getLocalizationParentalratingsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets known parental ratings
     - GET /Localization/ParentalRatings

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "Value" : 0,
  "Name" : "Name"
}, {
  "Value" : 0,
  "Name" : "Name"
} ]}]

     - returns: RequestBuilder<[ParentalRating]> 
     */
    open class func getLocalizationParentalratingsWithRequestBuilder() -> RequestBuilder<[ParentalRating]> {
        let path = "/Localization/ParentalRatings"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ParentalRating]>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
