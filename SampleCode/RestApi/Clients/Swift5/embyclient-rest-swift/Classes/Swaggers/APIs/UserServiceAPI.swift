//
// UserServiceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class UserServiceAPI {
    /**
     Deletes a user

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteUsersById(_id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteUsersByIdWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Deletes a user
     - DELETE /Users/{Id}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func deleteUsersByIdWithRequestBuilder(_id: String) -> RequestBuilder<Void> {
        var path = "/Users/{Id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Clears audio or subtitle track selections for a user

     - parameter _id: (path)  
     - parameter trackType: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteUsersByIdTrackselectionsByTracktype(_id: String, trackType: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteUsersByIdTrackselectionsByTracktypeWithRequestBuilder(_id: _id, trackType: trackType).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Clears audio or subtitle track selections for a user
     - DELETE /Users/{Id}/TrackSelections/{TrackType}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (path)  
     - parameter trackType: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func deleteUsersByIdTrackselectionsByTracktypeWithRequestBuilder(_id: String, trackType: String) -> RequestBuilder<Void> {
        var path = "/Users/{Id}/TrackSelections/{TrackType}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let trackTypePreEscape = "\(trackType)"
        let trackTypePostEscape = trackTypePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{TrackType}", with: trackTypePostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets a user by Id

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsersById(_id: String, completion: @escaping ((_ data: UserDto?,_ error: Error?) -> Void)) {
        getUsersByIdWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a user by Id
     - GET /Users/{Id}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "Policy" : {
    "AllowTagOrRating" : true,
    "EnableContentDeletion" : true,
    "AllowSharingPersonalItems" : true,
    "EnableContentDeletionFromFolders" : [ "EnableContentDeletionFromFolders", "EnableContentDeletionFromFolders" ],
    "ExcludedSubFolders" : [ "ExcludedSubFolders", "ExcludedSubFolders" ],
    "EnablePlaybackRemuxing" : true,
    "EnabledFolders" : [ "EnabledFolders", "EnabledFolders" ],
    "BlockedMediaFolders" : [ "BlockedMediaFolders", "BlockedMediaFolders" ],
    "IsDisabled" : true,
    "MaxParentalRating" : 1,
    "EnablePublicSharing" : true,
    "AccessSchedules" : [ {
      "DayOfWeek" : "Sunday",
      "StartHour" : 5.962133916683182,
      "EndHour" : 5.637376656633329
    }, {
      "DayOfWeek" : "Sunday",
      "StartHour" : 5.962133916683182,
      "EndHour" : 5.637376656633329
    } ],
    "EnableContentDownloading" : true,
    "EnableSubtitleManagement" : true,
    "SimultaneousStreamLimit" : 9,
    "IncludeTags" : [ "IncludeTags", "IncludeTags" ],
    "IsAdministrator" : true,
    "EnableSubtitleDownloading" : true,
    "EnabledChannels" : [ "EnabledChannels", "EnabledChannels" ],
    "EnableAllDevices" : true,
    "EnableMediaConversion" : true,
    "InvalidLoginAttemptCount" : 2,
    "IsTagBlockingModeInclusive" : true,
    "RestrictedFeatures" : [ "RestrictedFeatures", "RestrictedFeatures" ],
    "EnableLiveTvAccess" : true,
    "EnableAllFolders" : true,
    "EnableSharedDeviceControl" : true,
    "EnableRemoteAccess" : true,
    "IsHidden" : true,
    "EnableLiveTvManagement" : true,
    "BlockUnratedItems" : [ "Movie", "Movie" ],
    "EnableMediaPlayback" : true,
    "EnableVideoPlaybackTranscoding" : true,
    "EnableAllChannels" : true,
    "EnableUserPreferenceAccess" : true,
    "AuthenticationProviderId" : "AuthenticationProviderId",
    "LockedOutDate" : 6,
    "BlockedTags" : [ "BlockedTags", "BlockedTags" ],
    "AllowCameraUpload" : true,
    "IsHiddenRemotely" : true,
    "EnabledDevices" : [ "EnabledDevices", "EnabledDevices" ],
    "EnableRemoteControlOfOtherUsers" : true,
    "EnableAudioPlaybackTranscoding" : true,
    "IsHiddenFromUnusedDevices" : true,
    "EnableSyncTranscoding" : true,
    "RemoteClientBitrateLimit" : 7
  },
  "HasConfiguredEasyPassword" : true,
  "EnableAutoLogin" : true,
  "UserItemShareLevel" : "None",
  "Configuration" : {
    "EnableNextEpisodeAutoPlay" : true,
    "SubtitleLanguagePreference" : "SubtitleLanguagePreference",
    "DisplayMissingEpisodes" : true,
    "IntroSkipMode" : "ShowButton",
    "OrderedViews" : [ "OrderedViews", "OrderedViews" ],
    "LatestItemsExcludes" : [ "LatestItemsExcludes", "LatestItemsExcludes" ],
    "SubtitleMode" : "Default",
    "ResumeRewindSeconds" : 0,
    "HidePlayedInLatest" : true,
    "ProfilePin" : "ProfilePin",
    "HidePlayedInMoreLikeThis" : true,
    "HidePlayedInSuggestions" : true,
    "RememberSubtitleSelections" : true,
    "EnableLocalPassword" : true,
    "AudioLanguagePreference" : "AudioLanguagePreference",
    "PlayDefaultAudioTrack" : true,
    "MyMediaExcludes" : [ "MyMediaExcludes", "MyMediaExcludes" ],
    "RememberAudioSelections" : true
  },
  "LastLoginDate" : "2000-01-23T04:56:07.000+00:00",
  "DateCreated" : "2000-01-23T04:56:07.000+00:00",
  "PrimaryImageTag" : "PrimaryImageTag",
  "Prefix" : "Prefix",
  "Name" : "Name",
  "ConnectUserName" : "ConnectUserName",
  "ServerId" : "ServerId",
  "HasConfiguredPassword" : true,
  "ServerName" : "ServerName",
  "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
  "PrimaryImageAspectRatio" : 3.616076749251911,
  "ConnectLinkType" : "LinkedUser",
  "Id" : "Id",
  "HasPassword" : true
}}]
     - parameter _id: (path)  

     - returns: RequestBuilder<UserDto> 
     */
    open class func getUsersByIdWithRequestBuilder(_id: String) -> RequestBuilder<UserDto> {
        var path = "/Users/{Id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<UserDto>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets a typed user setting

     - parameter key: (path) Key 
     - parameter userId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsersByUseridTypedsettingsByKey(key: String, userId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        getUsersByUseridTypedsettingsByKeyWithRequestBuilder(key: key, userId: userId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Gets a typed user setting
     - GET /Users/{UserId}/TypedSettings/{Key}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter key: (path) Key 
     - parameter userId: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func getUsersByUseridTypedsettingsByKeyWithRequestBuilder(key: String, userId: String) -> RequestBuilder<Void> {
        var path = "/Users/{UserId}/TypedSettings/{Key}"
        let keyPreEscape = "\(key)"
        let keyPostEscape = keyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Key}", with: keyPostEscape, options: .literal, range: nil)
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{UserId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets a list of users

     - parameter isHidden: (query) Optional filter by IsHidden&#x3D;true or false (optional)
     - parameter isDisabled: (query) Optional filter by IsDisabled&#x3D;true or false (optional)
     - parameter startIndex: (query) Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional)
     - parameter limit: (query) Optional. The maximum number of records to return (optional)
     - parameter nameStartsWithOrGreater: (query) Optional filter by items whose name is sorted equally or greater than a given input string. (optional)
     - parameter sortOrder: (query) Sort Order - Ascending,Descending (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsersItemaccess(isHidden: Bool? = nil, isDisabled: Bool? = nil, startIndex: Int? = nil, limit: Int? = nil, nameStartsWithOrGreater: String? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: QueryResultUserDto?,_ error: Error?) -> Void)) {
        getUsersItemaccessWithRequestBuilder(isHidden: isHidden, isDisabled: isDisabled, startIndex: startIndex, limit: limit, nameStartsWithOrGreater: nameStartsWithOrGreater, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a list of users
     - GET /Users/ItemAccess

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "TotalRecordCount" : 0,
  "Items" : [ {
    "Policy" : {
      "AllowTagOrRating" : true,
      "EnableContentDeletion" : true,
      "AllowSharingPersonalItems" : true,
      "EnableContentDeletionFromFolders" : [ "EnableContentDeletionFromFolders", "EnableContentDeletionFromFolders" ],
      "ExcludedSubFolders" : [ "ExcludedSubFolders", "ExcludedSubFolders" ],
      "EnablePlaybackRemuxing" : true,
      "EnabledFolders" : [ "EnabledFolders", "EnabledFolders" ],
      "BlockedMediaFolders" : [ "BlockedMediaFolders", "BlockedMediaFolders" ],
      "IsDisabled" : true,
      "MaxParentalRating" : 1,
      "EnablePublicSharing" : true,
      "AccessSchedules" : [ {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      }, {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      } ],
      "EnableContentDownloading" : true,
      "EnableSubtitleManagement" : true,
      "SimultaneousStreamLimit" : 9,
      "IncludeTags" : [ "IncludeTags", "IncludeTags" ],
      "IsAdministrator" : true,
      "EnableSubtitleDownloading" : true,
      "EnabledChannels" : [ "EnabledChannels", "EnabledChannels" ],
      "EnableAllDevices" : true,
      "EnableMediaConversion" : true,
      "InvalidLoginAttemptCount" : 2,
      "IsTagBlockingModeInclusive" : true,
      "RestrictedFeatures" : [ "RestrictedFeatures", "RestrictedFeatures" ],
      "EnableLiveTvAccess" : true,
      "EnableAllFolders" : true,
      "EnableSharedDeviceControl" : true,
      "EnableRemoteAccess" : true,
      "IsHidden" : true,
      "EnableLiveTvManagement" : true,
      "BlockUnratedItems" : [ "Movie", "Movie" ],
      "EnableMediaPlayback" : true,
      "EnableVideoPlaybackTranscoding" : true,
      "EnableAllChannels" : true,
      "EnableUserPreferenceAccess" : true,
      "AuthenticationProviderId" : "AuthenticationProviderId",
      "LockedOutDate" : 6,
      "BlockedTags" : [ "BlockedTags", "BlockedTags" ],
      "AllowCameraUpload" : true,
      "IsHiddenRemotely" : true,
      "EnabledDevices" : [ "EnabledDevices", "EnabledDevices" ],
      "EnableRemoteControlOfOtherUsers" : true,
      "EnableAudioPlaybackTranscoding" : true,
      "IsHiddenFromUnusedDevices" : true,
      "EnableSyncTranscoding" : true,
      "RemoteClientBitrateLimit" : 7
    },
    "HasConfiguredEasyPassword" : true,
    "EnableAutoLogin" : true,
    "UserItemShareLevel" : "None",
    "Configuration" : {
      "EnableNextEpisodeAutoPlay" : true,
      "SubtitleLanguagePreference" : "SubtitleLanguagePreference",
      "DisplayMissingEpisodes" : true,
      "IntroSkipMode" : "ShowButton",
      "OrderedViews" : [ "OrderedViews", "OrderedViews" ],
      "LatestItemsExcludes" : [ "LatestItemsExcludes", "LatestItemsExcludes" ],
      "SubtitleMode" : "Default",
      "ResumeRewindSeconds" : 0,
      "HidePlayedInLatest" : true,
      "ProfilePin" : "ProfilePin",
      "HidePlayedInMoreLikeThis" : true,
      "HidePlayedInSuggestions" : true,
      "RememberSubtitleSelections" : true,
      "EnableLocalPassword" : true,
      "AudioLanguagePreference" : "AudioLanguagePreference",
      "PlayDefaultAudioTrack" : true,
      "MyMediaExcludes" : [ "MyMediaExcludes", "MyMediaExcludes" ],
      "RememberAudioSelections" : true
    },
    "LastLoginDate" : "2000-01-23T04:56:07.000+00:00",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageTag" : "PrimaryImageTag",
    "Prefix" : "Prefix",
    "Name" : "Name",
    "ConnectUserName" : "ConnectUserName",
    "ServerId" : "ServerId",
    "HasConfiguredPassword" : true,
    "ServerName" : "ServerName",
    "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageAspectRatio" : 3.616076749251911,
    "ConnectLinkType" : "LinkedUser",
    "Id" : "Id",
    "HasPassword" : true
  }, {
    "Policy" : {
      "AllowTagOrRating" : true,
      "EnableContentDeletion" : true,
      "AllowSharingPersonalItems" : true,
      "EnableContentDeletionFromFolders" : [ "EnableContentDeletionFromFolders", "EnableContentDeletionFromFolders" ],
      "ExcludedSubFolders" : [ "ExcludedSubFolders", "ExcludedSubFolders" ],
      "EnablePlaybackRemuxing" : true,
      "EnabledFolders" : [ "EnabledFolders", "EnabledFolders" ],
      "BlockedMediaFolders" : [ "BlockedMediaFolders", "BlockedMediaFolders" ],
      "IsDisabled" : true,
      "MaxParentalRating" : 1,
      "EnablePublicSharing" : true,
      "AccessSchedules" : [ {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      }, {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      } ],
      "EnableContentDownloading" : true,
      "EnableSubtitleManagement" : true,
      "SimultaneousStreamLimit" : 9,
      "IncludeTags" : [ "IncludeTags", "IncludeTags" ],
      "IsAdministrator" : true,
      "EnableSubtitleDownloading" : true,
      "EnabledChannels" : [ "EnabledChannels", "EnabledChannels" ],
      "EnableAllDevices" : true,
      "EnableMediaConversion" : true,
      "InvalidLoginAttemptCount" : 2,
      "IsTagBlockingModeInclusive" : true,
      "RestrictedFeatures" : [ "RestrictedFeatures", "RestrictedFeatures" ],
      "EnableLiveTvAccess" : true,
      "EnableAllFolders" : true,
      "EnableSharedDeviceControl" : true,
      "EnableRemoteAccess" : true,
      "IsHidden" : true,
      "EnableLiveTvManagement" : true,
      "BlockUnratedItems" : [ "Movie", "Movie" ],
      "EnableMediaPlayback" : true,
      "EnableVideoPlaybackTranscoding" : true,
      "EnableAllChannels" : true,
      "EnableUserPreferenceAccess" : true,
      "AuthenticationProviderId" : "AuthenticationProviderId",
      "LockedOutDate" : 6,
      "BlockedTags" : [ "BlockedTags", "BlockedTags" ],
      "AllowCameraUpload" : true,
      "IsHiddenRemotely" : true,
      "EnabledDevices" : [ "EnabledDevices", "EnabledDevices" ],
      "EnableRemoteControlOfOtherUsers" : true,
      "EnableAudioPlaybackTranscoding" : true,
      "IsHiddenFromUnusedDevices" : true,
      "EnableSyncTranscoding" : true,
      "RemoteClientBitrateLimit" : 7
    },
    "HasConfiguredEasyPassword" : true,
    "EnableAutoLogin" : true,
    "UserItemShareLevel" : "None",
    "Configuration" : {
      "EnableNextEpisodeAutoPlay" : true,
      "SubtitleLanguagePreference" : "SubtitleLanguagePreference",
      "DisplayMissingEpisodes" : true,
      "IntroSkipMode" : "ShowButton",
      "OrderedViews" : [ "OrderedViews", "OrderedViews" ],
      "LatestItemsExcludes" : [ "LatestItemsExcludes", "LatestItemsExcludes" ],
      "SubtitleMode" : "Default",
      "ResumeRewindSeconds" : 0,
      "HidePlayedInLatest" : true,
      "ProfilePin" : "ProfilePin",
      "HidePlayedInMoreLikeThis" : true,
      "HidePlayedInSuggestions" : true,
      "RememberSubtitleSelections" : true,
      "EnableLocalPassword" : true,
      "AudioLanguagePreference" : "AudioLanguagePreference",
      "PlayDefaultAudioTrack" : true,
      "MyMediaExcludes" : [ "MyMediaExcludes", "MyMediaExcludes" ],
      "RememberAudioSelections" : true
    },
    "LastLoginDate" : "2000-01-23T04:56:07.000+00:00",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageTag" : "PrimaryImageTag",
    "Prefix" : "Prefix",
    "Name" : "Name",
    "ConnectUserName" : "ConnectUserName",
    "ServerId" : "ServerId",
    "HasConfiguredPassword" : true,
    "ServerName" : "ServerName",
    "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageAspectRatio" : 3.616076749251911,
    "ConnectLinkType" : "LinkedUser",
    "Id" : "Id",
    "HasPassword" : true
  } ]
}}]
     - parameter isHidden: (query) Optional filter by IsHidden&#x3D;true or false (optional)
     - parameter isDisabled: (query) Optional filter by IsDisabled&#x3D;true or false (optional)
     - parameter startIndex: (query) Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional)
     - parameter limit: (query) Optional. The maximum number of records to return (optional)
     - parameter nameStartsWithOrGreater: (query) Optional filter by items whose name is sorted equally or greater than a given input string. (optional)
     - parameter sortOrder: (query) Sort Order - Ascending,Descending (optional)

     - returns: RequestBuilder<QueryResultUserDto> 
     */
    open class func getUsersItemaccessWithRequestBuilder(isHidden: Bool? = nil, isDisabled: Bool? = nil, startIndex: Int? = nil, limit: Int? = nil, nameStartsWithOrGreater: String? = nil, sortOrder: String? = nil) -> RequestBuilder<QueryResultUserDto> {
        let path = "/Users/ItemAccess"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "IsHidden": isHidden, 
                        "IsDisabled": isDisabled, 
                        "StartIndex": startIndex?.encodeToJSON(), 
                        "Limit": limit?.encodeToJSON(), 
                        "NameStartsWithOrGreater": nameStartsWithOrGreater, 
                        "SortOrder": sortOrder
        ])


        let requestBuilder: RequestBuilder<QueryResultUserDto>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets a list of users

     - parameter isHidden: (query) Optional filter by IsHidden&#x3D;true or false (optional)
     - parameter isDisabled: (query) Optional filter by IsDisabled&#x3D;true or false (optional)
     - parameter startIndex: (query) Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional)
     - parameter limit: (query) Optional. The maximum number of records to return (optional)
     - parameter nameStartsWithOrGreater: (query) Optional filter by items whose name is sorted equally or greater than a given input string. (optional)
     - parameter sortOrder: (query) Sort Order - Ascending,Descending (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsersPrefixes(isHidden: Bool? = nil, isDisabled: Bool? = nil, startIndex: Int? = nil, limit: Int? = nil, nameStartsWithOrGreater: String? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: [NameIdPair]?,_ error: Error?) -> Void)) {
        getUsersPrefixesWithRequestBuilder(isHidden: isHidden, isDisabled: isDisabled, startIndex: startIndex, limit: limit, nameStartsWithOrGreater: nameStartsWithOrGreater, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a list of users
     - GET /Users/Prefixes

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "Id" : "Id",
  "Name" : "Name"
}, {
  "Id" : "Id",
  "Name" : "Name"
} ]}]
     - parameter isHidden: (query) Optional filter by IsHidden&#x3D;true or false (optional)
     - parameter isDisabled: (query) Optional filter by IsDisabled&#x3D;true or false (optional)
     - parameter startIndex: (query) Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional)
     - parameter limit: (query) Optional. The maximum number of records to return (optional)
     - parameter nameStartsWithOrGreater: (query) Optional filter by items whose name is sorted equally or greater than a given input string. (optional)
     - parameter sortOrder: (query) Sort Order - Ascending,Descending (optional)

     - returns: RequestBuilder<[NameIdPair]> 
     */
    open class func getUsersPrefixesWithRequestBuilder(isHidden: Bool? = nil, isDisabled: Bool? = nil, startIndex: Int? = nil, limit: Int? = nil, nameStartsWithOrGreater: String? = nil, sortOrder: String? = nil) -> RequestBuilder<[NameIdPair]> {
        let path = "/Users/Prefixes"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "IsHidden": isHidden, 
                        "IsDisabled": isDisabled, 
                        "StartIndex": startIndex?.encodeToJSON(), 
                        "Limit": limit?.encodeToJSON(), 
                        "NameStartsWithOrGreater": nameStartsWithOrGreater, 
                        "SortOrder": sortOrder
        ])


        let requestBuilder: RequestBuilder<[NameIdPair]>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets a list of publicly visible users for display on a login screen.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsersPublic(completion: @escaping ((_ data: [UserDto]?,_ error: Error?) -> Void)) {
        getUsersPublicWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a list of publicly visible users for display on a login screen.
     - GET /Users/Public

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "Policy" : {
    "AllowTagOrRating" : true,
    "EnableContentDeletion" : true,
    "AllowSharingPersonalItems" : true,
    "EnableContentDeletionFromFolders" : [ "EnableContentDeletionFromFolders", "EnableContentDeletionFromFolders" ],
    "ExcludedSubFolders" : [ "ExcludedSubFolders", "ExcludedSubFolders" ],
    "EnablePlaybackRemuxing" : true,
    "EnabledFolders" : [ "EnabledFolders", "EnabledFolders" ],
    "BlockedMediaFolders" : [ "BlockedMediaFolders", "BlockedMediaFolders" ],
    "IsDisabled" : true,
    "MaxParentalRating" : 1,
    "EnablePublicSharing" : true,
    "AccessSchedules" : [ {
      "DayOfWeek" : "Sunday",
      "StartHour" : 5.962133916683182,
      "EndHour" : 5.637376656633329
    }, {
      "DayOfWeek" : "Sunday",
      "StartHour" : 5.962133916683182,
      "EndHour" : 5.637376656633329
    } ],
    "EnableContentDownloading" : true,
    "EnableSubtitleManagement" : true,
    "SimultaneousStreamLimit" : 9,
    "IncludeTags" : [ "IncludeTags", "IncludeTags" ],
    "IsAdministrator" : true,
    "EnableSubtitleDownloading" : true,
    "EnabledChannels" : [ "EnabledChannels", "EnabledChannels" ],
    "EnableAllDevices" : true,
    "EnableMediaConversion" : true,
    "InvalidLoginAttemptCount" : 2,
    "IsTagBlockingModeInclusive" : true,
    "RestrictedFeatures" : [ "RestrictedFeatures", "RestrictedFeatures" ],
    "EnableLiveTvAccess" : true,
    "EnableAllFolders" : true,
    "EnableSharedDeviceControl" : true,
    "EnableRemoteAccess" : true,
    "IsHidden" : true,
    "EnableLiveTvManagement" : true,
    "BlockUnratedItems" : [ "Movie", "Movie" ],
    "EnableMediaPlayback" : true,
    "EnableVideoPlaybackTranscoding" : true,
    "EnableAllChannels" : true,
    "EnableUserPreferenceAccess" : true,
    "AuthenticationProviderId" : "AuthenticationProviderId",
    "LockedOutDate" : 6,
    "BlockedTags" : [ "BlockedTags", "BlockedTags" ],
    "AllowCameraUpload" : true,
    "IsHiddenRemotely" : true,
    "EnabledDevices" : [ "EnabledDevices", "EnabledDevices" ],
    "EnableRemoteControlOfOtherUsers" : true,
    "EnableAudioPlaybackTranscoding" : true,
    "IsHiddenFromUnusedDevices" : true,
    "EnableSyncTranscoding" : true,
    "RemoteClientBitrateLimit" : 7
  },
  "HasConfiguredEasyPassword" : true,
  "EnableAutoLogin" : true,
  "UserItemShareLevel" : "None",
  "Configuration" : {
    "EnableNextEpisodeAutoPlay" : true,
    "SubtitleLanguagePreference" : "SubtitleLanguagePreference",
    "DisplayMissingEpisodes" : true,
    "IntroSkipMode" : "ShowButton",
    "OrderedViews" : [ "OrderedViews", "OrderedViews" ],
    "LatestItemsExcludes" : [ "LatestItemsExcludes", "LatestItemsExcludes" ],
    "SubtitleMode" : "Default",
    "ResumeRewindSeconds" : 0,
    "HidePlayedInLatest" : true,
    "ProfilePin" : "ProfilePin",
    "HidePlayedInMoreLikeThis" : true,
    "HidePlayedInSuggestions" : true,
    "RememberSubtitleSelections" : true,
    "EnableLocalPassword" : true,
    "AudioLanguagePreference" : "AudioLanguagePreference",
    "PlayDefaultAudioTrack" : true,
    "MyMediaExcludes" : [ "MyMediaExcludes", "MyMediaExcludes" ],
    "RememberAudioSelections" : true
  },
  "LastLoginDate" : "2000-01-23T04:56:07.000+00:00",
  "DateCreated" : "2000-01-23T04:56:07.000+00:00",
  "PrimaryImageTag" : "PrimaryImageTag",
  "Prefix" : "Prefix",
  "Name" : "Name",
  "ConnectUserName" : "ConnectUserName",
  "ServerId" : "ServerId",
  "HasConfiguredPassword" : true,
  "ServerName" : "ServerName",
  "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
  "PrimaryImageAspectRatio" : 3.616076749251911,
  "ConnectLinkType" : "LinkedUser",
  "Id" : "Id",
  "HasPassword" : true
}, {
  "Policy" : {
    "AllowTagOrRating" : true,
    "EnableContentDeletion" : true,
    "AllowSharingPersonalItems" : true,
    "EnableContentDeletionFromFolders" : [ "EnableContentDeletionFromFolders", "EnableContentDeletionFromFolders" ],
    "ExcludedSubFolders" : [ "ExcludedSubFolders", "ExcludedSubFolders" ],
    "EnablePlaybackRemuxing" : true,
    "EnabledFolders" : [ "EnabledFolders", "EnabledFolders" ],
    "BlockedMediaFolders" : [ "BlockedMediaFolders", "BlockedMediaFolders" ],
    "IsDisabled" : true,
    "MaxParentalRating" : 1,
    "EnablePublicSharing" : true,
    "AccessSchedules" : [ {
      "DayOfWeek" : "Sunday",
      "StartHour" : 5.962133916683182,
      "EndHour" : 5.637376656633329
    }, {
      "DayOfWeek" : "Sunday",
      "StartHour" : 5.962133916683182,
      "EndHour" : 5.637376656633329
    } ],
    "EnableContentDownloading" : true,
    "EnableSubtitleManagement" : true,
    "SimultaneousStreamLimit" : 9,
    "IncludeTags" : [ "IncludeTags", "IncludeTags" ],
    "IsAdministrator" : true,
    "EnableSubtitleDownloading" : true,
    "EnabledChannels" : [ "EnabledChannels", "EnabledChannels" ],
    "EnableAllDevices" : true,
    "EnableMediaConversion" : true,
    "InvalidLoginAttemptCount" : 2,
    "IsTagBlockingModeInclusive" : true,
    "RestrictedFeatures" : [ "RestrictedFeatures", "RestrictedFeatures" ],
    "EnableLiveTvAccess" : true,
    "EnableAllFolders" : true,
    "EnableSharedDeviceControl" : true,
    "EnableRemoteAccess" : true,
    "IsHidden" : true,
    "EnableLiveTvManagement" : true,
    "BlockUnratedItems" : [ "Movie", "Movie" ],
    "EnableMediaPlayback" : true,
    "EnableVideoPlaybackTranscoding" : true,
    "EnableAllChannels" : true,
    "EnableUserPreferenceAccess" : true,
    "AuthenticationProviderId" : "AuthenticationProviderId",
    "LockedOutDate" : 6,
    "BlockedTags" : [ "BlockedTags", "BlockedTags" ],
    "AllowCameraUpload" : true,
    "IsHiddenRemotely" : true,
    "EnabledDevices" : [ "EnabledDevices", "EnabledDevices" ],
    "EnableRemoteControlOfOtherUsers" : true,
    "EnableAudioPlaybackTranscoding" : true,
    "IsHiddenFromUnusedDevices" : true,
    "EnableSyncTranscoding" : true,
    "RemoteClientBitrateLimit" : 7
  },
  "HasConfiguredEasyPassword" : true,
  "EnableAutoLogin" : true,
  "UserItemShareLevel" : "None",
  "Configuration" : {
    "EnableNextEpisodeAutoPlay" : true,
    "SubtitleLanguagePreference" : "SubtitleLanguagePreference",
    "DisplayMissingEpisodes" : true,
    "IntroSkipMode" : "ShowButton",
    "OrderedViews" : [ "OrderedViews", "OrderedViews" ],
    "LatestItemsExcludes" : [ "LatestItemsExcludes", "LatestItemsExcludes" ],
    "SubtitleMode" : "Default",
    "ResumeRewindSeconds" : 0,
    "HidePlayedInLatest" : true,
    "ProfilePin" : "ProfilePin",
    "HidePlayedInMoreLikeThis" : true,
    "HidePlayedInSuggestions" : true,
    "RememberSubtitleSelections" : true,
    "EnableLocalPassword" : true,
    "AudioLanguagePreference" : "AudioLanguagePreference",
    "PlayDefaultAudioTrack" : true,
    "MyMediaExcludes" : [ "MyMediaExcludes", "MyMediaExcludes" ],
    "RememberAudioSelections" : true
  },
  "LastLoginDate" : "2000-01-23T04:56:07.000+00:00",
  "DateCreated" : "2000-01-23T04:56:07.000+00:00",
  "PrimaryImageTag" : "PrimaryImageTag",
  "Prefix" : "Prefix",
  "Name" : "Name",
  "ConnectUserName" : "ConnectUserName",
  "ServerId" : "ServerId",
  "HasConfiguredPassword" : true,
  "ServerName" : "ServerName",
  "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
  "PrimaryImageAspectRatio" : 3.616076749251911,
  "ConnectLinkType" : "LinkedUser",
  "Id" : "Id",
  "HasPassword" : true
} ]}]
     - externalDocs: class ExternalDocumentation {
    description: API Documentation: Authentication
    url: https://dev.emby.media/doc/restapi/User-Authentication.html
}

     - returns: RequestBuilder<[UserDto]> 
     */
    open class func getUsersPublicWithRequestBuilder() -> RequestBuilder<[UserDto]> {
        let path = "/Users/Public"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[UserDto]>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets a list of users

     - parameter isHidden: (query) Optional filter by IsHidden&#x3D;true or false (optional)
     - parameter isDisabled: (query) Optional filter by IsDisabled&#x3D;true or false (optional)
     - parameter startIndex: (query) Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional)
     - parameter limit: (query) Optional. The maximum number of records to return (optional)
     - parameter nameStartsWithOrGreater: (query) Optional filter by items whose name is sorted equally or greater than a given input string. (optional)
     - parameter sortOrder: (query) Sort Order - Ascending,Descending (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsersQuery(isHidden: Bool? = nil, isDisabled: Bool? = nil, startIndex: Int? = nil, limit: Int? = nil, nameStartsWithOrGreater: String? = nil, sortOrder: String? = nil, completion: @escaping ((_ data: QueryResultUserDto?,_ error: Error?) -> Void)) {
        getUsersQueryWithRequestBuilder(isHidden: isHidden, isDisabled: isDisabled, startIndex: startIndex, limit: limit, nameStartsWithOrGreater: nameStartsWithOrGreater, sortOrder: sortOrder).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a list of users
     - GET /Users/Query

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "TotalRecordCount" : 0,
  "Items" : [ {
    "Policy" : {
      "AllowTagOrRating" : true,
      "EnableContentDeletion" : true,
      "AllowSharingPersonalItems" : true,
      "EnableContentDeletionFromFolders" : [ "EnableContentDeletionFromFolders", "EnableContentDeletionFromFolders" ],
      "ExcludedSubFolders" : [ "ExcludedSubFolders", "ExcludedSubFolders" ],
      "EnablePlaybackRemuxing" : true,
      "EnabledFolders" : [ "EnabledFolders", "EnabledFolders" ],
      "BlockedMediaFolders" : [ "BlockedMediaFolders", "BlockedMediaFolders" ],
      "IsDisabled" : true,
      "MaxParentalRating" : 1,
      "EnablePublicSharing" : true,
      "AccessSchedules" : [ {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      }, {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      } ],
      "EnableContentDownloading" : true,
      "EnableSubtitleManagement" : true,
      "SimultaneousStreamLimit" : 9,
      "IncludeTags" : [ "IncludeTags", "IncludeTags" ],
      "IsAdministrator" : true,
      "EnableSubtitleDownloading" : true,
      "EnabledChannels" : [ "EnabledChannels", "EnabledChannels" ],
      "EnableAllDevices" : true,
      "EnableMediaConversion" : true,
      "InvalidLoginAttemptCount" : 2,
      "IsTagBlockingModeInclusive" : true,
      "RestrictedFeatures" : [ "RestrictedFeatures", "RestrictedFeatures" ],
      "EnableLiveTvAccess" : true,
      "EnableAllFolders" : true,
      "EnableSharedDeviceControl" : true,
      "EnableRemoteAccess" : true,
      "IsHidden" : true,
      "EnableLiveTvManagement" : true,
      "BlockUnratedItems" : [ "Movie", "Movie" ],
      "EnableMediaPlayback" : true,
      "EnableVideoPlaybackTranscoding" : true,
      "EnableAllChannels" : true,
      "EnableUserPreferenceAccess" : true,
      "AuthenticationProviderId" : "AuthenticationProviderId",
      "LockedOutDate" : 6,
      "BlockedTags" : [ "BlockedTags", "BlockedTags" ],
      "AllowCameraUpload" : true,
      "IsHiddenRemotely" : true,
      "EnabledDevices" : [ "EnabledDevices", "EnabledDevices" ],
      "EnableRemoteControlOfOtherUsers" : true,
      "EnableAudioPlaybackTranscoding" : true,
      "IsHiddenFromUnusedDevices" : true,
      "EnableSyncTranscoding" : true,
      "RemoteClientBitrateLimit" : 7
    },
    "HasConfiguredEasyPassword" : true,
    "EnableAutoLogin" : true,
    "UserItemShareLevel" : "None",
    "Configuration" : {
      "EnableNextEpisodeAutoPlay" : true,
      "SubtitleLanguagePreference" : "SubtitleLanguagePreference",
      "DisplayMissingEpisodes" : true,
      "IntroSkipMode" : "ShowButton",
      "OrderedViews" : [ "OrderedViews", "OrderedViews" ],
      "LatestItemsExcludes" : [ "LatestItemsExcludes", "LatestItemsExcludes" ],
      "SubtitleMode" : "Default",
      "ResumeRewindSeconds" : 0,
      "HidePlayedInLatest" : true,
      "ProfilePin" : "ProfilePin",
      "HidePlayedInMoreLikeThis" : true,
      "HidePlayedInSuggestions" : true,
      "RememberSubtitleSelections" : true,
      "EnableLocalPassword" : true,
      "AudioLanguagePreference" : "AudioLanguagePreference",
      "PlayDefaultAudioTrack" : true,
      "MyMediaExcludes" : [ "MyMediaExcludes", "MyMediaExcludes" ],
      "RememberAudioSelections" : true
    },
    "LastLoginDate" : "2000-01-23T04:56:07.000+00:00",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageTag" : "PrimaryImageTag",
    "Prefix" : "Prefix",
    "Name" : "Name",
    "ConnectUserName" : "ConnectUserName",
    "ServerId" : "ServerId",
    "HasConfiguredPassword" : true,
    "ServerName" : "ServerName",
    "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageAspectRatio" : 3.616076749251911,
    "ConnectLinkType" : "LinkedUser",
    "Id" : "Id",
    "HasPassword" : true
  }, {
    "Policy" : {
      "AllowTagOrRating" : true,
      "EnableContentDeletion" : true,
      "AllowSharingPersonalItems" : true,
      "EnableContentDeletionFromFolders" : [ "EnableContentDeletionFromFolders", "EnableContentDeletionFromFolders" ],
      "ExcludedSubFolders" : [ "ExcludedSubFolders", "ExcludedSubFolders" ],
      "EnablePlaybackRemuxing" : true,
      "EnabledFolders" : [ "EnabledFolders", "EnabledFolders" ],
      "BlockedMediaFolders" : [ "BlockedMediaFolders", "BlockedMediaFolders" ],
      "IsDisabled" : true,
      "MaxParentalRating" : 1,
      "EnablePublicSharing" : true,
      "AccessSchedules" : [ {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      }, {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      } ],
      "EnableContentDownloading" : true,
      "EnableSubtitleManagement" : true,
      "SimultaneousStreamLimit" : 9,
      "IncludeTags" : [ "IncludeTags", "IncludeTags" ],
      "IsAdministrator" : true,
      "EnableSubtitleDownloading" : true,
      "EnabledChannels" : [ "EnabledChannels", "EnabledChannels" ],
      "EnableAllDevices" : true,
      "EnableMediaConversion" : true,
      "InvalidLoginAttemptCount" : 2,
      "IsTagBlockingModeInclusive" : true,
      "RestrictedFeatures" : [ "RestrictedFeatures", "RestrictedFeatures" ],
      "EnableLiveTvAccess" : true,
      "EnableAllFolders" : true,
      "EnableSharedDeviceControl" : true,
      "EnableRemoteAccess" : true,
      "IsHidden" : true,
      "EnableLiveTvManagement" : true,
      "BlockUnratedItems" : [ "Movie", "Movie" ],
      "EnableMediaPlayback" : true,
      "EnableVideoPlaybackTranscoding" : true,
      "EnableAllChannels" : true,
      "EnableUserPreferenceAccess" : true,
      "AuthenticationProviderId" : "AuthenticationProviderId",
      "LockedOutDate" : 6,
      "BlockedTags" : [ "BlockedTags", "BlockedTags" ],
      "AllowCameraUpload" : true,
      "IsHiddenRemotely" : true,
      "EnabledDevices" : [ "EnabledDevices", "EnabledDevices" ],
      "EnableRemoteControlOfOtherUsers" : true,
      "EnableAudioPlaybackTranscoding" : true,
      "IsHiddenFromUnusedDevices" : true,
      "EnableSyncTranscoding" : true,
      "RemoteClientBitrateLimit" : 7
    },
    "HasConfiguredEasyPassword" : true,
    "EnableAutoLogin" : true,
    "UserItemShareLevel" : "None",
    "Configuration" : {
      "EnableNextEpisodeAutoPlay" : true,
      "SubtitleLanguagePreference" : "SubtitleLanguagePreference",
      "DisplayMissingEpisodes" : true,
      "IntroSkipMode" : "ShowButton",
      "OrderedViews" : [ "OrderedViews", "OrderedViews" ],
      "LatestItemsExcludes" : [ "LatestItemsExcludes", "LatestItemsExcludes" ],
      "SubtitleMode" : "Default",
      "ResumeRewindSeconds" : 0,
      "HidePlayedInLatest" : true,
      "ProfilePin" : "ProfilePin",
      "HidePlayedInMoreLikeThis" : true,
      "HidePlayedInSuggestions" : true,
      "RememberSubtitleSelections" : true,
      "EnableLocalPassword" : true,
      "AudioLanguagePreference" : "AudioLanguagePreference",
      "PlayDefaultAudioTrack" : true,
      "MyMediaExcludes" : [ "MyMediaExcludes", "MyMediaExcludes" ],
      "RememberAudioSelections" : true
    },
    "LastLoginDate" : "2000-01-23T04:56:07.000+00:00",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageTag" : "PrimaryImageTag",
    "Prefix" : "Prefix",
    "Name" : "Name",
    "ConnectUserName" : "ConnectUserName",
    "ServerId" : "ServerId",
    "HasConfiguredPassword" : true,
    "ServerName" : "ServerName",
    "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageAspectRatio" : 3.616076749251911,
    "ConnectLinkType" : "LinkedUser",
    "Id" : "Id",
    "HasPassword" : true
  } ]
}}]
     - parameter isHidden: (query) Optional filter by IsHidden&#x3D;true or false (optional)
     - parameter isDisabled: (query) Optional filter by IsDisabled&#x3D;true or false (optional)
     - parameter startIndex: (query) Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional)
     - parameter limit: (query) Optional. The maximum number of records to return (optional)
     - parameter nameStartsWithOrGreater: (query) Optional filter by items whose name is sorted equally or greater than a given input string. (optional)
     - parameter sortOrder: (query) Sort Order - Ascending,Descending (optional)

     - returns: RequestBuilder<QueryResultUserDto> 
     */
    open class func getUsersQueryWithRequestBuilder(isHidden: Bool? = nil, isDisabled: Bool? = nil, startIndex: Int? = nil, limit: Int? = nil, nameStartsWithOrGreater: String? = nil, sortOrder: String? = nil) -> RequestBuilder<QueryResultUserDto> {
        let path = "/Users/Query"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "IsHidden": isHidden, 
                        "IsDisabled": isDisabled, 
                        "StartIndex": startIndex?.encodeToJSON(), 
                        "Limit": limit?.encodeToJSON(), 
                        "NameStartsWithOrGreater": nameStartsWithOrGreater, 
                        "SortOrder": sortOrder
        ])


        let requestBuilder: RequestBuilder<QueryResultUserDto>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Authenticates a user

     - parameter body: (body) AuthenticateUserByName 
     - parameter xEmbyAuthorization: (header) The authorization header can be either named &#x27;Authorization&#x27; or &#x27;X-Emby-Authorization&#x27;.    It must be of the following schema:     Emby UserId&#x3D;\&quot;(guid)\&quot;, Client&#x3D;\&quot;(string)\&quot;, Device&#x3D;\&quot;(string)\&quot;, DeviceId&#x3D;\&quot;(string)\&quot;, Version&#x3D;\&quot;string\&quot;, Token&#x3D;\&quot;(string)\&quot;     Please consult the documentation for further details. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersAuthenticatebyname(body: AuthenticateUserByName, xEmbyAuthorization: String, completion: @escaping ((_ data: AuthenticationAuthenticationResult?,_ error: Error?) -> Void)) {
        postUsersAuthenticatebynameWithRequestBuilder(body: body, xEmbyAuthorization: xEmbyAuthorization).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Authenticates a user
     - POST /Users/AuthenticateByName

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "User" : {
    "Policy" : {
      "AllowTagOrRating" : true,
      "EnableContentDeletion" : true,
      "AllowSharingPersonalItems" : true,
      "EnableContentDeletionFromFolders" : [ "EnableContentDeletionFromFolders", "EnableContentDeletionFromFolders" ],
      "ExcludedSubFolders" : [ "ExcludedSubFolders", "ExcludedSubFolders" ],
      "EnablePlaybackRemuxing" : true,
      "EnabledFolders" : [ "EnabledFolders", "EnabledFolders" ],
      "BlockedMediaFolders" : [ "BlockedMediaFolders", "BlockedMediaFolders" ],
      "IsDisabled" : true,
      "MaxParentalRating" : 1,
      "EnablePublicSharing" : true,
      "AccessSchedules" : [ {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      }, {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      } ],
      "EnableContentDownloading" : true,
      "EnableSubtitleManagement" : true,
      "SimultaneousStreamLimit" : 9,
      "IncludeTags" : [ "IncludeTags", "IncludeTags" ],
      "IsAdministrator" : true,
      "EnableSubtitleDownloading" : true,
      "EnabledChannels" : [ "EnabledChannels", "EnabledChannels" ],
      "EnableAllDevices" : true,
      "EnableMediaConversion" : true,
      "InvalidLoginAttemptCount" : 2,
      "IsTagBlockingModeInclusive" : true,
      "RestrictedFeatures" : [ "RestrictedFeatures", "RestrictedFeatures" ],
      "EnableLiveTvAccess" : true,
      "EnableAllFolders" : true,
      "EnableSharedDeviceControl" : true,
      "EnableRemoteAccess" : true,
      "IsHidden" : true,
      "EnableLiveTvManagement" : true,
      "BlockUnratedItems" : [ "Movie", "Movie" ],
      "EnableMediaPlayback" : true,
      "EnableVideoPlaybackTranscoding" : true,
      "EnableAllChannels" : true,
      "EnableUserPreferenceAccess" : true,
      "AuthenticationProviderId" : "AuthenticationProviderId",
      "LockedOutDate" : 6,
      "BlockedTags" : [ "BlockedTags", "BlockedTags" ],
      "AllowCameraUpload" : true,
      "IsHiddenRemotely" : true,
      "EnabledDevices" : [ "EnabledDevices", "EnabledDevices" ],
      "EnableRemoteControlOfOtherUsers" : true,
      "EnableAudioPlaybackTranscoding" : true,
      "IsHiddenFromUnusedDevices" : true,
      "EnableSyncTranscoding" : true,
      "RemoteClientBitrateLimit" : 7
    },
    "HasConfiguredEasyPassword" : true,
    "EnableAutoLogin" : true,
    "UserItemShareLevel" : "None",
    "Configuration" : {
      "EnableNextEpisodeAutoPlay" : true,
      "SubtitleLanguagePreference" : "SubtitleLanguagePreference",
      "DisplayMissingEpisodes" : true,
      "IntroSkipMode" : "ShowButton",
      "OrderedViews" : [ "OrderedViews", "OrderedViews" ],
      "LatestItemsExcludes" : [ "LatestItemsExcludes", "LatestItemsExcludes" ],
      "SubtitleMode" : "Default",
      "ResumeRewindSeconds" : 0,
      "HidePlayedInLatest" : true,
      "ProfilePin" : "ProfilePin",
      "HidePlayedInMoreLikeThis" : true,
      "HidePlayedInSuggestions" : true,
      "RememberSubtitleSelections" : true,
      "EnableLocalPassword" : true,
      "AudioLanguagePreference" : "AudioLanguagePreference",
      "PlayDefaultAudioTrack" : true,
      "MyMediaExcludes" : [ "MyMediaExcludes", "MyMediaExcludes" ],
      "RememberAudioSelections" : true
    },
    "LastLoginDate" : "2000-01-23T04:56:07.000+00:00",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageTag" : "PrimaryImageTag",
    "Prefix" : "Prefix",
    "Name" : "Name",
    "ConnectUserName" : "ConnectUserName",
    "ServerId" : "ServerId",
    "HasConfiguredPassword" : true,
    "ServerName" : "ServerName",
    "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageAspectRatio" : 3.616076749251911,
    "ConnectLinkType" : "LinkedUser",
    "Id" : "Id",
    "HasPassword" : true
  },
  "ServerId" : "ServerId",
  "AccessToken" : "AccessToken",
  "SessionInfo" : {
    "PlaylistLength" : 3,
    "ApplicationVersion" : "ApplicationVersion",
    "SupportedCommands" : [ "SupportedCommands", "SupportedCommands" ],
    "DeviceId" : "DeviceId",
    "PlaylistItemId" : "PlaylistItemId",
    "PlaylistIndex" : 9,
    "ServerId" : "ServerId",
    "RemoteEndPoint" : "RemoteEndPoint",
    "InternalDeviceId" : 2,
    "SupportsRemoteControl" : true,
    "Protocol" : "Protocol",
    "Client" : "Client",
    "UserName" : "UserName",
    "UserPrimaryImageTag" : "UserPrimaryImageTag",
    "DeviceType" : "DeviceType",
    "PlayableMediaTypes" : [ "PlayableMediaTypes", "PlayableMediaTypes" ],
    "NowPlayingItem" : {
      "SeasonName" : "SeasonName",
      "PremiereDate" : "2000-01-23T04:56:07.000+00:00",
      "Size" : 2,
      "CriticRating" : 6.4384236,
      "GameSystemId" : 3,
      "Studios" : [ {
        "Id" : 3,
        "Name" : "Name"
      }, {
        "Id" : 3,
        "Name" : "Name"
      } ],
      "CameraMake" : "CameraMake",
      "Aperture" : 1.041444916118296,
      "ChannelPrimaryImageTag" : "ChannelPrimaryImageTag",
      "ExtraType" : "ExtraType",
      "ParentBackdropItemId" : "ParentBackdropItemId",
      "Etag" : "Etag",
      "ParentLogoImageTag" : "ParentLogoImageTag",
      "ExposureTime" : 6.628464275087742,
      "MediaType" : "MediaType",
      "ManagementId" : "ManagementId",
      "Tags" : [ "Tags", "Tags" ],
      "Status" : "Status",
      "IndexNumberEnd" : 6,
      "ArtistItems" : [ {
        "Id" : "Id",
        "Name" : "Name"
      }, {
        "Id" : "Id",
        "Name" : "Name"
      } ],
      "MediaSources" : [ {
        "EncoderPath" : "EncoderPath",
        "RequiredHttpHeaders" : {
          "key" : "RequiredHttpHeaders"
        },
        "RunTimeTicks" : 5,
        "HasMixedProtocols" : true,
        "MediaStreams" : [ {
          "VideoRange" : "VideoRange",
          "ColorSpace" : "ColorSpace",
          "Index" : 4,
          "BitDepth" : 2,
          "ItemId" : "ItemId",
          "SupportsExternalStream" : true,
          "Codec" : "Codec",
          "SampleRate" : 1,
          "IsAnamorphic" : true,
          "PixelFormat" : "PixelFormat",
          "AttachmentSize" : 9,
          "SubtitleLocationType" : "InternalStream",
          "RefFrames" : 4,
          "IsAVC" : true,
          "ColorTransfer" : "ColorTransfer",
          "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
          "IsExternalUrl" : true,
          "DisplayTitle" : "DisplayTitle",
          "IsForced" : true,
          "ChannelLayout" : "ChannelLayout",
          "DisplayLanguage" : "DisplayLanguage",
          "AverageFrameRate" : 7.4577446,
          "StreamStartTimeTicks" : 9,
          "IsExternal" : true,
          "Level" : 5.025004791520295,
          "ExtendedVideoSubType" : "None",
          "Channels" : 1,
          "Profile" : "Profile",
          "MimeType" : "MimeType",
          "DeliveryUrl" : "DeliveryUrl",
          "ColorPrimaries" : "ColorPrimaries",
          "ServerId" : "ServerId",
          "Language" : "Language",
          "IsTextSubtitleStream" : true,
          "NalLengthSize" : "NalLengthSize",
          "Height" : 1,
          "Width" : 6,
          "TimeBase" : "TimeBase",
          "CodecTag" : "CodecTag",
          "IsDefault" : true,
          "Path" : "Path",
          "Comment" : "Comment",
          "DeliveryMethod" : "Encode",
          "Title" : "Title",
          "ExtendedVideoType" : "None",
          "Rotation" : 7,
          "RealFrameRate" : 1.1730742,
          "IsHearingImpaired" : true,
          "AspectRatio" : "AspectRatio",
          "Type" : "Unknown",
          "IsInterlaced" : true,
          "Extradata" : "Extradata",
          "BitRate" : 3
        }, {
          "VideoRange" : "VideoRange",
          "ColorSpace" : "ColorSpace",
          "Index" : 4,
          "BitDepth" : 2,
          "ItemId" : "ItemId",
          "SupportsExternalStream" : true,
          "Codec" : "Codec",
          "SampleRate" : 1,
          "IsAnamorphic" : true,
          "PixelFormat" : "PixelFormat",
          "AttachmentSize" : 9,
          "SubtitleLocationType" : "InternalStream",
          "RefFrames" : 4,
          "IsAVC" : true,
          "ColorTransfer" : "ColorTransfer",
          "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
          "IsExternalUrl" : true,
          "DisplayTitle" : "DisplayTitle",
          "IsForced" : true,
          "ChannelLayout" : "ChannelLayout",
          "DisplayLanguage" : "DisplayLanguage",
          "AverageFrameRate" : 7.4577446,
          "StreamStartTimeTicks" : 9,
          "IsExternal" : true,
          "Level" : 5.025004791520295,
          "ExtendedVideoSubType" : "None",
          "Channels" : 1,
          "Profile" : "Profile",
          "MimeType" : "MimeType",
          "DeliveryUrl" : "DeliveryUrl",
          "ColorPrimaries" : "ColorPrimaries",
          "ServerId" : "ServerId",
          "Language" : "Language",
          "IsTextSubtitleStream" : true,
          "NalLengthSize" : "NalLengthSize",
          "Height" : 1,
          "Width" : 6,
          "TimeBase" : "TimeBase",
          "CodecTag" : "CodecTag",
          "IsDefault" : true,
          "Path" : "Path",
          "Comment" : "Comment",
          "DeliveryMethod" : "Encode",
          "Title" : "Title",
          "ExtendedVideoType" : "None",
          "Rotation" : 7,
          "RealFrameRate" : 1.1730742,
          "IsHearingImpaired" : true,
          "AspectRatio" : "AspectRatio",
          "Type" : "Unknown",
          "IsInterlaced" : true,
          "Extradata" : "Extradata",
          "BitRate" : 3
        } ],
        "Size" : 1,
        "BufferMs" : 7,
        "ContainerStartTimeTicks" : 5,
        "SortName" : "SortName",
        "Timestamp" : "None",
        "ItemId" : "ItemId",
        "Name" : "Name",
        "RequiresOpening" : true,
        "DirectStreamUrl" : "DirectStreamUrl",
        "SupportsDirectStream" : true,
        "RequiresClosing" : true,
        "Container" : "Container",
        "ServerId" : "ServerId",
        "LiveStreamId" : "LiveStreamId",
        "RequiresLooping" : true,
        "Protocol" : "File",
        "AddApiKeyToDirectStreamUrl" : true,
        "DefaultSubtitleStreamIndex" : 9,
        "TrancodeLiveStartIndex" : 2,
        "IsInfiniteStream" : true,
        "Path" : "Path",
        "IsRemote" : true,
        "SupportsDirectPlay" : true,
        "TranscodingSubProtocol" : "TranscodingSubProtocol",
        "Formats" : [ "Formats", "Formats" ],
        "AnalyzeDurationMs" : 6,
        "WallClockStart" : "2000-01-23T04:56:07.000+00:00",
        "Bitrate" : 9,
        "OpenToken" : "OpenToken",
        "SupportsProbing" : true,
        "Type" : "Default",
        "ReadAtNativeFramerate" : true,
        "TranscodingContainer" : "TranscodingContainer",
        "ProbePath" : "ProbePath",
        "TranscodingUrl" : "TranscodingUrl",
        "Id" : "Id",
        "SupportsTranscoding" : true,
        "DefaultAudioStreamIndex" : 8
      }, {
        "EncoderPath" : "EncoderPath",
        "RequiredHttpHeaders" : {
          "key" : "RequiredHttpHeaders"
        },
        "RunTimeTicks" : 5,
        "HasMixedProtocols" : true,
        "MediaStreams" : [ {
          "VideoRange" : "VideoRange",
          "ColorSpace" : "ColorSpace",
          "Index" : 4,
          "BitDepth" : 2,
          "ItemId" : "ItemId",
          "SupportsExternalStream" : true,
          "Codec" : "Codec",
          "SampleRate" : 1,
          "IsAnamorphic" : true,
          "PixelFormat" : "PixelFormat",
          "AttachmentSize" : 9,
          "SubtitleLocationType" : "InternalStream",
          "RefFrames" : 4,
          "IsAVC" : true,
          "ColorTransfer" : "ColorTransfer",
          "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
          "IsExternalUrl" : true,
          "DisplayTitle" : "DisplayTitle",
          "IsForced" : true,
          "ChannelLayout" : "ChannelLayout",
          "DisplayLanguage" : "DisplayLanguage",
          "AverageFrameRate" : 7.4577446,
          "StreamStartTimeTicks" : 9,
          "IsExternal" : true,
          "Level" : 5.025004791520295,
          "ExtendedVideoSubType" : "None",
          "Channels" : 1,
          "Profile" : "Profile",
          "MimeType" : "MimeType",
          "DeliveryUrl" : "DeliveryUrl",
          "ColorPrimaries" : "ColorPrimaries",
          "ServerId" : "ServerId",
          "Language" : "Language",
          "IsTextSubtitleStream" : true,
          "NalLengthSize" : "NalLengthSize",
          "Height" : 1,
          "Width" : 6,
          "TimeBase" : "TimeBase",
          "CodecTag" : "CodecTag",
          "IsDefault" : true,
          "Path" : "Path",
          "Comment" : "Comment",
          "DeliveryMethod" : "Encode",
          "Title" : "Title",
          "ExtendedVideoType" : "None",
          "Rotation" : 7,
          "RealFrameRate" : 1.1730742,
          "IsHearingImpaired" : true,
          "AspectRatio" : "AspectRatio",
          "Type" : "Unknown",
          "IsInterlaced" : true,
          "Extradata" : "Extradata",
          "BitRate" : 3
        }, {
          "VideoRange" : "VideoRange",
          "ColorSpace" : "ColorSpace",
          "Index" : 4,
          "BitDepth" : 2,
          "ItemId" : "ItemId",
          "SupportsExternalStream" : true,
          "Codec" : "Codec",
          "SampleRate" : 1,
          "IsAnamorphic" : true,
          "PixelFormat" : "PixelFormat",
          "AttachmentSize" : 9,
          "SubtitleLocationType" : "InternalStream",
          "RefFrames" : 4,
          "IsAVC" : true,
          "ColorTransfer" : "ColorTransfer",
          "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
          "IsExternalUrl" : true,
          "DisplayTitle" : "DisplayTitle",
          "IsForced" : true,
          "ChannelLayout" : "ChannelLayout",
          "DisplayLanguage" : "DisplayLanguage",
          "AverageFrameRate" : 7.4577446,
          "StreamStartTimeTicks" : 9,
          "IsExternal" : true,
          "Level" : 5.025004791520295,
          "ExtendedVideoSubType" : "None",
          "Channels" : 1,
          "Profile" : "Profile",
          "MimeType" : "MimeType",
          "DeliveryUrl" : "DeliveryUrl",
          "ColorPrimaries" : "ColorPrimaries",
          "ServerId" : "ServerId",
          "Language" : "Language",
          "IsTextSubtitleStream" : true,
          "NalLengthSize" : "NalLengthSize",
          "Height" : 1,
          "Width" : 6,
          "TimeBase" : "TimeBase",
          "CodecTag" : "CodecTag",
          "IsDefault" : true,
          "Path" : "Path",
          "Comment" : "Comment",
          "DeliveryMethod" : "Encode",
          "Title" : "Title",
          "ExtendedVideoType" : "None",
          "Rotation" : 7,
          "RealFrameRate" : 1.1730742,
          "IsHearingImpaired" : true,
          "AspectRatio" : "AspectRatio",
          "Type" : "Unknown",
          "IsInterlaced" : true,
          "Extradata" : "Extradata",
          "BitRate" : 3
        } ],
        "Size" : 1,
        "BufferMs" : 7,
        "ContainerStartTimeTicks" : 5,
        "SortName" : "SortName",
        "Timestamp" : "None",
        "ItemId" : "ItemId",
        "Name" : "Name",
        "RequiresOpening" : true,
        "DirectStreamUrl" : "DirectStreamUrl",
        "SupportsDirectStream" : true,
        "RequiresClosing" : true,
        "Container" : "Container",
        "ServerId" : "ServerId",
        "LiveStreamId" : "LiveStreamId",
        "RequiresLooping" : true,
        "Protocol" : "File",
        "AddApiKeyToDirectStreamUrl" : true,
        "DefaultSubtitleStreamIndex" : 9,
        "TrancodeLiveStartIndex" : 2,
        "IsInfiniteStream" : true,
        "Path" : "Path",
        "IsRemote" : true,
        "SupportsDirectPlay" : true,
        "TranscodingSubProtocol" : "TranscodingSubProtocol",
        "Formats" : [ "Formats", "Formats" ],
        "AnalyzeDurationMs" : 6,
        "WallClockStart" : "2000-01-23T04:56:07.000+00:00",
        "Bitrate" : 9,
        "OpenToken" : "OpenToken",
        "SupportsProbing" : true,
        "Type" : "Default",
        "ReadAtNativeFramerate" : true,
        "TranscodingContainer" : "TranscodingContainer",
        "ProbePath" : "ProbePath",
        "TranscodingUrl" : "TranscodingUrl",
        "Id" : "Id",
        "SupportsTranscoding" : true,
        "DefaultAudioStreamIndex" : 8
      } ],
      "GenreItems" : [ null, null ],
      "OfficialRating" : "OfficialRating",
      "Longitude" : 9.132027271330688,
      "Composers" : [ null, null ],
      "LockData" : true,
      "FocalLength" : 4.258773108174356,
      "IsNews" : true,
      "ShutterSpeed" : 4.678947989005849,
      "Id" : "Id",
      "SortIndexNumber" : 0,
      "IsFolder" : true,
      "CanMakePublic" : true,
      "SeriesTimerId" : "SeriesTimerId",
      "SeriesId" : "SeriesId",
      "ListingsPath" : "ListingsPath",
      "MediaStreams" : [ null, null ],
      "FileName" : "FileName",
      "PrimaryImageTag" : "PrimaryImageTag",
      "Prefix" : "Prefix",
      "CanDownload" : true,
      "IsMovie" : true,
      "SeriesCount" : 5,
      "PrimaryImageItemId" : "PrimaryImageItemId",
      "ListingsChannelId" : "ListingsChannelId",
      "SeriesStudio" : "SeriesStudio",
      "IsLive" : true,
      "Width" : 4,
      "ExternalUrls" : [ {
        "Url" : "Url",
        "Name" : "Name"
      }, {
        "Url" : "Url",
        "Name" : "Name"
      } ],
      "RecursiveItemCount" : 8,
      "Path" : "Path",
      "ParentId" : "ParentId",
      "TimerType" : "Program",
      "GameSystem" : "GameSystem",
      "MusicVideoCount" : 8,
      "IsSeries" : true,
      "ProductionLocations" : [ "ProductionLocations", "ProductionLocations" ],
      "Subviews" : [ "Subviews", "Subviews" ],
      "Bitrate" : 6,
      "EndDate" : "2000-01-23T04:56:07.000+00:00",
      "SeriesPrimaryImageTag" : "SeriesPrimaryImageTag",
      "ParentThumbItemId" : "ParentThumbItemId",
      "PreferredMetadataLanguage" : "PreferredMetadataLanguage",
      "CanLeaveContent" : true,
      "Type" : "Type",
      "BackdropImageTags" : [ "BackdropImageTags", "BackdropImageTags" ],
      "ParentBackdropImageTags" : [ "ParentBackdropImageTags", "ParentBackdropImageTags" ],
      "ChildCount" : 7,
      "TagItems" : [ null, null ],
      "Artists" : [ "Artists", "Artists" ],
      "ListingsChannelName" : "ListingsChannelName",
      "RunTimeTicks" : 1,
      "AlbumPrimaryImageTag" : "AlbumPrimaryImageTag",
      "Video3DFormat" : "HalfSideBySide",
      "CanDelete" : true,
      "PlaylistItemId" : "PlaylistItemId",
      "SortParentIndexNumber" : 6,
      "DisplayPreferencesId" : "DisplayPreferencesId",
      "Album" : "Album",
      "Latitude" : 7.260521264802104,
      "Guid" : "Guid",
      "SortName" : "SortName",
      "Name" : "Name",
      "StartDate" : "2000-01-23T04:56:07.000+00:00",
      "Container" : "Container",
      "ProductionYear" : 6,
      "SeriesName" : "SeriesName",
      "AsSeries" : true,
      "AlbumId" : "AlbumId",
      "SupportsSync" : true,
      "LocalTrailerCount" : 7,
      "IndexNumber" : 5,
      "CompletionPercentage" : 0.5199002018724985,
      "Genres" : [ "Genres", "Genres" ],
      "SeasonId" : "SeasonId",
      "LockedFields" : [ "Cast", "Cast" ],
      "Disabled" : true,
      "ProviderIds" : {
        "key" : "ProviderIds"
      },
      "RemoteTrailers" : [ {
        "Url" : "Url",
        "Name" : "Name"
      }, {
        "Url" : "Url",
        "Name" : "Name"
      } ],
      "PresentationUniqueKey" : "PresentationUniqueKey",
      "CustomRating" : "CustomRating",
      "ListingsChannelNumber" : "ListingsChannelNumber",
      "SyncStatus" : "Queued",
      "CanManageAccess" : true,
      "AirDays" : [ "Sunday", "Sunday" ],
      "ParentLogoItemId" : "ParentLogoItemId",
      "PartCount" : 7,
      "ListingsProviderId" : "ListingsProviderId",
      "CanEditItems" : true,
      "ChannelName" : "ChannelName",
      "EpisodeTitle" : "EpisodeTitle",
      "IsoSpeedRating" : 9,
      "CommunityRating" : 6.965118,
      "Software" : "Software",
      "Chapters" : [ {
        "StartPositionTicks" : 5,
        "ImageTag" : "ImageTag",
        "MarkerType" : "Chapter",
        "ChapterIndex" : 3,
        "Name" : "Name"
      }, {
        "StartPositionTicks" : 5,
        "ImageTag" : "ImageTag",
        "MarkerType" : "Chapter",
        "ChapterIndex" : 3,
        "Name" : "Name"
      } ],
      "SongCount" : 6,
      "Taglines" : [ "Taglines", "Taglines" ],
      "PreferredMetadataCountryCode" : "PreferredMetadataCountryCode",
      "CameraModel" : "CameraModel",
      "ChannelNumber" : "ChannelNumber",
      "UserData" : {
        "UnplayedItemCount" : 6,
        "Played" : true,
        "ServerId" : "ServerId",
        "PlayedPercentage" : 7.058770351582356,
        "Rating" : 0.8851374739011653,
        "PlayCount" : 4,
        "PlaybackPositionTicks" : 0,
        "LastPlayedDate" : "2000-01-23T04:56:07.000+00:00",
        "IsFavorite" : true,
        "ItemId" : "ItemId",
        "Key" : "Key"
      },
      "TimerId" : "TimerId",
      "DateCreated" : "2000-01-23T04:56:07.000+00:00",
      "ParentThumbImageTag" : "ParentThumbImageTag",
      "IsSports" : true,
      "ChannelId" : "ChannelId",
      "ParentIndexNumber" : 3,
      "IsNew" : true,
      "AffiliateCallSign" : "AffiliateCallSign",
      "ListingsId" : "ListingsId",
      "AlbumArtists" : [ null, null ],
      "ServerId" : "ServerId",
      "Number" : "Number",
      "AlbumCount" : 4,
      "IsRepeat" : true,
      "CollectionType" : "CollectionType",
      "PrimaryImageAspectRatio" : 3.0576100241049344,
      "Height" : 0,
      "IsKids" : true,
      "DisplayOrder" : "DisplayOrder",
      "MovieCount" : 7,
      "People" : [ {
        "Role" : "Role",
        "Type" : "Actor",
        "PrimaryImageTag" : "PrimaryImageTag",
        "Id" : "Id",
        "Name" : "Name"
      }, {
        "Role" : "Role",
        "Type" : "Actor",
        "PrimaryImageTag" : "PrimaryImageTag",
        "Id" : "Id",
        "Name" : "Name"
      } ],
      "Overview" : "Overview",
      "SpecialFeatureCount" : 3,
      "ImageOrientation" : "TopLeft",
      "AlbumArtist" : "AlbumArtist",
      "ImageTags" : {
        "key" : "ImageTags"
      },
      "OriginalTitle" : "OriginalTitle",
      "ForcedSortName" : "ForcedSortName",
      "SupportsResume" : true,
      "LocationType" : "FileSystem",
      "IsPremiere" : true,
      "Altitude" : 0.8774076871421566
    },
    "TranscodingInfo" : {
      "IsAudioDirect" : true,
      "ProcessStatistics" : {
        "Metrics" : [ {
          "Time" : "Time",
          "WorkingSet" : 6.778324963048013,
          "VirtualMemory" : 2.8841621266687802,
          "CpuPercent" : 1.284659006116532
        }, {
          "Time" : "Time",
          "WorkingSet" : 6.778324963048013,
          "VirtualMemory" : 2.8841621266687802,
          "CpuPercent" : 1.284659006116532
        } ],
        "AverageCpu" : 6.438423552598547,
        "CurrentCpu" : 9.018348186070783,
        "CurrentWorkingSet" : 6.965117697638846,
        "CurrentVirtualMemory" : 3.5571952270680973
      },
      "TranscodeReasons" : [ "ContainerNotSupported", "ContainerNotSupported" ],
      "VideoEncoderHwAccel" : "VideoEncoderHwAccel",
      "Framerate" : 1.0246457,
      "Container" : "Container",
      "TranscodingStartPositionTicks" : 7.457744773683766,
      "IsVideoDirect" : true,
      "AverageCpuUsage" : 9.369310271410669,
      "VideoDecoderIsHardware" : true,
      "VideoDecoderMediaType" : "VideoDecoderMediaType",
      "SubProtocol" : "SubProtocol",
      "CompletionPercentage" : 1.4894159098541704,
      "Height" : 4,
      "VideoPipelineInfo" : [ {
        "StepType" : "Decoder",
        "FfmpegDescription" : "FfmpegDescription",
        "Param" : "Param",
        "ParamShort" : "ParamShort",
        "StepTypeName" : "StepTypeName",
        "IsHardwareContext" : true,
        "FfmpegOptions" : "FfmpegOptions",
        "FfmpegName" : "FfmpegName",
        "Short" : "Short",
        "HardwareContextName" : "HardwareContextName",
        "Name" : "Name"
      }, {
        "StepType" : "Decoder",
        "FfmpegDescription" : "FfmpegDescription",
        "Param" : "Param",
        "ParamShort" : "ParamShort",
        "StepTypeName" : "StepTypeName",
        "IsHardwareContext" : true,
        "FfmpegOptions" : "FfmpegOptions",
        "FfmpegName" : "FfmpegName",
        "Short" : "Short",
        "HardwareContextName" : "HardwareContextName",
        "Name" : "Name"
      } ],
      "VideoDecoder" : "VideoDecoder",
      "Width" : 1,
      "AudioCodec" : "AudioCodec",
      "VideoEncoderIsHardware" : true,
      "SubtitlePipelineInfos" : [ [ null, null ], [ null, null ] ],
      "CpuHistory" : [ {
        "Item1" : 6.683562403749608,
        "Item2" : 8.762042012749001
      }, {
        "Item1" : 6.683562403749608,
        "Item2" : 8.762042012749001
      } ],
      "CurrentThrottle" : 6,
      "VideoCodec" : "VideoCodec",
      "Bitrate" : 4,
      "VideoDecoderHwAccel" : "VideoDecoderHwAccel",
      "TranscodingPositionTicks" : 6.84685269835264,
      "CurrentCpuUsage" : 9.965781217890562,
      "AudioBitrate" : 7,
      "AudioChannels" : 5,
      "VideoEncoderMediaType" : "VideoEncoderMediaType",
      "VideoEncoder" : "VideoEncoder",
      "VideoBitrate" : 1
    },
    "AppIconUrl" : "AppIconUrl",
    "UserId" : "UserId",
    "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
    "Id" : "Id",
    "AdditionalUsers" : [ {
      "UserName" : "UserName",
      "UserId" : "UserId",
      "UserInternalId" : 7
    }, {
      "UserName" : "UserName",
      "UserId" : "UserId",
      "UserInternalId" : 7
    } ],
    "PlayState" : {
      "RepeatMode" : "RepeatNone",
      "CanSeek" : true,
      "PlayMethod" : "Transcode",
      "SubtitleOffset" : 5,
      "PositionTicks" : 0,
      "AudioStreamIndex" : 1,
      "IsMuted" : true,
      "VolumeLevel" : 6,
      "MediaSourceId" : "MediaSourceId",
      "IsPaused" : true,
      "SubtitleStreamIndex" : 5,
      "PlaybackRate" : 2.3021358869347655
    },
    "DeviceName" : "DeviceName"
  }
}}]
     - externalDocs: class ExternalDocumentation {
    description: API Documentation: Authentication
    url: https://dev.emby.media/doc/restapi/User-Authentication.html
}
     - parameter body: (body) AuthenticateUserByName 
     - parameter xEmbyAuthorization: (header) The authorization header can be either named &#x27;Authorization&#x27; or &#x27;X-Emby-Authorization&#x27;.    It must be of the following schema:     Emby UserId&#x3D;\&quot;(guid)\&quot;, Client&#x3D;\&quot;(string)\&quot;, Device&#x3D;\&quot;(string)\&quot;, DeviceId&#x3D;\&quot;(string)\&quot;, Version&#x3D;\&quot;string\&quot;, Token&#x3D;\&quot;(string)\&quot;     Please consult the documentation for further details. 

     - returns: RequestBuilder<AuthenticationAuthenticationResult> 
     */
    open class func postUsersAuthenticatebynameWithRequestBuilder(body: AuthenticateUserByName, xEmbyAuthorization: String) -> RequestBuilder<AuthenticationAuthenticationResult> {
        let path = "/Users/AuthenticateByName"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "X-Emby-Authorization": xEmbyAuthorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<AuthenticationAuthenticationResult>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }
    /**
     Updates a user

     - parameter body: (body) UserDto:  
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersById(body: UserDto, _id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postUsersByIdWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Updates a user
     - POST /Users/{Id}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) UserDto:  
     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func postUsersByIdWithRequestBuilder(body: UserDto, _id: String) -> RequestBuilder<Void> {
        var path = "/Users/{Id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Authenticates a user

     - parameter body: (body) AuthenticateUser 
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersByIdAuthenticate(body: AuthenticateUser, _id: String, completion: @escaping ((_ data: AuthenticationAuthenticationResult?,_ error: Error?) -> Void)) {
        postUsersByIdAuthenticateWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Authenticates a user
     - POST /Users/{Id}/Authenticate

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "User" : {
    "Policy" : {
      "AllowTagOrRating" : true,
      "EnableContentDeletion" : true,
      "AllowSharingPersonalItems" : true,
      "EnableContentDeletionFromFolders" : [ "EnableContentDeletionFromFolders", "EnableContentDeletionFromFolders" ],
      "ExcludedSubFolders" : [ "ExcludedSubFolders", "ExcludedSubFolders" ],
      "EnablePlaybackRemuxing" : true,
      "EnabledFolders" : [ "EnabledFolders", "EnabledFolders" ],
      "BlockedMediaFolders" : [ "BlockedMediaFolders", "BlockedMediaFolders" ],
      "IsDisabled" : true,
      "MaxParentalRating" : 1,
      "EnablePublicSharing" : true,
      "AccessSchedules" : [ {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      }, {
        "DayOfWeek" : "Sunday",
        "StartHour" : 5.962133916683182,
        "EndHour" : 5.637376656633329
      } ],
      "EnableContentDownloading" : true,
      "EnableSubtitleManagement" : true,
      "SimultaneousStreamLimit" : 9,
      "IncludeTags" : [ "IncludeTags", "IncludeTags" ],
      "IsAdministrator" : true,
      "EnableSubtitleDownloading" : true,
      "EnabledChannels" : [ "EnabledChannels", "EnabledChannels" ],
      "EnableAllDevices" : true,
      "EnableMediaConversion" : true,
      "InvalidLoginAttemptCount" : 2,
      "IsTagBlockingModeInclusive" : true,
      "RestrictedFeatures" : [ "RestrictedFeatures", "RestrictedFeatures" ],
      "EnableLiveTvAccess" : true,
      "EnableAllFolders" : true,
      "EnableSharedDeviceControl" : true,
      "EnableRemoteAccess" : true,
      "IsHidden" : true,
      "EnableLiveTvManagement" : true,
      "BlockUnratedItems" : [ "Movie", "Movie" ],
      "EnableMediaPlayback" : true,
      "EnableVideoPlaybackTranscoding" : true,
      "EnableAllChannels" : true,
      "EnableUserPreferenceAccess" : true,
      "AuthenticationProviderId" : "AuthenticationProviderId",
      "LockedOutDate" : 6,
      "BlockedTags" : [ "BlockedTags", "BlockedTags" ],
      "AllowCameraUpload" : true,
      "IsHiddenRemotely" : true,
      "EnabledDevices" : [ "EnabledDevices", "EnabledDevices" ],
      "EnableRemoteControlOfOtherUsers" : true,
      "EnableAudioPlaybackTranscoding" : true,
      "IsHiddenFromUnusedDevices" : true,
      "EnableSyncTranscoding" : true,
      "RemoteClientBitrateLimit" : 7
    },
    "HasConfiguredEasyPassword" : true,
    "EnableAutoLogin" : true,
    "UserItemShareLevel" : "None",
    "Configuration" : {
      "EnableNextEpisodeAutoPlay" : true,
      "SubtitleLanguagePreference" : "SubtitleLanguagePreference",
      "DisplayMissingEpisodes" : true,
      "IntroSkipMode" : "ShowButton",
      "OrderedViews" : [ "OrderedViews", "OrderedViews" ],
      "LatestItemsExcludes" : [ "LatestItemsExcludes", "LatestItemsExcludes" ],
      "SubtitleMode" : "Default",
      "ResumeRewindSeconds" : 0,
      "HidePlayedInLatest" : true,
      "ProfilePin" : "ProfilePin",
      "HidePlayedInMoreLikeThis" : true,
      "HidePlayedInSuggestions" : true,
      "RememberSubtitleSelections" : true,
      "EnableLocalPassword" : true,
      "AudioLanguagePreference" : "AudioLanguagePreference",
      "PlayDefaultAudioTrack" : true,
      "MyMediaExcludes" : [ "MyMediaExcludes", "MyMediaExcludes" ],
      "RememberAudioSelections" : true
    },
    "LastLoginDate" : "2000-01-23T04:56:07.000+00:00",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageTag" : "PrimaryImageTag",
    "Prefix" : "Prefix",
    "Name" : "Name",
    "ConnectUserName" : "ConnectUserName",
    "ServerId" : "ServerId",
    "HasConfiguredPassword" : true,
    "ServerName" : "ServerName",
    "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
    "PrimaryImageAspectRatio" : 3.616076749251911,
    "ConnectLinkType" : "LinkedUser",
    "Id" : "Id",
    "HasPassword" : true
  },
  "ServerId" : "ServerId",
  "AccessToken" : "AccessToken",
  "SessionInfo" : {
    "PlaylistLength" : 3,
    "ApplicationVersion" : "ApplicationVersion",
    "SupportedCommands" : [ "SupportedCommands", "SupportedCommands" ],
    "DeviceId" : "DeviceId",
    "PlaylistItemId" : "PlaylistItemId",
    "PlaylistIndex" : 9,
    "ServerId" : "ServerId",
    "RemoteEndPoint" : "RemoteEndPoint",
    "InternalDeviceId" : 2,
    "SupportsRemoteControl" : true,
    "Protocol" : "Protocol",
    "Client" : "Client",
    "UserName" : "UserName",
    "UserPrimaryImageTag" : "UserPrimaryImageTag",
    "DeviceType" : "DeviceType",
    "PlayableMediaTypes" : [ "PlayableMediaTypes", "PlayableMediaTypes" ],
    "NowPlayingItem" : {
      "SeasonName" : "SeasonName",
      "PremiereDate" : "2000-01-23T04:56:07.000+00:00",
      "Size" : 2,
      "CriticRating" : 6.4384236,
      "GameSystemId" : 3,
      "Studios" : [ {
        "Id" : 3,
        "Name" : "Name"
      }, {
        "Id" : 3,
        "Name" : "Name"
      } ],
      "CameraMake" : "CameraMake",
      "Aperture" : 1.041444916118296,
      "ChannelPrimaryImageTag" : "ChannelPrimaryImageTag",
      "ExtraType" : "ExtraType",
      "ParentBackdropItemId" : "ParentBackdropItemId",
      "Etag" : "Etag",
      "ParentLogoImageTag" : "ParentLogoImageTag",
      "ExposureTime" : 6.628464275087742,
      "MediaType" : "MediaType",
      "ManagementId" : "ManagementId",
      "Tags" : [ "Tags", "Tags" ],
      "Status" : "Status",
      "IndexNumberEnd" : 6,
      "ArtistItems" : [ {
        "Id" : "Id",
        "Name" : "Name"
      }, {
        "Id" : "Id",
        "Name" : "Name"
      } ],
      "MediaSources" : [ {
        "EncoderPath" : "EncoderPath",
        "RequiredHttpHeaders" : {
          "key" : "RequiredHttpHeaders"
        },
        "RunTimeTicks" : 5,
        "HasMixedProtocols" : true,
        "MediaStreams" : [ {
          "VideoRange" : "VideoRange",
          "ColorSpace" : "ColorSpace",
          "Index" : 4,
          "BitDepth" : 2,
          "ItemId" : "ItemId",
          "SupportsExternalStream" : true,
          "Codec" : "Codec",
          "SampleRate" : 1,
          "IsAnamorphic" : true,
          "PixelFormat" : "PixelFormat",
          "AttachmentSize" : 9,
          "SubtitleLocationType" : "InternalStream",
          "RefFrames" : 4,
          "IsAVC" : true,
          "ColorTransfer" : "ColorTransfer",
          "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
          "IsExternalUrl" : true,
          "DisplayTitle" : "DisplayTitle",
          "IsForced" : true,
          "ChannelLayout" : "ChannelLayout",
          "DisplayLanguage" : "DisplayLanguage",
          "AverageFrameRate" : 7.4577446,
          "StreamStartTimeTicks" : 9,
          "IsExternal" : true,
          "Level" : 5.025004791520295,
          "ExtendedVideoSubType" : "None",
          "Channels" : 1,
          "Profile" : "Profile",
          "MimeType" : "MimeType",
          "DeliveryUrl" : "DeliveryUrl",
          "ColorPrimaries" : "ColorPrimaries",
          "ServerId" : "ServerId",
          "Language" : "Language",
          "IsTextSubtitleStream" : true,
          "NalLengthSize" : "NalLengthSize",
          "Height" : 1,
          "Width" : 6,
          "TimeBase" : "TimeBase",
          "CodecTag" : "CodecTag",
          "IsDefault" : true,
          "Path" : "Path",
          "Comment" : "Comment",
          "DeliveryMethod" : "Encode",
          "Title" : "Title",
          "ExtendedVideoType" : "None",
          "Rotation" : 7,
          "RealFrameRate" : 1.1730742,
          "IsHearingImpaired" : true,
          "AspectRatio" : "AspectRatio",
          "Type" : "Unknown",
          "IsInterlaced" : true,
          "Extradata" : "Extradata",
          "BitRate" : 3
        }, {
          "VideoRange" : "VideoRange",
          "ColorSpace" : "ColorSpace",
          "Index" : 4,
          "BitDepth" : 2,
          "ItemId" : "ItemId",
          "SupportsExternalStream" : true,
          "Codec" : "Codec",
          "SampleRate" : 1,
          "IsAnamorphic" : true,
          "PixelFormat" : "PixelFormat",
          "AttachmentSize" : 9,
          "SubtitleLocationType" : "InternalStream",
          "RefFrames" : 4,
          "IsAVC" : true,
          "ColorTransfer" : "ColorTransfer",
          "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
          "IsExternalUrl" : true,
          "DisplayTitle" : "DisplayTitle",
          "IsForced" : true,
          "ChannelLayout" : "ChannelLayout",
          "DisplayLanguage" : "DisplayLanguage",
          "AverageFrameRate" : 7.4577446,
          "StreamStartTimeTicks" : 9,
          "IsExternal" : true,
          "Level" : 5.025004791520295,
          "ExtendedVideoSubType" : "None",
          "Channels" : 1,
          "Profile" : "Profile",
          "MimeType" : "MimeType",
          "DeliveryUrl" : "DeliveryUrl",
          "ColorPrimaries" : "ColorPrimaries",
          "ServerId" : "ServerId",
          "Language" : "Language",
          "IsTextSubtitleStream" : true,
          "NalLengthSize" : "NalLengthSize",
          "Height" : 1,
          "Width" : 6,
          "TimeBase" : "TimeBase",
          "CodecTag" : "CodecTag",
          "IsDefault" : true,
          "Path" : "Path",
          "Comment" : "Comment",
          "DeliveryMethod" : "Encode",
          "Title" : "Title",
          "ExtendedVideoType" : "None",
          "Rotation" : 7,
          "RealFrameRate" : 1.1730742,
          "IsHearingImpaired" : true,
          "AspectRatio" : "AspectRatio",
          "Type" : "Unknown",
          "IsInterlaced" : true,
          "Extradata" : "Extradata",
          "BitRate" : 3
        } ],
        "Size" : 1,
        "BufferMs" : 7,
        "ContainerStartTimeTicks" : 5,
        "SortName" : "SortName",
        "Timestamp" : "None",
        "ItemId" : "ItemId",
        "Name" : "Name",
        "RequiresOpening" : true,
        "DirectStreamUrl" : "DirectStreamUrl",
        "SupportsDirectStream" : true,
        "RequiresClosing" : true,
        "Container" : "Container",
        "ServerId" : "ServerId",
        "LiveStreamId" : "LiveStreamId",
        "RequiresLooping" : true,
        "Protocol" : "File",
        "AddApiKeyToDirectStreamUrl" : true,
        "DefaultSubtitleStreamIndex" : 9,
        "TrancodeLiveStartIndex" : 2,
        "IsInfiniteStream" : true,
        "Path" : "Path",
        "IsRemote" : true,
        "SupportsDirectPlay" : true,
        "TranscodingSubProtocol" : "TranscodingSubProtocol",
        "Formats" : [ "Formats", "Formats" ],
        "AnalyzeDurationMs" : 6,
        "WallClockStart" : "2000-01-23T04:56:07.000+00:00",
        "Bitrate" : 9,
        "OpenToken" : "OpenToken",
        "SupportsProbing" : true,
        "Type" : "Default",
        "ReadAtNativeFramerate" : true,
        "TranscodingContainer" : "TranscodingContainer",
        "ProbePath" : "ProbePath",
        "TranscodingUrl" : "TranscodingUrl",
        "Id" : "Id",
        "SupportsTranscoding" : true,
        "DefaultAudioStreamIndex" : 8
      }, {
        "EncoderPath" : "EncoderPath",
        "RequiredHttpHeaders" : {
          "key" : "RequiredHttpHeaders"
        },
        "RunTimeTicks" : 5,
        "HasMixedProtocols" : true,
        "MediaStreams" : [ {
          "VideoRange" : "VideoRange",
          "ColorSpace" : "ColorSpace",
          "Index" : 4,
          "BitDepth" : 2,
          "ItemId" : "ItemId",
          "SupportsExternalStream" : true,
          "Codec" : "Codec",
          "SampleRate" : 1,
          "IsAnamorphic" : true,
          "PixelFormat" : "PixelFormat",
          "AttachmentSize" : 9,
          "SubtitleLocationType" : "InternalStream",
          "RefFrames" : 4,
          "IsAVC" : true,
          "ColorTransfer" : "ColorTransfer",
          "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
          "IsExternalUrl" : true,
          "DisplayTitle" : "DisplayTitle",
          "IsForced" : true,
          "ChannelLayout" : "ChannelLayout",
          "DisplayLanguage" : "DisplayLanguage",
          "AverageFrameRate" : 7.4577446,
          "StreamStartTimeTicks" : 9,
          "IsExternal" : true,
          "Level" : 5.025004791520295,
          "ExtendedVideoSubType" : "None",
          "Channels" : 1,
          "Profile" : "Profile",
          "MimeType" : "MimeType",
          "DeliveryUrl" : "DeliveryUrl",
          "ColorPrimaries" : "ColorPrimaries",
          "ServerId" : "ServerId",
          "Language" : "Language",
          "IsTextSubtitleStream" : true,
          "NalLengthSize" : "NalLengthSize",
          "Height" : 1,
          "Width" : 6,
          "TimeBase" : "TimeBase",
          "CodecTag" : "CodecTag",
          "IsDefault" : true,
          "Path" : "Path",
          "Comment" : "Comment",
          "DeliveryMethod" : "Encode",
          "Title" : "Title",
          "ExtendedVideoType" : "None",
          "Rotation" : 7,
          "RealFrameRate" : 1.1730742,
          "IsHearingImpaired" : true,
          "AspectRatio" : "AspectRatio",
          "Type" : "Unknown",
          "IsInterlaced" : true,
          "Extradata" : "Extradata",
          "BitRate" : 3
        }, {
          "VideoRange" : "VideoRange",
          "ColorSpace" : "ColorSpace",
          "Index" : 4,
          "BitDepth" : 2,
          "ItemId" : "ItemId",
          "SupportsExternalStream" : true,
          "Codec" : "Codec",
          "SampleRate" : 1,
          "IsAnamorphic" : true,
          "PixelFormat" : "PixelFormat",
          "AttachmentSize" : 9,
          "SubtitleLocationType" : "InternalStream",
          "RefFrames" : 4,
          "IsAVC" : true,
          "ColorTransfer" : "ColorTransfer",
          "ExtendedVideoSubTypeDescription" : "ExtendedVideoSubTypeDescription",
          "IsExternalUrl" : true,
          "DisplayTitle" : "DisplayTitle",
          "IsForced" : true,
          "ChannelLayout" : "ChannelLayout",
          "DisplayLanguage" : "DisplayLanguage",
          "AverageFrameRate" : 7.4577446,
          "StreamStartTimeTicks" : 9,
          "IsExternal" : true,
          "Level" : 5.025004791520295,
          "ExtendedVideoSubType" : "None",
          "Channels" : 1,
          "Profile" : "Profile",
          "MimeType" : "MimeType",
          "DeliveryUrl" : "DeliveryUrl",
          "ColorPrimaries" : "ColorPrimaries",
          "ServerId" : "ServerId",
          "Language" : "Language",
          "IsTextSubtitleStream" : true,
          "NalLengthSize" : "NalLengthSize",
          "Height" : 1,
          "Width" : 6,
          "TimeBase" : "TimeBase",
          "CodecTag" : "CodecTag",
          "IsDefault" : true,
          "Path" : "Path",
          "Comment" : "Comment",
          "DeliveryMethod" : "Encode",
          "Title" : "Title",
          "ExtendedVideoType" : "None",
          "Rotation" : 7,
          "RealFrameRate" : 1.1730742,
          "IsHearingImpaired" : true,
          "AspectRatio" : "AspectRatio",
          "Type" : "Unknown",
          "IsInterlaced" : true,
          "Extradata" : "Extradata",
          "BitRate" : 3
        } ],
        "Size" : 1,
        "BufferMs" : 7,
        "ContainerStartTimeTicks" : 5,
        "SortName" : "SortName",
        "Timestamp" : "None",
        "ItemId" : "ItemId",
        "Name" : "Name",
        "RequiresOpening" : true,
        "DirectStreamUrl" : "DirectStreamUrl",
        "SupportsDirectStream" : true,
        "RequiresClosing" : true,
        "Container" : "Container",
        "ServerId" : "ServerId",
        "LiveStreamId" : "LiveStreamId",
        "RequiresLooping" : true,
        "Protocol" : "File",
        "AddApiKeyToDirectStreamUrl" : true,
        "DefaultSubtitleStreamIndex" : 9,
        "TrancodeLiveStartIndex" : 2,
        "IsInfiniteStream" : true,
        "Path" : "Path",
        "IsRemote" : true,
        "SupportsDirectPlay" : true,
        "TranscodingSubProtocol" : "TranscodingSubProtocol",
        "Formats" : [ "Formats", "Formats" ],
        "AnalyzeDurationMs" : 6,
        "WallClockStart" : "2000-01-23T04:56:07.000+00:00",
        "Bitrate" : 9,
        "OpenToken" : "OpenToken",
        "SupportsProbing" : true,
        "Type" : "Default",
        "ReadAtNativeFramerate" : true,
        "TranscodingContainer" : "TranscodingContainer",
        "ProbePath" : "ProbePath",
        "TranscodingUrl" : "TranscodingUrl",
        "Id" : "Id",
        "SupportsTranscoding" : true,
        "DefaultAudioStreamIndex" : 8
      } ],
      "GenreItems" : [ null, null ],
      "OfficialRating" : "OfficialRating",
      "Longitude" : 9.132027271330688,
      "Composers" : [ null, null ],
      "LockData" : true,
      "FocalLength" : 4.258773108174356,
      "IsNews" : true,
      "ShutterSpeed" : 4.678947989005849,
      "Id" : "Id",
      "SortIndexNumber" : 0,
      "IsFolder" : true,
      "CanMakePublic" : true,
      "SeriesTimerId" : "SeriesTimerId",
      "SeriesId" : "SeriesId",
      "ListingsPath" : "ListingsPath",
      "MediaStreams" : [ null, null ],
      "FileName" : "FileName",
      "PrimaryImageTag" : "PrimaryImageTag",
      "Prefix" : "Prefix",
      "CanDownload" : true,
      "IsMovie" : true,
      "SeriesCount" : 5,
      "PrimaryImageItemId" : "PrimaryImageItemId",
      "ListingsChannelId" : "ListingsChannelId",
      "SeriesStudio" : "SeriesStudio",
      "IsLive" : true,
      "Width" : 4,
      "ExternalUrls" : [ {
        "Url" : "Url",
        "Name" : "Name"
      }, {
        "Url" : "Url",
        "Name" : "Name"
      } ],
      "RecursiveItemCount" : 8,
      "Path" : "Path",
      "ParentId" : "ParentId",
      "TimerType" : "Program",
      "GameSystem" : "GameSystem",
      "MusicVideoCount" : 8,
      "IsSeries" : true,
      "ProductionLocations" : [ "ProductionLocations", "ProductionLocations" ],
      "Subviews" : [ "Subviews", "Subviews" ],
      "Bitrate" : 6,
      "EndDate" : "2000-01-23T04:56:07.000+00:00",
      "SeriesPrimaryImageTag" : "SeriesPrimaryImageTag",
      "ParentThumbItemId" : "ParentThumbItemId",
      "PreferredMetadataLanguage" : "PreferredMetadataLanguage",
      "CanLeaveContent" : true,
      "Type" : "Type",
      "BackdropImageTags" : [ "BackdropImageTags", "BackdropImageTags" ],
      "ParentBackdropImageTags" : [ "ParentBackdropImageTags", "ParentBackdropImageTags" ],
      "ChildCount" : 7,
      "TagItems" : [ null, null ],
      "Artists" : [ "Artists", "Artists" ],
      "ListingsChannelName" : "ListingsChannelName",
      "RunTimeTicks" : 1,
      "AlbumPrimaryImageTag" : "AlbumPrimaryImageTag",
      "Video3DFormat" : "HalfSideBySide",
      "CanDelete" : true,
      "PlaylistItemId" : "PlaylistItemId",
      "SortParentIndexNumber" : 6,
      "DisplayPreferencesId" : "DisplayPreferencesId",
      "Album" : "Album",
      "Latitude" : 7.260521264802104,
      "Guid" : "Guid",
      "SortName" : "SortName",
      "Name" : "Name",
      "StartDate" : "2000-01-23T04:56:07.000+00:00",
      "Container" : "Container",
      "ProductionYear" : 6,
      "SeriesName" : "SeriesName",
      "AsSeries" : true,
      "AlbumId" : "AlbumId",
      "SupportsSync" : true,
      "LocalTrailerCount" : 7,
      "IndexNumber" : 5,
      "CompletionPercentage" : 0.5199002018724985,
      "Genres" : [ "Genres", "Genres" ],
      "SeasonId" : "SeasonId",
      "LockedFields" : [ "Cast", "Cast" ],
      "Disabled" : true,
      "ProviderIds" : {
        "key" : "ProviderIds"
      },
      "RemoteTrailers" : [ {
        "Url" : "Url",
        "Name" : "Name"
      }, {
        "Url" : "Url",
        "Name" : "Name"
      } ],
      "PresentationUniqueKey" : "PresentationUniqueKey",
      "CustomRating" : "CustomRating",
      "ListingsChannelNumber" : "ListingsChannelNumber",
      "SyncStatus" : "Queued",
      "CanManageAccess" : true,
      "AirDays" : [ "Sunday", "Sunday" ],
      "ParentLogoItemId" : "ParentLogoItemId",
      "PartCount" : 7,
      "ListingsProviderId" : "ListingsProviderId",
      "CanEditItems" : true,
      "ChannelName" : "ChannelName",
      "EpisodeTitle" : "EpisodeTitle",
      "IsoSpeedRating" : 9,
      "CommunityRating" : 6.965118,
      "Software" : "Software",
      "Chapters" : [ {
        "StartPositionTicks" : 5,
        "ImageTag" : "ImageTag",
        "MarkerType" : "Chapter",
        "ChapterIndex" : 3,
        "Name" : "Name"
      }, {
        "StartPositionTicks" : 5,
        "ImageTag" : "ImageTag",
        "MarkerType" : "Chapter",
        "ChapterIndex" : 3,
        "Name" : "Name"
      } ],
      "SongCount" : 6,
      "Taglines" : [ "Taglines", "Taglines" ],
      "PreferredMetadataCountryCode" : "PreferredMetadataCountryCode",
      "CameraModel" : "CameraModel",
      "ChannelNumber" : "ChannelNumber",
      "UserData" : {
        "UnplayedItemCount" : 6,
        "Played" : true,
        "ServerId" : "ServerId",
        "PlayedPercentage" : 7.058770351582356,
        "Rating" : 0.8851374739011653,
        "PlayCount" : 4,
        "PlaybackPositionTicks" : 0,
        "LastPlayedDate" : "2000-01-23T04:56:07.000+00:00",
        "IsFavorite" : true,
        "ItemId" : "ItemId",
        "Key" : "Key"
      },
      "TimerId" : "TimerId",
      "DateCreated" : "2000-01-23T04:56:07.000+00:00",
      "ParentThumbImageTag" : "ParentThumbImageTag",
      "IsSports" : true,
      "ChannelId" : "ChannelId",
      "ParentIndexNumber" : 3,
      "IsNew" : true,
      "AffiliateCallSign" : "AffiliateCallSign",
      "ListingsId" : "ListingsId",
      "AlbumArtists" : [ null, null ],
      "ServerId" : "ServerId",
      "Number" : "Number",
      "AlbumCount" : 4,
      "IsRepeat" : true,
      "CollectionType" : "CollectionType",
      "PrimaryImageAspectRatio" : 3.0576100241049344,
      "Height" : 0,
      "IsKids" : true,
      "DisplayOrder" : "DisplayOrder",
      "MovieCount" : 7,
      "People" : [ {
        "Role" : "Role",
        "Type" : "Actor",
        "PrimaryImageTag" : "PrimaryImageTag",
        "Id" : "Id",
        "Name" : "Name"
      }, {
        "Role" : "Role",
        "Type" : "Actor",
        "PrimaryImageTag" : "PrimaryImageTag",
        "Id" : "Id",
        "Name" : "Name"
      } ],
      "Overview" : "Overview",
      "SpecialFeatureCount" : 3,
      "ImageOrientation" : "TopLeft",
      "AlbumArtist" : "AlbumArtist",
      "ImageTags" : {
        "key" : "ImageTags"
      },
      "OriginalTitle" : "OriginalTitle",
      "ForcedSortName" : "ForcedSortName",
      "SupportsResume" : true,
      "LocationType" : "FileSystem",
      "IsPremiere" : true,
      "Altitude" : 0.8774076871421566
    },
    "TranscodingInfo" : {
      "IsAudioDirect" : true,
      "ProcessStatistics" : {
        "Metrics" : [ {
          "Time" : "Time",
          "WorkingSet" : 6.778324963048013,
          "VirtualMemory" : 2.8841621266687802,
          "CpuPercent" : 1.284659006116532
        }, {
          "Time" : "Time",
          "WorkingSet" : 6.778324963048013,
          "VirtualMemory" : 2.8841621266687802,
          "CpuPercent" : 1.284659006116532
        } ],
        "AverageCpu" : 6.438423552598547,
        "CurrentCpu" : 9.018348186070783,
        "CurrentWorkingSet" : 6.965117697638846,
        "CurrentVirtualMemory" : 3.5571952270680973
      },
      "TranscodeReasons" : [ "ContainerNotSupported", "ContainerNotSupported" ],
      "VideoEncoderHwAccel" : "VideoEncoderHwAccel",
      "Framerate" : 1.0246457,
      "Container" : "Container",
      "TranscodingStartPositionTicks" : 7.457744773683766,
      "IsVideoDirect" : true,
      "AverageCpuUsage" : 9.369310271410669,
      "VideoDecoderIsHardware" : true,
      "VideoDecoderMediaType" : "VideoDecoderMediaType",
      "SubProtocol" : "SubProtocol",
      "CompletionPercentage" : 1.4894159098541704,
      "Height" : 4,
      "VideoPipelineInfo" : [ {
        "StepType" : "Decoder",
        "FfmpegDescription" : "FfmpegDescription",
        "Param" : "Param",
        "ParamShort" : "ParamShort",
        "StepTypeName" : "StepTypeName",
        "IsHardwareContext" : true,
        "FfmpegOptions" : "FfmpegOptions",
        "FfmpegName" : "FfmpegName",
        "Short" : "Short",
        "HardwareContextName" : "HardwareContextName",
        "Name" : "Name"
      }, {
        "StepType" : "Decoder",
        "FfmpegDescription" : "FfmpegDescription",
        "Param" : "Param",
        "ParamShort" : "ParamShort",
        "StepTypeName" : "StepTypeName",
        "IsHardwareContext" : true,
        "FfmpegOptions" : "FfmpegOptions",
        "FfmpegName" : "FfmpegName",
        "Short" : "Short",
        "HardwareContextName" : "HardwareContextName",
        "Name" : "Name"
      } ],
      "VideoDecoder" : "VideoDecoder",
      "Width" : 1,
      "AudioCodec" : "AudioCodec",
      "VideoEncoderIsHardware" : true,
      "SubtitlePipelineInfos" : [ [ null, null ], [ null, null ] ],
      "CpuHistory" : [ {
        "Item1" : 6.683562403749608,
        "Item2" : 8.762042012749001
      }, {
        "Item1" : 6.683562403749608,
        "Item2" : 8.762042012749001
      } ],
      "CurrentThrottle" : 6,
      "VideoCodec" : "VideoCodec",
      "Bitrate" : 4,
      "VideoDecoderHwAccel" : "VideoDecoderHwAccel",
      "TranscodingPositionTicks" : 6.84685269835264,
      "CurrentCpuUsage" : 9.965781217890562,
      "AudioBitrate" : 7,
      "AudioChannels" : 5,
      "VideoEncoderMediaType" : "VideoEncoderMediaType",
      "VideoEncoder" : "VideoEncoder",
      "VideoBitrate" : 1
    },
    "AppIconUrl" : "AppIconUrl",
    "UserId" : "UserId",
    "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
    "Id" : "Id",
    "AdditionalUsers" : [ {
      "UserName" : "UserName",
      "UserId" : "UserId",
      "UserInternalId" : 7
    }, {
      "UserName" : "UserName",
      "UserId" : "UserId",
      "UserInternalId" : 7
    } ],
    "PlayState" : {
      "RepeatMode" : "RepeatNone",
      "CanSeek" : true,
      "PlayMethod" : "Transcode",
      "SubtitleOffset" : 5,
      "PositionTicks" : 0,
      "AudioStreamIndex" : 1,
      "IsMuted" : true,
      "VolumeLevel" : 6,
      "MediaSourceId" : "MediaSourceId",
      "IsPaused" : true,
      "SubtitleStreamIndex" : 5,
      "PlaybackRate" : 2.3021358869347655
    },
    "DeviceName" : "DeviceName"
  }
}}]
     - externalDocs: class ExternalDocumentation {
    description: API Documentation: Authentication
    url: https://dev.emby.media/doc/restapi/User-Authentication.html
}
     - parameter body: (body) AuthenticateUser 
     - parameter _id: (path)  

     - returns: RequestBuilder<AuthenticationAuthenticationResult> 
     */
    open class func postUsersByIdAuthenticateWithRequestBuilder(body: AuthenticateUser, _id: String) -> RequestBuilder<AuthenticationAuthenticationResult> {
        var path = "/Users/{Id}/Authenticate"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AuthenticationAuthenticationResult>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Updates a user configuration

     - parameter body: (body) UserConfiguration:  
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersByIdConfiguration(body: UserConfiguration, _id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postUsersByIdConfigurationWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Updates a user configuration
     - POST /Users/{Id}/Configuration

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) UserConfiguration:  
     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func postUsersByIdConfigurationWithRequestBuilder(body: UserConfiguration, _id: String) -> RequestBuilder<Void> {
        var path = "/Users/{Id}/Configuration"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Updates a user configuration

     - parameter body: (body) Binary stream 
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersByIdConfigurationPartial(body: Object, _id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postUsersByIdConfigurationPartialWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Updates a user configuration
     - POST /Users/{Id}/Configuration/Partial

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) Binary stream 
     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func postUsersByIdConfigurationPartialWithRequestBuilder(body: Object, _id: String) -> RequestBuilder<Void> {
        var path = "/Users/{Id}/Configuration/Partial"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Deletes a user

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersByIdDelete(_id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postUsersByIdDeleteWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Deletes a user
     - POST /Users/{Id}/Delete

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func postUsersByIdDeleteWithRequestBuilder(_id: String) -> RequestBuilder<Void> {
        var path = "/Users/{Id}/Delete"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Updates a user's password

     - parameter body: (body) UpdateUserPassword 
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersByIdPassword(body: UpdateUserPassword, _id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postUsersByIdPasswordWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Updates a user's password
     - POST /Users/{Id}/Password

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) UpdateUserPassword 
     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func postUsersByIdPasswordWithRequestBuilder(body: UpdateUserPassword, _id: String) -> RequestBuilder<Void> {
        var path = "/Users/{Id}/Password"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Updates a user policy

     - parameter body: (body) UserPolicy:  
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersByIdPolicy(body: UserPolicy, _id: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postUsersByIdPolicyWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Updates a user policy
     - POST /Users/{Id}/Policy

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) UserPolicy:  
     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func postUsersByIdPolicyWithRequestBuilder(body: UserPolicy, _id: String) -> RequestBuilder<Void> {
        var path = "/Users/{Id}/Policy"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Clears audio or subtitle track selections for a user

     - parameter _id: (path)  
     - parameter trackType: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersByIdTrackselectionsByTracktypeDelete(_id: String, trackType: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postUsersByIdTrackselectionsByTracktypeDeleteWithRequestBuilder(_id: _id, trackType: trackType).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Clears audio or subtitle track selections for a user
     - POST /Users/{Id}/TrackSelections/{TrackType}/Delete

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter _id: (path)  
     - parameter trackType: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func postUsersByIdTrackselectionsByTracktypeDeleteWithRequestBuilder(_id: String, trackType: String) -> RequestBuilder<Void> {
        var path = "/Users/{Id}/TrackSelections/{TrackType}/Delete"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let trackTypePreEscape = "\(trackType)"
        let trackTypePostEscape = trackTypePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{TrackType}", with: trackTypePostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Updates a typed user setting

     - parameter body: (body) Binary stream 
     - parameter userId: (path)  
     - parameter key: (path) Key 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersByUseridTypedsettingsByKey(body: Object, userId: String, key: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postUsersByUseridTypedsettingsByKeyWithRequestBuilder(body: body, userId: userId, key: key).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Updates a typed user setting
     - POST /Users/{UserId}/TypedSettings/{Key}

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) Binary stream 
     - parameter userId: (path)  
     - parameter key: (path) Key 

     - returns: RequestBuilder<Void> 
     */
    open class func postUsersByUseridTypedsettingsByKeyWithRequestBuilder(body: Object, userId: String, key: String) -> RequestBuilder<Void> {
        var path = "/Users/{UserId}/TypedSettings/{Key}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{UserId}", with: userIdPostEscape, options: .literal, range: nil)
        let keyPreEscape = "\(key)"
        let keyPostEscape = keyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Key}", with: keyPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Initiates the forgot password process for a local user

     - parameter body: (body) ForgotPassword 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersForgotpassword(body: ForgotPassword, completion: @escaping ((_ data: ForgotPasswordResult?,_ error: Error?) -> Void)) {
        postUsersForgotpasswordWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Initiates the forgot password process for a local user
     - POST /Users/ForgotPassword

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "Action" : "ContactAdmin",
  "PinExpirationDate" : "2000-01-23T04:56:07.000+00:00",
  "PinFile" : "PinFile"
}}]
     - parameter body: (body) ForgotPassword 

     - returns: RequestBuilder<ForgotPasswordResult> 
     */
    open class func postUsersForgotpasswordWithRequestBuilder(body: ForgotPassword) -> RequestBuilder<ForgotPasswordResult> {
        let path = "/Users/ForgotPassword"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ForgotPasswordResult>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Redeems a forgot password pin

     - parameter body: (body) ForgotPasswordPin 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersForgotpasswordPin(body: ForgotPasswordPin, completion: @escaping ((_ data: PinRedeemResult?,_ error: Error?) -> Void)) {
        postUsersForgotpasswordPinWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Redeems a forgot password pin
     - POST /Users/ForgotPassword/Pin

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "UsersReset" : [ "UsersReset", "UsersReset" ],
  "Success" : true
}}]
     - parameter body: (body) ForgotPasswordPin 

     - returns: RequestBuilder<PinRedeemResult> 
     */
    open class func postUsersForgotpasswordPinWithRequestBuilder(body: ForgotPasswordPin) -> RequestBuilder<PinRedeemResult> {
        let path = "/Users/ForgotPassword/Pin"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<PinRedeemResult>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Creates a user

     - parameter body: (body) CreateUserByName 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postUsersNew(body: CreateUserByName, completion: @escaping ((_ data: UserDto?,_ error: Error?) -> Void)) {
        postUsersNewWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates a user
     - POST /Users/New

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "Policy" : {
    "AllowTagOrRating" : true,
    "EnableContentDeletion" : true,
    "AllowSharingPersonalItems" : true,
    "EnableContentDeletionFromFolders" : [ "EnableContentDeletionFromFolders", "EnableContentDeletionFromFolders" ],
    "ExcludedSubFolders" : [ "ExcludedSubFolders", "ExcludedSubFolders" ],
    "EnablePlaybackRemuxing" : true,
    "EnabledFolders" : [ "EnabledFolders", "EnabledFolders" ],
    "BlockedMediaFolders" : [ "BlockedMediaFolders", "BlockedMediaFolders" ],
    "IsDisabled" : true,
    "MaxParentalRating" : 1,
    "EnablePublicSharing" : true,
    "AccessSchedules" : [ {
      "DayOfWeek" : "Sunday",
      "StartHour" : 5.962133916683182,
      "EndHour" : 5.637376656633329
    }, {
      "DayOfWeek" : "Sunday",
      "StartHour" : 5.962133916683182,
      "EndHour" : 5.637376656633329
    } ],
    "EnableContentDownloading" : true,
    "EnableSubtitleManagement" : true,
    "SimultaneousStreamLimit" : 9,
    "IncludeTags" : [ "IncludeTags", "IncludeTags" ],
    "IsAdministrator" : true,
    "EnableSubtitleDownloading" : true,
    "EnabledChannels" : [ "EnabledChannels", "EnabledChannels" ],
    "EnableAllDevices" : true,
    "EnableMediaConversion" : true,
    "InvalidLoginAttemptCount" : 2,
    "IsTagBlockingModeInclusive" : true,
    "RestrictedFeatures" : [ "RestrictedFeatures", "RestrictedFeatures" ],
    "EnableLiveTvAccess" : true,
    "EnableAllFolders" : true,
    "EnableSharedDeviceControl" : true,
    "EnableRemoteAccess" : true,
    "IsHidden" : true,
    "EnableLiveTvManagement" : true,
    "BlockUnratedItems" : [ "Movie", "Movie" ],
    "EnableMediaPlayback" : true,
    "EnableVideoPlaybackTranscoding" : true,
    "EnableAllChannels" : true,
    "EnableUserPreferenceAccess" : true,
    "AuthenticationProviderId" : "AuthenticationProviderId",
    "LockedOutDate" : 6,
    "BlockedTags" : [ "BlockedTags", "BlockedTags" ],
    "AllowCameraUpload" : true,
    "IsHiddenRemotely" : true,
    "EnabledDevices" : [ "EnabledDevices", "EnabledDevices" ],
    "EnableRemoteControlOfOtherUsers" : true,
    "EnableAudioPlaybackTranscoding" : true,
    "IsHiddenFromUnusedDevices" : true,
    "EnableSyncTranscoding" : true,
    "RemoteClientBitrateLimit" : 7
  },
  "HasConfiguredEasyPassword" : true,
  "EnableAutoLogin" : true,
  "UserItemShareLevel" : "None",
  "Configuration" : {
    "EnableNextEpisodeAutoPlay" : true,
    "SubtitleLanguagePreference" : "SubtitleLanguagePreference",
    "DisplayMissingEpisodes" : true,
    "IntroSkipMode" : "ShowButton",
    "OrderedViews" : [ "OrderedViews", "OrderedViews" ],
    "LatestItemsExcludes" : [ "LatestItemsExcludes", "LatestItemsExcludes" ],
    "SubtitleMode" : "Default",
    "ResumeRewindSeconds" : 0,
    "HidePlayedInLatest" : true,
    "ProfilePin" : "ProfilePin",
    "HidePlayedInMoreLikeThis" : true,
    "HidePlayedInSuggestions" : true,
    "RememberSubtitleSelections" : true,
    "EnableLocalPassword" : true,
    "AudioLanguagePreference" : "AudioLanguagePreference",
    "PlayDefaultAudioTrack" : true,
    "MyMediaExcludes" : [ "MyMediaExcludes", "MyMediaExcludes" ],
    "RememberAudioSelections" : true
  },
  "LastLoginDate" : "2000-01-23T04:56:07.000+00:00",
  "DateCreated" : "2000-01-23T04:56:07.000+00:00",
  "PrimaryImageTag" : "PrimaryImageTag",
  "Prefix" : "Prefix",
  "Name" : "Name",
  "ConnectUserName" : "ConnectUserName",
  "ServerId" : "ServerId",
  "HasConfiguredPassword" : true,
  "ServerName" : "ServerName",
  "LastActivityDate" : "2000-01-23T04:56:07.000+00:00",
  "PrimaryImageAspectRatio" : 3.616076749251911,
  "ConnectLinkType" : "LinkedUser",
  "Id" : "Id",
  "HasPassword" : true
}}]
     - parameter body: (body) CreateUserByName 

     - returns: RequestBuilder<UserDto> 
     */
    open class func postUsersNewWithRequestBuilder(body: CreateUserByName) -> RequestBuilder<UserDto> {
        let path = "/Users/New"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<UserDto>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
