//
// MediaInfoServiceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class MediaInfoServiceAPI {
    /**
     Gets live playback media info for an item

     - parameter _id: (path) Item Id 
     - parameter userId: (query) User Id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getItemsByIdPlaybackinfo(_id: String, userId: String, completion: @escaping ((_ data: MediaInfoPlaybackInfoResponse?,_ error: Error?) -> Void)) {
        getItemsByIdPlaybackinfoWithRequestBuilder(_id: _id, userId: userId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets live playback media info for an item
     - GET /Items/{Id}/PlaybackInfo

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "PlaySessionId" : "PlaySessionId",
  "MediaSources" : [ {
    "EncoderPath" : "EncoderPath",
    "RequiredHttpHeaders" : {
      "key" : "RequiredHttpHeaders"
    },
    "RunTimeTicks" : 7,
    "MediaStreams" : [ {
      "VideoRange" : "VideoRange",
      "ColorSpace" : "ColorSpace",
      "Index" : 9,
      "BitDepth" : 7,
      "ItemId" : "ItemId",
      "SupportsExternalStream" : true,
      "Codec" : "Codec",
      "IsClosedCaptions" : true,
      "SampleRate" : 6,
      "IsAnamorphic" : true,
      "PixelFormat" : "PixelFormat",
      "AttachmentSize" : 6,
      "SubtitleLocationType" : "InternalStream",
      "RefFrames" : 1,
      "IsAVC" : true,
      "ColorTransfer" : "ColorTransfer",
      "IsExternalUrl" : true,
      "DisplayTitle" : "DisplayTitle",
      "IsForced" : true,
      "ChannelLayout" : "ChannelLayout",
      "DisplayLanguage" : "DisplayLanguage",
      "AverageFrameRate" : 4.9652185,
      "StreamStartTimeTicks" : 2,
      "IsExternal" : true,
      "Level" : 9.369310271410669,
      "CodecTimeBase" : "CodecTimeBase",
      "Channels" : 1,
      "Profile" : "Profile",
      "MimeType" : "MimeType",
      "DeliveryUrl" : "DeliveryUrl",
      "ColorPrimaries" : "ColorPrimaries",
      "ServerId" : "ServerId",
      "Language" : "Language",
      "IsTextSubtitleStream" : true,
      "NalLengthSize" : "NalLengthSize",
      "Height" : 7,
      "Width" : 1,
      "TimeBase" : "TimeBase",
      "CodecTag" : "CodecTag",
      "IsDefault" : true,
      "Path" : "Path",
      "Comment" : "Comment",
      "DeliveryMethod" : "Encode",
      "Title" : "Title",
      "Rotation" : 1,
      "RealFrameRate" : 5.025005,
      "AspectRatio" : "AspectRatio",
      "Type" : "Unknown",
      "IsInterlaced" : true,
      "Extradata" : "Extradata",
      "BitRate" : 4
    }, {
      "VideoRange" : "VideoRange",
      "ColorSpace" : "ColorSpace",
      "Index" : 9,
      "BitDepth" : 7,
      "ItemId" : "ItemId",
      "SupportsExternalStream" : true,
      "Codec" : "Codec",
      "IsClosedCaptions" : true,
      "SampleRate" : 6,
      "IsAnamorphic" : true,
      "PixelFormat" : "PixelFormat",
      "AttachmentSize" : 6,
      "SubtitleLocationType" : "InternalStream",
      "RefFrames" : 1,
      "IsAVC" : true,
      "ColorTransfer" : "ColorTransfer",
      "IsExternalUrl" : true,
      "DisplayTitle" : "DisplayTitle",
      "IsForced" : true,
      "ChannelLayout" : "ChannelLayout",
      "DisplayLanguage" : "DisplayLanguage",
      "AverageFrameRate" : 4.9652185,
      "StreamStartTimeTicks" : 2,
      "IsExternal" : true,
      "Level" : 9.369310271410669,
      "CodecTimeBase" : "CodecTimeBase",
      "Channels" : 1,
      "Profile" : "Profile",
      "MimeType" : "MimeType",
      "DeliveryUrl" : "DeliveryUrl",
      "ColorPrimaries" : "ColorPrimaries",
      "ServerId" : "ServerId",
      "Language" : "Language",
      "IsTextSubtitleStream" : true,
      "NalLengthSize" : "NalLengthSize",
      "Height" : 7,
      "Width" : 1,
      "TimeBase" : "TimeBase",
      "CodecTag" : "CodecTag",
      "IsDefault" : true,
      "Path" : "Path",
      "Comment" : "Comment",
      "DeliveryMethod" : "Encode",
      "Title" : "Title",
      "Rotation" : 1,
      "RealFrameRate" : 5.025005,
      "AspectRatio" : "AspectRatio",
      "Type" : "Unknown",
      "IsInterlaced" : true,
      "Extradata" : "Extradata",
      "BitRate" : 4
    } ],
    "Size" : 2,
    "BufferMs" : 3,
    "ContainerStartTimeTicks" : 9,
    "SortName" : "SortName",
    "Timestamp" : "None",
    "ItemId" : "ItemId",
    "Name" : "Name",
    "RequiresOpening" : true,
    "DirectStreamUrl" : "DirectStreamUrl",
    "SupportsDirectStream" : true,
    "RequiresClosing" : true,
    "Container" : "Container",
    "ServerId" : "ServerId",
    "LiveStreamId" : "LiveStreamId",
    "RequiresLooping" : true,
    "Protocol" : "File",
    "DefaultSubtitleStreamIndex" : 3,
    "IsInfiniteStream" : true,
    "Path" : "Path",
    "IsRemote" : true,
    "SupportsDirectPlay" : true,
    "TranscodingSubProtocol" : "TranscodingSubProtocol",
    "Formats" : [ "Formats", "Formats" ],
    "AnalyzeDurationMs" : 9,
    "Bitrate" : 8,
    "OpenToken" : "OpenToken",
    "SupportsProbing" : true,
    "Type" : "Default",
    "ReadAtNativeFramerate" : true,
    "TranscodingContainer" : "TranscodingContainer",
    "TranscodingUrl" : "TranscodingUrl",
    "Id" : "Id",
    "SupportsTranscoding" : true,
    "DefaultAudioStreamIndex" : 6
  }, {
    "EncoderPath" : "EncoderPath",
    "RequiredHttpHeaders" : {
      "key" : "RequiredHttpHeaders"
    },
    "RunTimeTicks" : 7,
    "MediaStreams" : [ {
      "VideoRange" : "VideoRange",
      "ColorSpace" : "ColorSpace",
      "Index" : 9,
      "BitDepth" : 7,
      "ItemId" : "ItemId",
      "SupportsExternalStream" : true,
      "Codec" : "Codec",
      "IsClosedCaptions" : true,
      "SampleRate" : 6,
      "IsAnamorphic" : true,
      "PixelFormat" : "PixelFormat",
      "AttachmentSize" : 6,
      "SubtitleLocationType" : "InternalStream",
      "RefFrames" : 1,
      "IsAVC" : true,
      "ColorTransfer" : "ColorTransfer",
      "IsExternalUrl" : true,
      "DisplayTitle" : "DisplayTitle",
      "IsForced" : true,
      "ChannelLayout" : "ChannelLayout",
      "DisplayLanguage" : "DisplayLanguage",
      "AverageFrameRate" : 4.9652185,
      "StreamStartTimeTicks" : 2,
      "IsExternal" : true,
      "Level" : 9.369310271410669,
      "CodecTimeBase" : "CodecTimeBase",
      "Channels" : 1,
      "Profile" : "Profile",
      "MimeType" : "MimeType",
      "DeliveryUrl" : "DeliveryUrl",
      "ColorPrimaries" : "ColorPrimaries",
      "ServerId" : "ServerId",
      "Language" : "Language",
      "IsTextSubtitleStream" : true,
      "NalLengthSize" : "NalLengthSize",
      "Height" : 7,
      "Width" : 1,
      "TimeBase" : "TimeBase",
      "CodecTag" : "CodecTag",
      "IsDefault" : true,
      "Path" : "Path",
      "Comment" : "Comment",
      "DeliveryMethod" : "Encode",
      "Title" : "Title",
      "Rotation" : 1,
      "RealFrameRate" : 5.025005,
      "AspectRatio" : "AspectRatio",
      "Type" : "Unknown",
      "IsInterlaced" : true,
      "Extradata" : "Extradata",
      "BitRate" : 4
    }, {
      "VideoRange" : "VideoRange",
      "ColorSpace" : "ColorSpace",
      "Index" : 9,
      "BitDepth" : 7,
      "ItemId" : "ItemId",
      "SupportsExternalStream" : true,
      "Codec" : "Codec",
      "IsClosedCaptions" : true,
      "SampleRate" : 6,
      "IsAnamorphic" : true,
      "PixelFormat" : "PixelFormat",
      "AttachmentSize" : 6,
      "SubtitleLocationType" : "InternalStream",
      "RefFrames" : 1,
      "IsAVC" : true,
      "ColorTransfer" : "ColorTransfer",
      "IsExternalUrl" : true,
      "DisplayTitle" : "DisplayTitle",
      "IsForced" : true,
      "ChannelLayout" : "ChannelLayout",
      "DisplayLanguage" : "DisplayLanguage",
      "AverageFrameRate" : 4.9652185,
      "StreamStartTimeTicks" : 2,
      "IsExternal" : true,
      "Level" : 9.369310271410669,
      "CodecTimeBase" : "CodecTimeBase",
      "Channels" : 1,
      "Profile" : "Profile",
      "MimeType" : "MimeType",
      "DeliveryUrl" : "DeliveryUrl",
      "ColorPrimaries" : "ColorPrimaries",
      "ServerId" : "ServerId",
      "Language" : "Language",
      "IsTextSubtitleStream" : true,
      "NalLengthSize" : "NalLengthSize",
      "Height" : 7,
      "Width" : 1,
      "TimeBase" : "TimeBase",
      "CodecTag" : "CodecTag",
      "IsDefault" : true,
      "Path" : "Path",
      "Comment" : "Comment",
      "DeliveryMethod" : "Encode",
      "Title" : "Title",
      "Rotation" : 1,
      "RealFrameRate" : 5.025005,
      "AspectRatio" : "AspectRatio",
      "Type" : "Unknown",
      "IsInterlaced" : true,
      "Extradata" : "Extradata",
      "BitRate" : 4
    } ],
    "Size" : 2,
    "BufferMs" : 3,
    "ContainerStartTimeTicks" : 9,
    "SortName" : "SortName",
    "Timestamp" : "None",
    "ItemId" : "ItemId",
    "Name" : "Name",
    "RequiresOpening" : true,
    "DirectStreamUrl" : "DirectStreamUrl",
    "SupportsDirectStream" : true,
    "RequiresClosing" : true,
    "Container" : "Container",
    "ServerId" : "ServerId",
    "LiveStreamId" : "LiveStreamId",
    "RequiresLooping" : true,
    "Protocol" : "File",
    "DefaultSubtitleStreamIndex" : 3,
    "IsInfiniteStream" : true,
    "Path" : "Path",
    "IsRemote" : true,
    "SupportsDirectPlay" : true,
    "TranscodingSubProtocol" : "TranscodingSubProtocol",
    "Formats" : [ "Formats", "Formats" ],
    "AnalyzeDurationMs" : 9,
    "Bitrate" : 8,
    "OpenToken" : "OpenToken",
    "SupportsProbing" : true,
    "Type" : "Default",
    "ReadAtNativeFramerate" : true,
    "TranscodingContainer" : "TranscodingContainer",
    "TranscodingUrl" : "TranscodingUrl",
    "Id" : "Id",
    "SupportsTranscoding" : true,
    "DefaultAudioStreamIndex" : 6
  } ],
  "ErrorCode" : "NotAllowed"
}}]
     - parameter _id: (path) Item Id 
     - parameter userId: (query) User Id 

     - returns: RequestBuilder<MediaInfoPlaybackInfoResponse> 
     */
    open class func getItemsByIdPlaybackinfoWithRequestBuilder(_id: String, userId: String) -> RequestBuilder<MediaInfoPlaybackInfoResponse> {
        var path = "/Items/{Id}/PlaybackInfo"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "UserId": userId
        ])


        let requestBuilder: RequestBuilder<MediaInfoPlaybackInfoResponse>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter size: (query) Size 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getPlaybackBitratetest(size: Int64, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        getPlaybackBitratetestWithRequestBuilder(size: size).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - GET /Playback/BitrateTest

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter size: (query) Size 

     - returns: RequestBuilder<Void> 
     */
    open class func getPlaybackBitratetestWithRequestBuilder(size: Int64) -> RequestBuilder<Void> {
        let path = "/Playback/BitrateTest"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "Size": size.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets live playback media info for an item

     - parameter body: (body) PlaybackInfoRequest:  
     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postItemsByIdPlaybackinfo(body: MediaInfoPlaybackInfoRequest, _id: String, completion: @escaping ((_ data: MediaInfoPlaybackInfoResponse?,_ error: Error?) -> Void)) {
        postItemsByIdPlaybackinfoWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets live playback media info for an item
     - POST /Items/{Id}/PlaybackInfo

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "PlaySessionId" : "PlaySessionId",
  "MediaSources" : [ {
    "EncoderPath" : "EncoderPath",
    "RequiredHttpHeaders" : {
      "key" : "RequiredHttpHeaders"
    },
    "RunTimeTicks" : 7,
    "MediaStreams" : [ {
      "VideoRange" : "VideoRange",
      "ColorSpace" : "ColorSpace",
      "Index" : 9,
      "BitDepth" : 7,
      "ItemId" : "ItemId",
      "SupportsExternalStream" : true,
      "Codec" : "Codec",
      "IsClosedCaptions" : true,
      "SampleRate" : 6,
      "IsAnamorphic" : true,
      "PixelFormat" : "PixelFormat",
      "AttachmentSize" : 6,
      "SubtitleLocationType" : "InternalStream",
      "RefFrames" : 1,
      "IsAVC" : true,
      "ColorTransfer" : "ColorTransfer",
      "IsExternalUrl" : true,
      "DisplayTitle" : "DisplayTitle",
      "IsForced" : true,
      "ChannelLayout" : "ChannelLayout",
      "DisplayLanguage" : "DisplayLanguage",
      "AverageFrameRate" : 4.9652185,
      "StreamStartTimeTicks" : 2,
      "IsExternal" : true,
      "Level" : 9.369310271410669,
      "CodecTimeBase" : "CodecTimeBase",
      "Channels" : 1,
      "Profile" : "Profile",
      "MimeType" : "MimeType",
      "DeliveryUrl" : "DeliveryUrl",
      "ColorPrimaries" : "ColorPrimaries",
      "ServerId" : "ServerId",
      "Language" : "Language",
      "IsTextSubtitleStream" : true,
      "NalLengthSize" : "NalLengthSize",
      "Height" : 7,
      "Width" : 1,
      "TimeBase" : "TimeBase",
      "CodecTag" : "CodecTag",
      "IsDefault" : true,
      "Path" : "Path",
      "Comment" : "Comment",
      "DeliveryMethod" : "Encode",
      "Title" : "Title",
      "Rotation" : 1,
      "RealFrameRate" : 5.025005,
      "AspectRatio" : "AspectRatio",
      "Type" : "Unknown",
      "IsInterlaced" : true,
      "Extradata" : "Extradata",
      "BitRate" : 4
    }, {
      "VideoRange" : "VideoRange",
      "ColorSpace" : "ColorSpace",
      "Index" : 9,
      "BitDepth" : 7,
      "ItemId" : "ItemId",
      "SupportsExternalStream" : true,
      "Codec" : "Codec",
      "IsClosedCaptions" : true,
      "SampleRate" : 6,
      "IsAnamorphic" : true,
      "PixelFormat" : "PixelFormat",
      "AttachmentSize" : 6,
      "SubtitleLocationType" : "InternalStream",
      "RefFrames" : 1,
      "IsAVC" : true,
      "ColorTransfer" : "ColorTransfer",
      "IsExternalUrl" : true,
      "DisplayTitle" : "DisplayTitle",
      "IsForced" : true,
      "ChannelLayout" : "ChannelLayout",
      "DisplayLanguage" : "DisplayLanguage",
      "AverageFrameRate" : 4.9652185,
      "StreamStartTimeTicks" : 2,
      "IsExternal" : true,
      "Level" : 9.369310271410669,
      "CodecTimeBase" : "CodecTimeBase",
      "Channels" : 1,
      "Profile" : "Profile",
      "MimeType" : "MimeType",
      "DeliveryUrl" : "DeliveryUrl",
      "ColorPrimaries" : "ColorPrimaries",
      "ServerId" : "ServerId",
      "Language" : "Language",
      "IsTextSubtitleStream" : true,
      "NalLengthSize" : "NalLengthSize",
      "Height" : 7,
      "Width" : 1,
      "TimeBase" : "TimeBase",
      "CodecTag" : "CodecTag",
      "IsDefault" : true,
      "Path" : "Path",
      "Comment" : "Comment",
      "DeliveryMethod" : "Encode",
      "Title" : "Title",
      "Rotation" : 1,
      "RealFrameRate" : 5.025005,
      "AspectRatio" : "AspectRatio",
      "Type" : "Unknown",
      "IsInterlaced" : true,
      "Extradata" : "Extradata",
      "BitRate" : 4
    } ],
    "Size" : 2,
    "BufferMs" : 3,
    "ContainerStartTimeTicks" : 9,
    "SortName" : "SortName",
    "Timestamp" : "None",
    "ItemId" : "ItemId",
    "Name" : "Name",
    "RequiresOpening" : true,
    "DirectStreamUrl" : "DirectStreamUrl",
    "SupportsDirectStream" : true,
    "RequiresClosing" : true,
    "Container" : "Container",
    "ServerId" : "ServerId",
    "LiveStreamId" : "LiveStreamId",
    "RequiresLooping" : true,
    "Protocol" : "File",
    "DefaultSubtitleStreamIndex" : 3,
    "IsInfiniteStream" : true,
    "Path" : "Path",
    "IsRemote" : true,
    "SupportsDirectPlay" : true,
    "TranscodingSubProtocol" : "TranscodingSubProtocol",
    "Formats" : [ "Formats", "Formats" ],
    "AnalyzeDurationMs" : 9,
    "Bitrate" : 8,
    "OpenToken" : "OpenToken",
    "SupportsProbing" : true,
    "Type" : "Default",
    "ReadAtNativeFramerate" : true,
    "TranscodingContainer" : "TranscodingContainer",
    "TranscodingUrl" : "TranscodingUrl",
    "Id" : "Id",
    "SupportsTranscoding" : true,
    "DefaultAudioStreamIndex" : 6
  }, {
    "EncoderPath" : "EncoderPath",
    "RequiredHttpHeaders" : {
      "key" : "RequiredHttpHeaders"
    },
    "RunTimeTicks" : 7,
    "MediaStreams" : [ {
      "VideoRange" : "VideoRange",
      "ColorSpace" : "ColorSpace",
      "Index" : 9,
      "BitDepth" : 7,
      "ItemId" : "ItemId",
      "SupportsExternalStream" : true,
      "Codec" : "Codec",
      "IsClosedCaptions" : true,
      "SampleRate" : 6,
      "IsAnamorphic" : true,
      "PixelFormat" : "PixelFormat",
      "AttachmentSize" : 6,
      "SubtitleLocationType" : "InternalStream",
      "RefFrames" : 1,
      "IsAVC" : true,
      "ColorTransfer" : "ColorTransfer",
      "IsExternalUrl" : true,
      "DisplayTitle" : "DisplayTitle",
      "IsForced" : true,
      "ChannelLayout" : "ChannelLayout",
      "DisplayLanguage" : "DisplayLanguage",
      "AverageFrameRate" : 4.9652185,
      "StreamStartTimeTicks" : 2,
      "IsExternal" : true,
      "Level" : 9.369310271410669,
      "CodecTimeBase" : "CodecTimeBase",
      "Channels" : 1,
      "Profile" : "Profile",
      "MimeType" : "MimeType",
      "DeliveryUrl" : "DeliveryUrl",
      "ColorPrimaries" : "ColorPrimaries",
      "ServerId" : "ServerId",
      "Language" : "Language",
      "IsTextSubtitleStream" : true,
      "NalLengthSize" : "NalLengthSize",
      "Height" : 7,
      "Width" : 1,
      "TimeBase" : "TimeBase",
      "CodecTag" : "CodecTag",
      "IsDefault" : true,
      "Path" : "Path",
      "Comment" : "Comment",
      "DeliveryMethod" : "Encode",
      "Title" : "Title",
      "Rotation" : 1,
      "RealFrameRate" : 5.025005,
      "AspectRatio" : "AspectRatio",
      "Type" : "Unknown",
      "IsInterlaced" : true,
      "Extradata" : "Extradata",
      "BitRate" : 4
    }, {
      "VideoRange" : "VideoRange",
      "ColorSpace" : "ColorSpace",
      "Index" : 9,
      "BitDepth" : 7,
      "ItemId" : "ItemId",
      "SupportsExternalStream" : true,
      "Codec" : "Codec",
      "IsClosedCaptions" : true,
      "SampleRate" : 6,
      "IsAnamorphic" : true,
      "PixelFormat" : "PixelFormat",
      "AttachmentSize" : 6,
      "SubtitleLocationType" : "InternalStream",
      "RefFrames" : 1,
      "IsAVC" : true,
      "ColorTransfer" : "ColorTransfer",
      "IsExternalUrl" : true,
      "DisplayTitle" : "DisplayTitle",
      "IsForced" : true,
      "ChannelLayout" : "ChannelLayout",
      "DisplayLanguage" : "DisplayLanguage",
      "AverageFrameRate" : 4.9652185,
      "StreamStartTimeTicks" : 2,
      "IsExternal" : true,
      "Level" : 9.369310271410669,
      "CodecTimeBase" : "CodecTimeBase",
      "Channels" : 1,
      "Profile" : "Profile",
      "MimeType" : "MimeType",
      "DeliveryUrl" : "DeliveryUrl",
      "ColorPrimaries" : "ColorPrimaries",
      "ServerId" : "ServerId",
      "Language" : "Language",
      "IsTextSubtitleStream" : true,
      "NalLengthSize" : "NalLengthSize",
      "Height" : 7,
      "Width" : 1,
      "TimeBase" : "TimeBase",
      "CodecTag" : "CodecTag",
      "IsDefault" : true,
      "Path" : "Path",
      "Comment" : "Comment",
      "DeliveryMethod" : "Encode",
      "Title" : "Title",
      "Rotation" : 1,
      "RealFrameRate" : 5.025005,
      "AspectRatio" : "AspectRatio",
      "Type" : "Unknown",
      "IsInterlaced" : true,
      "Extradata" : "Extradata",
      "BitRate" : 4
    } ],
    "Size" : 2,
    "BufferMs" : 3,
    "ContainerStartTimeTicks" : 9,
    "SortName" : "SortName",
    "Timestamp" : "None",
    "ItemId" : "ItemId",
    "Name" : "Name",
    "RequiresOpening" : true,
    "DirectStreamUrl" : "DirectStreamUrl",
    "SupportsDirectStream" : true,
    "RequiresClosing" : true,
    "Container" : "Container",
    "ServerId" : "ServerId",
    "LiveStreamId" : "LiveStreamId",
    "RequiresLooping" : true,
    "Protocol" : "File",
    "DefaultSubtitleStreamIndex" : 3,
    "IsInfiniteStream" : true,
    "Path" : "Path",
    "IsRemote" : true,
    "SupportsDirectPlay" : true,
    "TranscodingSubProtocol" : "TranscodingSubProtocol",
    "Formats" : [ "Formats", "Formats" ],
    "AnalyzeDurationMs" : 9,
    "Bitrate" : 8,
    "OpenToken" : "OpenToken",
    "SupportsProbing" : true,
    "Type" : "Default",
    "ReadAtNativeFramerate" : true,
    "TranscodingContainer" : "TranscodingContainer",
    "TranscodingUrl" : "TranscodingUrl",
    "Id" : "Id",
    "SupportsTranscoding" : true,
    "DefaultAudioStreamIndex" : 6
  } ],
  "ErrorCode" : "NotAllowed"
}}]
     - parameter body: (body) PlaybackInfoRequest:  
     - parameter _id: (path)  

     - returns: RequestBuilder<MediaInfoPlaybackInfoResponse> 
     */
    open class func postItemsByIdPlaybackinfoWithRequestBuilder(body: MediaInfoPlaybackInfoRequest, _id: String) -> RequestBuilder<MediaInfoPlaybackInfoResponse> {
        var path = "/Items/{Id}/PlaybackInfo"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{Id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<MediaInfoPlaybackInfoResponse>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Closes a media source

     - parameter liveStreamId: (query) LiveStreamId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postLivestreamsClose(liveStreamId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postLivestreamsCloseWithRequestBuilder(liveStreamId: liveStreamId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Closes a media source
     - POST /LiveStreams/Close

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter liveStreamId: (query) LiveStreamId 

     - returns: RequestBuilder<Void> 
     */
    open class func postLivestreamsCloseWithRequestBuilder(liveStreamId: String) -> RequestBuilder<Void> {
        let path = "/LiveStreams/Close"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "LiveStreamId": liveStreamId
        ])


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Closes a media source

     - parameter liveStreamId: (query) LiveStreamId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postLivestreamsMediainfo(liveStreamId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postLivestreamsMediainfoWithRequestBuilder(liveStreamId: liveStreamId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Closes a media source
     - POST /LiveStreams/MediaInfo

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter liveStreamId: (query) LiveStreamId 

     - returns: RequestBuilder<Void> 
     */
    open class func postLivestreamsMediainfoWithRequestBuilder(liveStreamId: String) -> RequestBuilder<Void> {
        let path = "/LiveStreams/MediaInfo"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "LiveStreamId": liveStreamId
        ])


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Opens a media source

     - parameter body: (body) LiveStreamRequest:  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postLivestreamsOpen(body: MediaInfoLiveStreamRequest, completion: @escaping ((_ data: MediaInfoLiveStreamResponse?,_ error: Error?) -> Void)) {
        postLivestreamsOpenWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Opens a media source
     - POST /LiveStreams/Open

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "MediaSource" : {
    "EncoderPath" : "EncoderPath",
    "RequiredHttpHeaders" : {
      "key" : "RequiredHttpHeaders"
    },
    "RunTimeTicks" : 7,
    "MediaStreams" : [ {
      "VideoRange" : "VideoRange",
      "ColorSpace" : "ColorSpace",
      "Index" : 9,
      "BitDepth" : 7,
      "ItemId" : "ItemId",
      "SupportsExternalStream" : true,
      "Codec" : "Codec",
      "IsClosedCaptions" : true,
      "SampleRate" : 6,
      "IsAnamorphic" : true,
      "PixelFormat" : "PixelFormat",
      "AttachmentSize" : 6,
      "SubtitleLocationType" : "InternalStream",
      "RefFrames" : 1,
      "IsAVC" : true,
      "ColorTransfer" : "ColorTransfer",
      "IsExternalUrl" : true,
      "DisplayTitle" : "DisplayTitle",
      "IsForced" : true,
      "ChannelLayout" : "ChannelLayout",
      "DisplayLanguage" : "DisplayLanguage",
      "AverageFrameRate" : 4.9652185,
      "StreamStartTimeTicks" : 2,
      "IsExternal" : true,
      "Level" : 9.369310271410669,
      "CodecTimeBase" : "CodecTimeBase",
      "Channels" : 1,
      "Profile" : "Profile",
      "MimeType" : "MimeType",
      "DeliveryUrl" : "DeliveryUrl",
      "ColorPrimaries" : "ColorPrimaries",
      "ServerId" : "ServerId",
      "Language" : "Language",
      "IsTextSubtitleStream" : true,
      "NalLengthSize" : "NalLengthSize",
      "Height" : 7,
      "Width" : 1,
      "TimeBase" : "TimeBase",
      "CodecTag" : "CodecTag",
      "IsDefault" : true,
      "Path" : "Path",
      "Comment" : "Comment",
      "DeliveryMethod" : "Encode",
      "Title" : "Title",
      "Rotation" : 1,
      "RealFrameRate" : 5.025005,
      "AspectRatio" : "AspectRatio",
      "Type" : "Unknown",
      "IsInterlaced" : true,
      "Extradata" : "Extradata",
      "BitRate" : 4
    }, {
      "VideoRange" : "VideoRange",
      "ColorSpace" : "ColorSpace",
      "Index" : 9,
      "BitDepth" : 7,
      "ItemId" : "ItemId",
      "SupportsExternalStream" : true,
      "Codec" : "Codec",
      "IsClosedCaptions" : true,
      "SampleRate" : 6,
      "IsAnamorphic" : true,
      "PixelFormat" : "PixelFormat",
      "AttachmentSize" : 6,
      "SubtitleLocationType" : "InternalStream",
      "RefFrames" : 1,
      "IsAVC" : true,
      "ColorTransfer" : "ColorTransfer",
      "IsExternalUrl" : true,
      "DisplayTitle" : "DisplayTitle",
      "IsForced" : true,
      "ChannelLayout" : "ChannelLayout",
      "DisplayLanguage" : "DisplayLanguage",
      "AverageFrameRate" : 4.9652185,
      "StreamStartTimeTicks" : 2,
      "IsExternal" : true,
      "Level" : 9.369310271410669,
      "CodecTimeBase" : "CodecTimeBase",
      "Channels" : 1,
      "Profile" : "Profile",
      "MimeType" : "MimeType",
      "DeliveryUrl" : "DeliveryUrl",
      "ColorPrimaries" : "ColorPrimaries",
      "ServerId" : "ServerId",
      "Language" : "Language",
      "IsTextSubtitleStream" : true,
      "NalLengthSize" : "NalLengthSize",
      "Height" : 7,
      "Width" : 1,
      "TimeBase" : "TimeBase",
      "CodecTag" : "CodecTag",
      "IsDefault" : true,
      "Path" : "Path",
      "Comment" : "Comment",
      "DeliveryMethod" : "Encode",
      "Title" : "Title",
      "Rotation" : 1,
      "RealFrameRate" : 5.025005,
      "AspectRatio" : "AspectRatio",
      "Type" : "Unknown",
      "IsInterlaced" : true,
      "Extradata" : "Extradata",
      "BitRate" : 4
    } ],
    "Size" : 2,
    "BufferMs" : 3,
    "ContainerStartTimeTicks" : 9,
    "SortName" : "SortName",
    "Timestamp" : "None",
    "ItemId" : "ItemId",
    "Name" : "Name",
    "RequiresOpening" : true,
    "DirectStreamUrl" : "DirectStreamUrl",
    "SupportsDirectStream" : true,
    "RequiresClosing" : true,
    "Container" : "Container",
    "ServerId" : "ServerId",
    "LiveStreamId" : "LiveStreamId",
    "RequiresLooping" : true,
    "Protocol" : "File",
    "DefaultSubtitleStreamIndex" : 3,
    "IsInfiniteStream" : true,
    "Path" : "Path",
    "IsRemote" : true,
    "SupportsDirectPlay" : true,
    "TranscodingSubProtocol" : "TranscodingSubProtocol",
    "Formats" : [ "Formats", "Formats" ],
    "AnalyzeDurationMs" : 9,
    "Bitrate" : 8,
    "OpenToken" : "OpenToken",
    "SupportsProbing" : true,
    "Type" : "Default",
    "ReadAtNativeFramerate" : true,
    "TranscodingContainer" : "TranscodingContainer",
    "TranscodingUrl" : "TranscodingUrl",
    "Id" : "Id",
    "SupportsTranscoding" : true,
    "DefaultAudioStreamIndex" : 6
  }
}}]
     - parameter body: (body) LiveStreamRequest:  

     - returns: RequestBuilder<MediaInfoLiveStreamResponse> 
     */
    open class func postLivestreamsOpenWithRequestBuilder(body: MediaInfoLiveStreamRequest) -> RequestBuilder<MediaInfoLiveStreamResponse> {
        let path = "/LiveStreams/Open"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<MediaInfoLiveStreamResponse>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
