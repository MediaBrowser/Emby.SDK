//
// EnvironmentServiceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class EnvironmentServiceAPI {
    /**
     Gets the parent path of a given path

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEnvironmentDefaultdirectorybrowser(completion: @escaping ((_ data: DefaultDirectoryBrowserInfo?,_ error: Error?) -> Void)) {
        getEnvironmentDefaultdirectorybrowserWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the parent path of a given path
     - GET /Environment/DefaultDirectoryBrowser

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example={
  "Path" : "Path"
}}]

     - returns: RequestBuilder<DefaultDirectoryBrowserInfo> 
     */
    open class func getEnvironmentDefaultdirectorybrowserWithRequestBuilder() -> RequestBuilder<DefaultDirectoryBrowserInfo> {
        let path = "/Environment/DefaultDirectoryBrowser"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<DefaultDirectoryBrowserInfo>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets the contents of a given directory in the file system

     - parameter path: (query)  
     - parameter includeFiles: (query) An optional filter to include or exclude files from the results. true/false (optional)
     - parameter includeDirectories: (query) An optional filter to include or exclude folders from the results. true/false (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEnvironmentDirectorycontents(path: String, includeFiles: Bool? = nil, includeDirectories: Bool? = nil, completion: @escaping ((_ data: [IOFileSystemEntryInfo]?,_ error: Error?) -> Void)) {
        getEnvironmentDirectorycontentsWithRequestBuilder(path: path, includeFiles: includeFiles, includeDirectories: includeDirectories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the contents of a given directory in the file system
     - GET /Environment/DirectoryContents

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "Path" : "Path",
  "Type" : "File",
  "Name" : "Name"
}, {
  "Path" : "Path",
  "Type" : "File",
  "Name" : "Name"
} ]}]
     - parameter path: (query)  
     - parameter includeFiles: (query) An optional filter to include or exclude files from the results. true/false (optional)
     - parameter includeDirectories: (query) An optional filter to include or exclude folders from the results. true/false (optional)

     - returns: RequestBuilder<[IOFileSystemEntryInfo]> 
     */
    open class func getEnvironmentDirectorycontentsWithRequestBuilder(path: String, includeFiles: Bool? = nil, includeDirectories: Bool? = nil) -> RequestBuilder<[IOFileSystemEntryInfo]> {
        let path = "/Environment/DirectoryContents"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "Path": path, 
                        "IncludeFiles": includeFiles, 
                        "IncludeDirectories": includeDirectories
        ])


        let requestBuilder: RequestBuilder<[IOFileSystemEntryInfo]>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets available drives from the server's file system

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEnvironmentDrives(completion: @escaping ((_ data: [IOFileSystemEntryInfo]?,_ error: Error?) -> Void)) {
        getEnvironmentDrivesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets available drives from the server's file system
     - GET /Environment/Drives

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "Path" : "Path",
  "Type" : "File",
  "Name" : "Name"
}, {
  "Path" : "Path",
  "Type" : "File",
  "Name" : "Name"
} ]}]

     - returns: RequestBuilder<[IOFileSystemEntryInfo]> 
     */
    open class func getEnvironmentDrivesWithRequestBuilder() -> RequestBuilder<[IOFileSystemEntryInfo]> {
        let path = "/Environment/Drives"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[IOFileSystemEntryInfo]>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets a list of devices on the network

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEnvironmentNetworkdevices(completion: @escaping ((_ data: [IOFileSystemEntryInfo]?,_ error: Error?) -> Void)) {
        getEnvironmentNetworkdevicesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a list of devices on the network
     - GET /Environment/NetworkDevices

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "Path" : "Path",
  "Type" : "File",
  "Name" : "Name"
}, {
  "Path" : "Path",
  "Type" : "File",
  "Name" : "Name"
} ]}]

     - returns: RequestBuilder<[IOFileSystemEntryInfo]> 
     */
    open class func getEnvironmentNetworkdevicesWithRequestBuilder() -> RequestBuilder<[IOFileSystemEntryInfo]> {
        let path = "/Environment/NetworkDevices"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[IOFileSystemEntryInfo]>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets shares from a network device

     - parameter path: (query)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEnvironmentNetworkshares(path: String, completion: @escaping ((_ data: [IOFileSystemEntryInfo]?,_ error: Error?) -> Void)) {
        getEnvironmentNetworksharesWithRequestBuilder(path: path).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets shares from a network device
     - GET /Environment/NetworkShares

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "Path" : "Path",
  "Type" : "File",
  "Name" : "Name"
}, {
  "Path" : "Path",
  "Type" : "File",
  "Name" : "Name"
} ]}]
     - parameter path: (query)  

     - returns: RequestBuilder<[IOFileSystemEntryInfo]> 
     */
    open class func getEnvironmentNetworksharesWithRequestBuilder(path: String) -> RequestBuilder<[IOFileSystemEntryInfo]> {
        let path = "/Environment/NetworkShares"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "Path": path
        ])


        let requestBuilder: RequestBuilder<[IOFileSystemEntryInfo]>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets the parent path of a given path

     - parameter path: (query)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEnvironmentParentpath(path: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        getEnvironmentParentpathWithRequestBuilder(path: path).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the parent path of a given path
     - GET /Environment/ParentPath

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=""}]
     - parameter path: (query)  

     - returns: RequestBuilder<String> 
     */
    open class func getEnvironmentParentpathWithRequestBuilder(path: String) -> RequestBuilder<String> {
        let path = "/Environment/ParentPath"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "Path": path
        ])


        let requestBuilder: RequestBuilder<String>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets the contents of a given directory in the file system

     - parameter body: (body) GetDirectoryContents 
     - parameter path: (query)  
     - parameter includeFiles: (query) An optional filter to include or exclude files from the results. true/false (optional)
     - parameter includeDirectories: (query) An optional filter to include or exclude folders from the results. true/false (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postEnvironmentDirectorycontents(body: GetDirectoryContents, path: String, includeFiles: Bool? = nil, includeDirectories: Bool? = nil, completion: @escaping ((_ data: [IOFileSystemEntryInfo]?,_ error: Error?) -> Void)) {
        postEnvironmentDirectorycontentsWithRequestBuilder(body: body, path: path, includeFiles: includeFiles, includeDirectories: includeDirectories).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets the contents of a given directory in the file system
     - POST /Environment/DirectoryContents

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - examples: [{contentType=application/json, example=[ {
  "Path" : "Path",
  "Type" : "File",
  "Name" : "Name"
}, {
  "Path" : "Path",
  "Type" : "File",
  "Name" : "Name"
} ]}]
     - parameter body: (body) GetDirectoryContents 
     - parameter path: (query)  
     - parameter includeFiles: (query) An optional filter to include or exclude files from the results. true/false (optional)
     - parameter includeDirectories: (query) An optional filter to include or exclude folders from the results. true/false (optional)

     - returns: RequestBuilder<[IOFileSystemEntryInfo]> 
     */
    open class func postEnvironmentDirectorycontentsWithRequestBuilder(body: GetDirectoryContents, path: String, includeFiles: Bool? = nil, includeDirectories: Bool? = nil) -> RequestBuilder<[IOFileSystemEntryInfo]> {
        let path = "/Environment/DirectoryContents"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "Path": path, 
                        "IncludeFiles": includeFiles, 
                        "IncludeDirectories": includeDirectories
        ])


        let requestBuilder: RequestBuilder<[IOFileSystemEntryInfo]>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Gets the contents of a given directory in the file system

     - parameter body: (body) ValidatePath 
     - parameter path: (query)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postEnvironmentValidatepath(body: ValidatePath, path: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postEnvironmentValidatepathWithRequestBuilder(body: body, path: path).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Gets the contents of a given directory in the file system
     - POST /Environment/ValidatePath

     - API Key:
       - type: apiKey api_key (QUERY)
       - name: apikeyauth
     - :
       - type: http
       - name: embyauth
     - parameter body: (body) ValidatePath 
     - parameter path: (query)  

     - returns: RequestBuilder<Void> 
     */
    open class func postEnvironmentValidatepathWithRequestBuilder(body: ValidatePath, path: String) -> RequestBuilder<Void> {
        let path = "/Environment/ValidatePath"
        let URLString = embyclient-rest-swiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "Path": path
        ])


        let requestBuilder: RequestBuilder<Void>.Type = embyclient-rest-swiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
