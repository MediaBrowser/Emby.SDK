//
// MediaStream.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** MediaStream information.      MediaStream itens are typically included in a &#x60;MediaBrowser.Model.Dto.MediaSourceInfo&#x60; object.      &#x60;MediaBrowser.Model.Dto.MediaSourceInfo.MediaStreams&#x60;   */

public struct MediaStream: Codable {

    /** The codec.    Probe Field: &#x60;codec_name&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Subtitle&#x60;    Related Enums: &#x60;T:Emby.Media.Model.Enums.VideoMediaTypes&#x60;, &#x60;Emby.Media.Model.Enums.AudioMediaTypes&#x60;, &#x60;Emby.Media.Model.Enums.SubtitleMediaTypes&#x60;. */
    public var codec: String?
    /** The codec tag.    Probe Field: &#x60;codec_tag&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Subtitle&#x60;. */
    public var codecTag: String?
    /** The language.    Probe Field: &#x60;tags[\&quot;language\&quot;]&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Subtitle&#x60;. */
    public var language: String?
    /** The color transfer characteristics.    Probe Field: &#x60;color_transfer&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;    Related Enum: &#x60;Emby.Media.Model.Enums.ColorTransfers&#x60;. */
    public var colorTransfer: String?
    /** The chromaticity coordinates of the source primaries.    Probe Field: &#x60;color_primaries&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;    Related Enum: &#x60;Emby.Media.Model.Enums.ColorPrimaries&#x60;. */
    public var colorPrimaries: String?
    /** The YUV colorspace type.    Probe Field: &#x60;color_space&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;    Related Enum: &#x60;Emby.Media.Model.Enums.ColorSpaces&#x60;. */
    public var colorSpace: String?
    /** The comment.    Probe Field: &#x60;tags[\&quot;comment\&quot;]&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Subtitle&#x60;. */
    public var comment: String?
    /** The start time of the stream.    Probe Field: &#x60;start_time&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Subtitle&#x60;.    Actual type: &#x60;System.TimeSpan&#x60;. */
    public var streamStartTimeTicks: Int64?
    /** The time\\-base.    Probe Field: &#x60;time_base&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Subtitle&#x60;.    Actual type: &#x60;Emby.Media.Model.Types.Rational&#x60;. */
    public var timeBase: String?
    /** The title.    Probe Field: &#x60;tags[\&quot;title\&quot;]&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Subtitle&#x60;. */
    public var title: String?
    /** The extradata.    Probe Field: &#x60;extradata&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Subtitle&#x60;.    Currently, this value is only parsed for subtitle streams with codec &#x60;Emby.Media.Model.Enums.SubtitleMediaTypes.dvb_teletext&#x60;. */
    public var extradata: String?
    public var videoRange: String?
    /** The display title.    Custom property set by the application. */
    public var displayTitle: String?
    /** The display language.    Custom property set by the application. */
    public var displayLanguage: String?
    /** The nal length size.    Probe Field: &#x60;nal_length_size&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60; of type &#x60;Emby.Media.Model.Enums.VideoMediaTypes.h264&#x60;.    Actual type: &#x60;System.Int32&#x60;. */
    public var nalLengthSize: String?
    /** A value indicating whether this instance is interlaced.    Probe Field: &#x60;field_order&#x60; \\!\\&#x3D; &#x60;progressive&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;. */
    public var isInterlaced: Bool?
    public var isAVC: Bool?
    /** The channel layout.    Probe Field: &#x60;channel_layout&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;    Related Enum: &#x60;MediaBrowser.Model.Entities.MediaStream.ChannelLayout&#x60;. */
    public var channelLayout: String?
    /** The bit rate.    Probe Field: &#x60;bit_rate&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;.    THIS VALUE IS PROCESSED BY CUSTOM LOGIC AND DOES NOT NECESSARILY MATCH FFPROBE RESULTS\\! */
    public var bitRate: Int?
    /** The bit depth.    Probe Field: &#x60;bits_per_sample&#x60; or &#x60;bits_per_raw_sample&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;. */
    public var bitDepth: Int?
    /** The reference frames.    Probe Field: &#x60;refs&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;. */
    public var refFrames: Int?
    public var rotation: Int?
    /** The audio channel count.    Probe Field: &#x60;channels&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;. */
    public var channels: Int?
    /** The sample rate.    Probe Field: &#x60;sample_rate&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;    Related Enum: &#x60;Emby.Media.Model.Enums.SampleRates&#x60;. */
    public var sampleRate: Int?
    /** A value indicating whether this instance is default.    Probe Field: &#x60;disposition[\&quot;default\&quot;]&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Subtitle&#x60;. */
    public var isDefault: Bool?
    /** A value indicating whether this instance is forced.    Probe Field: &#x60;disposition[\&quot;forced\&quot;]&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Subtitle&#x60;. */
    public var isForced: Bool?
    public var isHearingImpaired: Bool?
    /** The height.    Probe Field: &#x60;height&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;. */
    public var height: Int?
    /** The width.    Probe Field: &#x60;width&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;. */
    public var width: Int?
    /** The average frame rate..    Probe Field: &#x60;avg_frame_rate&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;.    Actual type: &#x60;Emby.Media.Model.Types.Rational&#x60;. */
    public var averageFrameRate: Float?
    /** The real frame rate..    Probe Field: &#x60;r_frame_rate&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;.    Actual type: &#x60;Emby.Media.Model.Types.Rational&#x60;. */
    public var realFrameRate: Float?
    /** The profile.    Probe Field: &#x60;profile&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;    Related Enums: &#x60;Emby.Media.Model.Enums.AacProfiles&#x60;, &#x60;Emby.Media.Model.Enums.AvcProfiles&#x60;, &#x60;Emby.Media.Model.Enums.H263Profiles&#x60;, &#x60;Emby.Media.Model.Enums.HevcProfiles&#x60;, &#x60;Emby.Media.Model.Enums.Mpeg2Profiles&#x60;,&#x60;Emby.Media.Model.Enums.Vc1Profiles&#x60;, &#x60;Emby.Media.Model.Enums.Mpeg4Profiles&#x60;, &#x60;Emby.Media.Model.Enums.Vp8Profiles&#x60;, &#x60;Emby.Media.Model.Enums.Vp9Profiles&#x60;. */
    public var profile: String?
    public var type: MediaStreamType?
    /** The aspect ratio.    Probe Field: &#x60;display_aspect_ratio&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;.    Actual type: &#x60;Emby.Media.Model.Types.Rational&#x60;. */
    public var aspectRatio: String?
    /** The index of the stream inside its container.    Probe Field: &#x60;index&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Audio&#x60;, &#x60;MediaBrowser.Model.Entities.MediaStreamType.Subtitle&#x60;. */
    public var index: Int?
    /** A value indicating whether this instance is external.    Custom property set by the application. */
    public var isExternal: Bool?
    public var deliveryMethod: SubtitleDeliveryMethod?
    /** The delivery URL.    Custom property set by the application. */
    public var deliveryUrl: String?
    /** A value indicating whether this instance is external URL.    Custom property set by the application. */
    public var isExternalUrl: Bool?
    public var isTextSubtitleStream: Bool?
    /** A value indicating whether \\[supports external stream\\]. */
    public var supportsExternalStream: Bool?
    /** The filename. */
    public var path: String?
    public var _protocol: MediaProtocol?
    /** The pixel format.    Probe Field: &#x60;pix_fmt&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;.    Actual type: &#x60;MediaBrowser.Model.Entities.MediaStream.PixelFormat&#x60;. */
    public var pixelFormat: String?
    /** The codec level.    Probe Field: &#x60;level&#x60;    Applies to: &#x60;MediaBrowser.Model.Entities.MediaStreamType.Video&#x60;    Related Enums: &#x60;Emby.Media.Model.Enums.AvcLevels&#x60;, &#x60;Emby.Media.Model.Enums.H263Levels&#x60;, &#x60;Emby.Media.Model.Enums.HevcLevels&#x60;, &#x60;Emby.Media.Model.Enums.Mpeg2Levels&#x60;,&#x60;Emby.Media.Model.Enums.Vc1Levels&#x60;, &#x60;Emby.Media.Model.Enums.Mpeg4Levels&#x60;, &#x60;Emby.Media.Model.Enums.Vp8Levels&#x60;, &#x60;Emby.Media.Model.Enums.Vp9Levels&#x60;. */
    public var level: Double?
    /** A value indicating whether this instance is anamorphic. */
    public var isAnamorphic: Bool?
    public var extendedVideoType: ExtendedVideoTypes?
    public var extendedVideoSubType: ExtendedVideoSubTypes?
    /** The extended video sub\\-type description. */
    public var extendedVideoSubTypeDescription: String?
    /** Used only by our Windows app. Not used by Emby Server. */
    public var itemId: String?
    /** Used only by our Windows app. Not used by Emby Server. */
    public var serverId: String?
    /** The size of the attachment. */
    public var attachmentSize: Int?
    /** The type of the MIME. */
    public var mimeType: String?
    public var subtitleLocationType: SubtitleLocationType?

    public init(codec: String? = nil, codecTag: String? = nil, language: String? = nil, colorTransfer: String? = nil, colorPrimaries: String? = nil, colorSpace: String? = nil, comment: String? = nil, streamStartTimeTicks: Int64? = nil, timeBase: String? = nil, title: String? = nil, extradata: String? = nil, videoRange: String? = nil, displayTitle: String? = nil, displayLanguage: String? = nil, nalLengthSize: String? = nil, isInterlaced: Bool? = nil, isAVC: Bool? = nil, channelLayout: String? = nil, bitRate: Int? = nil, bitDepth: Int? = nil, refFrames: Int? = nil, rotation: Int? = nil, channels: Int? = nil, sampleRate: Int? = nil, isDefault: Bool? = nil, isForced: Bool? = nil, isHearingImpaired: Bool? = nil, height: Int? = nil, width: Int? = nil, averageFrameRate: Float? = nil, realFrameRate: Float? = nil, profile: String? = nil, type: MediaStreamType? = nil, aspectRatio: String? = nil, index: Int? = nil, isExternal: Bool? = nil, deliveryMethod: SubtitleDeliveryMethod? = nil, deliveryUrl: String? = nil, isExternalUrl: Bool? = nil, isTextSubtitleStream: Bool? = nil, supportsExternalStream: Bool? = nil, path: String? = nil, _protocol: MediaProtocol? = nil, pixelFormat: String? = nil, level: Double? = nil, isAnamorphic: Bool? = nil, extendedVideoType: ExtendedVideoTypes? = nil, extendedVideoSubType: ExtendedVideoSubTypes? = nil, extendedVideoSubTypeDescription: String? = nil, itemId: String? = nil, serverId: String? = nil, attachmentSize: Int? = nil, mimeType: String? = nil, subtitleLocationType: SubtitleLocationType? = nil) {
        self.codec = codec
        self.codecTag = codecTag
        self.language = language
        self.colorTransfer = colorTransfer
        self.colorPrimaries = colorPrimaries
        self.colorSpace = colorSpace
        self.comment = comment
        self.streamStartTimeTicks = streamStartTimeTicks
        self.timeBase = timeBase
        self.title = title
        self.extradata = extradata
        self.videoRange = videoRange
        self.displayTitle = displayTitle
        self.displayLanguage = displayLanguage
        self.nalLengthSize = nalLengthSize
        self.isInterlaced = isInterlaced
        self.isAVC = isAVC
        self.channelLayout = channelLayout
        self.bitRate = bitRate
        self.bitDepth = bitDepth
        self.refFrames = refFrames
        self.rotation = rotation
        self.channels = channels
        self.sampleRate = sampleRate
        self.isDefault = isDefault
        self.isForced = isForced
        self.isHearingImpaired = isHearingImpaired
        self.height = height
        self.width = width
        self.averageFrameRate = averageFrameRate
        self.realFrameRate = realFrameRate
        self.profile = profile
        self.type = type
        self.aspectRatio = aspectRatio
        self.index = index
        self.isExternal = isExternal
        self.deliveryMethod = deliveryMethod
        self.deliveryUrl = deliveryUrl
        self.isExternalUrl = isExternalUrl
        self.isTextSubtitleStream = isTextSubtitleStream
        self.supportsExternalStream = supportsExternalStream
        self.path = path
        self._protocol = _protocol
        self.pixelFormat = pixelFormat
        self.level = level
        self.isAnamorphic = isAnamorphic
        self.extendedVideoType = extendedVideoType
        self.extendedVideoSubType = extendedVideoSubType
        self.extendedVideoSubTypeDescription = extendedVideoSubTypeDescription
        self.itemId = itemId
        self.serverId = serverId
        self.attachmentSize = attachmentSize
        self.mimeType = mimeType
        self.subtitleLocationType = subtitleLocationType
    }

    public enum CodingKeys: String, CodingKey { 
        case codec = "Codec"
        case codecTag = "CodecTag"
        case language = "Language"
        case colorTransfer = "ColorTransfer"
        case colorPrimaries = "ColorPrimaries"
        case colorSpace = "ColorSpace"
        case comment = "Comment"
        case streamStartTimeTicks = "StreamStartTimeTicks"
        case timeBase = "TimeBase"
        case title = "Title"
        case extradata = "Extradata"
        case videoRange = "VideoRange"
        case displayTitle = "DisplayTitle"
        case displayLanguage = "DisplayLanguage"
        case nalLengthSize = "NalLengthSize"
        case isInterlaced = "IsInterlaced"
        case isAVC = "IsAVC"
        case channelLayout = "ChannelLayout"
        case bitRate = "BitRate"
        case bitDepth = "BitDepth"
        case refFrames = "RefFrames"
        case rotation = "Rotation"
        case channels = "Channels"
        case sampleRate = "SampleRate"
        case isDefault = "IsDefault"
        case isForced = "IsForced"
        case isHearingImpaired = "IsHearingImpaired"
        case height = "Height"
        case width = "Width"
        case averageFrameRate = "AverageFrameRate"
        case realFrameRate = "RealFrameRate"
        case profile = "Profile"
        case type = "Type"
        case aspectRatio = "AspectRatio"
        case index = "Index"
        case isExternal = "IsExternal"
        case deliveryMethod = "DeliveryMethod"
        case deliveryUrl = "DeliveryUrl"
        case isExternalUrl = "IsExternalUrl"
        case isTextSubtitleStream = "IsTextSubtitleStream"
        case supportsExternalStream = "SupportsExternalStream"
        case path = "Path"
        case _protocol = "Protocol"
        case pixelFormat = "PixelFormat"
        case level = "Level"
        case isAnamorphic = "IsAnamorphic"
        case extendedVideoType = "ExtendedVideoType"
        case extendedVideoSubType = "ExtendedVideoSubType"
        case extendedVideoSubTypeDescription = "ExtendedVideoSubTypeDescription"
        case itemId = "ItemId"
        case serverId = "ServerId"
        case attachmentSize = "AttachmentSize"
        case mimeType = "MimeType"
        case subtitleLocationType = "SubtitleLocationType"
    }

}
