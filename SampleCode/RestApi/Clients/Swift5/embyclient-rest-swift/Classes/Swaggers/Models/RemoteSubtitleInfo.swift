//
// RemoteSubtitleInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct RemoteSubtitleInfo: Codable {

    /** Use language instead to return the language specified by the subtitle provider */
    public var threeLetterISOLanguageName: String?
    public var _id: String?
    public var providerName: String?
    public var name: String?
    public var format: String?
    public var author: String?
    public var comment: String?
    public var dateCreated: Date?
    public var communityRating: Float?
    public var downloadCount: Int?
    public var isHashMatch: Bool?
    public var isForced: Bool?
    public var isHearingImpaired: Bool?
    public var language: String?

    public init(threeLetterISOLanguageName: String? = nil, _id: String? = nil, providerName: String? = nil, name: String? = nil, format: String? = nil, author: String? = nil, comment: String? = nil, dateCreated: Date? = nil, communityRating: Float? = nil, downloadCount: Int? = nil, isHashMatch: Bool? = nil, isForced: Bool? = nil, isHearingImpaired: Bool? = nil, language: String? = nil) {
        self.threeLetterISOLanguageName = threeLetterISOLanguageName
        self._id = _id
        self.providerName = providerName
        self.name = name
        self.format = format
        self.author = author
        self.comment = comment
        self.dateCreated = dateCreated
        self.communityRating = communityRating
        self.downloadCount = downloadCount
        self.isHashMatch = isHashMatch
        self.isForced = isForced
        self.isHearingImpaired = isHearingImpaired
        self.language = language
    }

    public enum CodingKeys: String, CodingKey { 
        case threeLetterISOLanguageName = "ThreeLetterISOLanguageName"
        case _id = "Id"
        case providerName = "ProviderName"
        case name = "Name"
        case format = "Format"
        case author = "Author"
        case comment = "Comment"
        case dateCreated = "DateCreated"
        case communityRating = "CommunityRating"
        case downloadCount = "DownloadCount"
        case isHashMatch = "IsHashMatch"
        case isForced = "IsForced"
        case isHearingImpaired = "IsHearingImpaired"
        case language = "Language"
    }

}
