//
// LiveTvSeriesTimerInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct LiveTvSeriesTimerInfo: Codable {

    public var _id: String?
    public var channelId: String?
    public var channelIds: [String]?
    public var programId: String?
    public var name: String?
    public var serviceName: String?
    public var overview: String?
    public var startDate: Date?
    public var endDate: Date?
    public var recordAnyTime: Bool?
    public var keepUpTo: Int?
    public var keepUntil: LiveTvKeepUntil?
    public var skipEpisodesInLibrary: Bool?
    public var recordNewOnly: Bool?
    public var days: [DayOfWeek]?
    public var priority: Int?
    public var prePaddingSeconds: Int?
    public var postPaddingSeconds: Int?
    public var isPrePaddingRequired: Bool?
    public var isPostPaddingRequired: Bool?
    public var seriesId: String?
    public var providerIds: ProviderIdDictionary?
    public var maxRecordingSeconds: Int?
    public var keywords: [LiveTvKeywordInfo]?
    public var timerType: LiveTvTimerType?

    public init(_id: String? = nil, channelId: String? = nil, channelIds: [String]? = nil, programId: String? = nil, name: String? = nil, serviceName: String? = nil, overview: String? = nil, startDate: Date? = nil, endDate: Date? = nil, recordAnyTime: Bool? = nil, keepUpTo: Int? = nil, keepUntil: LiveTvKeepUntil? = nil, skipEpisodesInLibrary: Bool? = nil, recordNewOnly: Bool? = nil, days: [DayOfWeek]? = nil, priority: Int? = nil, prePaddingSeconds: Int? = nil, postPaddingSeconds: Int? = nil, isPrePaddingRequired: Bool? = nil, isPostPaddingRequired: Bool? = nil, seriesId: String? = nil, providerIds: ProviderIdDictionary? = nil, maxRecordingSeconds: Int? = nil, keywords: [LiveTvKeywordInfo]? = nil, timerType: LiveTvTimerType? = nil) {
        self._id = _id
        self.channelId = channelId
        self.channelIds = channelIds
        self.programId = programId
        self.name = name
        self.serviceName = serviceName
        self.overview = overview
        self.startDate = startDate
        self.endDate = endDate
        self.recordAnyTime = recordAnyTime
        self.keepUpTo = keepUpTo
        self.keepUntil = keepUntil
        self.skipEpisodesInLibrary = skipEpisodesInLibrary
        self.recordNewOnly = recordNewOnly
        self.days = days
        self.priority = priority
        self.prePaddingSeconds = prePaddingSeconds
        self.postPaddingSeconds = postPaddingSeconds
        self.isPrePaddingRequired = isPrePaddingRequired
        self.isPostPaddingRequired = isPostPaddingRequired
        self.seriesId = seriesId
        self.providerIds = providerIds
        self.maxRecordingSeconds = maxRecordingSeconds
        self.keywords = keywords
        self.timerType = timerType
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "Id"
        case channelId = "ChannelId"
        case channelIds = "ChannelIds"
        case programId = "ProgramId"
        case name = "Name"
        case serviceName = "ServiceName"
        case overview = "Overview"
        case startDate = "StartDate"
        case endDate = "EndDate"
        case recordAnyTime = "RecordAnyTime"
        case keepUpTo = "KeepUpTo"
        case keepUntil = "KeepUntil"
        case skipEpisodesInLibrary = "SkipEpisodesInLibrary"
        case recordNewOnly = "RecordNewOnly"
        case days = "Days"
        case priority = "Priority"
        case prePaddingSeconds = "PrePaddingSeconds"
        case postPaddingSeconds = "PostPaddingSeconds"
        case isPrePaddingRequired = "IsPrePaddingRequired"
        case isPostPaddingRequired = "IsPostPaddingRequired"
        case seriesId = "SeriesId"
        case providerIds = "ProviderIds"
        case maxRecordingSeconds = "MaxRecordingSeconds"
        case keywords = "Keywords"
        case timerType = "TimerType"
    }

}
