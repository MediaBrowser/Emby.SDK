//
// PlayerStateInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct PlayerStateInfo: Codable {

    /** The now playing position ticks. */
    public var positionTicks: Int64?
    /** A value indicating whether this instance can seek. */
    public var canSeek: Bool?
    /** A value indicating whether this instance is paused. */
    public var isPaused: Bool?
    /** A value indicating whether this instance is muted. */
    public var isMuted: Bool?
    /** The volume level. */
    public var volumeLevel: Int?
    /** The index of the now playing audio stream. */
    public var audioStreamIndex: Int?
    /** The index of the now playing subtitle stream. */
    public var subtitleStreamIndex: Int?
    /** The now playing media version identifier. */
    public var mediaSourceId: String?
    public var playMethod: PlayMethod?
    public var repeatMode: RepeatMode?
    public var subtitleOffset: Int?
    public var playbackRate: Double?

    public init(positionTicks: Int64? = nil, canSeek: Bool? = nil, isPaused: Bool? = nil, isMuted: Bool? = nil, volumeLevel: Int? = nil, audioStreamIndex: Int? = nil, subtitleStreamIndex: Int? = nil, mediaSourceId: String? = nil, playMethod: PlayMethod? = nil, repeatMode: RepeatMode? = nil, subtitleOffset: Int? = nil, playbackRate: Double? = nil) {
        self.positionTicks = positionTicks
        self.canSeek = canSeek
        self.isPaused = isPaused
        self.isMuted = isMuted
        self.volumeLevel = volumeLevel
        self.audioStreamIndex = audioStreamIndex
        self.subtitleStreamIndex = subtitleStreamIndex
        self.mediaSourceId = mediaSourceId
        self.playMethod = playMethod
        self.repeatMode = repeatMode
        self.subtitleOffset = subtitleOffset
        self.playbackRate = playbackRate
    }

    public enum CodingKeys: String, CodingKey { 
        case positionTicks = "PositionTicks"
        case canSeek = "CanSeek"
        case isPaused = "IsPaused"
        case isMuted = "IsMuted"
        case volumeLevel = "VolumeLevel"
        case audioStreamIndex = "AudioStreamIndex"
        case subtitleStreamIndex = "SubtitleStreamIndex"
        case mediaSourceId = "MediaSourceId"
        case playMethod = "PlayMethod"
        case repeatMode = "RepeatMode"
        case subtitleOffset = "SubtitleOffset"
        case playbackRate = "PlaybackRate"
    }

}
