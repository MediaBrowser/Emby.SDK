// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MediaEncodingApiOnPlaybackProgress
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MediaEncodingApiOnPlaybackProgress class.
        /// </summary>
        public MediaEncodingApiOnPlaybackProgress()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MediaEncodingApiOnPlaybackProgress class.
        /// </summary>
        /// <param name="eventName">Possible values include: 'TimeUpdate',
        /// 'Pause', 'Unpause', 'VolumeChange', 'RepeatModeChange',
        /// 'AudioTrackChange', 'SubtitleTrackChange', 'PlaylistItemMove',
        /// 'PlaylistItemRemove', 'PlaylistItemAdd', 'QualityChange',
        /// 'StateChange', 'SubtitleOffsetChange', 'PlaybackRateChange'</param>
        public MediaEncodingApiOnPlaybackProgress(int? playlistIndex = default(int?), int? playlistLength = default(int?), string eventName = default(string))
        {
            PlaylistIndex = playlistIndex;
            PlaylistLength = playlistLength;
            EventName = eventName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlaylistIndex")]
        public int? PlaylistIndex { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlaylistLength")]
        public int? PlaylistLength { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'TimeUpdate', 'Pause',
        /// 'Unpause', 'VolumeChange', 'RepeatModeChange', 'AudioTrackChange',
        /// 'SubtitleTrackChange', 'PlaylistItemMove', 'PlaylistItemRemove',
        /// 'PlaylistItemAdd', 'QualityChange', 'StateChange',
        /// 'SubtitleOffsetChange', 'PlaybackRateChange'
        /// </summary>
        [JsonProperty(PropertyName = "EventName")]
        public string EventName { get; set; }

    }
}
