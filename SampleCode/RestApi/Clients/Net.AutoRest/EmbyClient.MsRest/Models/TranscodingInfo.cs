// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TranscodingInfo
    {
        /// <summary>
        /// Initializes a new instance of the TranscodingInfo class.
        /// </summary>
        public TranscodingInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TranscodingInfo class.
        /// </summary>
        public TranscodingInfo(string audioCodec = default(string), string videoCodec = default(string), string subProtocol = default(string), string container = default(string), bool? isVideoDirect = default(bool?), bool? isAudioDirect = default(bool?), int? bitrate = default(int?), int? audioBitrate = default(int?), int? videoBitrate = default(int?), double? framerate = default(double?), double? completionPercentage = default(double?), double? transcodingPositionTicks = default(double?), double? transcodingStartPositionTicks = default(double?), int? width = default(int?), int? height = default(int?), int? audioChannels = default(int?), IList<string> transcodeReasons = default(IList<string>), double? currentCpuUsage = default(double?), double? averageCpuUsage = default(double?), IList<TupleDoubleDouble> cpuHistory = default(IList<TupleDoubleDouble>), int? currentThrottle = default(int?), string videoDecoder = default(string), bool? videoDecoderIsHardware = default(bool?), string videoDecoderMediaType = default(string), string videoDecoderHwAccel = default(string), string videoEncoder = default(string), bool? videoEncoderIsHardware = default(bool?), string videoEncoderMediaType = default(string), string videoEncoderHwAccel = default(string), IList<TranscodingVpStepInfo> videoPipelineInfo = default(IList<TranscodingVpStepInfo>), IList<IList<TranscodingVpStepInfo>> subtitlePipelineInfos = default(IList<IList<TranscodingVpStepInfo>>))
        {
            AudioCodec = audioCodec;
            VideoCodec = videoCodec;
            SubProtocol = subProtocol;
            Container = container;
            IsVideoDirect = isVideoDirect;
            IsAudioDirect = isAudioDirect;
            Bitrate = bitrate;
            AudioBitrate = audioBitrate;
            VideoBitrate = videoBitrate;
            Framerate = framerate;
            CompletionPercentage = completionPercentage;
            TranscodingPositionTicks = transcodingPositionTicks;
            TranscodingStartPositionTicks = transcodingStartPositionTicks;
            Width = width;
            Height = height;
            AudioChannels = audioChannels;
            TranscodeReasons = transcodeReasons;
            CurrentCpuUsage = currentCpuUsage;
            AverageCpuUsage = averageCpuUsage;
            CpuHistory = cpuHistory;
            CurrentThrottle = currentThrottle;
            VideoDecoder = videoDecoder;
            VideoDecoderIsHardware = videoDecoderIsHardware;
            VideoDecoderMediaType = videoDecoderMediaType;
            VideoDecoderHwAccel = videoDecoderHwAccel;
            VideoEncoder = videoEncoder;
            VideoEncoderIsHardware = videoEncoderIsHardware;
            VideoEncoderMediaType = videoEncoderMediaType;
            VideoEncoderHwAccel = videoEncoderHwAccel;
            VideoPipelineInfo = videoPipelineInfo;
            SubtitlePipelineInfos = subtitlePipelineInfos;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AudioCodec")]
        public string AudioCodec { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoCodec")]
        public string VideoCodec { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubProtocol")]
        public string SubProtocol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Container")]
        public string Container { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsVideoDirect")]
        public bool? IsVideoDirect { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsAudioDirect")]
        public bool? IsAudioDirect { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Bitrate")]
        public int? Bitrate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AudioBitrate")]
        public int? AudioBitrate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoBitrate")]
        public int? VideoBitrate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Framerate")]
        public double? Framerate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CompletionPercentage")]
        public double? CompletionPercentage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TranscodingPositionTicks")]
        public double? TranscodingPositionTicks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TranscodingStartPositionTicks")]
        public double? TranscodingStartPositionTicks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Width")]
        public int? Width { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Height")]
        public int? Height { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AudioChannels")]
        public int? AudioChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TranscodeReasons")]
        public IList<string> TranscodeReasons { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CurrentCpuUsage")]
        public double? CurrentCpuUsage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AverageCpuUsage")]
        public double? AverageCpuUsage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CpuHistory")]
        public IList<TupleDoubleDouble> CpuHistory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CurrentThrottle")]
        public int? CurrentThrottle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoDecoder")]
        public string VideoDecoder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoDecoderIsHardware")]
        public bool? VideoDecoderIsHardware { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoDecoderMediaType")]
        public string VideoDecoderMediaType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoDecoderHwAccel")]
        public string VideoDecoderHwAccel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoEncoder")]
        public string VideoEncoder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoEncoderIsHardware")]
        public bool? VideoEncoderIsHardware { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoEncoderMediaType")]
        public string VideoEncoderMediaType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoEncoderHwAccel")]
        public string VideoEncoderHwAccel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoPipelineInfo")]
        public IList<TranscodingVpStepInfo> VideoPipelineInfo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubtitlePipelineInfos")]
        public IList<IList<TranscodingVpStepInfo>> SubtitlePipelineInfos { get; set; }

    }
}
