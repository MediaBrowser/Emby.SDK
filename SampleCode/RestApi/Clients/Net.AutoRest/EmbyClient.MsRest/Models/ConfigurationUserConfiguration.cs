// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ConfigurationUserConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the ConfigurationUserConfiguration
        /// class.
        /// </summary>
        public ConfigurationUserConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConfigurationUserConfiguration
        /// class.
        /// </summary>
        /// <param name="subtitleMode">Possible values include: 'Default',
        /// 'Always', 'OnlyForced', 'None', 'Smart'</param>
        /// <param name="introSkipMode">Possible values include: 'ShowButton',
        /// 'AutoSkip', 'None'</param>
        public ConfigurationUserConfiguration(string audioLanguagePreference = default(string), bool? playDefaultAudioTrack = default(bool?), string subtitleLanguagePreference = default(string), bool? displayMissingEpisodes = default(bool?), string subtitleMode = default(string), IList<string> orderedViews = default(IList<string>), IList<string> latestItemsExcludes = default(IList<string>), IList<string> myMediaExcludes = default(IList<string>), bool? hidePlayedInLatest = default(bool?), bool? rememberAudioSelections = default(bool?), bool? rememberSubtitleSelections = default(bool?), bool? enableNextEpisodeAutoPlay = default(bool?), int? resumeRewindSeconds = default(int?), string introSkipMode = default(string), bool? enableLocalPassword = default(bool?))
        {
            AudioLanguagePreference = audioLanguagePreference;
            PlayDefaultAudioTrack = playDefaultAudioTrack;
            SubtitleLanguagePreference = subtitleLanguagePreference;
            DisplayMissingEpisodes = displayMissingEpisodes;
            SubtitleMode = subtitleMode;
            OrderedViews = orderedViews;
            LatestItemsExcludes = latestItemsExcludes;
            MyMediaExcludes = myMediaExcludes;
            HidePlayedInLatest = hidePlayedInLatest;
            RememberAudioSelections = rememberAudioSelections;
            RememberSubtitleSelections = rememberSubtitleSelections;
            EnableNextEpisodeAutoPlay = enableNextEpisodeAutoPlay;
            ResumeRewindSeconds = resumeRewindSeconds;
            IntroSkipMode = introSkipMode;
            EnableLocalPassword = enableLocalPassword;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AudioLanguagePreference")]
        public string AudioLanguagePreference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlayDefaultAudioTrack")]
        public bool? PlayDefaultAudioTrack { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubtitleLanguagePreference")]
        public string SubtitleLanguagePreference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisplayMissingEpisodes")]
        public bool? DisplayMissingEpisodes { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Default', 'Always',
        /// 'OnlyForced', 'None', 'Smart'
        /// </summary>
        [JsonProperty(PropertyName = "SubtitleMode")]
        public string SubtitleMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OrderedViews")]
        public IList<string> OrderedViews { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LatestItemsExcludes")]
        public IList<string> LatestItemsExcludes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MyMediaExcludes")]
        public IList<string> MyMediaExcludes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HidePlayedInLatest")]
        public bool? HidePlayedInLatest { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RememberAudioSelections")]
        public bool? RememberAudioSelections { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RememberSubtitleSelections")]
        public bool? RememberSubtitleSelections { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EnableNextEpisodeAutoPlay")]
        public bool? EnableNextEpisodeAutoPlay { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResumeRewindSeconds")]
        public int? ResumeRewindSeconds { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'ShowButton', 'AutoSkip',
        /// 'None'
        /// </summary>
        [JsonProperty(PropertyName = "IntroSkipMode")]
        public string IntroSkipMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EnableLocalPassword")]
        public bool? EnableLocalPassword { get; set; }

    }
}
