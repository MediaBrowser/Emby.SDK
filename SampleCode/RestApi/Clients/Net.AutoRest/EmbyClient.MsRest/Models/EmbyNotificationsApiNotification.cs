// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class EmbyNotificationsApiNotification
    {
        /// <summary>
        /// Initializes a new instance of the EmbyNotificationsApiNotification
        /// class.
        /// </summary>
        public EmbyNotificationsApiNotification()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EmbyNotificationsApiNotification
        /// class.
        /// </summary>
        /// <param name="level">Possible values include: 'Normal', 'Warning',
        /// 'Error'</param>
        public EmbyNotificationsApiNotification(string id = default(string), string userId = default(string), System.DateTime? date = default(System.DateTime?), bool? isRead = default(bool?), string name = default(string), string description = default(string), string url = default(string), string level = default(string))
        {
            Id = id;
            UserId = userId;
            Date = date;
            IsRead = isRead;
            Name = name;
            Description = description;
            Url = url;
            Level = level;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserId")]
        public string UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Date")]
        public System.DateTime? Date { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsRead")]
        public bool? IsRead { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Normal', 'Warning', 'Error'
        /// </summary>
        [JsonProperty(PropertyName = "Level")]
        public string Level { get; set; }

    }
}
