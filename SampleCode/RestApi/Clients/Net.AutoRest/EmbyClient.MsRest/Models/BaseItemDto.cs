// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class BaseItemDto
    {
        /// <summary>
        /// Initializes a new instance of the BaseItemDto class.
        /// </summary>
        public BaseItemDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BaseItemDto class.
        /// </summary>
        /// <param name="video3DFormat">Possible values include:
        /// 'HalfSideBySide', 'FullSideBySide', 'FullTopAndBottom',
        /// 'HalfTopAndBottom', 'MVC'</param>
        /// <param name="playAccess">Possible values include: 'Full',
        /// 'None'</param>
        /// <param name="locationType">Possible values include: 'FileSystem',
        /// 'Virtual'</param>
        /// <param name="imageOrientation">Possible values include: 'TopLeft',
        /// 'TopRight', 'BottomRight', 'BottomLeft', 'LeftTop', 'RightTop',
        /// 'RightBottom', 'LeftBottom'</param>
        /// <param name="timerType">Possible values include: 'Program',
        /// 'DateTime', 'Keyword'</param>
        public BaseItemDto(string name = default(string), string originalTitle = default(string), string serverId = default(string), string id = default(string), string guid = default(string), string etag = default(string), string prefix = default(string), string playlistItemId = default(string), System.DateTime? dateCreated = default(System.DateTime?), string extraType = default(string), int? sortIndexNumber = default(int?), int? sortParentIndexNumber = default(int?), int? airsBeforeSeasonNumber = default(int?), int? airsAfterSeasonNumber = default(int?), int? airsBeforeEpisodeNumber = default(int?), bool? canDelete = default(bool?), bool? canDownload = default(bool?), bool? supportsResume = default(bool?), string presentationUniqueKey = default(string), string preferredMetadataLanguage = default(string), string preferredMetadataCountryCode = default(string), bool? supportsSync = default(bool?), string container = default(string), string sortName = default(string), string forcedSortName = default(string), string video3DFormat = default(string), System.DateTime? premiereDate = default(System.DateTime?), IList<ExternalUrl> externalUrls = default(IList<ExternalUrl>), IList<MediaSourceInfo> mediaSources = default(IList<MediaSourceInfo>), double? criticRating = default(double?), long? gameSystemId = default(long?), bool? asSeries = default(bool?), string gameSystem = default(string), IList<string> productionLocations = default(IList<string>), string path = default(string), string officialRating = default(string), string customRating = default(string), string channelId = default(string), string channelName = default(string), string overview = default(string), IList<string> taglines = default(IList<string>), IList<string> genres = default(IList<string>), double? communityRating = default(double?), long? runTimeTicks = default(long?), long? size = default(long?), string fileName = default(string), int? bitrate = default(int?), string playAccess = default(string), int? productionYear = default(int?), string number = default(string), string channelNumber = default(string), int? indexNumber = default(int?), int? indexNumberEnd = default(int?), int? parentIndexNumber = default(int?), IList<MediaUrl> remoteTrailers = default(IList<MediaUrl>), IDictionary<string, string> providerIds = default(IDictionary<string, string>), bool? isFolder = default(bool?), string parentId = default(string), string type = default(string), IList<BaseItemPerson> people = default(IList<BaseItemPerson>), IList<NameLongIdPair> studios = default(IList<NameLongIdPair>), IList<NameLongIdPair> genreItems = default(IList<NameLongIdPair>), IList<NameLongIdPair> tagItems = default(IList<NameLongIdPair>), string parentLogoItemId = default(string), string parentBackdropItemId = default(string), IList<string> parentBackdropImageTags = default(IList<string>), int? localTrailerCount = default(int?), UserItemDataDto userData = default(UserItemDataDto), int? recursiveItemCount = default(int?), int? childCount = default(int?), string seriesName = default(string), string seriesId = default(string), string seasonId = default(string), int? specialFeatureCount = default(int?), string displayPreferencesId = default(string), string status = default(string), IList<string> airDays = default(IList<string>), IList<string> tags = default(IList<string>), double? primaryImageAspectRatio = default(double?), IList<string> artists = default(IList<string>), IList<NameIdPair> artistItems = default(IList<NameIdPair>), IList<NameIdPair> composers = default(IList<NameIdPair>), string album = default(string), string collectionType = default(string), string displayOrder = default(string), string albumId = default(string), string albumPrimaryImageTag = default(string), string seriesPrimaryImageTag = default(string), string albumArtist = default(string), IList<NameIdPair> albumArtists = default(IList<NameIdPair>), string seasonName = default(string), IList<MediaStream> mediaStreams = default(IList<MediaStream>), int? partCount = default(int?), IDictionary<string, string> imageTags = default(IDictionary<string, string>), IList<string> backdropImageTags = default(IList<string>), string parentLogoImageTag = default(string), string seriesStudio = default(string), string parentThumbItemId = default(string), string parentThumbImageTag = default(string), IList<ChapterInfo> chapters = default(IList<ChapterInfo>), string locationType = default(string), string mediaType = default(string), System.DateTime? endDate = default(System.DateTime?), IList<string> lockedFields = default(IList<string>), bool? lockData = default(bool?), int? width = default(int?), int? height = default(int?), string cameraMake = default(string), string cameraModel = default(string), string software = default(string), double? exposureTime = default(double?), double? focalLength = default(double?), string imageOrientation = default(string), double? aperture = default(double?), double? shutterSpeed = default(double?), double? latitude = default(double?), double? longitude = default(double?), double? altitude = default(double?), int? isoSpeedRating = default(int?), string seriesTimerId = default(string), string channelPrimaryImageTag = default(string), System.DateTime? startDate = default(System.DateTime?), double? completionPercentage = default(double?), bool? isRepeat = default(bool?), bool? isNew = default(bool?), string episodeTitle = default(string), bool? isMovie = default(bool?), bool? isSports = default(bool?), bool? isSeries = default(bool?), bool? isLive = default(bool?), bool? isNews = default(bool?), bool? isKids = default(bool?), bool? isPremiere = default(bool?), string timerType = default(string), bool? disabled = default(bool?), string managementId = default(string), string timerId = default(string), BaseItemDto currentProgram = default(BaseItemDto), int? movieCount = default(int?), int? seriesCount = default(int?), int? albumCount = default(int?), int? songCount = default(int?), int? musicVideoCount = default(int?), IList<string> subviews = default(IList<string>), string listingsProviderId = default(string), string listingsChannelId = default(string), string listingsPath = default(string), string listingsId = default(string), string listingsChannelName = default(string), string listingsChannelNumber = default(string), string affiliateCallSign = default(string))
        {
            Name = name;
            OriginalTitle = originalTitle;
            ServerId = serverId;
            Id = id;
            Guid = guid;
            Etag = etag;
            Prefix = prefix;
            PlaylistItemId = playlistItemId;
            DateCreated = dateCreated;
            ExtraType = extraType;
            SortIndexNumber = sortIndexNumber;
            SortParentIndexNumber = sortParentIndexNumber;
            AirsBeforeSeasonNumber = airsBeforeSeasonNumber;
            AirsAfterSeasonNumber = airsAfterSeasonNumber;
            AirsBeforeEpisodeNumber = airsBeforeEpisodeNumber;
            CanDelete = canDelete;
            CanDownload = canDownload;
            SupportsResume = supportsResume;
            PresentationUniqueKey = presentationUniqueKey;
            PreferredMetadataLanguage = preferredMetadataLanguage;
            PreferredMetadataCountryCode = preferredMetadataCountryCode;
            SupportsSync = supportsSync;
            Container = container;
            SortName = sortName;
            ForcedSortName = forcedSortName;
            Video3DFormat = video3DFormat;
            PremiereDate = premiereDate;
            ExternalUrls = externalUrls;
            MediaSources = mediaSources;
            CriticRating = criticRating;
            GameSystemId = gameSystemId;
            AsSeries = asSeries;
            GameSystem = gameSystem;
            ProductionLocations = productionLocations;
            Path = path;
            OfficialRating = officialRating;
            CustomRating = customRating;
            ChannelId = channelId;
            ChannelName = channelName;
            Overview = overview;
            Taglines = taglines;
            Genres = genres;
            CommunityRating = communityRating;
            RunTimeTicks = runTimeTicks;
            Size = size;
            FileName = fileName;
            Bitrate = bitrate;
            PlayAccess = playAccess;
            ProductionYear = productionYear;
            Number = number;
            ChannelNumber = channelNumber;
            IndexNumber = indexNumber;
            IndexNumberEnd = indexNumberEnd;
            ParentIndexNumber = parentIndexNumber;
            RemoteTrailers = remoteTrailers;
            ProviderIds = providerIds;
            IsFolder = isFolder;
            ParentId = parentId;
            Type = type;
            People = people;
            Studios = studios;
            GenreItems = genreItems;
            TagItems = tagItems;
            ParentLogoItemId = parentLogoItemId;
            ParentBackdropItemId = parentBackdropItemId;
            ParentBackdropImageTags = parentBackdropImageTags;
            LocalTrailerCount = localTrailerCount;
            UserData = userData;
            RecursiveItemCount = recursiveItemCount;
            ChildCount = childCount;
            SeriesName = seriesName;
            SeriesId = seriesId;
            SeasonId = seasonId;
            SpecialFeatureCount = specialFeatureCount;
            DisplayPreferencesId = displayPreferencesId;
            Status = status;
            AirDays = airDays;
            Tags = tags;
            PrimaryImageAspectRatio = primaryImageAspectRatio;
            Artists = artists;
            ArtistItems = artistItems;
            Composers = composers;
            Album = album;
            CollectionType = collectionType;
            DisplayOrder = displayOrder;
            AlbumId = albumId;
            AlbumPrimaryImageTag = albumPrimaryImageTag;
            SeriesPrimaryImageTag = seriesPrimaryImageTag;
            AlbumArtist = albumArtist;
            AlbumArtists = albumArtists;
            SeasonName = seasonName;
            MediaStreams = mediaStreams;
            PartCount = partCount;
            ImageTags = imageTags;
            BackdropImageTags = backdropImageTags;
            ParentLogoImageTag = parentLogoImageTag;
            SeriesStudio = seriesStudio;
            ParentThumbItemId = parentThumbItemId;
            ParentThumbImageTag = parentThumbImageTag;
            Chapters = chapters;
            LocationType = locationType;
            MediaType = mediaType;
            EndDate = endDate;
            LockedFields = lockedFields;
            LockData = lockData;
            Width = width;
            Height = height;
            CameraMake = cameraMake;
            CameraModel = cameraModel;
            Software = software;
            ExposureTime = exposureTime;
            FocalLength = focalLength;
            ImageOrientation = imageOrientation;
            Aperture = aperture;
            ShutterSpeed = shutterSpeed;
            Latitude = latitude;
            Longitude = longitude;
            Altitude = altitude;
            IsoSpeedRating = isoSpeedRating;
            SeriesTimerId = seriesTimerId;
            ChannelPrimaryImageTag = channelPrimaryImageTag;
            StartDate = startDate;
            CompletionPercentage = completionPercentage;
            IsRepeat = isRepeat;
            IsNew = isNew;
            EpisodeTitle = episodeTitle;
            IsMovie = isMovie;
            IsSports = isSports;
            IsSeries = isSeries;
            IsLive = isLive;
            IsNews = isNews;
            IsKids = isKids;
            IsPremiere = isPremiere;
            TimerType = timerType;
            Disabled = disabled;
            ManagementId = managementId;
            TimerId = timerId;
            CurrentProgram = currentProgram;
            MovieCount = movieCount;
            SeriesCount = seriesCount;
            AlbumCount = albumCount;
            SongCount = songCount;
            MusicVideoCount = musicVideoCount;
            Subviews = subviews;
            ListingsProviderId = listingsProviderId;
            ListingsChannelId = listingsChannelId;
            ListingsPath = listingsPath;
            ListingsId = listingsId;
            ListingsChannelName = listingsChannelName;
            ListingsChannelNumber = listingsChannelNumber;
            AffiliateCallSign = affiliateCallSign;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OriginalTitle")]
        public string OriginalTitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServerId")]
        public string ServerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Guid")]
        public string Guid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Etag")]
        public string Etag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Prefix")]
        public string Prefix { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlaylistItemId")]
        public string PlaylistItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateCreated")]
        public System.DateTime? DateCreated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ExtraType")]
        public string ExtraType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SortIndexNumber")]
        public int? SortIndexNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SortParentIndexNumber")]
        public int? SortParentIndexNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AirsBeforeSeasonNumber")]
        public int? AirsBeforeSeasonNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AirsAfterSeasonNumber")]
        public int? AirsAfterSeasonNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AirsBeforeEpisodeNumber")]
        public int? AirsBeforeEpisodeNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CanDelete")]
        public bool? CanDelete { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CanDownload")]
        public bool? CanDownload { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SupportsResume")]
        public bool? SupportsResume { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PresentationUniqueKey")]
        public string PresentationUniqueKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PreferredMetadataLanguage")]
        public string PreferredMetadataLanguage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PreferredMetadataCountryCode")]
        public string PreferredMetadataCountryCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SupportsSync")]
        public bool? SupportsSync { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Container")]
        public string Container { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SortName")]
        public string SortName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ForcedSortName")]
        public string ForcedSortName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'HalfSideBySide',
        /// 'FullSideBySide', 'FullTopAndBottom', 'HalfTopAndBottom', 'MVC'
        /// </summary>
        [JsonProperty(PropertyName = "Video3DFormat")]
        public string Video3DFormat { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PremiereDate")]
        public System.DateTime? PremiereDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ExternalUrls")]
        public IList<ExternalUrl> ExternalUrls { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MediaSources")]
        public IList<MediaSourceInfo> MediaSources { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CriticRating")]
        public double? CriticRating { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GameSystemId")]
        public long? GameSystemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AsSeries")]
        public bool? AsSeries { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GameSystem")]
        public string GameSystem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProductionLocations")]
        public IList<string> ProductionLocations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Path")]
        public string Path { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OfficialRating")]
        public string OfficialRating { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CustomRating")]
        public string CustomRating { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChannelId")]
        public string ChannelId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChannelName")]
        public string ChannelName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Overview")]
        public string Overview { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Taglines")]
        public IList<string> Taglines { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Genres")]
        public IList<string> Genres { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CommunityRating")]
        public double? CommunityRating { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RunTimeTicks")]
        public long? RunTimeTicks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Size")]
        public long? Size { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FileName")]
        public string FileName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Bitrate")]
        public int? Bitrate { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Full', 'None'
        /// </summary>
        [JsonProperty(PropertyName = "PlayAccess")]
        public string PlayAccess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProductionYear")]
        public int? ProductionYear { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Number")]
        public string Number { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChannelNumber")]
        public string ChannelNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IndexNumber")]
        public int? IndexNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IndexNumberEnd")]
        public int? IndexNumberEnd { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentIndexNumber")]
        public int? ParentIndexNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RemoteTrailers")]
        public IList<MediaUrl> RemoteTrailers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProviderIds")]
        public IDictionary<string, string> ProviderIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsFolder")]
        public bool? IsFolder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentId")]
        public string ParentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "People")]
        public IList<BaseItemPerson> People { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Studios")]
        public IList<NameLongIdPair> Studios { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GenreItems")]
        public IList<NameLongIdPair> GenreItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TagItems")]
        public IList<NameLongIdPair> TagItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentLogoItemId")]
        public string ParentLogoItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentBackdropItemId")]
        public string ParentBackdropItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentBackdropImageTags")]
        public IList<string> ParentBackdropImageTags { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocalTrailerCount")]
        public int? LocalTrailerCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserData")]
        public UserItemDataDto UserData { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RecursiveItemCount")]
        public int? RecursiveItemCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChildCount")]
        public int? ChildCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SeriesName")]
        public string SeriesName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SeriesId")]
        public string SeriesId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SeasonId")]
        public string SeasonId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SpecialFeatureCount")]
        public int? SpecialFeatureCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisplayPreferencesId")]
        public string DisplayPreferencesId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AirDays")]
        public IList<string> AirDays { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Tags")]
        public IList<string> Tags { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrimaryImageAspectRatio")]
        public double? PrimaryImageAspectRatio { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Artists")]
        public IList<string> Artists { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ArtistItems")]
        public IList<NameIdPair> ArtistItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Composers")]
        public IList<NameIdPair> Composers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Album")]
        public string Album { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CollectionType")]
        public string CollectionType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisplayOrder")]
        public string DisplayOrder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AlbumId")]
        public string AlbumId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AlbumPrimaryImageTag")]
        public string AlbumPrimaryImageTag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SeriesPrimaryImageTag")]
        public string SeriesPrimaryImageTag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AlbumArtist")]
        public string AlbumArtist { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AlbumArtists")]
        public IList<NameIdPair> AlbumArtists { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SeasonName")]
        public string SeasonName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MediaStreams")]
        public IList<MediaStream> MediaStreams { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PartCount")]
        public int? PartCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ImageTags")]
        public IDictionary<string, string> ImageTags { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BackdropImageTags")]
        public IList<string> BackdropImageTags { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentLogoImageTag")]
        public string ParentLogoImageTag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SeriesStudio")]
        public string SeriesStudio { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentThumbItemId")]
        public string ParentThumbItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentThumbImageTag")]
        public string ParentThumbImageTag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Chapters")]
        public IList<ChapterInfo> Chapters { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'FileSystem', 'Virtual'
        /// </summary>
        [JsonProperty(PropertyName = "LocationType")]
        public string LocationType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MediaType")]
        public string MediaType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EndDate")]
        public System.DateTime? EndDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LockedFields")]
        public IList<string> LockedFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LockData")]
        public bool? LockData { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Width")]
        public int? Width { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Height")]
        public int? Height { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CameraMake")]
        public string CameraMake { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CameraModel")]
        public string CameraModel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Software")]
        public string Software { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ExposureTime")]
        public double? ExposureTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FocalLength")]
        public double? FocalLength { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'TopLeft', 'TopRight',
        /// 'BottomRight', 'BottomLeft', 'LeftTop', 'RightTop', 'RightBottom',
        /// 'LeftBottom'
        /// </summary>
        [JsonProperty(PropertyName = "ImageOrientation")]
        public string ImageOrientation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Aperture")]
        public double? Aperture { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ShutterSpeed")]
        public double? ShutterSpeed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Latitude")]
        public double? Latitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Longitude")]
        public double? Longitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Altitude")]
        public double? Altitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsoSpeedRating")]
        public int? IsoSpeedRating { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SeriesTimerId")]
        public string SeriesTimerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChannelPrimaryImageTag")]
        public string ChannelPrimaryImageTag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StartDate")]
        public System.DateTime? StartDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CompletionPercentage")]
        public double? CompletionPercentage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsRepeat")]
        public bool? IsRepeat { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsNew")]
        public bool? IsNew { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EpisodeTitle")]
        public string EpisodeTitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsMovie")]
        public bool? IsMovie { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsSports")]
        public bool? IsSports { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsSeries")]
        public bool? IsSeries { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsLive")]
        public bool? IsLive { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsNews")]
        public bool? IsNews { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsKids")]
        public bool? IsKids { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsPremiere")]
        public bool? IsPremiere { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Program', 'DateTime',
        /// 'Keyword'
        /// </summary>
        [JsonProperty(PropertyName = "TimerType")]
        public string TimerType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Disabled")]
        public bool? Disabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ManagementId")]
        public string ManagementId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TimerId")]
        public string TimerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CurrentProgram")]
        public BaseItemDto CurrentProgram { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MovieCount")]
        public int? MovieCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SeriesCount")]
        public int? SeriesCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AlbumCount")]
        public int? AlbumCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SongCount")]
        public int? SongCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MusicVideoCount")]
        public int? MusicVideoCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Subviews")]
        public IList<string> Subviews { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ListingsProviderId")]
        public string ListingsProviderId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ListingsChannelId")]
        public string ListingsChannelId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ListingsPath")]
        public string ListingsPath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ListingsId")]
        public string ListingsId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ListingsChannelName")]
        public string ListingsChannelName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ListingsChannelNumber")]
        public string ListingsChannelNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AffiliateCallSign")]
        public string AffiliateCallSign { get; set; }

    }
}
