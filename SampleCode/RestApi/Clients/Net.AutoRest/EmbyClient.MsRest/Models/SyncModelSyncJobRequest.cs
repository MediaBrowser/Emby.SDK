// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SyncModelSyncJobRequest
    {
        /// <summary>
        /// Initializes a new instance of the SyncModelSyncJobRequest class.
        /// </summary>
        public SyncModelSyncJobRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SyncModelSyncJobRequest class.
        /// </summary>
        /// <param name="category">Possible values include: 'Latest', 'NextUp',
        /// 'Resume'</param>
        public SyncModelSyncJobRequest(string targetId = default(string), IList<string> itemIds = default(IList<string>), string category = default(string), string parentId = default(string), string quality = default(string), string profile = default(string), string container = default(string), string videoCodec = default(string), string audioCodec = default(string), string name = default(string), string userId = default(string), bool? unwatchedOnly = default(bool?), bool? syncNewContent = default(bool?), int? itemLimit = default(int?), int? bitrate = default(int?), bool? downloaded = default(bool?))
        {
            TargetId = targetId;
            ItemIds = itemIds;
            Category = category;
            ParentId = parentId;
            Quality = quality;
            Profile = profile;
            Container = container;
            VideoCodec = videoCodec;
            AudioCodec = audioCodec;
            Name = name;
            UserId = userId;
            UnwatchedOnly = unwatchedOnly;
            SyncNewContent = syncNewContent;
            ItemLimit = itemLimit;
            Bitrate = bitrate;
            Downloaded = downloaded;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TargetId")]
        public string TargetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemIds")]
        public IList<string> ItemIds { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Latest', 'NextUp', 'Resume'
        /// </summary>
        [JsonProperty(PropertyName = "Category")]
        public string Category { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentId")]
        public string ParentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Quality")]
        public string Quality { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Profile")]
        public string Profile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Container")]
        public string Container { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoCodec")]
        public string VideoCodec { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AudioCodec")]
        public string AudioCodec { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserId")]
        public string UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UnwatchedOnly")]
        public bool? UnwatchedOnly { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SyncNewContent")]
        public bool? SyncNewContent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemLimit")]
        public int? ItemLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Bitrate")]
        public int? Bitrate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Downloaded")]
        public bool? Downloaded { get; set; }

    }
}
