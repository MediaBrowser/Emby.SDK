// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PlayerStateInfo
    {
        /// <summary>
        /// Initializes a new instance of the PlayerStateInfo class.
        /// </summary>
        public PlayerStateInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PlayerStateInfo class.
        /// </summary>
        /// <param name="playMethod">Possible values include: 'Transcode',
        /// 'DirectStream', 'DirectPlay'</param>
        /// <param name="repeatMode">Possible values include: 'RepeatNone',
        /// 'RepeatAll', 'RepeatOne'</param>
        public PlayerStateInfo(long? positionTicks = default(long?), bool? canSeek = default(bool?), bool? isPaused = default(bool?), bool? isMuted = default(bool?), int? volumeLevel = default(int?), int? audioStreamIndex = default(int?), int? subtitleStreamIndex = default(int?), string mediaSourceId = default(string), string playMethod = default(string), string repeatMode = default(string), int? subtitleOffset = default(int?), double? playbackRate = default(double?))
        {
            PositionTicks = positionTicks;
            CanSeek = canSeek;
            IsPaused = isPaused;
            IsMuted = isMuted;
            VolumeLevel = volumeLevel;
            AudioStreamIndex = audioStreamIndex;
            SubtitleStreamIndex = subtitleStreamIndex;
            MediaSourceId = mediaSourceId;
            PlayMethod = playMethod;
            RepeatMode = repeatMode;
            SubtitleOffset = subtitleOffset;
            PlaybackRate = playbackRate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PositionTicks")]
        public long? PositionTicks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CanSeek")]
        public bool? CanSeek { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsPaused")]
        public bool? IsPaused { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsMuted")]
        public bool? IsMuted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VolumeLevel")]
        public int? VolumeLevel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AudioStreamIndex")]
        public int? AudioStreamIndex { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubtitleStreamIndex")]
        public int? SubtitleStreamIndex { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MediaSourceId")]
        public string MediaSourceId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Transcode', 'DirectStream',
        /// 'DirectPlay'
        /// </summary>
        [JsonProperty(PropertyName = "PlayMethod")]
        public string PlayMethod { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'RepeatNone', 'RepeatAll',
        /// 'RepeatOne'
        /// </summary>
        [JsonProperty(PropertyName = "RepeatMode")]
        public string RepeatMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubtitleOffset")]
        public int? SubtitleOffset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlaybackRate")]
        public double? PlaybackRate { get; set; }

    }
}
