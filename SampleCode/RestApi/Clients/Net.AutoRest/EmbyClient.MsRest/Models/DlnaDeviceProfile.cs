// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class DlnaDeviceProfile
    {
        /// <summary>
        /// Initializes a new instance of the DlnaDeviceProfile class.
        /// </summary>
        public DlnaDeviceProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DlnaDeviceProfile class.
        /// </summary>
        public DlnaDeviceProfile(string name = default(string), string id = default(string), string supportedMediaTypes = default(string), long? maxStreamingBitrate = default(long?), int? musicStreamingTranscodingBitrate = default(int?), int? maxStaticMusicBitrate = default(int?), IList<DlnaDirectPlayProfile> directPlayProfiles = default(IList<DlnaDirectPlayProfile>), IList<DlnaTranscodingProfile> transcodingProfiles = default(IList<DlnaTranscodingProfile>), IList<DlnaContainerProfile> containerProfiles = default(IList<DlnaContainerProfile>), IList<DlnaCodecProfile> codecProfiles = default(IList<DlnaCodecProfile>), IList<DlnaResponseProfile> responseProfiles = default(IList<DlnaResponseProfile>), IList<DlnaSubtitleProfile> subtitleProfiles = default(IList<DlnaSubtitleProfile>))
        {
            Name = name;
            Id = id;
            SupportedMediaTypes = supportedMediaTypes;
            MaxStreamingBitrate = maxStreamingBitrate;
            MusicStreamingTranscodingBitrate = musicStreamingTranscodingBitrate;
            MaxStaticMusicBitrate = maxStaticMusicBitrate;
            DirectPlayProfiles = directPlayProfiles;
            TranscodingProfiles = transcodingProfiles;
            ContainerProfiles = containerProfiles;
            CodecProfiles = codecProfiles;
            ResponseProfiles = responseProfiles;
            SubtitleProfiles = subtitleProfiles;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SupportedMediaTypes")]
        public string SupportedMediaTypes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxStreamingBitrate")]
        public long? MaxStreamingBitrate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MusicStreamingTranscodingBitrate")]
        public int? MusicStreamingTranscodingBitrate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxStaticMusicBitrate")]
        public int? MaxStaticMusicBitrate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DirectPlayProfiles")]
        public IList<DlnaDirectPlayProfile> DirectPlayProfiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TranscodingProfiles")]
        public IList<DlnaTranscodingProfile> TranscodingProfiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContainerProfiles")]
        public IList<DlnaContainerProfile> ContainerProfiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CodecProfiles")]
        public IList<DlnaCodecProfile> CodecProfiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResponseProfiles")]
        public IList<DlnaResponseProfile> ResponseProfiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubtitleProfiles")]
        public IList<DlnaSubtitleProfile> SubtitleProfiles { get; set; }

    }
}
