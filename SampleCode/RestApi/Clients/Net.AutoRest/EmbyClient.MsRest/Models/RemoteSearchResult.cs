// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class RemoteSearchResult
    {
        /// <summary>
        /// Initializes a new instance of the RemoteSearchResult class.
        /// </summary>
        public RemoteSearchResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RemoteSearchResult class.
        /// </summary>
        public RemoteSearchResult(string name = default(string), IDictionary<string, string> providerIds = default(IDictionary<string, string>), int? productionYear = default(int?), int? indexNumber = default(int?), int? indexNumberEnd = default(int?), int? parentIndexNumber = default(int?), System.DateTime? premiereDate = default(System.DateTime?), string imageUrl = default(string), string searchProviderName = default(string), string gameSystem = default(string), string overview = default(string), string disambiguationComment = default(string), RemoteSearchResult albumArtist = default(RemoteSearchResult), IList<RemoteSearchResult> artists = default(IList<RemoteSearchResult>))
        {
            Name = name;
            ProviderIds = providerIds;
            ProductionYear = productionYear;
            IndexNumber = indexNumber;
            IndexNumberEnd = indexNumberEnd;
            ParentIndexNumber = parentIndexNumber;
            PremiereDate = premiereDate;
            ImageUrl = imageUrl;
            SearchProviderName = searchProviderName;
            GameSystem = gameSystem;
            Overview = overview;
            DisambiguationComment = disambiguationComment;
            AlbumArtist = albumArtist;
            Artists = artists;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProviderIds")]
        public IDictionary<string, string> ProviderIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProductionYear")]
        public int? ProductionYear { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IndexNumber")]
        public int? IndexNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IndexNumberEnd")]
        public int? IndexNumberEnd { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentIndexNumber")]
        public int? ParentIndexNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PremiereDate")]
        public System.DateTime? PremiereDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ImageUrl")]
        public string ImageUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SearchProviderName")]
        public string SearchProviderName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GameSystem")]
        public string GameSystem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Overview")]
        public string Overview { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisambiguationComment")]
        public string DisambiguationComment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AlbumArtist")]
        public RemoteSearchResult AlbumArtist { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Artists")]
        public IList<RemoteSearchResult> Artists { get; set; }

    }
}
