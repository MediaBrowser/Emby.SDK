// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TasksTaskTriggerInfo
    {
        /// <summary>
        /// Initializes a new instance of the TasksTaskTriggerInfo class.
        /// </summary>
        public TasksTaskTriggerInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TasksTaskTriggerInfo class.
        /// </summary>
        /// <param name="systemEvent">Possible values include: 'WakeFromSleep',
        /// 'DisplayConfigurationChange', 'NetworkChange'</param>
        /// <param name="dayOfWeek">Possible values include: 'Sunday',
        /// 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
        /// 'Saturday'</param>
        public TasksTaskTriggerInfo(string type = default(string), long? timeOfDayTicks = default(long?), long? intervalTicks = default(long?), string systemEvent = default(string), string dayOfWeek = default(string), long? maxRuntimeTicks = default(long?))
        {
            Type = type;
            TimeOfDayTicks = timeOfDayTicks;
            IntervalTicks = intervalTicks;
            SystemEvent = systemEvent;
            DayOfWeek = dayOfWeek;
            MaxRuntimeTicks = maxRuntimeTicks;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TimeOfDayTicks")]
        public long? TimeOfDayTicks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IntervalTicks")]
        public long? IntervalTicks { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'WakeFromSleep',
        /// 'DisplayConfigurationChange', 'NetworkChange'
        /// </summary>
        [JsonProperty(PropertyName = "SystemEvent")]
        public string SystemEvent { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Sunday', 'Monday',
        /// 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'
        /// </summary>
        [JsonProperty(PropertyName = "DayOfWeek")]
        public string DayOfWeek { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxRuntimeTicks")]
        public long? MaxRuntimeTicks { get; set; }

    }
}
