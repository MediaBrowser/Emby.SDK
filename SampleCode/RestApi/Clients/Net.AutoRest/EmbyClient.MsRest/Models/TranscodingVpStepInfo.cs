// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TranscodingVpStepInfo
    {
        /// <summary>
        /// Initializes a new instance of the TranscodingVpStepInfo class.
        /// </summary>
        public TranscodingVpStepInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TranscodingVpStepInfo class.
        /// </summary>
        /// <param name="stepType">Possible values include: 'Decoder',
        /// 'Encoder', 'Scaling', 'Deinterlace', 'SubtitleOverlay',
        /// 'ToneMapping', 'ColorConversion', 'SplitCaptions', 'TextSub2Video',
        /// 'GraphicSub2Video', 'GraphicSub2Text', 'BurnInTextSubs',
        /// 'BurnInGraphicSubs', 'ScaleSubs', 'TextMod', 'Censor',
        /// 'ShowSpeaker', 'StripStyles', 'ConnectTo'</param>
        public TranscodingVpStepInfo(string stepType = default(string), string stepTypeName = default(string), string hardwareContextName = default(string), bool? isHardwareContext = default(bool?), string name = default(string), string shortProperty = default(string), string ffmpegName = default(string), string ffmpegDescription = default(string), string ffmpegOptions = default(string), string param = default(string), string paramShort = default(string))
        {
            StepType = stepType;
            StepTypeName = stepTypeName;
            HardwareContextName = hardwareContextName;
            IsHardwareContext = isHardwareContext;
            Name = name;
            ShortProperty = shortProperty;
            FfmpegName = ffmpegName;
            FfmpegDescription = ffmpegDescription;
            FfmpegOptions = ffmpegOptions;
            Param = param;
            ParamShort = paramShort;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Decoder', 'Encoder',
        /// 'Scaling', 'Deinterlace', 'SubtitleOverlay', 'ToneMapping',
        /// 'ColorConversion', 'SplitCaptions', 'TextSub2Video',
        /// 'GraphicSub2Video', 'GraphicSub2Text', 'BurnInTextSubs',
        /// 'BurnInGraphicSubs', 'ScaleSubs', 'TextMod', 'Censor',
        /// 'ShowSpeaker', 'StripStyles', 'ConnectTo'
        /// </summary>
        [JsonProperty(PropertyName = "StepType")]
        public string StepType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StepTypeName")]
        public string StepTypeName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HardwareContextName")]
        public string HardwareContextName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsHardwareContext")]
        public bool? IsHardwareContext { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Short")]
        public string ShortProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FfmpegName")]
        public string FfmpegName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FfmpegDescription")]
        public string FfmpegDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FfmpegOptions")]
        public string FfmpegOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Param")]
        public string Param { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParamShort")]
        public string ParamShort { get; set; }

    }
}
