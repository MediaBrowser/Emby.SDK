// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PlaybackStopInfo
    {
        /// <summary>
        /// Initializes a new instance of the PlaybackStopInfo class.
        /// </summary>
        public PlaybackStopInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PlaybackStopInfo class.
        /// </summary>
        public PlaybackStopInfo(IList<QueueItem> nowPlayingQueue = default(IList<QueueItem>), string playlistItemId = default(string), int? playlistIndex = default(int?), int? playlistLength = default(int?), BaseItemDto item = default(BaseItemDto), string itemId = default(string), string sessionId = default(string), string mediaSourceId = default(string), long? positionTicks = default(long?), string liveStreamId = default(string), string playSessionId = default(string), bool? failed = default(bool?), string nextMediaType = default(string))
        {
            NowPlayingQueue = nowPlayingQueue;
            PlaylistItemId = playlistItemId;
            PlaylistIndex = playlistIndex;
            PlaylistLength = playlistLength;
            Item = item;
            ItemId = itemId;
            SessionId = sessionId;
            MediaSourceId = mediaSourceId;
            PositionTicks = positionTicks;
            LiveStreamId = liveStreamId;
            PlaySessionId = playSessionId;
            Failed = failed;
            NextMediaType = nextMediaType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NowPlayingQueue")]
        public IList<QueueItem> NowPlayingQueue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlaylistItemId")]
        public string PlaylistItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlaylistIndex")]
        public int? PlaylistIndex { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlaylistLength")]
        public int? PlaylistLength { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Item")]
        public BaseItemDto Item { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemId")]
        public string ItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SessionId")]
        public string SessionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MediaSourceId")]
        public string MediaSourceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PositionTicks")]
        public long? PositionTicks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LiveStreamId")]
        public string LiveStreamId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlaySessionId")]
        public string PlaySessionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Failed")]
        public bool? Failed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NextMediaType")]
        public string NextMediaType { get; set; }

    }
}
