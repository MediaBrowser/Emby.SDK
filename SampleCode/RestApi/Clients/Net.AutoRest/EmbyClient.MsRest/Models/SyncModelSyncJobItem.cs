// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SyncModelSyncJobItem
    {
        /// <summary>
        /// Initializes a new instance of the SyncModelSyncJobItem class.
        /// </summary>
        public SyncModelSyncJobItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SyncModelSyncJobItem class.
        /// </summary>
        /// <param name="status">Possible values include: 'Queued',
        /// 'Converting', 'ReadyToTransfer', 'Transferring', 'Synced',
        /// 'Failed'</param>
        public SyncModelSyncJobItem(long? id = default(long?), long? jobId = default(long?), long? itemId = default(long?), string itemName = default(string), string mediaSourceId = default(string), MediaSourceInfo mediaSource = default(MediaSourceInfo), string targetId = default(string), string outputPath = default(string), string status = default(string), double? progress = default(double?), System.DateTime? dateCreated = default(System.DateTime?), string primaryImageItemId = default(string), string primaryImageTag = default(string), string temporaryPath = default(string), IList<SyncModelItemFileInfo> additionalFiles = default(IList<SyncModelItemFileInfo>), long? itemDateModifiedTicks = default(long?))
        {
            Id = id;
            JobId = jobId;
            ItemId = itemId;
            ItemName = itemName;
            MediaSourceId = mediaSourceId;
            MediaSource = mediaSource;
            TargetId = targetId;
            OutputPath = outputPath;
            Status = status;
            Progress = progress;
            DateCreated = dateCreated;
            PrimaryImageItemId = primaryImageItemId;
            PrimaryImageTag = primaryImageTag;
            TemporaryPath = temporaryPath;
            AdditionalFiles = additionalFiles;
            ItemDateModifiedTicks = itemDateModifiedTicks;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public long? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "JobId")]
        public long? JobId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemId")]
        public long? ItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemName")]
        public string ItemName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MediaSourceId")]
        public string MediaSourceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MediaSource")]
        public MediaSourceInfo MediaSource { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TargetId")]
        public string TargetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OutputPath")]
        public string OutputPath { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Queued', 'Converting',
        /// 'ReadyToTransfer', 'Transferring', 'Synced', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Progress")]
        public double? Progress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateCreated")]
        public System.DateTime? DateCreated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrimaryImageItemId")]
        public string PrimaryImageItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrimaryImageTag")]
        public string PrimaryImageTag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TemporaryPath")]
        public string TemporaryPath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AdditionalFiles")]
        public IList<SyncModelItemFileInfo> AdditionalFiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemDateModifiedTicks")]
        public long? ItemDateModifiedTicks { get; set; }

    }
}
