// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UserItemDataDto
    {
        /// <summary>
        /// Initializes a new instance of the UserItemDataDto class.
        /// </summary>
        public UserItemDataDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserItemDataDto class.
        /// </summary>
        public UserItemDataDto(double? rating = default(double?), double? playedPercentage = default(double?), int? unplayedItemCount = default(int?), long? playbackPositionTicks = default(long?), int? playCount = default(int?), bool? isFavorite = default(bool?), System.DateTime? lastPlayedDate = default(System.DateTime?), bool? played = default(bool?), string key = default(string), string itemId = default(string), string serverId = default(string))
        {
            Rating = rating;
            PlayedPercentage = playedPercentage;
            UnplayedItemCount = unplayedItemCount;
            PlaybackPositionTicks = playbackPositionTicks;
            PlayCount = playCount;
            IsFavorite = isFavorite;
            LastPlayedDate = lastPlayedDate;
            Played = played;
            Key = key;
            ItemId = itemId;
            ServerId = serverId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Rating")]
        public double? Rating { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlayedPercentage")]
        public double? PlayedPercentage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UnplayedItemCount")]
        public int? UnplayedItemCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlaybackPositionTicks")]
        public long? PlaybackPositionTicks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlayCount")]
        public int? PlayCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsFavorite")]
        public bool? IsFavorite { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastPlayedDate")]
        public System.DateTime? LastPlayedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Played")]
        public bool? Played { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Key")]
        public string Key { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemId")]
        public string ItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServerId")]
        public string ServerId { get; set; }

    }
}
