// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SystemInfo
    {
        /// <summary>
        /// Initializes a new instance of the SystemInfo class.
        /// </summary>
        public SystemInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SystemInfo class.
        /// </summary>
        /// <param name="systemUpdateLevel">Possible values include: 'Release',
        /// 'Beta', 'Dev'</param>
        public SystemInfo(string systemUpdateLevel = default(string), string operatingSystemDisplayName = default(string), string packageName = default(string), bool? hasPendingRestart = default(bool?), bool? isShuttingDown = default(bool?), string operatingSystem = default(string), bool? supportsLibraryMonitor = default(bool?), bool? supportsLocalPortConfiguration = default(bool?), bool? supportsWakeServer = default(bool?), int? webSocketPortNumber = default(int?), IList<UpdatesInstallationInfo> completedInstallations = default(IList<UpdatesInstallationInfo>), bool? canSelfRestart = default(bool?), bool? canSelfUpdate = default(bool?), bool? canLaunchWebBrowser = default(bool?), string programDataPath = default(string), string itemsByNamePath = default(string), string cachePath = default(string), string logPath = default(string), string internalMetadataPath = default(string), string transcodingTempPath = default(string), int? httpServerPortNumber = default(int?), bool? supportsHttps = default(bool?), int? httpsPortNumber = default(int?), bool? hasUpdateAvailable = default(bool?), bool? supportsAutoRunAtStartup = default(bool?), bool? hardwareAccelerationRequiresPremiere = default(bool?), string localAddress = default(string), IList<string> localAddresses = default(IList<string>), string wanAddress = default(string), IList<string> remoteAddresses = default(IList<string>), string serverName = default(string), string version = default(string), string id = default(string))
        {
            SystemUpdateLevel = systemUpdateLevel;
            OperatingSystemDisplayName = operatingSystemDisplayName;
            PackageName = packageName;
            HasPendingRestart = hasPendingRestart;
            IsShuttingDown = isShuttingDown;
            OperatingSystem = operatingSystem;
            SupportsLibraryMonitor = supportsLibraryMonitor;
            SupportsLocalPortConfiguration = supportsLocalPortConfiguration;
            SupportsWakeServer = supportsWakeServer;
            WebSocketPortNumber = webSocketPortNumber;
            CompletedInstallations = completedInstallations;
            CanSelfRestart = canSelfRestart;
            CanSelfUpdate = canSelfUpdate;
            CanLaunchWebBrowser = canLaunchWebBrowser;
            ProgramDataPath = programDataPath;
            ItemsByNamePath = itemsByNamePath;
            CachePath = cachePath;
            LogPath = logPath;
            InternalMetadataPath = internalMetadataPath;
            TranscodingTempPath = transcodingTempPath;
            HttpServerPortNumber = httpServerPortNumber;
            SupportsHttps = supportsHttps;
            HttpsPortNumber = httpsPortNumber;
            HasUpdateAvailable = hasUpdateAvailable;
            SupportsAutoRunAtStartup = supportsAutoRunAtStartup;
            HardwareAccelerationRequiresPremiere = hardwareAccelerationRequiresPremiere;
            LocalAddress = localAddress;
            LocalAddresses = localAddresses;
            WanAddress = wanAddress;
            RemoteAddresses = remoteAddresses;
            ServerName = serverName;
            Version = version;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Release', 'Beta', 'Dev'
        /// </summary>
        [JsonProperty(PropertyName = "SystemUpdateLevel")]
        public string SystemUpdateLevel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OperatingSystemDisplayName")]
        public string OperatingSystemDisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PackageName")]
        public string PackageName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasPendingRestart")]
        public bool? HasPendingRestart { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsShuttingDown")]
        public bool? IsShuttingDown { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OperatingSystem")]
        public string OperatingSystem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SupportsLibraryMonitor")]
        public bool? SupportsLibraryMonitor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SupportsLocalPortConfiguration")]
        public bool? SupportsLocalPortConfiguration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SupportsWakeServer")]
        public bool? SupportsWakeServer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "WebSocketPortNumber")]
        public int? WebSocketPortNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CompletedInstallations")]
        public IList<UpdatesInstallationInfo> CompletedInstallations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CanSelfRestart")]
        public bool? CanSelfRestart { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CanSelfUpdate")]
        public bool? CanSelfUpdate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CanLaunchWebBrowser")]
        public bool? CanLaunchWebBrowser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProgramDataPath")]
        public string ProgramDataPath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemsByNamePath")]
        public string ItemsByNamePath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CachePath")]
        public string CachePath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LogPath")]
        public string LogPath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InternalMetadataPath")]
        public string InternalMetadataPath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TranscodingTempPath")]
        public string TranscodingTempPath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HttpServerPortNumber")]
        public int? HttpServerPortNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SupportsHttps")]
        public bool? SupportsHttps { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HttpsPortNumber")]
        public int? HttpsPortNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasUpdateAvailable")]
        public bool? HasUpdateAvailable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SupportsAutoRunAtStartup")]
        public bool? SupportsAutoRunAtStartup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HardwareAccelerationRequiresPremiere")]
        public bool? HardwareAccelerationRequiresPremiere { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocalAddress")]
        public string LocalAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LocalAddresses")]
        public IList<string> LocalAddresses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "WanAddress")]
        public string WanAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RemoteAddresses")]
        public IList<string> RemoteAddresses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServerName")]
        public string ServerName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Version")]
        public string Version { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

    }
}
