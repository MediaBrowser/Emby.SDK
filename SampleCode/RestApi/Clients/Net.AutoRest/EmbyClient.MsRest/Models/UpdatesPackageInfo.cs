// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class UpdatesPackageInfo
    {
        /// <summary>
        /// Initializes a new instance of the UpdatesPackageInfo class.
        /// </summary>
        public UpdatesPackageInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdatesPackageInfo class.
        /// </summary>
        /// <param name="targetSystem">Possible values include: 'Server',
        /// 'MBTheater', 'MBClassic', 'Other'</param>
        public UpdatesPackageInfo(string id = default(string), string name = default(string), string shortDescription = default(string), string overview = default(string), bool? isPremium = default(bool?), bool? adult = default(bool?), string richDescUrl = default(string), string thumbImage = default(string), string previewImage = default(string), string type = default(string), string targetFilename = default(string), string owner = default(string), string category = default(string), string tileColor = default(string), string featureId = default(string), string regInfo = default(string), double? price = default(double?), string targetSystem = default(string), string guid = default(string), int? totalRatings = default(int?), double? avgRating = default(double?), bool? isRegistered = default(bool?), System.DateTime? expDate = default(System.DateTime?), IList<UpdatesPackageVersionInfo> versions = default(IList<UpdatesPackageVersionInfo>), bool? enableInAppStore = default(bool?), int? installs = default(int?))
        {
            Id = id;
            Name = name;
            ShortDescription = shortDescription;
            Overview = overview;
            IsPremium = isPremium;
            Adult = adult;
            RichDescUrl = richDescUrl;
            ThumbImage = thumbImage;
            PreviewImage = previewImage;
            Type = type;
            TargetFilename = targetFilename;
            Owner = owner;
            Category = category;
            TileColor = tileColor;
            FeatureId = featureId;
            RegInfo = regInfo;
            Price = price;
            TargetSystem = targetSystem;
            Guid = guid;
            TotalRatings = totalRatings;
            AvgRating = avgRating;
            IsRegistered = isRegistered;
            ExpDate = expDate;
            Versions = versions;
            EnableInAppStore = enableInAppStore;
            Installs = installs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shortDescription")]
        public string ShortDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "overview")]
        public string Overview { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isPremium")]
        public bool? IsPremium { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "adult")]
        public bool? Adult { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "richDescUrl")]
        public string RichDescUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "thumbImage")]
        public string ThumbImage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "previewImage")]
        public string PreviewImage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "targetFilename")]
        public string TargetFilename { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owner")]
        public string Owner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tileColor")]
        public string TileColor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "featureId")]
        public string FeatureId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "regInfo")]
        public string RegInfo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "price")]
        public double? Price { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Server', 'MBTheater',
        /// 'MBClassic', 'Other'
        /// </summary>
        [JsonProperty(PropertyName = "targetSystem")]
        public string TargetSystem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "guid")]
        public string Guid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "totalRatings")]
        public int? TotalRatings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "avgRating")]
        public double? AvgRating { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isRegistered")]
        public bool? IsRegistered { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expDate")]
        public System.DateTime? ExpDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "versions")]
        public IList<UpdatesPackageVersionInfo> Versions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enableInAppStore")]
        public bool? EnableInAppStore { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "installs")]
        public int? Installs { get; set; }

    }
}
