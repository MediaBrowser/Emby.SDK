// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UserDto
    {
        /// <summary>
        /// Initializes a new instance of the UserDto class.
        /// </summary>
        public UserDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserDto class.
        /// </summary>
        /// <param name="connectLinkType">Possible values include:
        /// 'LinkedUser', 'Guest'</param>
        public UserDto(string name = default(string), string serverId = default(string), string serverName = default(string), string prefix = default(string), string connectUserName = default(string), System.DateTime? dateCreated = default(System.DateTime?), string connectLinkType = default(string), string id = default(string), string primaryImageTag = default(string), bool? hasPassword = default(bool?), bool? hasConfiguredPassword = default(bool?), bool? hasConfiguredEasyPassword = default(bool?), bool? enableAutoLogin = default(bool?), System.DateTime? lastLoginDate = default(System.DateTime?), System.DateTime? lastActivityDate = default(System.DateTime?), ConfigurationUserConfiguration configuration = default(ConfigurationUserConfiguration), UsersUserPolicy policy = default(UsersUserPolicy), double? primaryImageAspectRatio = default(double?))
        {
            Name = name;
            ServerId = serverId;
            ServerName = serverName;
            Prefix = prefix;
            ConnectUserName = connectUserName;
            DateCreated = dateCreated;
            ConnectLinkType = connectLinkType;
            Id = id;
            PrimaryImageTag = primaryImageTag;
            HasPassword = hasPassword;
            HasConfiguredPassword = hasConfiguredPassword;
            HasConfiguredEasyPassword = hasConfiguredEasyPassword;
            EnableAutoLogin = enableAutoLogin;
            LastLoginDate = lastLoginDate;
            LastActivityDate = lastActivityDate;
            Configuration = configuration;
            Policy = policy;
            PrimaryImageAspectRatio = primaryImageAspectRatio;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServerId")]
        public string ServerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServerName")]
        public string ServerName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Prefix")]
        public string Prefix { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ConnectUserName")]
        public string ConnectUserName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateCreated")]
        public System.DateTime? DateCreated { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'LinkedUser', 'Guest'
        /// </summary>
        [JsonProperty(PropertyName = "ConnectLinkType")]
        public string ConnectLinkType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrimaryImageTag")]
        public string PrimaryImageTag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasPassword")]
        public bool? HasPassword { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasConfiguredPassword")]
        public bool? HasConfiguredPassword { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasConfiguredEasyPassword")]
        public bool? HasConfiguredEasyPassword { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EnableAutoLogin")]
        public bool? EnableAutoLogin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastLoginDate")]
        public System.DateTime? LastLoginDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastActivityDate")]
        public System.DateTime? LastActivityDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Configuration")]
        public ConfigurationUserConfiguration Configuration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Policy")]
        public UsersUserPolicy Policy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrimaryImageAspectRatio")]
        public double? PrimaryImageAspectRatio { get; set; }

    }
}
