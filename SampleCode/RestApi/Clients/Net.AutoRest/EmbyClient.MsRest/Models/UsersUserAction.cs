// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UsersUserAction
    {
        /// <summary>
        /// Initializes a new instance of the UsersUserAction class.
        /// </summary>
        public UsersUserAction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UsersUserAction class.
        /// </summary>
        /// <param name="type">Possible values include: 'PlayedItem'</param>
        public UsersUserAction(string id = default(string), string serverId = default(string), string userId = default(string), string itemId = default(string), string type = default(string), System.DateTime? date = default(System.DateTime?), long? positionTicks = default(long?))
        {
            Id = id;
            ServerId = serverId;
            UserId = userId;
            ItemId = itemId;
            Type = type;
            Date = date;
            PositionTicks = positionTicks;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServerId")]
        public string ServerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserId")]
        public string UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemId")]
        public string ItemId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'PlayedItem'
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Date")]
        public System.DateTime? Date { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PositionTicks")]
        public long? PositionTicks { get; set; }

    }
}
