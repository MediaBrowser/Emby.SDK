// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EmbyClient.MsRest.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SyncSyncJob
    {
        /// <summary>
        /// Initializes a new instance of the SyncSyncJob class.
        /// </summary>
        public SyncSyncJob()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SyncSyncJob class.
        /// </summary>
        /// <param name="category">Possible values include: 'Latest', 'NextUp',
        /// 'Resume'</param>
        /// <param name="status">Possible values include: 'Queued',
        /// 'Converting', 'ReadyToTransfer', 'Transferring', 'Completed',
        /// 'CompletedWithError', 'Failed'</param>
        public SyncSyncJob(long? id = default(long?), string targetId = default(string), string targetName = default(string), string quality = default(string), int? bitrate = default(int?), string container = default(string), string videoCodec = default(string), string audioCodec = default(string), string profile = default(string), string category = default(string), long? parentId = default(long?), double? progress = default(double?), string name = default(string), string status = default(string), long? userId = default(long?), bool? unwatchedOnly = default(bool?), bool? syncNewContent = default(bool?), int? itemLimit = default(int?), IList<long?> requestedItemIds = default(IList<long?>), System.DateTime? dateCreated = default(System.DateTime?), System.DateTime? dateLastModified = default(System.DateTime?), int? itemCount = default(int?), string parentName = default(string), string primaryImageItemId = default(string), string primaryImageTag = default(string))
        {
            Id = id;
            TargetId = targetId;
            TargetName = targetName;
            Quality = quality;
            Bitrate = bitrate;
            Container = container;
            VideoCodec = videoCodec;
            AudioCodec = audioCodec;
            Profile = profile;
            Category = category;
            ParentId = parentId;
            Progress = progress;
            Name = name;
            Status = status;
            UserId = userId;
            UnwatchedOnly = unwatchedOnly;
            SyncNewContent = syncNewContent;
            ItemLimit = itemLimit;
            RequestedItemIds = requestedItemIds;
            DateCreated = dateCreated;
            DateLastModified = dateLastModified;
            ItemCount = itemCount;
            ParentName = parentName;
            PrimaryImageItemId = primaryImageItemId;
            PrimaryImageTag = primaryImageTag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public long? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TargetId")]
        public string TargetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TargetName")]
        public string TargetName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Quality")]
        public string Quality { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Bitrate")]
        public int? Bitrate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Container")]
        public string Container { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoCodec")]
        public string VideoCodec { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AudioCodec")]
        public string AudioCodec { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Profile")]
        public string Profile { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Latest', 'NextUp', 'Resume'
        /// </summary>
        [JsonProperty(PropertyName = "Category")]
        public string Category { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentId")]
        public long? ParentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Progress")]
        public double? Progress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Queued', 'Converting',
        /// 'ReadyToTransfer', 'Transferring', 'Completed',
        /// 'CompletedWithError', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserId")]
        public long? UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UnwatchedOnly")]
        public bool? UnwatchedOnly { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SyncNewContent")]
        public bool? SyncNewContent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemLimit")]
        public int? ItemLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RequestedItemIds")]
        public IList<long?> RequestedItemIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateCreated")]
        public System.DateTime? DateCreated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateLastModified")]
        public System.DateTime? DateLastModified { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemCount")]
        public int? ItemCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentName")]
        public string ParentName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrimaryImageItemId")]
        public string PrimaryImageItemId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PrimaryImageTag")]
        public string PrimaryImageTag { get; set; }

    }
}
