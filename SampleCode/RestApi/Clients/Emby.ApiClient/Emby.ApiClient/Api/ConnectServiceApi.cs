// <copyright file="ConnectServiceApi.cs" company="Emby LLC">
// Emby.ApiClient. Autogenerated Code. No license applied. 
// </copyright>
// <autogenerated />
namespace Emby.ApiClient.Api
{
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Linq;
    using System.Threading.Tasks;
	using RestSharp;
	using Emby.ApiClient.Client;
	using Emby.ApiClient.Model;

    /// <summary>
    /// Provides a collection of service methods to interact with the API endpoints.
    /// </summary>
    public partial class ConnectServiceApi : IApiAccessor
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConnectServiceApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ConnectServiceApi(ApiClient apiClient)
        {
            this.ApiClient = apiClient;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.ApiClient.RestClient.Options.BaseUrl?.ToString();
        }

        /// <summary>Gets the ApiClient object</summary>
        /// <value>An instance of the ApiClient</value>
        public ApiClient ApiClient {get; }

        /// <summary>
        /// Removes a Connect link for a user
        /// </summary>
        /// <remarks>
        /// Requires authentication as administrator
        /// </remarks>
        /// <param name="id">User Id</param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> DeleteUsersByIdConnectLink (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling ConnectServiceApi->DeleteUsersByIdConnectLink");
            }
            
            var request = new RestRequest("/Users/{Id}/Connect/Link", Method.Delete);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets the corresponding local user from a connect user id
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="connectUserId">ConnectUserId</param>
        /// <returns>Task of ApiResponse (ConnectConnectAuthenticationExchangeResult)</returns>
        public async Task<RestResponse<ConnectConnectAuthenticationExchangeResult>> GetConnectExchange (string connectUserId)
        {
            // verify the required parameter 'connectUserId' is set
            if (connectUserId == null)
            {
                throw new ApiException("Missing required parameter 'connectUserId' when calling ConnectServiceApi->GetConnectExchange");
            }
            
            var request = new RestRequest("/Connect/Exchange", Method.Get);

            if (connectUserId != null)
            {
                request.AddQueryParameter("ConnectUserId", this.ApiClient.ParameterToString(connectUserId));
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<ConnectConnectAuthenticationExchangeResult>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Creates a Connect link for a user
        /// </summary>
        /// <remarks>
        /// Requires authentication as administrator
        /// </remarks>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> GetConnectPending ()
        {
            var request = new RestRequest("/Connect/Pending", Method.Get);

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Creates a Connect link for a user
        /// </summary>
        /// <remarks>
        /// Requires authentication as administrator
        /// </remarks>
        /// <param name="id">User Id</param>
        /// <param name="connectUsername">Connect username</param>
        /// <returns>Task of ApiResponse (ConnectUserLinkResult)</returns>
        public async Task<RestResponse<ConnectUserLinkResult>> PostUsersByIdConnectLink (string id, string connectUsername)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling ConnectServiceApi->PostUsersByIdConnectLink");
            }
            
            // verify the required parameter 'connectUsername' is set
            if (connectUsername == null)
            {
                throw new ApiException("Missing required parameter 'connectUsername' when calling ConnectServiceApi->PostUsersByIdConnectLink");
            }
            
            var request = new RestRequest("/Users/{Id}/Connect/Link", Method.Post);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            if (connectUsername != null)
            {
                request.AddQueryParameter("ConnectUsername", this.ApiClient.ParameterToString(connectUsername));
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<ConnectUserLinkResult>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Removes a Connect link for a user
        /// </summary>
        /// <remarks>
        /// Requires authentication as administrator
        /// </remarks>
        /// <param name="id">User Id</param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> PostUsersByIdConnectLinkDelete (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling ConnectServiceApi->PostUsersByIdConnectLinkDelete");
            }
            
            var request = new RestRequest("/Users/{Id}/Connect/Link/Delete", Method.Post);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

    }
}
