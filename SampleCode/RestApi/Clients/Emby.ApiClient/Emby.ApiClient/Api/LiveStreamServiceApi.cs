// <copyright file="LiveStreamServiceApi.cs" company="Emby LLC">
// Emby.ApiClient. Autogenerated Code. No license applied. 
// </copyright>
// <autogenerated />
namespace Emby.ApiClient.Api
{
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Linq;
    using System.Threading.Tasks;
	using RestSharp;
	using Emby.ApiClient.Client;
	
    /// <summary>
    /// Provides a collection of service methods to interact with the API endpoints.
    /// </summary>
    public partial class LiveStreamServiceApi : IApiAccessor
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LiveStreamServiceApi"/> class.
        /// </summary>
        /// <returns></returns>
        public LiveStreamServiceApi(ApiClient apiClient)
        {
            this.ApiClient = apiClient;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.ApiClient.RestClient.Options.BaseUrl?.ToString();
        }

        /// <summary>Gets the ApiClient object</summary>
        /// <value>An instance of the ApiClient</value>
        public ApiClient ApiClient {get; }

        /// <summary>
        /// Gets a live recording
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <param name="segment"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> GetLivetvLiverecordingsByIdHlsBySegment (string id, string segment)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->GetLivetvLiverecordingsByIdHlsBySegment");
            }
            
            // verify the required parameter 'segment' is set
            if (segment == null)
            {
                throw new ApiException("Missing required parameter 'segment' when calling LiveStreamServiceApi->GetLivetvLiverecordingsByIdHlsBySegment");
            }
            
            var request = new RestRequest("/LiveTv/LiveRecordings/{Id}/hls/{Segment}", Method.Get);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            if (segment != null)
            {
                request.AddParameter("Segment", this.ApiClient.ParameterToString(segment), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live recording
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> GetLivetvLiverecordingsByIdHlsLiveM3u8 (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->GetLivetvLiverecordingsByIdHlsLiveM3u8");
            }
            
            var request = new RestRequest("/LiveTv/LiveRecordings/{Id}/hls/live.m3u8", Method.Get);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live recording
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> GetLivetvLiverecordingsByIdHlsMasterM3u8 (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->GetLivetvLiverecordingsByIdHlsMasterM3u8");
            }
            
            var request = new RestRequest("/LiveTv/LiveRecordings/{Id}/hls/master.m3u8", Method.Get);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live tv channel
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> GetLivetvLiverecordingsByIdStream (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->GetLivetvLiverecordingsByIdStream");
            }
            
            var request = new RestRequest("/LiveTv/LiveRecordings/{Id}/stream", Method.Get);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live tv channel
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <param name="segment"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> GetLivetvLivestreamfilesByIdHlsBySegment (string id, string segment)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->GetLivetvLivestreamfilesByIdHlsBySegment");
            }
            
            // verify the required parameter 'segment' is set
            if (segment == null)
            {
                throw new ApiException("Missing required parameter 'segment' when calling LiveStreamServiceApi->GetLivetvLivestreamfilesByIdHlsBySegment");
            }
            
            var request = new RestRequest("/LiveTv/LiveStreamFiles/{Id}/hls/{Segment}", Method.Get);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            if (segment != null)
            {
                request.AddParameter("Segment", this.ApiClient.ParameterToString(segment), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live tv channel
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> GetLivetvLivestreamfilesByIdHlsLiveM3u8 (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->GetLivetvLivestreamfilesByIdHlsLiveM3u8");
            }
            
            var request = new RestRequest("/LiveTv/LiveStreamFiles/{Id}/hls/live.m3u8", Method.Get);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live tv channel
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> GetLivetvLivestreamfilesByIdHlsMasterM3u8 (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->GetLivetvLivestreamfilesByIdHlsMasterM3u8");
            }
            
            var request = new RestRequest("/LiveTv/LiveStreamFiles/{Id}/hls/master.m3u8", Method.Get);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live tv channel
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <param name="container"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> GetLivetvLivestreamfilesByIdStreamByContainer (string id, string container)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->GetLivetvLivestreamfilesByIdStreamByContainer");
            }
            
            // verify the required parameter 'container' is set
            if (container == null)
            {
                throw new ApiException("Missing required parameter 'container' when calling LiveStreamServiceApi->GetLivetvLivestreamfilesByIdStreamByContainer");
            }
            
            var request = new RestRequest("/LiveTv/LiveStreamFiles/{Id}/stream.{Container}", Method.Get);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            if (container != null)
            {
                request.AddParameter("Container", this.ApiClient.ParameterToString(container), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live recording
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <param name="segment"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> HeadLivetvLiverecordingsByIdHlsBySegment (string id, string segment)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->HeadLivetvLiverecordingsByIdHlsBySegment");
            }
            
            // verify the required parameter 'segment' is set
            if (segment == null)
            {
                throw new ApiException("Missing required parameter 'segment' when calling LiveStreamServiceApi->HeadLivetvLiverecordingsByIdHlsBySegment");
            }
            
            var request = new RestRequest("/LiveTv/LiveRecordings/{Id}/hls/{Segment}", Method.Head);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            if (segment != null)
            {
                request.AddParameter("Segment", this.ApiClient.ParameterToString(segment), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live recording
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> HeadLivetvLiverecordingsByIdHlsLiveM3u8 (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->HeadLivetvLiverecordingsByIdHlsLiveM3u8");
            }
            
            var request = new RestRequest("/LiveTv/LiveRecordings/{Id}/hls/live.m3u8", Method.Head);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live recording
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> HeadLivetvLiverecordingsByIdHlsMasterM3u8 (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->HeadLivetvLiverecordingsByIdHlsMasterM3u8");
            }
            
            var request = new RestRequest("/LiveTv/LiveRecordings/{Id}/hls/master.m3u8", Method.Head);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live tv channel
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <param name="segment"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> HeadLivetvLivestreamfilesByIdHlsBySegment (string id, string segment)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->HeadLivetvLivestreamfilesByIdHlsBySegment");
            }
            
            // verify the required parameter 'segment' is set
            if (segment == null)
            {
                throw new ApiException("Missing required parameter 'segment' when calling LiveStreamServiceApi->HeadLivetvLivestreamfilesByIdHlsBySegment");
            }
            
            var request = new RestRequest("/LiveTv/LiveStreamFiles/{Id}/hls/{Segment}", Method.Head);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            if (segment != null)
            {
                request.AddParameter("Segment", this.ApiClient.ParameterToString(segment), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live tv channel
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> HeadLivetvLivestreamfilesByIdHlsLiveM3u8 (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->HeadLivetvLivestreamfilesByIdHlsLiveM3u8");
            }
            
            var request = new RestRequest("/LiveTv/LiveStreamFiles/{Id}/hls/live.m3u8", Method.Head);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

        /// <summary>
        /// Gets a live tv channel
        /// </summary>
        /// <remarks>
        /// Requires authentication as user
        /// </remarks>
        /// <param name="id"></param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<RestResponse<Object>> HeadLivetvLivestreamfilesByIdHlsMasterM3u8 (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new ApiException("Missing required parameter 'id' when calling LiveStreamServiceApi->HeadLivetvLivestreamfilesByIdHlsMasterM3u8");
            }
            
            var request = new RestRequest("/LiveTv/LiveStreamFiles/{Id}/hls/master.m3u8", Method.Head);

            if (id != null)
            {
                request.AddParameter("Id", this.ApiClient.ParameterToString(id), ParameterType.UrlSegment);
            }

            // make the HTTP request
            var localVarResponse = await this.ApiClient.RestClient.ExecuteAsync<Object>(request).ConfigureAwait(false);
            return localVarResponse;
        }

    }
}
