// <copyright file="PlaybackStopInfo.cs" company="Emby LLC">
// Emby.ApiClient. Autogenerated Code. No license applied. 
// </copyright>
// <autogenerated />
namespace Emby.ApiClient.Model
{
    using System;
    using System.Linq;
    using System.IO;
    using System.Text;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Runtime.Serialization;

    /// <summary>
    /// Class PlaybackStopInfo.  .
    /// </summary>
    /// <seealso>MediaBrowser.Model.Session.PlaybackStopInfo</seealso>
    public partial class PlaybackStopInfo :  IEquatable<PlaybackStopInfo>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PlaybackStopInfo" /> class.
        /// </summary>
        public PlaybackStopInfo()
        {
        }
        
        /// <summary>
        /// Gets or Sets NowPlayingQueue
        /// </summary>
        /// <value>The NowPlayingQueue.</value>
        public List<QueueItem> NowPlayingQueue { get; set; }

        /// <summary>
        /// Gets or Sets PlaylistItemId
        /// </summary>
        /// <value>The PlaylistItemId.</value>
        public string PlaylistItemId { get; set; }

        /// <summary>
        /// Gets or Sets PlaylistIndex
        /// </summary>
        /// <value>The PlaylistIndex.</value>
        public int? PlaylistIndex { get; set; }

        /// <summary>
        /// Gets or Sets PlaylistLength
        /// </summary>
        /// <value>The PlaylistLength.</value>
        public int? PlaylistLength { get; set; }

        /// <summary>
        /// Gets or Sets Item
        /// </summary>
        /// <value>The Item.</value>
        public BaseItemDto Item { get; set; }

        /// <summary>
        /// The item identifier.
        /// </summary>
        /// <value>The ItemId.</value>
        public string ItemId { get; set; }

        /// <summary>
        /// The session id.
        /// </summary>
        /// <value>The SessionId.</value>
        public string SessionId { get; set; }

        /// <summary>
        /// The media version identifier.
        /// </summary>
        /// <value>The MediaSourceId.</value>
        public string MediaSourceId { get; set; }

        /// <summary>
        /// The position ticks.
        /// </summary>
        /// <value>The PositionTicks.</value>
        public long? PositionTicks { get; set; }

        /// <summary>
        /// The live stream identifier.
        /// </summary>
        /// <value>The LiveStreamId.</value>
        public string LiveStreamId { get; set; }

        /// <summary>
        /// The play session identifier.
        /// </summary>
        /// <value>The PlaySessionId.</value>
        public string PlaySessionId { get; set; }

        /// <summary>
        /// A value indicating whether this `MediaBrowser.Model.Session.PlaybackStopInfo` is failed.
        /// </summary>
        /// <value>The Failed.</value>
        public bool? Failed { get; set; }

        /// <summary>
        /// Gets or Sets IsAutomated
        /// </summary>
        /// <value>The IsAutomated.</value>
        public bool? IsAutomated { get; set; }

        /// <summary>
        /// Gets or Sets NextMediaType
        /// </summary>
        /// <value>The NextMediaType.</value>
        public string NextMediaType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PlaybackStopInfo {\n");
            sb.Append("  NowPlayingQueue: ").Append(NowPlayingQueue).Append("\n");
            sb.Append("  PlaylistItemId: ").Append(PlaylistItemId).Append("\n");
            sb.Append("  PlaylistIndex: ").Append(PlaylistIndex).Append("\n");
            sb.Append("  PlaylistLength: ").Append(PlaylistLength).Append("\n");
            sb.Append("  Item: ").Append(Item).Append("\n");
            sb.Append("  ItemId: ").Append(ItemId).Append("\n");
            sb.Append("  SessionId: ").Append(SessionId).Append("\n");
            sb.Append("  MediaSourceId: ").Append(MediaSourceId).Append("\n");
            sb.Append("  PositionTicks: ").Append(PositionTicks).Append("\n");
            sb.Append("  LiveStreamId: ").Append(LiveStreamId).Append("\n");
            sb.Append("  PlaySessionId: ").Append(PlaySessionId).Append("\n");
            sb.Append("  Failed: ").Append(Failed).Append("\n");
            sb.Append("  IsAutomated: ").Append(IsAutomated).Append("\n");
            sb.Append("  NextMediaType: ").Append(NextMediaType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PlaybackStopInfo);
        }

        /// <summary>
        /// Returns true if PlaybackStopInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of PlaybackStopInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PlaybackStopInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.NowPlayingQueue == input.NowPlayingQueue ||
                    this.NowPlayingQueue != null &&
                    input.NowPlayingQueue != null &&
                    this.NowPlayingQueue.SequenceEqual(input.NowPlayingQueue)
                ) && 
                (
                    this.PlaylistItemId == input.PlaylistItemId ||
                    (this.PlaylistItemId != null &&
                    this.PlaylistItemId.Equals(input.PlaylistItemId))
                ) && 
                (
                    this.PlaylistIndex == input.PlaylistIndex ||
                    (this.PlaylistIndex != null &&
                    this.PlaylistIndex.Equals(input.PlaylistIndex))
                ) && 
                (
                    this.PlaylistLength == input.PlaylistLength ||
                    (this.PlaylistLength != null &&
                    this.PlaylistLength.Equals(input.PlaylistLength))
                ) && 
                (
                    this.Item == input.Item ||
                    (this.Item != null &&
                    this.Item.Equals(input.Item))
                ) && 
                (
                    this.ItemId == input.ItemId ||
                    (this.ItemId != null &&
                    this.ItemId.Equals(input.ItemId))
                ) && 
                (
                    this.SessionId == input.SessionId ||
                    (this.SessionId != null &&
                    this.SessionId.Equals(input.SessionId))
                ) && 
                (
                    this.MediaSourceId == input.MediaSourceId ||
                    (this.MediaSourceId != null &&
                    this.MediaSourceId.Equals(input.MediaSourceId))
                ) && 
                (
                    this.PositionTicks == input.PositionTicks ||
                    (this.PositionTicks != null &&
                    this.PositionTicks.Equals(input.PositionTicks))
                ) && 
                (
                    this.LiveStreamId == input.LiveStreamId ||
                    (this.LiveStreamId != null &&
                    this.LiveStreamId.Equals(input.LiveStreamId))
                ) && 
                (
                    this.PlaySessionId == input.PlaySessionId ||
                    (this.PlaySessionId != null &&
                    this.PlaySessionId.Equals(input.PlaySessionId))
                ) && 
                (
                    this.Failed == input.Failed ||
                    (this.Failed != null &&
                    this.Failed.Equals(input.Failed))
                ) && 
                (
                    this.IsAutomated == input.IsAutomated ||
                    (this.IsAutomated != null &&
                    this.IsAutomated.Equals(input.IsAutomated))
                ) && 
                (
                    this.NextMediaType == input.NextMediaType ||
                    (this.NextMediaType != null &&
                    this.NextMediaType.Equals(input.NextMediaType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.NowPlayingQueue != null)
                    hashCode = hashCode * 59 + this.NowPlayingQueue.GetHashCode();
                if (this.PlaylistItemId != null)
                    hashCode = hashCode * 59 + this.PlaylistItemId.GetHashCode();
                if (this.PlaylistIndex != null)
                    hashCode = hashCode * 59 + this.PlaylistIndex.GetHashCode();
                if (this.PlaylistLength != null)
                    hashCode = hashCode * 59 + this.PlaylistLength.GetHashCode();
                if (this.Item != null)
                    hashCode = hashCode * 59 + this.Item.GetHashCode();
                if (this.ItemId != null)
                    hashCode = hashCode * 59 + this.ItemId.GetHashCode();
                if (this.SessionId != null)
                    hashCode = hashCode * 59 + this.SessionId.GetHashCode();
                if (this.MediaSourceId != null)
                    hashCode = hashCode * 59 + this.MediaSourceId.GetHashCode();
                if (this.PositionTicks != null)
                    hashCode = hashCode * 59 + this.PositionTicks.GetHashCode();
                if (this.LiveStreamId != null)
                    hashCode = hashCode * 59 + this.LiveStreamId.GetHashCode();
                if (this.PlaySessionId != null)
                    hashCode = hashCode * 59 + this.PlaySessionId.GetHashCode();
                if (this.Failed != null)
                    hashCode = hashCode * 59 + this.Failed.GetHashCode();
                if (this.IsAutomated != null)
                    hashCode = hashCode * 59 + this.IsAutomated.GetHashCode();
                if (this.NextMediaType != null)
                    hashCode = hashCode * 59 + this.NextMediaType.GetHashCode();
                return hashCode;
            }
        }
    }
}