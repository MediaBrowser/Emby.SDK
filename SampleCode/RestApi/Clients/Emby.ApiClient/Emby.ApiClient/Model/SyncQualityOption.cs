// <copyright file="SyncQualityOption.cs" company="Emby LLC">
// Emby.ApiClient. Autogenerated Code. No license applied. 
// </copyright>
// <autogenerated />
namespace Emby.ApiClient.Model
{
    using System;
    using System.Linq;
    using System.IO;
    using System.Text;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Runtime.Serialization;

    /// <summary>
    /// SyncQualityOption.
    /// </summary>
    /// <seealso>Emby.Server.Sync.Model.SyncQualityOption</seealso>
    public partial class SyncQualityOption :  IEquatable<SyncQualityOption>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SyncQualityOption" /> class.
        /// </summary>
        public SyncQualityOption()
        {
        }
        
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        /// <value>The Name.</value>
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        /// <value>The Description.</value>
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        /// <value>The Id.</value>
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets IsDefault
        /// </summary>
        /// <value>The IsDefault.</value>
        public bool? IsDefault { get; set; }

        /// <summary>
        /// Gets or Sets IsOriginalQuality
        /// </summary>
        /// <value>The IsOriginalQuality.</value>
        public bool? IsOriginalQuality { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SyncQualityOption {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  IsDefault: ").Append(IsDefault).Append("\n");
            sb.Append("  IsOriginalQuality: ").Append(IsOriginalQuality).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SyncQualityOption);
        }

        /// <summary>
        /// Returns true if SyncQualityOption instances are equal
        /// </summary>
        /// <param name="input">Instance of SyncQualityOption to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SyncQualityOption input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.IsDefault == input.IsDefault ||
                    (this.IsDefault != null &&
                    this.IsDefault.Equals(input.IsDefault))
                ) && 
                (
                    this.IsOriginalQuality == input.IsOriginalQuality ||
                    (this.IsOriginalQuality != null &&
                    this.IsOriginalQuality.Equals(input.IsOriginalQuality))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.IsDefault != null)
                    hashCode = hashCode * 59 + this.IsDefault.GetHashCode();
                if (this.IsOriginalQuality != null)
                    hashCode = hashCode * 59 + this.IsOriginalQuality.GetHashCode();
                return hashCode;
            }
        }
    }
}