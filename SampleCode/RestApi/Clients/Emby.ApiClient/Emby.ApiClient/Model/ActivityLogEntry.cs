// <copyright file="ActivityLogEntry.cs" company="Emby LLC">
// Emby.ApiClient. Autogenerated Code. No license applied. 
// </copyright>
// <autogenerated />
namespace Emby.ApiClient.Model
{
    using System;
    using System.Linq;
    using System.IO;
    using System.Text;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Runtime.Serialization;

    /// <summary>
    /// ActivityLogEntry.
    /// </summary>
    /// <seealso>MediaBrowser.Model.Activity.ActivityLogEntry</seealso>
    public partial class ActivityLogEntry :  IEquatable<ActivityLogEntry>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivityLogEntry" /> class.
        /// </summary>
        public ActivityLogEntry()
        {
        }
        
        /// <summary>
        /// The identifier.
        /// </summary>
        /// <value>The Id.</value>
        public long? Id { get; set; }

        /// <summary>
        /// The name.
        /// </summary>
        /// <value>The Name.</value>
        public string Name { get; set; }

        /// <summary>
        /// The overview.
        /// </summary>
        /// <value>The Overview.</value>
        public string Overview { get; set; }

        /// <summary>
        /// The short overview.
        /// </summary>
        /// <value>The ShortOverview.</value>
        public string ShortOverview { get; set; }

        /// <summary>
        /// The type.
        /// </summary>
        /// <value>The Type.</value>
        public string Type { get; set; }

        /// <summary>
        /// The item identifier.
        /// </summary>
        /// <value>The ItemId.</value>
        public string ItemId { get; set; }

        /// <summary>
        /// The date.
        /// </summary>
        /// <value>The Date.</value>
        public DateTimeOffset? Date { get; set; }

        /// <summary>
        /// The user identifier.
        /// </summary>
        /// <value>The UserId.</value>
        public string UserId { get; set; }

        /// <summary>
        /// The user primary image tag.
        /// </summary>
        /// <value>The UserPrimaryImageTag.</value>
        public string UserPrimaryImageTag { get; set; }

        /// <summary>
        /// Gets or Sets Severity
        /// </summary>
        /// <value>The Severity.</value>
        public LoggingLogSeverity Severity { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ActivityLogEntry {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Overview: ").Append(Overview).Append("\n");
            sb.Append("  ShortOverview: ").Append(ShortOverview).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  ItemId: ").Append(ItemId).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  UserPrimaryImageTag: ").Append(UserPrimaryImageTag).Append("\n");
            sb.Append("  Severity: ").Append(Severity).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ActivityLogEntry);
        }

        /// <summary>
        /// Returns true if ActivityLogEntry instances are equal
        /// </summary>
        /// <param name="input">Instance of ActivityLogEntry to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ActivityLogEntry input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Overview == input.Overview ||
                    (this.Overview != null &&
                    this.Overview.Equals(input.Overview))
                ) && 
                (
                    this.ShortOverview == input.ShortOverview ||
                    (this.ShortOverview != null &&
                    this.ShortOverview.Equals(input.ShortOverview))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.ItemId == input.ItemId ||
                    (this.ItemId != null &&
                    this.ItemId.Equals(input.ItemId))
                ) && 
                (
                    this.Date == input.Date ||
                    (this.Date != null &&
                    this.Date.Equals(input.Date))
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                ) && 
                (
                    this.UserPrimaryImageTag == input.UserPrimaryImageTag ||
                    (this.UserPrimaryImageTag != null &&
                    this.UserPrimaryImageTag.Equals(input.UserPrimaryImageTag))
                ) && 
                (
                    this.Severity == input.Severity ||
                    (this.Severity != null &&
                    this.Severity.Equals(input.Severity))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Overview != null)
                    hashCode = hashCode * 59 + this.Overview.GetHashCode();
                if (this.ShortOverview != null)
                    hashCode = hashCode * 59 + this.ShortOverview.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.ItemId != null)
                    hashCode = hashCode * 59 + this.ItemId.GetHashCode();
                if (this.Date != null)
                    hashCode = hashCode * 59 + this.Date.GetHashCode();
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                if (this.UserPrimaryImageTag != null)
                    hashCode = hashCode * 59 + this.UserPrimaryImageTag.GetHashCode();
                if (this.Severity != null)
                    hashCode = hashCode * 59 + this.Severity.GetHashCode();
                return hashCode;
            }
        }
    }
}