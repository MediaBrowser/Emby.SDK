// <copyright file="LibraryOptionInfo.cs" company="Emby LLC">
// Emby.ApiClient. Autogenerated Code. No license applied. 
// </copyright>
// <autogenerated />
namespace Emby.ApiClient.Model
{
    using System;
    using System.Linq;
    using System.IO;
    using System.Text;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Runtime.Serialization;

    /// <summary>
    /// LibraryOptionInfo.
    /// </summary>
    /// <seealso>MediaBrowser.Controller.Providers.LibraryOptionInfo</seealso>
    public partial class LibraryOptionInfo :  IEquatable<LibraryOptionInfo>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LibraryOptionInfo" /> class.
        /// </summary>
        public LibraryOptionInfo()
        {
        }
        
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        /// <value>The Name.</value>
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets SetupUrl
        /// </summary>
        /// <value>The SetupUrl.</value>
        public string SetupUrl { get; set; }

        /// <summary>
        /// Gets or Sets DefaultEnabled
        /// </summary>
        /// <value>The DefaultEnabled.</value>
        public bool? DefaultEnabled { get; set; }

        /// <summary>
        /// Gets or Sets Features
        /// </summary>
        /// <value>The Features.</value>
        public List<MetadataFeatures> Features { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LibraryOptionInfo {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  SetupUrl: ").Append(SetupUrl).Append("\n");
            sb.Append("  DefaultEnabled: ").Append(DefaultEnabled).Append("\n");
            sb.Append("  Features: ").Append(Features).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LibraryOptionInfo);
        }

        /// <summary>
        /// Returns true if LibraryOptionInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of LibraryOptionInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LibraryOptionInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.SetupUrl == input.SetupUrl ||
                    (this.SetupUrl != null &&
                    this.SetupUrl.Equals(input.SetupUrl))
                ) && 
                (
                    this.DefaultEnabled == input.DefaultEnabled ||
                    (this.DefaultEnabled != null &&
                    this.DefaultEnabled.Equals(input.DefaultEnabled))
                ) && 
                (
                    this.Features == input.Features ||
                    this.Features != null &&
                    input.Features != null &&
                    this.Features.SequenceEqual(input.Features)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.SetupUrl != null)
                    hashCode = hashCode * 59 + this.SetupUrl.GetHashCode();
                if (this.DefaultEnabled != null)
                    hashCode = hashCode * 59 + this.DefaultEnabled.GetHashCode();
                if (this.Features != null)
                    hashCode = hashCode * 59 + this.Features.GetHashCode();
                return hashCode;
            }
        }
    }
}