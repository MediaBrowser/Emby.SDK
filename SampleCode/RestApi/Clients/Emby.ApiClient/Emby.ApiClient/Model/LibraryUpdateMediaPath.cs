// <copyright file="LibraryUpdateMediaPath.cs" company="Emby LLC">
// Emby.ApiClient. Autogenerated Code. No license applied. 
// </copyright>
// <autogenerated />
namespace Emby.ApiClient.Model
{
    using System;
    using System.Linq;
    using System.IO;
    using System.Text;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Runtime.Serialization;

    /// <summary>
    /// LibraryUpdateMediaPath.
    /// </summary>
    /// <seealso>Emby.Api.Library.UpdateMediaPath</seealso>
    public partial class LibraryUpdateMediaPath :  IEquatable<LibraryUpdateMediaPath>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LibraryUpdateMediaPath" /> class.
        /// </summary>
        public LibraryUpdateMediaPath()
        {
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        /// <value>The Id.</value>
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets PathInfo
        /// </summary>
        /// <value>The PathInfo.</value>
        public MediaPathInfo PathInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LibraryUpdateMediaPath {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  PathInfo: ").Append(PathInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LibraryUpdateMediaPath);
        }

        /// <summary>
        /// Returns true if LibraryUpdateMediaPath instances are equal
        /// </summary>
        /// <param name="input">Instance of LibraryUpdateMediaPath to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LibraryUpdateMediaPath input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.PathInfo == input.PathInfo ||
                    (this.PathInfo != null &&
                    this.PathInfo.Equals(input.PathInfo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.PathInfo != null)
                    hashCode = hashCode * 59 + this.PathInfo.GetHashCode();
                return hashCode;
            }
        }
    }
}