// <copyright file="GetDirectoryContents.cs" company="Emby LLC">
// Emby.ApiClient. Autogenerated Code. No license applied. 
// </copyright>
// <autogenerated />
namespace Emby.ApiClient.Model
{
    using System;
    using System.Linq;
    using System.IO;
    using System.Text;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Runtime.Serialization;

    /// <summary>
    /// GetDirectoryContents.
    /// </summary>
    /// <seealso>Emby.Api.GetDirectoryContents</seealso>
    public partial class GetDirectoryContents :  IEquatable<GetDirectoryContents>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetDirectoryContents" /> class.
        /// </summary>
        public GetDirectoryContents()
        {
        }
        
        /// <summary>
        /// Gets or Sets Username
        /// </summary>
        /// <value>The Username.</value>
        public string Username { get; set; }

        /// <summary>
        /// Gets or Sets Password
        /// </summary>
        /// <value>The Password.</value>
        public string Password { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetDirectoryContents {\n");
            sb.Append("  Username: ").Append(Username).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetDirectoryContents);
        }

        /// <summary>
        /// Returns true if GetDirectoryContents instances are equal
        /// </summary>
        /// <param name="input">Instance of GetDirectoryContents to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetDirectoryContents input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Username == input.Username ||
                    (this.Username != null &&
                    this.Username.Equals(input.Username))
                ) && 
                (
                    this.Password == input.Password ||
                    (this.Password != null &&
                    this.Password.Equals(input.Password))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Username != null)
                    hashCode = hashCode * 59 + this.Username.GetHashCode();
                if (this.Password != null)
                    hashCode = hashCode * 59 + this.Password.GetHashCode();
                return hashCode;
            }
        }
    }
}