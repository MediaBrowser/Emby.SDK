# coding: utf-8

"""
    Emby Server REST API
"""

import pprint
import re  # noqa: F401

import six

class SyncJobItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'job_id': 'int',
        'item_id': 'int',
        'item_name': 'str',
        'media_source_id': 'str',
        'media_source': 'MediaSourceInfo',
        'target_id': 'str',
        'internal_target_id': 'int',
        'output_path': 'str',
        'status': 'SyncJobItemStatus',
        'progress': 'float',
        'date_created': 'datetime',
        'primary_image_item_id': 'str',
        'primary_image_tag': 'str',
        'temporary_path': 'str',
        'additional_files': 'list[ItemFileInfo]'
    }

    attribute_map = {
        'id': 'Id',
        'job_id': 'JobId',
        'item_id': 'ItemId',
        'item_name': 'ItemName',
        'media_source_id': 'MediaSourceId',
        'media_source': 'MediaSource',
        'target_id': 'TargetId',
        'internal_target_id': 'InternalTargetId',
        'output_path': 'OutputPath',
        'status': 'Status',
        'progress': 'Progress',
        'date_created': 'DateCreated',
        'primary_image_item_id': 'PrimaryImageItemId',
        'primary_image_tag': 'PrimaryImageTag',
        'temporary_path': 'TemporaryPath',
        'additional_files': 'AdditionalFiles'
    }

    def __init__(self, id=None, job_id=None, item_id=None, item_name=None, media_source_id=None, media_source=None, target_id=None, internal_target_id=None, output_path=None, status=None, progress=None, date_created=None, primary_image_item_id=None, primary_image_tag=None, temporary_path=None, additional_files=None):  # noqa: E501
        """SyncJobItem - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._job_id = None
        self._item_id = None
        self._item_name = None
        self._media_source_id = None
        self._media_source = None
        self._target_id = None
        self._internal_target_id = None
        self._output_path = None
        self._status = None
        self._progress = None
        self._date_created = None
        self._primary_image_item_id = None
        self._primary_image_tag = None
        self._temporary_path = None
        self._additional_files = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if job_id is not None:
            self.job_id = job_id
        if item_id is not None:
            self.item_id = item_id
        if item_name is not None:
            self.item_name = item_name
        if media_source_id is not None:
            self.media_source_id = media_source_id
        if media_source is not None:
            self.media_source = media_source
        if target_id is not None:
            self.target_id = target_id
        if internal_target_id is not None:
            self.internal_target_id = internal_target_id
        if output_path is not None:
            self.output_path = output_path
        if status is not None:
            self.status = status
        if progress is not None:
            self.progress = progress
        if date_created is not None:
            self.date_created = date_created
        if primary_image_item_id is not None:
            self.primary_image_item_id = primary_image_item_id
        if primary_image_tag is not None:
            self.primary_image_tag = primary_image_tag
        if temporary_path is not None:
            self.temporary_path = temporary_path
        if additional_files is not None:
            self.additional_files = additional_files

    @property
    def id(self):
        """Gets the id of this SyncJobItem.  # noqa: E501


        :return: The id of this SyncJobItem.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SyncJobItem.


        :param id: The id of this SyncJobItem.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def job_id(self):
        """Gets the job_id of this SyncJobItem.  # noqa: E501


        :return: The job_id of this SyncJobItem.  # noqa: E501
        :rtype: int
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this SyncJobItem.


        :param job_id: The job_id of this SyncJobItem.  # noqa: E501
        :type: int
        """

        self._job_id = job_id

    @property
    def item_id(self):
        """Gets the item_id of this SyncJobItem.  # noqa: E501


        :return: The item_id of this SyncJobItem.  # noqa: E501
        :rtype: int
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this SyncJobItem.


        :param item_id: The item_id of this SyncJobItem.  # noqa: E501
        :type: int
        """

        self._item_id = item_id

    @property
    def item_name(self):
        """Gets the item_name of this SyncJobItem.  # noqa: E501


        :return: The item_name of this SyncJobItem.  # noqa: E501
        :rtype: str
        """
        return self._item_name

    @item_name.setter
    def item_name(self, item_name):
        """Sets the item_name of this SyncJobItem.


        :param item_name: The item_name of this SyncJobItem.  # noqa: E501
        :type: str
        """

        self._item_name = item_name

    @property
    def media_source_id(self):
        """Gets the media_source_id of this SyncJobItem.  # noqa: E501


        :return: The media_source_id of this SyncJobItem.  # noqa: E501
        :rtype: str
        """
        return self._media_source_id

    @media_source_id.setter
    def media_source_id(self, media_source_id):
        """Sets the media_source_id of this SyncJobItem.


        :param media_source_id: The media_source_id of this SyncJobItem.  # noqa: E501
        :type: str
        """

        self._media_source_id = media_source_id

    @property
    def media_source(self):
        """Gets the media_source of this SyncJobItem.  # noqa: E501


        :return: The media_source of this SyncJobItem.  # noqa: E501
        :rtype: MediaSourceInfo
        """
        return self._media_source

    @media_source.setter
    def media_source(self, media_source):
        """Sets the media_source of this SyncJobItem.


        :param media_source: The media_source of this SyncJobItem.  # noqa: E501
        :type: MediaSourceInfo
        """

        self._media_source = media_source

    @property
    def target_id(self):
        """Gets the target_id of this SyncJobItem.  # noqa: E501


        :return: The target_id of this SyncJobItem.  # noqa: E501
        :rtype: str
        """
        return self._target_id

    @target_id.setter
    def target_id(self, target_id):
        """Sets the target_id of this SyncJobItem.


        :param target_id: The target_id of this SyncJobItem.  # noqa: E501
        :type: str
        """

        self._target_id = target_id

    @property
    def internal_target_id(self):
        """Gets the internal_target_id of this SyncJobItem.  # noqa: E501


        :return: The internal_target_id of this SyncJobItem.  # noqa: E501
        :rtype: int
        """
        return self._internal_target_id

    @internal_target_id.setter
    def internal_target_id(self, internal_target_id):
        """Sets the internal_target_id of this SyncJobItem.


        :param internal_target_id: The internal_target_id of this SyncJobItem.  # noqa: E501
        :type: int
        """

        self._internal_target_id = internal_target_id

    @property
    def output_path(self):
        """Gets the output_path of this SyncJobItem.  # noqa: E501


        :return: The output_path of this SyncJobItem.  # noqa: E501
        :rtype: str
        """
        return self._output_path

    @output_path.setter
    def output_path(self, output_path):
        """Sets the output_path of this SyncJobItem.


        :param output_path: The output_path of this SyncJobItem.  # noqa: E501
        :type: str
        """

        self._output_path = output_path

    @property
    def status(self):
        """Gets the status of this SyncJobItem.  # noqa: E501


        :return: The status of this SyncJobItem.  # noqa: E501
        :rtype: SyncJobItemStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SyncJobItem.


        :param status: The status of this SyncJobItem.  # noqa: E501
        :type: SyncJobItemStatus
        """

        self._status = status

    @property
    def progress(self):
        """Gets the progress of this SyncJobItem.  # noqa: E501


        :return: The progress of this SyncJobItem.  # noqa: E501
        :rtype: float
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this SyncJobItem.


        :param progress: The progress of this SyncJobItem.  # noqa: E501
        :type: float
        """

        self._progress = progress

    @property
    def date_created(self):
        """Gets the date_created of this SyncJobItem.  # noqa: E501


        :return: The date_created of this SyncJobItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this SyncJobItem.


        :param date_created: The date_created of this SyncJobItem.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def primary_image_item_id(self):
        """Gets the primary_image_item_id of this SyncJobItem.  # noqa: E501


        :return: The primary_image_item_id of this SyncJobItem.  # noqa: E501
        :rtype: str
        """
        return self._primary_image_item_id

    @primary_image_item_id.setter
    def primary_image_item_id(self, primary_image_item_id):
        """Sets the primary_image_item_id of this SyncJobItem.


        :param primary_image_item_id: The primary_image_item_id of this SyncJobItem.  # noqa: E501
        :type: str
        """

        self._primary_image_item_id = primary_image_item_id

    @property
    def primary_image_tag(self):
        """Gets the primary_image_tag of this SyncJobItem.  # noqa: E501


        :return: The primary_image_tag of this SyncJobItem.  # noqa: E501
        :rtype: str
        """
        return self._primary_image_tag

    @primary_image_tag.setter
    def primary_image_tag(self, primary_image_tag):
        """Sets the primary_image_tag of this SyncJobItem.


        :param primary_image_tag: The primary_image_tag of this SyncJobItem.  # noqa: E501
        :type: str
        """

        self._primary_image_tag = primary_image_tag

    @property
    def temporary_path(self):
        """Gets the temporary_path of this SyncJobItem.  # noqa: E501


        :return: The temporary_path of this SyncJobItem.  # noqa: E501
        :rtype: str
        """
        return self._temporary_path

    @temporary_path.setter
    def temporary_path(self, temporary_path):
        """Sets the temporary_path of this SyncJobItem.


        :param temporary_path: The temporary_path of this SyncJobItem.  # noqa: E501
        :type: str
        """

        self._temporary_path = temporary_path

    @property
    def additional_files(self):
        """Gets the additional_files of this SyncJobItem.  # noqa: E501


        :return: The additional_files of this SyncJobItem.  # noqa: E501
        :rtype: list[ItemFileInfo]
        """
        return self._additional_files

    @additional_files.setter
    def additional_files(self, additional_files):
        """Sets the additional_files of this SyncJobItem.


        :param additional_files: The additional_files of this SyncJobItem.  # noqa: E501
        :type: list[ItemFileInfo]
        """

        self._additional_files = additional_files

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SyncJobItem, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SyncJobItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
